Figure 1: Our observer-classifier framework. This illustration shows an example task of classifyingan image into one of four categories (cat, dog, man, woman). After extracting image features, theobserver combines the image features with the query message of the classifier at each time step,feeds them to an MLP to create a binary response. The classifier consists of an LSTM that uses itshidden state as a query message. At every step, the state of the LSTM is updated with the binaryresponse such that classification accuracy is improved. In this example task, two binary messagesare needed to traverse the binary decision tree and solve the task.
Figure 2: Test-set accuracy of proposed model trained with increasing number of maximum numberof binary decisions in the communication loop between observer and classifier.
Figure 3: Decision tree of the observer-classifier framework on CIFAR10. Images of classes indi-cate where the majority of data example are routed to. Each edge shows the predicted probabilitydistribution over classes after that decision has been made.
Figure 4: Learned decision tree on AWA2. We show the first four decisions of the most likely pathfor each class. Each edge shows the predicted class distribution after the decision was made.
