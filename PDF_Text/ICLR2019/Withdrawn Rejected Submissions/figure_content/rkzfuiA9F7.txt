Figure 1: Feature embedding in (a) Matching Networks (Vinyals et al. (2016)), (b) PrototypicalNetWorks(Snell et al. (2017)), and (c) our PSN method.
Figure 2: The effect of outliers on prototypes and subspaces. The odd rows show the decisionboundaries obtained by prototypes (with and without outliers) for two- and three-class problems.
Figure 3: Projective Subspace Networks ArchitectureIn what follows, We introduce our PSN approach. The whole framework is trained end-to-end (seeFig. 3) which enables PSN to be used with various deep architectures. As an example, in ยง 5, We usePSN on top of the WideResNets (Zagoruyko & Komodakis (2016)) for few-shot classification.
Figure 4: The charts show 5-way 5-shot and 5-way 10-shot results of the PSN and the PN algorithmsin the presence of outliers and additive noise. In the first column, sub-plots show the effect of intro-ducing outliers among support samples (the classes of outliers are disjoint with the support classesof samples). The second to fourth columns show the effect of introducing noisy examples generatedrandomly from Gaussian distributions with random means and variance of ฯ = {0.15, 0.3, 0.4},respectively. The performance is measured with increasing number of outliers and noisy examples(X-axes).
