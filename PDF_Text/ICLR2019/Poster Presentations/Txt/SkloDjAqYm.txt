Published as a conference paper at ICLR 2019
LeMoNADe: Learned Motif and Neuronal
Assembly Detection in calcium imaging videos
Elke Kirschbaum1 Manuel HauBmann1	Steffen Wolf1
{elke.kirschbaum,manuel.haussmann,steffen.wolf}@iwr.uni-heidelberg.de
Hannah Sonntag2
hannah.sonntag@mpimf-heidelberg.mpg.de
Justus Schneider3	Shehabeldin Elzoheiry3
{justus.schneider, shehab.elzoheiry}@physiologie.uni-heidelberg.de
Oliver Kann3
oliver.kann@physiologie.uni-heidelberg.de
Daniel Durstewitz4	Fred A. Hamprecht1
daniel.durstewitz@zi-mannheim.de	fred.hamprecht@iwr.uni-heidelberg.de
1	Interdisciplinary Center for Scientific Computing (IWR), Heidelberg University, Germany
2	Institute for Anatomy and Cell Biology, Heidelberg University, Germany
3	Institute of Physiology and Pathophysiology, Heidelberg University, Germany
4	Dept. Theoretical Neuroscience, Central Institute of Mental Health, Mannheim, Germany
Ab stract
Neuronal assemblies, loosely defined as subsets of neurons with reoccurring spatio-
temporally coordinated activation patterns, or "motifs", are thought to be building
blocks of neural representations and information processing. We here propose
LeMoNADe, a new exploratory data analysis method that facilitates hunting for
motifs in calcium imaging videos, the dominant microscopic functional imaging
modality in neurophysiology. Our nonparametric method extracts motifs directly
from videos, bypassing the difficult intermediate step of spike extraction. Our
technique augments variational autoencoders with a discrete stochastic node, and
we show in detail how a differentiable reparametrization and relaxation can be used.
An evaluation on simulated data, with available ground truth, reveals excellent
quantitative performance. In real video data acquired from brain slices, with no
ground truth available, LeMoNADe uncovers nontrivial candidate motifs that can
help generate hypotheses for more focused biological investigations.
1 Introduction
Seventy years after being postulated by Hebb (1949), the existence and importance of reoccurring
spatio-temporally coordinated neuronal activation patterns (motifs), also known as neuronal assem-
blies, is still fiercely debated (Marr et al., 1991; Singer, 1993; Nicolelis et al., 1997; Ikegaya et al.,
2004; Cossart & Sansonetti, 2004; Buzsdki, 2004; Mokeichev et al., 2007; Pastalkova et al., 2008;
Stevenson & Kording, 2011; Ahrens et al., 2013; Carrillo-Reid et al., 2015). Calcium imaging, a
microscopic video technique that enables the concurrent observation of hundreds of neurons in vitro
and in vivo (Denk et al., 1990; Helmchen & Denk, 2005; Flusberg et al., 2008), is best suited to
witness such motifs if they indeed exist.
1
Published as a conference paper at ICLR 2019
Figure 1: We present LeMoNADe, a novel approach to identify neuronal assemblies directly from
calcium imaging data. In contrast to previous methods, LeMoNADe does not need pre-processing
steps such as cell identification and spike time extraction for unravelling assemblies.
In recent years, a variety of methods have been developed to identify neuronal assemblies. These
methods range from approaches for the detection of synchronous spiking, up to more advanced
methods for the detection of arbitrary spatio-temporal firing patterns (Comon, 1994; Nicolelis et al.,
1995; Grun et al., 2002a;b; LoPes-dos Santos et al., 2013; Russo & DUrsteWitz, 2017; Peter et al.,
2017). All of these methods, however, require a spike time matrix as input. Generating such a
sPike time matrix from calcium imaging data requires the extraction of individual cells and discrete
sPike times. Again, many methods have been ProPosed for these tasks (Mukamel et al., 2009;
Pnevmatikakis & Paninski, 2013; Pnevmatikakis et al., 2013; Diego et al., 2013; Diego & HamPrecht,
2013; Pachitariu et al., 2013; Pnevmatikakis et al., 2014; Diego & HamPrecht, 2014; Kaifosh et al.,
2014; Pnevmatikakis et al., 2016; APthorPe et al., 2016; Inan et al., 2017; SPaen et al., 2017;
Klibisz et al., 2017; SPeiser et al., 2017; Zhou et al., 2018). Given the loW signal-to-noise ratios
(SNR), large background fluctuations, non-linearities, and strong temPoral smoothing due to the
calcium dynamics itself as Well as that of calcium indicators, it is imPressive hoW Well some of these
methods Perform, thanks to modern recording technologies and state-of-the-art regularization and
inference (Pnevmatikakis et al., 2016; Zhou et al., 2018). Still, given the difficulty of this data, errors
in segmentation and sPike extraction are unavoidable, and adversely affect doWnstream Processing
stePs that do not have access to the raW data. Hence, ProPerly annotating data and correcting the
outPut from automatic segmentation can still take uP a huge amount of time.
In this PaPer, We ProPose LeMoNADe (Learned Motif and Neuronal Assembly Detection), a variational
autoencoder (VAE) based frameWork sPecifically designed to identify rePeating firing motifs With
arbitrary temPoral structure directly in calcium imaging data (see figure 1). The encoding and
decoding netWorks are set uP such that motifs can be extracted directly from the decoding filters,
and their activation times from the latent sPace (see sec. 3). Motivated by the sParse nature of
neuronal activity We rePlace the Gaussian Priors used in standard VAE. Instead We Place Bernoulli
Priors on the latent variables to yield sParse and sharPly Peaked motif activations (sec. 3.1). The
choice of discrete Bernoulli distributions makes it necessary to use a BinConcrete relaxation and
the Gumbel-softmax reParametrization trick (Maddison et al., 2016; Jang et al., 2017) to enable
gradient descent techniques With loW variance (sec. 3.3). We add a Î²-coefficient (Higgins et al.,
2017) to the loss function in order to adaPt the regularization to the ProPerties of the data (sec. 3.3).
Furthermore, We ProPose a training scheme Which alloWs us to Process videos of arbitrary length in a
comPutationally efficient Way (sec. 3.4). On synthetically generated datasets the ProPosed method
Performs as Well as a state-of-the-art motif detection method that requires the extraction of individual
cells (sec. 4.1). Finally, We detect Possible rePeating motifs in tWo fluorescent microscoPy datasets
from hiPPocamPal slice cultures (sec. 4.2). A PyTorch imPlementation of the ProPosed method is
released at https://github.com/EKirschbaum/LeMoNADe.
2	Related Work
Autoencoder and variational autoencoder Variational Autoencoders (VAEs) Were introduced
by Kingma & Welling (2014) and have become a PoPular method for unsuPervised generative deeP
learning. They consist of an encoder, maPPing a data Point into a latent rePresentation, and a decoder
Whose task is to restore the original data and to generate samPles from this latent sPace. HoWever, the
2
Published as a conference paper at ICLR 2019
original VAE lacks an interpretable latent space. Recent suggestions on solving this problem have
been modifications of the loss term (Higgins et al., 2017) or a more structured latent space (Johnson
et al., 2016; Deng et al., 2017).
VAE have also been successfully used on video sequences. Li & Mandt (2018) learn a disentangled
representation to manipulate content in cartoon video clips, while Goyal et al. (2017) combine
VAEs with nested Chinese Restaurant Processes to learn a hierarchical representation of video data.
Johnson et al. (2016) use a latent switching linear dynamical system (SLDS) model combined with a
structured variational autoencoder to segment and categorize mouse behavior from raw depth videos.
Unfortunately, this model is not directly applicable to the task of identifying motifs with temporal
structure from calcium imaging data for the following reasons: Firstly, neuronal assemblies are
expected to extend over multiple frames. Since in the model by Johnson et al. (2016) the underlying
latent process is a relatively simple first-order Markovian (switching) linear process, representing
longer-term temporal dependencies will be very hard to achieve due to the usually exponential
forgetting in such systems. Secondly, in the model of Johnson et al. (2016) each frame is generated
from exactly one of M latent states. For calcium imaging, however, most frames are not generated by
one of the M motifs but from noise, and different motifs could also temporally overlap which is also
not possible in the model by Johnson et al. (2016).
Closest to our goal of detecting motifs in video data is the work described in Bascol et al. (2016). In
this approach, a convolutional autoencoder is combined with a number of functions and regularization
terms to enforce interpretability both in the convolutional filters and the latent space. This method
was successfully used to detect patterns in data with document structure, including optical flow
features of videos. However, as the cells observed in calcium imaging are spatially stationary and
have varying luminosity, the extraction of optical flow features makes no sense. Hence this method is
not applicable to the task of detecting neuronal assemblies in calcium imaging data.
Cell segmentation and spike time extraction from calcium imaging data Various methods
have been proposed for automated segmentation and signal extraction from calcium imaging data.
Most of them are based on non-negative matrix factorization (Mukamel et al., 2009; Pnevmatikakis
& Paninski, 2013; Pnevmatikakis et al., 2013; 2014; Diego & Hamprecht, 2014; Pnevmatikakis
et al., 2016; Inan et al., 2017; Zhou et al., 2018), clustering (Kaifosh et al., 2014; Spaen et al., 2017),
and dictionary learning (Diego et al., 2013; Diego & Hamprecht, 2013; Pachitariu et al., 2013).
Recent approaches started to use deep learning for the analysis of calcium imaging data. Apthorpe
et al. (2016) and Klibisz et al. (2017) use convolutional neural networks (CNNs) to identify neuron
locations and Speiser et al. (2017) use a VAE combined with different models for calcium dynamics
to extract spike times from the calcium transients.
Although many sophisticated methods have been proposed, the extraction of cells and spike times
from calcium imaging data can still be prohibitively laborious and require manual annotation and
correction, with the accuracy of these methods being limited by the quality of the calcium recordings.
Furthermore, some of the mentioned methods are specially designed for two-photon microscopy,
whereas only few methods are capable to deal with the low SNR and large background fluctuations in
single-photon and microendoscopic imaging (Flusberg et al., 2008; Ghosh et al., 2011). Additional
challenges for these methods are factors such as non-Gaussian noise, non-cell background activity
and seemingly overlapping cells which are out of focus (Inan et al., 2017).
Neuronal assembly detection The identification of neuronal assemblies in spike time matrices has
been studied from different perspectives. For the detection of joint (strictly synchronous) spike events
across multiple neurons, rather simple methods based on PCA or ICA have been proposed (Comon,
1994; Nicolelis et al., 1995; Lopes-dos Santos et al., 2013), as well as more sophisticated statistical
methods such as unitary event analysis (Grun et al., 2002a;b). Higher-order correlations among
neurons and sequential spiking motifs such as synfire chains can be identified using more advanced
statistical tests (Staude et al., 2010a;b; Gerstein et al., 2012). The identification of cell assemblies with
arbitrary spatio-temporal structure has been addressed only quite recently. One approach recursively
merges sets of units into larger groups based on their joint spike count probabilities evaluated across
multiple different time lags (Russo & Durstewitz, 2017). Another method uses sparse convolutional
coding (SCC) for reconstructing the spike matrix as a convolution of spatio-temporal motifs and
their activations in time (Peter et al., 2017). An extension of this method uses a group sparsity
regularization to identify the correct number of motifs (Mackevicius et al., 2018).
3
Published as a conference paper at ICLR 2019
calcium imaging video x
Î´
reconstructed video X
activations z
(a)
X
x
Î±
z
(b)
Figure 2: Schematic sketch of the proposed method. In this toy example, the input video x is an
additive mixture of two motifs (highlighted in red and blue) plus noise, as shown in (a). To learn the
motifs and activations, the loss between input video x and reconstructed video x0 is minimized. (b)
shows the generation of the reconstructed video through the proposed VAE framework.

To the authorsâ knowledge, solely Diego & Hamprecht (2013) address the detection of neuronal
assemblies directly from calcium imaging data. This method, however, only aims at identifying
synchronously firing neurons, whereas the method proposed in this paper can identify also assemblies
with more complex temporal firing patterns.
3	Method
LeMoNADe is a VAE based latent variable method, specifically designed for the unsupervised
detection of repeating motifs with temporal structure in video data. The data x is reconstructed as a
convolution of motifs and their activation time points as displayed in figure 2a. The VAE is set up
such that the latent variables z contain the activations of the motifs, while the decoder encapsulates
the firing motifs of the cells as indicated in figure 2b. The proposed generative model is displayed
in figure 3. The great benefit of this generative model in combination with the proposed VAE is the
possibility to directly extract the temporal motifs and their activations and at the same time take into
account the sparse nature of neuronal assemblies.
3.1	The LeMoNADe model
In the proposed model the dataset consists of a single video x â RTÃPÃP0 with T frames of P Ã P0
pixels each. We assume this video to be an additive mixture of M repeating motifs of maximum
temporal length F. At each time frame t = 1, . . . , T, and for each motif m = 1, . . . , M, a latent
random variable ztm â {0, 1} is drawn from a prior distribution pa(z). The variable ztm indicates
4
Published as a conference paper at ICLR 2019
Generative Model
TM
ZãYYBemoUlli(Zm I a)
t=1 m=1
X I z,Î¸ ãN(X | fÎ¸(z), 2-11)
Recognition Model
TM
Z I x,Ï ãY Y Bernoulli (zm â£ Ém(x; Ï))
t=1 m=1
Figure 3: Plate diagram and proposed generative and recognition model. We show the plate diagram
of the proposed model (left), where red (solid) lines correspond to the generative/decoding process
and blue (dashed) lines correspond to the recognition/encoding model. On the right the equations for
the generative as well as the recognition model are given.
whether motif m is activated in frame t or not. The video X is then generated from the conditional
distribution pÎ¸(X I Z) with parameters Î¸.
In order to infer the latent activations Z the posterior pÎ¸ (Z I X) is needed. However, the true posterior
pÎ¸(Z I X) is intractable, but it can be approximated by introducing the recognition model (or approx-
imate posterior) qÏ(Z I X). We assume that the recognition model qÏ(Z I X) factorizes into the M
motifs and T time steps of the video. In contrast to most VAE, we further assume that each latent
variable ztm is Bernoulli-distributed with parameter Î±tm (X; Ï)
MT	MT
qÏ (z I X)= ââ qÏ(zm I X)= ââ Bernoulli (zm Iam(x; Ï)) .	(1)
m=1 t=1	m=1 t=1
We sample the activations Z in the latent space from the Bernoulli distributions to enforce sparse,
sharply peaked activations. The parameters Î±tm(X; Ï) are given by a CNN with parameters Ï. The
corresponding plate diagram and proposed generative and recognition model are shown in figure 3.
3.2	The VAE objective
In order to learn the variational parameters, the KL-divergence between approximate and true
posterior KL(qÏ (Z I X)kpÎ¸(Z I X)) is minimized. Instead of minimizing this KL-divergence, we can
also maximize the variational lower bound L(Î¸, Ï; X) (ELBO) (see e.g. Blei et al. (2017))
L(Î¸,Ï; x) = EZãqÏ(z | x)[logPÎ¸(x I z)] â KL(qÏ(z I x)kpa(z)) .	(2)
In order to optimize the ELBO, the gradients w.r.t. the variational parameters Ï and the generative
parameters Î¸ have to be computed. The gradient w.r.t. Ï, however, cannot be computed easily, since
the expectation in eq. (2) depends on Ï. A reparameterization trick (Kingma et al., 2015) is used to
overcome this problem: the random variable Z ãqÏ(z I x) is reparameterized using a differentiable
transformation hÏ(Îµ, x) of a noise variable Îµ such that
Z = hÏ(Îµ, x) with Îµ ãp(Îµ) .	(3)
The reparameterized ELBO, for which the expectation can be computed, e.g. using Monte Carlo
sampling, is then given by
L(Î¸,Ï; x) = EÎµ ãp(Îµ) [log PÎ¸(x I Z = hÏ(Îµ, x))] - KL (q0(z I x)kpÂ°(z)) .	(4)
More details on VAE as introduced by Kingma & Welling (2014) are given in appendix A.
3.3	LeMoNADe reparametrization trick and loss function
In our case, however, by sampling from Bernoulli distributions we have added discrete stochastic
nodes to our computational graph, and we need to find differentiable reparameterizations of these
nodes. The Bernoulli distribution can be reparameterized using the Gumbel-max trick (Luce, 1959;
Yellott, 1977; Papandreou & Yuille, 2011; Hazan & Jaakkola, 2012; Maddison et al., 2014). This,
5
Published as a conference paper at ICLR 2019
however, is not differentiable. For this reason we use the BinConcrete distribution (Maddison et al.,
2016), which is a continuous relaxation of the Bernoulli distribution with temperature parameter
Î». For Î» â 0 the BinConcrete distribution smoothly anneals to the Bernoulli distribution. The
BinConcrete distribution can be reparameterized using the Gumbel-softmax trick (Maddison et al.,
2016; Jang et al., 2017), which is differentiable.
Maddison et al. (2016) show that for a discrete random variable Z ã BemoUlli(Î±), the reparameteri-
zation of the BinConcrete relaxation of this discrete distribution is
Z = Ï(y) =-----L------
1 + exp(-y)
with
log(Î±) + log(U) - log(1 - U)
Î»
(5)
where U ãUni(0,1) and Î± = Î±/(1 â Î±).
Hence the relaxed and reparameterized lower bound L(Î¸, Î±; x) â L(Î¸, Ï; x) can be written as
L(Î¸,Î±;x) = Eyãga,Î¹1 (y | Ï)[logpÎ¸(x | Ï(y))] - KL(ga,iÎ¹ (y | x)||fa,i2(y))	â¹
where gÎ±,Î»Î¹ (y | x) is the reparameterized BinConcrete relaxation of the variational posterior q@(z | x)
and fa,Î»2 (y) the reparameterized relaxation of the prior Pa (z). Î»Î¹ and Î»? are the respective tempera-
tures and a and a the respective locations of the relaxed and reparameterized variational posterior
and prior distribution.
The first term on the RHS of eq. (6) is a negative reconstruction error, showing the connection
to traditional autoencoders, while the KL-divergence acts as a regularizer on the approximate
posterior qÏ(Z | x). As shown in Higgins et al. (2017), we can add a Î²-coefficient to this KL-term
which allows to vary the strength of the constraint on the latent space.
Instead of maximizing the lower bound, we will minimize the corresponding loss function
'(x, x0,Î±,Î»Î¹, a,Î»2,Î²KL) = MSE(x, x0) + Î²KL â KL(gÎ±,Î»Î¹ (y | x)â£â£fa,Î»2 (y))
=MSE(x, x0)	Î²KL â Eui/log f* âãï¼))ã]âº
gÎ±,Î»Î¹ (y(U,Î±,Î»Î¹) | x)
with MSE(x, x0) being the mean-squared error between x and x0, and the Î²-coefficient Î²KL. Datasets
with low SNR and large background fluctuations will need a stronger regularization on the activations
and hence a larger Î²KL than higher quality recordings. Hence, adding the Î²-coefficient to the loss
function enables our method to adapt better to the properties of specific datasets and recording
methods.
3.4	LeMoNADe network architecture
The encoder network starts with a few convolutional layers with small 2D filters operating on each
frame of the video separately, inspired by the architecture used in Apthorpe et al. (2016) to extract
cells from calcium imaging data. Afterwards the feature maps of the whole video are passed through a
final convolutional layer with 3D filters. These filters have the size of the feature maps obtained from
the single images times a temporal component of length F, which is the expected maximum temporal
length of the motifs. We apply padding in the temporal domain to also capture motifs correctly which
are cut off at the beginning or end of the analyzed image sequence. The output of the encoder are the
parameters Î±a which we need for the reparametrization in eq. (5). From the reparametrization we gain
the activations Z which are then passed to the decoder. The decoder consists of a single deconvolution
layer with M filters of the original frame size times the expected motif length F, enforcing the
reconstructed data x0 to be an additive mixture of the decoder filters. Hence, after minimizing the
loss the filters of the decoder contain the detected motifs.
Performing these steps on the whole video would be computationally very costly. For this reason,
we perform each training epoch only on a small subset of the video. The subset consists of a few
hundred consecutive frames, where the starting point of this short sequence is randomly chosen in
each epoch. We found that doing so did not negatively affect the performance of the algorithm. By
using this strategy we are able to analyse videos of arbitrary length in a computationally efficient way.
More implementation details can be found in appendix B.
6
Published as a conference paper at ICLR 2019
4	Experiments and Results
4.1	Synthetic data
The existence of neuronal assemblies is still fiercely debated and their detection would only be possible
with automated, specifically tailored tools, like the one proposed in this paper. For this reason, no
ground truth exists for the identification of spatio-temporal motifs in real neurophysiological spike
data. In order to yet report quantitative accuracies, we test the algorithm on synthetically generated
datasets for which ground truth is available. For the data generation we used a procedure analogous
to the one used in Diego et al. (2013) and Diego & Hamprecht (2013) for testing automated pipelines
for the analysis and identification of neuronal activity from calcium imaging data. In contrast to them,
we include neuronal assemblies with temporal firing structure. The cells within an assembly can have
multiple spikes in a randomly chosen but fixed motif of temporal length up to 30 frames. We used 3
different assemblies in each sequence. Additionally, spurious spikes of single neurons were added to
simulate noise. The ratio of spurious spikes to all spikes in the dataset was varied from 0% up to 90%
in ten steps. The details of the synthetic data generation can be found in appendix C.1.
To the best of our knowledge, the proposed method is the first ever to detect video motifs with
temporal structure directly in calcium imaging data. As a consequence, there are no existing baselines
to compare to. Hence we here propose and evaluate the SCC method presented in Peter et al. (2017)
as a baseline. The SCC algorithm is able to identify motifs with temporal structure in spike trains
or calcium transients. To apply it to our datasets, we first have to extract the calcium transients
of the individual cells. For the synthetically generated data we know the location of each cell by
construction, so this is possible with arbitrary accuracy. The output of the SCC algorithm is a matrix
that contains for each cell the firing behavior over time within the motif. For a fair comparison we
brought the motifs found with LeMoNADe, which are short video sequences, into the same format.
The performance of the algorithms is measured by computing the cosine similarity (Singhal, 2001)
between ground truth motifs and detected motifs. The cosine similarity is one for identical and zero
for orthogonal patterns. Not all ground truth motifs extend across all 30 frames, and may have almost
vanishing luminosity in the last frames. Hence, the discovered motifs can be shifted by a few frames
and still capture all relevant parts of the motifs. For this reason we computed the similarity for the
motifs with all possible temporal shifts and took the maximum. More details on the computation of
the similarity measure can be found in appendix C.2.
We ran both methods on 200 synthetically generated datasets with the parameters shown in table
3 in the appendix. We here show the results with the correct number of motifs (M = 3) used in
both methods. In appendix E.1 we show that if the number of motifs is overestimated (here M > 3),
LeMoNADe still identifies the correct motifs, but they are repeated multiple times in the surplus
filters. Hence this does not reduce the performance of the algorithm. The temporal extent of the
motifs was set to F = 31 to give the algorithms the chance to also capture the longer patterns. The
cosine similarity of the found motifs to the set of ground truth motifs, averaged over all found motifs
and all experiments for each of the ten noise levels, is shown in figure 4. The results in figure 4 show
that LeMoNADe performs as well as SCC in detecting motifs and also shows a similar stability in the
presence of noise as SCC. This is surprising since LeMoNADe does not need the previous extraction
of individual cells and hence has to solve a much harder problem than SCC.
In order to verify that the results achieved by LeMoNADe and SCC range significantly above chance,
we performed a bootstrap (BS) test. For this, multiple datasets were created with similar spike
distributions as before, but with no reoccurring motif-like firing patterns. We compiled a distribution
of similarities between patterns suggested by the proposed method and randomly sampled segments
of same length and general statistics from that same BS dataset. The full BS distributions are shown
in appendix C.3. The 95%-tile of the BS distributions for each noise level are also shown in figure 4.
Figure 5 shows an exemplary result from one of the analysed synthetic datasets with 10% noise and
maximum temporal extend of the ground truth motifs of 28 frames. All three motifs were correctly
identified (see figure 5a) with a small temporal shift. This shift does not reduce the performance as it
is compensated by a corresponding shift in the activations of the motifs (see figure 5b). In order to
show that the temporal structure of the found motifs matches the ground truth, in figure 5a for motif
1 and 2 we corrected the shift of one and two frames, respectively. We also show the results after
7
Published as a conference paper at ICLR 2019
Figure 4: Similarities between found motifs and ground truth for different noise levels. We show for
LeMoNADe (lime green) and SCC (blue) the average similarities between found motifs and ground
truth for ten different noise levels ranging from 0% up to 90% spurious spikes. Error bars indicate the
standard deviation. For each noise level 20 different datasets were analyzed. For both, LeMoNADe
and SCC, the similarities between found and ground truth motifs are significantly above the 95%-tile
of the corresponding bootstrap distribution (red) up to a noise level of 70% spurious spikes. Although
LeMoNADe does not need the previous extraction of individual cells, it performs as well as SCC in
detecting motifs and also shows a similar stability in the presence of noise.
(a) Superposition of the motifs in red, green and blue for the ground truth motifs (top) and found motifs (bottom)
200
lâ
W
ID
ItsE Zs0E
uo=e>-e uo=eae
WO	Â»00	IOW	UOO	l<W	IWO	lÂ»w	SJO Â»30	S40
frame
(b) Activation of the found motifs
Figure 5: Exemplary result from one synthetic dataset. (a) shows a single plot containing all three
motifs as additive RGB values for the ground truth motifs (top) and discovered motifs (bottom). The
found motifs were ordered manually and temporally aligned to match the ground truth, for better
readability. The complete motif sequences can be found in figure 10 in appendix E.1. In (b) the
activations z of the found motifs are shown in red for the complete video (left) and a small excerpt of
the sequence (right). The ground truth activations are marked with blue crosses. (c) shows the firing
of the extracted cells in the ground truth motifs (top), the motifs identified by SCC (middle) and the
motifs found with LeMoNADe (bottom).
,	InatlfO
.B
â¢ , - â
â~Tl 11---------S----â¡--^:
1 1
3 1
Cssvc
(c) Activity per cell in motif: ground truth
(top), SCC using ground truth segmentation
(middle), LeMoNADe (bottom)

extracting the individual cells from the motifs and the results from SCC in figure 5c. One can see that
the results are almost identical, again except for small temporal shifts.
4.2	Real data
We applied the proposed method on two datasets obtained from organotypic hippocampal slice
cultures. The cultures were prepared from 7-9-day-old Wistar rats as described in Kann et al. (2003)
and Schneider et al. (2015). The fluorescent Ca2+ sensor, GCaMP6f (Chen et al., 2013), was delivered
to the neurons by an adeno-associated virus (AAV). Neurons in stratum pyramidale of CA3 were
imaged for 6.5 (dataset 1) and 5 minutes (dataset 2) in the presence of the cholinergic receptor agonist
carbachol. For more details on the generation of these datasets see appendix D.1.
8
Published as a conference paper at ICLR 2019
frame 0 frame 1 frame 2 frame 3 frame 4 frame 5 frame â
ZJRoE
o2m
lâ£- 1Â»
ââ¡
E Â«â
(a) Found motifs
co-â>BÏ
TaW	iâ5	2ii0Î´-
^SOE EOE
CO-â>B m uoeâ¥m
co-â>BÏ
Z~IoE
uo->-e
ISOE
uoe>-e
soÎ±	woo	TSW	moa
frame
wâ	ISoa	200a
frame
(b) Activation of the found motifs
0 â¥OE
frame 2	frame 5	frame 8
(c) Thresholded activation of the found motifs
frame 12	frame 14	frame 16
(d) Highlights of motif 0
(a) Found motifs
Fï¼ï¼å¿
~ â O
0ä¸OE
UO-â>BE
âHHHN0 - n ï¼ï¼â 3"
Â® â a O Â« Â½ O
Iâ10E Z JAOE
UOâ->â¡E Uo-â>bE
â¡0	Â«0
.Â«J,
ÉªÉªÉªaÉª
1âM
0ââE
co-â>Bn
ao Â«Jo m
[[][]ï¼å±±
LjLLk
IOiM
Ml
I~sE
co-â>-tin
â¡0	Â«0
Â«e	âÎ²	iÎ²
frame
Ml
z~sE
co-â>Bn
200
m	no	Î¹tno	Î¹ao
frame
activation of the found motifs
Activation of the found motifs
(c) Thresholded
0 J=0E
â
frame 9 frame 11 frame 13 frame 15 frame 17 frame 19
(d) Highlights of motif 0
Figure 6: Result from hippocampal slice culture datasets 1 (top) and 2 (bottom). The colors in (a) are
inverted compared to the standard visualization of calcium imaging data for better visibility. In (c)
activations are thresholded to 70% of the maximum activation for each motif. In (d) the manually
selected frames of motif 0 highlight the temporal structure of the motif.
9
Published as a conference paper at ICLR 2019
The proposed method was run on these datasets with the parameter settings shown in table 3 in the
appendix E, where we also provide additional comments on the parameter settings. The analysis of
the datasets took less than two hours on a Ti 1080 GPU. Before running the analysis we computed
â³F/F for the datasets. We looked for UP to three motifs with a maximum extent of F = 21 frames.
The results are shown in figure 6. For both datasets, one motif in figure 6a consists of multiple
cells, shows rePeated activation over the recording Period (see figure 6b, 6c), and contains temPoral
structure (see figure 6d). The other two âmotifsâ can easily be identified as artefacts and background
fluctuations. As SCC and many other motif detection methods, LeMoNADe suffers from the fact that
such artefacts, esPecially single events with extremely high neuronal activation, Potentially exPlain
a large Part of the data and hence can be falsely detected as motifs. Nevertheless, these events can
be easily identified by simPly looking at the motif videos or thresholding the activations as done
in figure 6c. Although the found motifs also include neuroPil activation, this does not imPly this
was indeed used by the VAE as a defining feature of the motifs, just that it was also Present in
the images. Dendritic/axonal structures are Part of the activated neurons and therefore also visible
in the motif videos. If necessary, these structures can be removed by Post-Processing stePs. As
LeMoNADe reduces the Problem to the short motif videos instead of the whole calcium imaging
video, the neuroPil subtraction becomes much more feasible.
5 Conclusion
We have Presented a novel aPProach for the detection of neuronal assemblies that directly oPerates on
the calcium imaging data, making the cumbersome extraction of individual cells and discrete sPike
times from the raw data disPensable. The motifs are extracted as short, rePeating image sequences.
This Provides them in a very intuitive way and additionally returns information about the sPatial
distribution of the cells within an assembly.
The ProPosed methodâs Performance in identifying motifs is equivalent to that of a state-of-the-art
method that requires the Previous extraction of individual cells. Moreover, we were able to identify
rePeating firing Patterns in two datasets from hiPPocamPal slice cultures, Proving that the method is
caPable of handling real calcium imaging conditions.
For future work, a Post-Processing steP as used in Peter et al. (2017) or a grouP sParsity regularization
similar to the ones used in Bascol et al. (2016) or Mackevicius et al. (2018) could be added to
determine a Plausible number of motifs automatically. Moreover, additional latent dimensions could
be introduced to caPture artefacts and background fluctuations and hence automatically seParate them
from the actual motifs. The method is exPected to, in PrinciPle, also work on other functional imaging
modalities. We will investigate the Possibility of detecting motifs using LeMoNADe on recordings
from human fMRI or voltage-sensitive dyes in the future.
Acknowledgments
EK thanks Ferran Diego for sharing his knowledge on generating synthetic data and for his scientific
advice. DD acknowledges Partial financial suPPort by DFG Du 354/8-1. EK, HS, JS, SE, OK, DD
and FAH gratefully acknowledge Partial financial suPPort by DFG SFB 1134.
References
Misha B Ahrens, Michael B Orger, Drew N Robson, Jennifer M Li, and PhiliPP J Keller. Whole-brain
functional imaging at cellular resolution using light-sheet microscoPy. Nature methods, 2013.
Noah J. APthorPe, Alexander J. Riordan, Rob E. Aguilar, Jan Homann, Yi Gu, David W. Tank, and
H. Sebastian Seung. Automatic neuron detection in calcium imaging data using convolutional
networks. In NIPS, 2016.
Kevin Bascol, Remi Emonet, Elisa Fromont, and Jean-Marc Odobez. Unsupervised interpretable
Pattern discovery in time series using autoencoders. In Joint IAPR International Workshops
on Statistical Techniques in Pattern Recognition (SPR) and Structural and Syntactic Pattern
Recognition (SSPR). Springer, 2016.
David M. Blei, Alp Kucukelbir, and Jon D. McAuliffe. Variational inference: A review for statisticians.
Journal of the American Statistical Association, 2017.
GyOrgy Buzsdki. Large-scale recording of neuronal ensembles. Nature neuroscience, 2004.
10
Published as a conference paper at ICLR 2019
Luis Carrillo-Reid, Jae-eun Kang Miller, Jordan P. Hamm, Jesse Jackson, and Rafael Yuste. Endoge-
nous sequential cortical activity evoked by visual stimuli. Journal of Neuroscience, 2015.
Tsai-Wen Chen, Trevor J. Wardill, Yi Sun, Stefan R. Pulver, Sabine L. Renninger, Amy Baohan,
Eric R. Schreiter, Rex A. Kerr, Michael B. Orger, Vivek Jayaraman, Loren L. Looger, Karel
Svoboda, and Douglas S. Kim. Ultrasensitive fluorescent proteins for imaging neuronal activity.
Nature, 2013.
Pierre Comon. Independent component analysis, a new concept? Signal processing, 1994.
Pascale Cossart and Philippe J. Sansonetti. Bacterial invasion: The paradigms of enteroinvasive
pathogens. Science, 2004.
Anthony Christopher Davison, David Victor Hinkley, et al. Bootstrap methods and their application.
Cambridge university press, 1997.
Zhiwei Deng, Rajitha Navarathna, Peter Carr, Stephan Mandt, Yisong Yue, Iain Matthews, and Greg
Mori. Factorized variational autoencoders for modeling audience reactions to movies. In CVPR,
2017.
Winfried Denk, James H. Strickler, and Watt W. Webb. Two-photon laser scanning fluorescence
microscopy. Science, 1990.
Ferran Diego and Fred A Hamprecht. Learning multi-level sparse representations. In NIPS. 2013.
Ferran Diego and Fred A Hamprecht. Sparse space-time deconvolution for calcium image analysis.
In NIPS. 2014.
Ferran Diego, Susanne Reichinnek, Martin Both, and Fred A. Hamprecht. Automated identification
of neuronal activity from calcium imaging by sparse dictionary learning. ISBI, 2013.
Benjamin A. Flusberg, Axel Nimmerjahn, Eric D. Cocker, Eran A. Mukamel, Robert P. J. Barretto,
Tony H. Ko, Laurie D. Burns, Juergen C. Jung, and Mark J. Schnitzer. High-speed, miniaturized
fluorescence microscopy in freely moving mice. Nature Methods, 2008.
George L. Gerstein, Elizabeth R. Williams, Markus Diesmann, Sonja Grun, and Chris Trengove.
Detecting synfire chains in parallel spike data. Journal of Neuroscience Methods, 2012.
Kunal Ghosh, Laurie Burns, Eric D. Cocker, Axel Nimmerjahn, Yaniv Ziv, Abbas El Gamal, and
Mark J. Schnitzer. Miniaturized integration of a fluorescence microscope. In Nature Methods,
2011.
Prasoon Goyal, Zhiting Hu, Xiaodan Liang, Chenyu Wang, and Eric P. Xing. Nonparametric
variational auto-encoders for hierarchical representation learning. In ICCV, 2017.
Sonja Grun. Data-driven significance estimation for precise spike correlation. Journal of Neurophysi-
ology, 2009.
Sonja Grun, Markus Diesmann, and Ad Aertsen. Unitary events in multiple single-neuron spiking
activity: I. detection and significance. Neural Computation, 2002a.
Sonja Grun, Markus Diesmann, and Ad Aertsen. Unitary events in multiple single-neuron spiking
activity: II. nonstationary data. Neural Computation, 2002b.
Tamir Hazan and Tommi Jaakkola. On the partition function and random maximum a-posteriori
perturbations. In ICML, 2012.
Donald O. Hebb. The Organization of Behaviour: A Neuropsychological Theory. Wiley, 1949.
Fritjof Helmchen and Winfried Denk. Deep tissue two-photon microscopy. Nature Methods, 2005.
Irina Higgins, Loic Matthey, Arka Pal, Christopher Burgess, Xavier Glorot, Matthew Botvinick,
Shakir Mohamed, and Alexander Lerchner. beta-vae: Learning basic visual concepts with a
constrained variational framework. In ICLR, 2017.
Yuji Ikegaya, Gloster Aaron, Rosa Cossart, Dmitriy Aronov, Ilan Lampl, David Ferster, and Rafael
Yuste. Synfire chains and cortical songs: temporal modules of cortical activity. Science, 2004.
Hakan Inan, Murat A. Erdogdu, and Mark Schnitzer. Robust estimation of neural signals in calcium
imaging. In NIPS. 2017.
Eric Jang, Shixiang Gu, and Ben Poole. Categorical reparameterization with gumbel-softmax. In
ICLR, 2017.
Matthew Johnson, David K Duvenaud, Alex Wiltschko, Ryan P Adams, and Sandeep R Datta.
Composing graphical models with neural networks for structured representations and fast inference.
In NIPS, 2016.
Patrick Kaifosh, Jeffrey Zaremba, Nathan B. Danielson, and Attila Losonczy. Sima: Python software
for analysis of dynamic fluorescence imaging data. In Front. Neuroinform., 2014.
O. Kann, S. Schuchmann, K. Buchheim, and U. Heinemann. Coupling of neuronal activity and
mitochondrial metabolism as revealed by nad(p)h fluorescence signals in organotypic hippocampal
slice cultures of the rat. Neuroscience, 2003.
Diederik P. Kingma and Max Welling. Auto-encoding variational bayes. In ICLR, 2014.
11
Published as a conference paper at ICLR 2019
Diederik P. Kingma, Tim Salimans, and Max Welling. Variational dropout and the local reparameteri-
zation trick. In NIPS, 2015.
Aleksander Klibisz, Derek Rose, Matthew Eicholtz, Jay Blundon, and Stanislav Zakharenko. Fast,
simple calcium imaging segmentation with fully convolutional networks. In Deep Learning
in Medical Image Analysis and Multimodal Learning for Clinical Decision Support - Third
International Workshop, DLMIA 2017, and 7th International Workshop, ML-CDS 2017, Held in
Conjunction WithMICCAI 2017, Quebec City, QC, Canada, SePtember 14, 2017, Proceedings,
2017.
Yingzhen Li and Stephan Mandt. A deep generative model for disentangled representations of
sequential data. arXiv PrePrint arXiv:1803.02991, 2018.
Vitor Lopes-dos Santos, Sidarta Ribeiro, and Adriano BL Tort. Detecting cell assemblies in large
neuronal populations. Journal of neuroscience methods, 2013.
R. Duncan Luce. Individual Choice Behavior: A theoretical analysis. Wiley, 1959.
Emily L. Mackevicius, Andrew H. Bahle, Alex H. Williams, Shijie Gu, Natalia I. Denissenko, Mark S.
Goldman, and Michale S. Fee. Unsupervised discovery of temporal sequences in high-dimensional
datasets, with applications to neuroscience. bioRxiv, 2018.
Chris J. Maddison, Daniel Tarlow, and Tom Minka. A* sampling. In NIPS, 2014.
Christopher Maddison, Andriy Mnih, and Yee Whye Teh. The concrete distribution: A continuous
relaxation of discrete random variables. In ICLR, 2016.
David Marr, David Willshaw, and Bruce McNaughton. SimPle memory: a theory for archicortex.
Springer, 1991.
Alik Mokeichev, Michael Okun, Omri Barak, Yonatan Katz, Ohad Ben-Shahar, and Ilan Lampl.
Stochastic emergence of repeating cortical motifs in spontaneous membrane potential fluctuations
in vivo. Neuron, 2007.
Eran A. Mukamel, Axel Nimmerjahn, and Mark J. Schnitzer. Automated analysis of cellular signals
from large-scale calcium imaging data. Neuron, 2009.
W. Muller, U. Misgeld, and U. Heinemann. Carbachol effects on hippocampal neurons in vitro:
dependence on the rate of rise of carbachol tissue concentration. ExPerimental brain research,
1988.
Miguel A Nicolelis, Luiz A Baccala, RC Lin, and John K Chapin. Sensorimotor encoding by
synchronous neural ensemble activity at multiple levels of the somatosensory system. Science,
1995.
Miguel AL Nicolelis, Erika E Fanselow, and Asif A Ghazanfar. Hebbâs dream: the resurgence of cell
assemblies. Neuron, 1997.
Marius Pachitariu, Adam M Packer, Noah Pettit, Henry Dalgleish, Michael Hausser, and Maneesh
Sahani. Extracting regions of interest from biological images with convolutional sparse block
coding. In NIPS. 2013.
George Papandreou and Alan L. Yuille. Perturb-and-map random fields: Using discrete optimization
to learn and sample from energy models. In ICCV, 2011.
Eva Pastalkova, Vladimir Itskov, Asohan Amarasingham, and GyGrgy Buzsdki. Internally generated
cell assembly sequences in the rat hippocampus. Science, 2008.
Sven Peter, Elke Kirschbaum, Martin Both, Lee Campbell, Brandon Harvey, Conor Heins, Daniel
Durstewitz, Ferran Diego, and Fred A Hamprecht. Sparse convolutional coding for neuronal
assembly detection. In NIPS. 2017.
Eftychios A Pnevmatikakis and Liam Paninski. Sparse nonnegative deconvolution for compressive
calcium imaging: algorithms and phase transitions. In NIPS. 2013.
Eftychios A Pnevmatikakis, Timothy A Machado, Logan Grosenick, Ben Poole, Joshua T Vogelstein,
and Liam Paninski. Rank-penalized nonnegative spatiotemporal deconvolution and demixing of
calcium imaging data. In ComPutational and Systems Neuroscience (Cosyne), 2013.
Eftychios A. Pnevmatikakis, Yuanjun Gao, Daniel Soudry, David Pfau, Clay Lacefield, Kira
Poskanzer, Randy Bruno, Rafael Yuste, and Liam Paninski. A structured matrix factorization
framework for large scale calcium imaging data analysis. arXiv:1409.2903, 2014.
Eftychios A. Pnevmatikakis, Daniel Soudry, Yuanjun Gao, Timothy A. Machado, Josh Merel, David
Pfau, Thomas Reardon, Yu Mu, Clay Lacefield, Weijian Yang, Misha Ahrens, Randy Bruno,
Thomas M. Jessell, Darcy S. Peterka, Rafael Yuste, and Liam Paninski. Simultaneous denoising,
deconvolution, and demixing of calcium imaging data. Neuron, 2016.
Eleonora Russo and Daniel Durstewitz. Cell assemblies at multiple time scales with arbitrary lag
constellations. eLife, 2017.
12
Published as a conference paper at ICLR 2019
Justus Schneider, Andrea Lewen, Thuy-Truc Ta, Lukas V. Galow, Raffaella Isola, Ismini E. Papageor-
giou, and Oliver Kann. A reliable model for gamma oscillations in hippocampal tissue. Journal of
Neuroscience Research, 2015.
Wolf Singer. Synchronization of cortical activity and its putative role in information processing and
learning. Annual review of physiology, 1993.
Amit Singhal. Modern information retrieval: A brief overview. IEEE Data Eng. Bull., 2001.
Paris Smaragdis. Non-negative matrix factor deconvolution; extraction of multiple sound sources
from monophonic inputs. Lecture Notes in Computer Science (including subseries Lecture Notes
in Artificial Intelligence and Lecture Notes in Bioinformatics), 2004.
Quico Spaen, Dorit S Hochbaum, and Roberto Asin-Acha Hnccorr: A novel combinatorial approach
for cell identification in calcium-imaging movies. arXiv:1703.01999, 2017.
Artur Speiser, Jinyao Yan, Evan W Archer, Lars Buesing, Srinivas C Turaga, and Jakob H Macke. Fast
amortized inference of neural activity from calcium imaging data with variational autoencoders. In
NIPS. 2017.
Benjamin Staude, Sonja Grun, and Stefan Rotter. Higher-order correlations in non-stationary parallel
spike trains: statistical modeling and inference. Frontiers in Computational Neuroscience, 2010a.
Benjamin Staude, Stefan Rotter, and Sonja Grun. Cubic: cumulant based inference of higher-order
correlations in massively parallel spike trains. Journal of Computational Neuroscience, 2010b.
Ian H Stevenson and Konrad P Kording. How advances in neural recording affect data analysis.
Nature neuroscience, 2011.
John I. Yellott. The relationship between luceâs choice axiom, thurstoneâs theory of comparative
judgment, and the double exponential distribution. Journal of Mathematical Psychology, 1977.
Pengcheng Zhou, Shanna L Resendez, Jose Rodriguez-Romaguera, Jessica C Jimenez, Shay Q
Neufeld, Andrea Giovannucci, Johannes Friedrich, Eftychios A Pnevmatikakis, Garret D Stuber,
Rene Hen, Mazen A Kheirbek, Bernardo L Sabatini, Robert E Kass, and Liam Paninski. Efficient
and accurate extraction of in vivo calcium signals from microendoscopic video data. eLife, 2018.
13
Published as a conference paper at ICLR 2019
Appendix
A Variational autoencoder
Variational autoencoder (VAE) are generative latent variable models which were first described
in Kingma & Welling (2014). The data X = {x(i) }NLv consisting of N samples of some random
variable x, is generated by first drawing a latent variable z(i) from a prior distribution p(z) and
then sampling from the conditional distribution pÎ¸*(x | Z) with parameters Î¸*. The distribution
PÎ¸* (x | Z) belongs to the parametric family pÎ¸ (x | Z) with differentiable PDFs w.r.t. Î¸ and z. Both
the true parameters Î¸* as well as the latent variables z(i) are unknown. We are interested in an
approximate posterior inference of the latent variables Z given some data x. The true posterior
pÎ¸(Z | x), however, is usually intractable. But it can be approximated by introducing the recognition
model (or approximate posterior) qÏ(Z | x). We want to learn both the recognition model parameters
Ï as well as the generative model parameters Î¸. The recognition model is usually referred to as the
probabilistic encoder and pÎ¸ (x | Z) is called the probabilistic decoder.
In order to learn the variational parameters Ï we want to minimise the KL-divergence between
approximate and true posterior KL(qÏ(zâ£x)kpÎ¸(zâ£x)). Therefore We use the fact that the marginal
likelihood pÎ¸ (x) can be written as
log pÎ¸ (Ï) = L(p,q; Ï) + KL(qÏ(zâ£Ï)kPÎ¸ (zâ£Ï))	(8)
As the KL-divergence is non-negative, We can minimize KL(qÏ(zâ£x)â£â£pÎ¸(zâ£x)) by maximizing the
(variational) lower bound L(p, q; x) with
L(p,q;x) = EZãqÏ(zâ£Ï) [logPÎ¸(x|z)] - KL(qÏ(zâ£x)kp(z))	.	(9)
In order to optimise the lower bound L(p, q; x) w.r.t. both the variational parameters Ï and the
generative parameters Î¸, we need to compute the gradients
VÏ,Î¸L(p, q; x) = VÏ,Î¸EZãqÏ(zâ£Ï) [logPÎ¸(x|z)] - VÏ,Î¸KL(qÏ(zâ£x)kp(z)) .	(10)
For the first part of the lower bound the gradient w.r.t. Î¸ can be easily computed using Monte Carlo
sampling
1S	s
VÎ¸EzãqÏ(zâ£Ï) [logPÎ¸(x|z)] = EZãqÏ(zâ£Ï) [VÎ¸ logpÎ¸(x|z)] â S Â£ VÎ¸ logPÎ¸(x|z )	(11)
with zs ãqÏ(zâ£x). The gradient w.r.t. Ï, however, does not take the form of an expectation in Z and
can therefore not be sampled that easily:
VÏEzãåºå(zâ£Ï) [logpÎ¸(x|z)]
VÏ
/ qÏ (z|x) log pÎ¸ (xâ£z)dz
/ log pÎ¸ (xâ£z)VÏ qÏ (zâ£x)dz
(12)
However, in most cases we can use the reparameterization trick to overcome this problem: the random
variable Z ãq@(z | x) can be reparameterised using a differentiable transformation hÏ(Îµ, x) of a
noise variable Îµ such that
Z = hÏ(Îµ, x) with Îµ ãp(Îµ)	(13)
We now can compute the gradient w.r.t. Ï again using Monte Carlo sampling
VÏEÎµãp(Îµ) [logPÎ¸(x|z = hÏ(Îµ, x))] = EÎµãp(Îµ) [VÏ logpÎ¸(x|z = hÏ(Îµ, x))]
1S
â S	VÏ logPÎ¸(x|z = hÏ(Îµ , x))	(14)
s=1
with Îµs ãp(Îµ). Hence, the reparameterized lower bound L(p, q; x) â L(p, q; x) can be written as
1S
L(p,q; x) = S EIOgPÎ¸(x|z ) - KL(qÏ(z | x)â£â£p(z))	(15)
s=1
with zs = hÏ(Îµs, x), Îµ ãp(Îµ). The first term on the RHS of eq. (15) is a negative reconstruction error,
showing the connection to traditional autoencoders, while the KL-divergence acts as a regularizer on
the approximate posterior qÏ(z | x).
14
Published as a conference paper at ICLR 2019
B LeMoNADe network architecture and implementation details
B.1	Encoder
The encoder network starts with a few convolutional layers with small 2D filters operating on each
frame of the video separately, inspired by the architecture used in Apthorpe et al. (2016) to extract
cells from calcium imaging data. The details of this network are shown in table 1. Afterwards the
feature maps of the whole video are passed through a final convolutional layer with 3D filters. These
filters have size of the feature maps gained from the single images times a temporal component of
length F, which is the expected maximum temporal extent of a motif. We use 2 â M filters and apply
padding in the temporal domain to avoid edge effects. By this also motifs that are cut off at the
beginning or the end of the sequence can be captured properly. The output of the encoder are 2 â M
feature maps of size (T + F - 1) Ã 1 Ã 1.
B.2	Reparameterization
Instead of reparameterizing the Bernoulli distributions, we will reparameterize their BinConcrete
relaxations. The BinConcrete relaxation of a Bernoulli distribution with parameter Î± takes as input
parameter Î± = Î±â(1 - Î±). Maddison et al. (2016) showed that instead of using the normalized
probabilities Î±, we can also perform the reparametrization with unnormalized parameters Î±1 and Î±2,
where a1 is the probability to sample a one and a2 is the probability to sample a zero and Î± = Î±1âÎ±2.
The first M feature maps, which were outputted by the encoder, are assigned to contain the unnor-
malised probabilities Î±1m,t for the activation of motif m in frame t to be one. The second M feature
maps contain the unnormalized probabilities Î±2m,t for the activation of motif m in frame t to be
zero. The parameter Î± that is needed for the reparameterized BinConcrete distribution is obtained
by dividing the two vectors elementwise: am = Î±1n,t/Î¸n,t. We use the reparameterization trick
to sample from BinCOnCrete(amm) as follows: First we
distribution Uni(0, 1). Next, we compute y with
sample {Utm}tT=+1F-1
M
m=1
from a uniform
(am â Um Y"1
U - Um )
ytm
(16)
Finally, we gain z according to
ym
Zt = Ï+ym â am,t
(17)
for all m = 1, . . . , M and t = 1, . . . , T+F - 1. The multiplication by a1m,t in eq. (17) is not part
of the original reparametrization trick (Maddison et al., 2016; Jang et al., 2017). But we found that
the results of the algorithm improved dramatically as we scaled the activations with the a1 -values
that were originally predicted from the encoder network.
B.3	Decoder
The input to the decoder are now the activations z. The decoder consists of a single deconvolution
layer with M filters of the original frame size times the expected motif length F . These deconvolution
filters contain the motifs we are looking for.
The details of the used networks as well as the sizes of the inputs and outputs of the different steps
are shown in table 1. Algorithm 1 summarizes the reparametrization and updates.
C Experiments and results on synthetic data
C.1 Synthetic data generation
We created 200 artificial sequences of length 60 s with a frame rate of 30 fps and 128 Ã 128 pixel
per image. The number of cells was varied and they were located randomly in the image plane with
an overlap of up to 30 %. The cell shapes were selected randomly from 36 shapes extracted from
15
Published as a conference paper at ICLR 2019
Tab	le 1: LeMoNADe network architecture details
Operation
Kernel Feature maps Padding	Stride Nonlinearity
2D Convolution
2D Convolution
Max-Pooling
2D Convolution
2D Convolution
Max-Pooling
2D Convolution
2D Convolution
Input: T images, P Ã
3	Ã	3	24
3	Ã	3	48
2	Ã	2	-
3	Ã	3	72
3	Ã	3	96
2	Ã	2	-
3	Ã	3	120
1	Ã	1	48
ÃÃÃÃÃÃÃ
0000000
ä¸ ~ ~ ~ . . _ . , . ,
Output: T images, P Ã PL P= ((P â 4)/2 â 4)/2 â
00000000a0P
/2
4)
UU UU UU2
LL LL LLâ
EE-EE-EE 2
Î
2
2
ä¸ ~ ~
Input: 1 video, T Ã P Ã P0
ä¸ ~ ~ . ä¸ .
3D Convolution	F Ã P Ã P0	2M	(F â 1) Ã 0 Ã 0	1 SoftPlus
Output: 2M feature maps, (T + F â 1) Ã 1 Ã 1
Input: 2M feature maps, (T + F â 1) Ã 1 Ã 1
ReParametrization	-	-	-	-	-
Output: M activations, (T + F â 1) Ã 1 Ã 1
Input: M activations, (T + F â 1) Ã 1 Ã 1
3D TransposedConvolution F Ã P Ã P0	M	(F â 1) Ã 0 Ã 0	1 ReLU
Output: 1 video, T Ã P Ã P0
Algorithm 1: The LeMoNADe algorithm
Input: raw video x, normalized to zero mean and unit variance, architectures fÎ¸, a@,
hyperparameter Î»Î¹, Î»2,a, Î²ÎºL
Result: trained fÎ¸ , Î±Ï
Î¸,Ï J Initialize network parameters
repeat
// Sample subset of video
xsub J Randomly chosen sequence of consecutive frames from x
// Encoding step
Encode XSUb to get Î± as described in section B.1 and B.2
// Latent Step
Sample noise U ã Uni(0,1)
Compute y following eq. (16)
Compute z following eq. (17)
// Decoding Step
x0sub J decode via fÎ¸ (z)
// Update Parameters
Compute gradients of loss
Ï,Î¸ J update via VÏ,Î¸'(xsub, xï¼ubï¼Î±, Î»Î¹, a, Î»2,Î²ÎºL) (see eq. (7) in the main paper)
until until convergence of Î¸, Ï;
real data. The transients were modelled as two-sided exponential decay with scales of 50 ms and
400 ms, respectively. In contrast to Diego & Hamprecht (2013), we included neuronal assemblies
with temporal firing structure. That means cells within an assembly can perform multiple spikes in a
randomly chosen but fixed motif of temporal length up to 30 frames. We used 3 different assemblies
in each sequence. The assembly activity itself was modelled as a Poisson process (Lopes-dos Santos
et al., 2013) with a mean of 0.15 spikes/second and a refractory period of at least the length of
the motif itself. By construction the cell locations as well as the firing motifs are known for these
datasets. In order to simulate the conditions in real calcium imaging videos as good as possible, we
added Gaussian background noise with a relative amplitude (max intensity â mean intensity)/Ïnoise
between 10 and 20. Additionally, spurious spikes not belonging to any motif were added. The amount
16
Published as a conference paper at ICLR 2019
Tab	le 2: Average cosine similarity between ground truth and discovered motifs. The average similarity
together with the standard deviation were computed over 20 different datasets for each noise level,
both for LeMoNADe and SCC. A bootstrap distribution of similarities was computed (see section
C.3). BS-95 gives the 5% significance threshold of this distribution.
after cell extraction
on video data
NOISE LEVEL	LeMoNADe	BS-95	SCC
0%	0.838 Â± 0.066	0.400	0.837 Â± 0.088
10%	0.826 Â± 0.061	0.387	0.826 Â± 0.116
20%	0.804 Â± 0.080	0.402	0.818 Â± 0.120
30%	0.770 Â± 0.130	0.413	0.830 Â± 0.125
40%	0.775 Â± 0.107	0.426	0.822 Â± 0.093
50%	0.756 Â± 0.079	0.477	0.791 Â± 0.126
60%	0.730 Â± 0.098	0.492	0.731 Â± 0.169
70%	0.639 Â± 0.142	0.516	0.636 Â± 0.163
80%	0.462 Â± 0.103	0.553	0.454 Â± 0.135
90%	0.357 Â± 0.034	0.656	0.351 Â± 0.067
of spurious spikes was varied from 0% up to 90% of all spikes in the dataset. For each of the 10 noise
levels 20 datasets were generated.
C.2 Similarity measure
The performance of the algorithms is measured by computing the cosine similarity (Singhal, 2001)
between ground truth motifs and found motifs. The found motifs are in an arbitrary order, not
necessarily corresponding to the order of the ground truth motifs. Additionally, the found motifs can
be shifted in time compared to the ground truth. To account for this fact, we compute the similarity
between the found motifs and each of the ground truth motifs with all possible temporal shifts and
take the maximum. Hence, the similarity between the m-th found motif and the set of ground truth
motifs G is defined by
Sim(Mm, G) = max [	NeC(Mm VeC( (GU	IG âg ,s â {-F,...,F}[	(18)
UVeC(Mm)k2 â kvec( G )k2 1
where Mm is the m-th found motif,ãï¼â¢ãis the dot product and vec(â) vectorizes the motifs with
dimensions F X N into a vector of length F â N, where N is the number of cells. The shift
sâ
operator (â) moves a motif S frames forward in time while keeping the same size and filling missing
values appropriately with zeros (Smaragdis, 2004).
The cosine similarity of the found motifs to the set of ground truth motifs was averaged over all found
motifs and all experiments for each noise level. The average similarities achieved with LeMoNADe
and SCC as well as the 5% significance threshold of the BS distribution for each noise level can be
found in table 2.
C.3 Bootstrap-based significance test
Statistical methods for testing for cell assemblies (or spatio-temporal patterns more generally) have
been advanced tremendously in recent years, addressing many of the issues that have plagued older
approaches (Grun, 2009; Staude et al., 2010a;b; Russo & Durstewitz, 2017). Simple shuffle bootstraps
are not necessarily the best methods if they destroy too much of the auto-correlative structure, and
they can severely underestimate the distributional tails (Davison et al., 1997). Therefore we use
sophisticated parametric, model-based bootstraps which retain the full statistical structure of the
original data, except for the crucial feature of repeating motifs.
In order to provide a ânull hypothesis (H0)â reference for the motif similarities returned by LeMoN-
ADe (or other methods), we used the following bootstrap (BS) based test procedure: We generated
20 datasets analogue to those described in section C.1, i.e. with same spiking statistics and temporal
17
Published as a conference paper at ICLR 2019
0% noise 10% noise 20% noise 30% noise 40% noise 50% noise 60% noise 70% noise 80% noise 90% noise
1?
M
Î²
s
)
2
Â°M 02
1200
IDOO
0.2 M &Â« 04 U
â2 Î²Î 0.Â« M XO
14
12
12
10
10
<
<
Â«
Â«
i.Â« Î±Î² M io
4-
2
âÎ 0.2 0.4
Simil
2
Â°M 0.2
12
3
ion
<Â»
<Â»
Â«n
Â«n
Â«0
28
Î²
Â«
*
2
120
ItU
0.2 dï¼ Î±Î² Î±Î² ï¼å·¥
UZ aâ BÎ Î±.B 14J
M
12
M
Î²
t
*'
2
az uâ
Simil
ÉªÎ¸ 0U 02 o.Â«
Simil
%Î 0.2 B.Â«
Simil
90
Â«
â 
ã2 0.4 Î±Î² Î±Î² u
900
90
in
Â«
Â«n
â 
2M
3z uâ aã
U ÎÎ 0.Â« M U
0.2 M &Â« 04 U
12 0.4 0ï¼ O.fl 10
2S
S
2I
Î²
S
IS
Éªo
)
S
32 u. 4
3Z 0.4
4N 4Â«
9U U M
Simil
Figure 7: Top: Bootstrap distribution for similarity between random patterns. Shown is a sample
from the BS distribution (blue) and the 95% significance threshold (red). Bottom: Distribution
for similarity between patterns found on data which contained repeating motifs. Shown are the
similarities between motifs found with LeMoNADe (lime green) and the ground truth motifs for the
synthetic datasets discussed in the paper, which contained repeating motifs. The 95% significance
threshold of the corresponding BS distribution is indicated as vertical red line.
s








M

convolution with calcium transients, but without repeating motifs. These motif-less H0 datasets were
then processed by LeMoNADe in the very same way as the motif-containing datasets, i.e. with the
parameter settings as shown in table 3. From each of these BS datasets 150 random samples of the
same temporal length as that of the âdetectedâ motifs were drawn. For each BS dataset, the similarities
between each of the found motifs and all of the 150 random samples were computed as described in
section C.2. As datasets with higher noise levels have different spiking statistics, we repeated this
procedure for each of the ten noise levels.
Figure 7 shows the BS distributions (top). We also show the distribution of similarities between
motifs found with LeMoNADe on the datasets which contained motifs (bottom). The 95%-tile
(corresponding to a 5% alpha level) of the BS distribution is displayed as vertical red line. Up to a
noise level of 70% the average of the similarities found on the datasets that contained motifs is much
higher than the 95%-tile of the BS distribution.
D Experiments and results on real data
D. 1 Data generation
Organotypic hippocampal slice cultures were prepared from 7-9-day-old Wistar rats (Charles River
Laboratories, Sulzfeld, Germany) as described by Kann et al. (2003) and Schneider et al. (2015).
Animals were taken care of and handled in accordance with the European directive 2010/63/EU and
with consent of the animal welfare officers at Heidelberg University (license, T96/15).
Slices were infected with adeno-associated virus (AAV) obtained from Penn Vector Core (PA, USA)
encoding GCaMP6f under the control of the CamKII promoter AAV5.CamKII.GCaMPf.WPRE.SV40,
Lot # v5392MI-S). AAV transduction was achieved, under sterile conditions, by applying 0.5Î¼l of
the viral particles solution (qTiter: 1.55e13 GC/ml) on top of the slices.
Slices were maintained on Biopore membranes (Millicell standing inserts; Merck Millipore, Schwal-
bach, Germany) between culture medium. The medium consisted of 50% minimal essential medium,
25% Hankâs balanced salt solution (Sigma-Aldrich, Taufkirchen, Germany), 25% horse serum (Life
Technologies, Darmstadt, Germany), and 2mM L-glutamine (Life Technologie) at pH 7.3, stored in
an incubator (Heracell; Thermoscientific, Dreieich, Germany) with humidified normal atmosphere
(5% CO2, 36.5ãC). The culture medium (1 ml) was replaced three times per week.
Artificial cerebrospinal fluid used for imaging was composed of 129 mM NaCl, 3 mM KCl, 1.25 mM
NaH2PO4, 1.8 mM MgSO4, 1.6 mM CaCl2, 21 mM NaHCO3, and10 mM glucose (Sigma-Aldrich,
Taufkirchen, Germany). The pH of the recording solution was 7.3 when it was saturated with the gas
mixture (95% O2, 5% CO2). Recording temperature was 32 Â± 1Â°C. Constant bath wash of 20Î¼M
(dataset 1) and 10Î¼M (dataset 2) carbachol (Sigma-Aldrich) was performed to enhance neuronal
activity and increase firing probability during imaging (Muller et al., 1988).
18
Published as a conference paper at ICLR 2019
(a) Difference between motif 0 found on real dataset 1 and the constructed synchronous firing pattern.
Ïrvne u Ïrâme Î¹ tÏwne z Ïame j ÏÏame 4 TanlTTanleH Ïrâme / TTanlee TranleV TTanleUI Ïrâme it TTanlolZ Ïrâme lj TTanIe â	Tran1ãis ÏÏâme in Ïrame 1/ TTanIeIfl Ïrvne Î¹y rÏamezu
(b) Difference between motif 0 found on real dataset 2 and the constructed synchronous firing pattern.
Figure 8: Color-coded difference between discovered motifs and intensity modulated synchronous
firing. Red color indicates negative differences, blue positive differences and white zero difference.
The fact that for both datasets in motif 0 some cells are displayed in red over multiple frames shows
that these motifs contain temporal structure beyond mere spiking synchrony.
Imaging of CA3 region of the hippocampus was performed on day 29 with 20x magnification (dataset
1) and on day 30 with 10x magnification (dataset 2) in vitro (23 days post viral infection) from slices
maintained in submerged chamber of Olympus BX51WI microscope. GCaMP6f was excited at
485 Â± 10nm. Fluorescence images (emission at 521 Â± 10nm) were recorded at 6.4H z (dataset 1)
and 4Hz (dataset 2) using a CCD camera (ORCA-ER; Hamamatsu Photonics, Hamamatsu City,
Japan). Before running the analysis We computed âFâF for the datasets. In order to perform the
computations more efficiently, we cropped the outer parts of the images containing no interesting
neuronal activity and doWnsampled dataset 2 by a factor of 0.4.
D.2 Temporal structure plots
In order to shoW that the motifs 0 found in the tWo real datasets contain temporal structure, We
compare them to What the synchronous activity of the participating cells With modulated amplitude
Would look like. The synchronous firing pattern Was constructed as folloWs: First, for the motif Mm
Withm = 1,...,M the maximum projection Pm at each pixel P = 1,...,P â P0 over time was
computed by
and normalized
Ppm = max Mpm with f = 1, .. .,F
m
P m = P	.
P	max0p Pm	'
(19)
(20)
Finally, the synchronous firing pattern Sm for motif m is gained by multiplying this normalized
maximum projection at each time frame f with the maximum intensity of motif m at that frame:
Sm = Pm â max Mm for f =1,...,F .
(21)
Figures 8 shows the difference between the found motif and the constructed synchronous firing
patterns for the motifs found on the two real datasets.
D.3 Comparison to results ob tained with SCC
In order to show that LeMoNADe performs similar to SCC not only on synthetically generated data
but also on real data, we ran both methods on real dataset 2. A well trained neuroscientist manually
extracted the individual cells and calcium traces from the original calcium imaging video. Figure 9a
shows the result obtained with SCC on these traces. In the same manner calcium traces were extraced
from the motif found with LeMoNADe (see figure 9b). Both results in figure 9 are highly similar.
E Parameter settings
LeMoNADe is not more difficult to apply than other motif detection methods for neuronal spike data.
In our experiments, for most of the parameters the default settings worked well on different datasets
and only three parameters need to be adjusted: the maximum number of motifs M, the maximum
19
Published as a conference paper at ICLR 2019
motif 0
frame
Ti
50
40
30
20
10
0
motif 0
1	6	11	16	21
frame
50
40
Â§ 30
â 20
10
0
(a)	Motif obtained with SCC from calcium
traces extracted from dataset 2.
(b)	Traces obtained from the motif found with
LeMoNADe on dataset 2.


16-

Figure 9: Result obtained on the real dataset 2 after manual cell extraction with SCC (a) and the
traces manually extracted from the motif found with LeMoNADe on the original video data (b).
Table 3: Parameters used for the shown experiments. M is the number of motifs, F the maximum
temporal extent of a motif, Î»1 and Î»2 are the temperatures for the relaxed approximate posterior and
prior distributions, a is the location of the BinConcrete prior, b is the number of consecutive frames
analysed in each epoch, and Î²KL is the weight of the KL-regularization term in the loss function. Î²e
is the ensemble-penalty used in SCC.
	M	F	aa	Î»1	Î»2	#epochs	learning rate	b	Î²KL
LeMoNADe on synth. datasets with noise level < 50%	3	31	0.05	0.6	0.5	5000	10-5	500	0.10
LeMoNADe on synth. datasets with noise level â¥ 50%	3	31	0.10	0.6	0.5	5000	10-5	500	0.10
LeMoNADe on real dataset 1	3	21	0.05	0.4	0.3	5000	10-5	150	0.01
LeMoNADe on real dataset 2	3	21	0.01	0.6	0.5	5000	10-5	500	0.10
	M	F	Î²e			#epochs	#inits		
SCC on synth. datasets	3	31	10-4			10	1		
motif length F, and one of the sparsity parameters (e.g. a or âkl). For SCC the user also has to
specify three similar parameters. In addition, SCC requires the previous extraction of a spike matrix
which implies many additional parameters.
Table 3 shows the parameter settings used for the experiments shown in the paper.
E.1 OVER- AND UNDER-ESTIMATION OF THE MAXIMUM NUMBER OF MOTIFS M
In order to show the effects of over- and underestimating the number of motifs, we first use our
synthetic data with existing ground truth and 3 true motifs and run LeMoNADe with underestimated
(M = 1), correct (M = 3) and overestimated (M = 5) number of expected motifs. Figure 10 shows
the complete ground truth (figure 10a) and found motifs for the exemplary synthetic dataset discussed
in the paper. Besides the results for M = 3 (figure 10c) we also show the found motifs for M = 1
(figure 10b) and M = 5 (figure 10d). If the number of motifs is underestimated (M = 1) only one of
the true motifs is captured. When the number of motifs is overestimated (M = 5) the correct motifs
are identified and the surplus filters are filled with (shifted) copies of the true motifs and background
noise.
We also investigated the influence of different numbers of motifs on the results on real datasets.
Figure 11 shows the found motifs on dataset 1 for the different numbers of motifs M = 1, 2, 3, 5.
When the number is limited (as for M = 1), the model is expected to learn those motifs first which
best explain the data. The motif shown in figure 11a also appears if M is increased. This shows that
this motif is highly present in the data. However, as long as only one filter is available the motif also
contains a lot of background noise. The second filter in figure 11b contains a high luminosity artefact
of the data. With its high luminosity and large spacial extent, it explains a lot of the dataset. However,
it can easily be identified as no neuronal assembly. If the number of motifs is further increased to
M = 3 (see figure 11c), more background noise is captured in the additional filter and the motif
becomes cleaner. When the number of motifs is further increased to M = 5, no new motifs appear
20
Published as a conference paper at ICLR 2019
and the surplus two filters seem to be filled up with parts of the structures which were already present
in 11c.
Hence, when the correct number of motifs is unknown (as expected for real datasets) we recommend
to slightly overestimate the expected number of motifs. The result will capture the true motifs plus
some copies of them. In future work, a post-processing step as in Peter et al. (2017) or a group
sparsity regularization as in Bascol et al. (2016) and Mackevicius et al. (2018) could be introduced
to eliminate these additional copies automatically. Background noise could be easily identified
as no motif by either looking at the motif videos or thresholding the found activations. In future
extends of the model we will study the effect of additional latent dimensions for background noise to
automatically separate it from actual motifs.
E.2 OVER- AND UNDER-ESTIMATION OF THE MAXIMUM MOTIF LENGTH F
If the maximum motif length F is underestimated the found motifs are expected to just contain the
part of the motif that reduces the reconstruction error most. Hence in most cases the most interesting
parts of the motifs will be captured but details at either end of the motifs could be lost. If the motif
length is overestimated, the motifs can be captured completely but might be shifted in time. This
shift, however, will be compensated by the motif activations and hence has no negative effect on the
results. In our experiments we achieved good results with a generously chosen motif length. For this
reason we recommend to overestimate the motif length.
Figure 12 shows the found motifs on real dataset 1 with M = 3 and for the different motif lengths
F = 21 and F = 31. The results are highly similar. In both cases, the interesting pattern (motif 0 in
figure 12a and motif 1 in figure 12b, respectively) is captured.
E.3 Sparsity parameter
The parameter a influences the sparsity of the found activations. Smaller values of a will penalize
activations harder and hence often result in cleaner and more meaningful motifs. However, if a is too
small it will suppress the activations completely. For this reason we recommend to perform for each
new dataset experiments with different values of aa. Changing the value of Î²KL is another option to
regulate the sparsity of the activations. However, in our experiments we found that the default value
of Î²KL = 0.1 worked well for many different datasets and varying aa was effective enough. For the
temperature parameters the default values Î»1 = 0.6 and Î»2 = 0.5 worked well in most cases and
changing them is usually not necessary.
In order to show the reaction of the method to the choice of aa and Î²KL we performed multiple
experiments on the real dataset 2 with different parameter settings. We fixed all parameters as shown
in table 3 except for aa (figures 13 and 14) and Î²KL (figures 15 and 16).
When aa is varied within one order of magnitude (see figure 13) the motifs look quite similar - except
for temporal shifts of the motifs and shuffling of the order of the motifs. For smaller values of aa
surplus filters are filled with background noise (see figures 13a to 13d), whereas for a bit larger values
of aa the surplus filters are filled with copies of (parts of) the motif (see figures 13e to 13g). Note that
the motif which was also highlighted in the paper (figure 6d) appears in all results from figure 13b
to 13g at least once. Only if aa is changed by more than one order of magnitude the results become
significantly different and the motif is no longer detected (see figure 14). This indicates that it is
sufficient to vary only the order of magnitude of aa in order to find a regime where motifs appear in
the results and fine tuning aa is not necessary. This strategy is also the recommended strategy to find
an appropriate sparsity parameter in SCC.
A similar behavior can be observed when Î²KL is varied (see figure 15 for changes within an order
of magnitude and figure 16 for larger changes). One can see similar effects as for the variation of aa,
but in the opposite direction: for smaller Î²KL surplus filters are rather filled with copies of the motif
whereas for larger values of Î²KL the surplus filters are filled with background noise. This shows that
it is usually sufficient to only tune one of the two - either aa or Î²KL - in order to achieve good results.
21
PUbliShed as a ConferenCe PaPersICLR 2019
(a) Ground truth motifs

(d) Found motifs for M = 5
Figure 10: Results from the exemplary synthetic dataset discussed in the paper, (a) shows the three ground truth motifs. We also show the results of our analysis with
fixed motif length (F = 31) for the different numbers of motifs M = I (b), M = 3 (c) and M = 5 (d).
PUbliShed as a ConferenCe PaPersICLR 2019
(a) Found motif for M = 1
E
t-I
â
E
frame 0
frame 1
frame 2
frame 3
frame 4
frame 5
frame 6
frame 7
frame 8
frame 9
frame 10 frame 11
frame Iz
frame 13
frame 14
frame 15
frame 16
frame 17
frame 18
frame 19
frame 20
(b) Found motifs for M = 2
frame 0 frame 1
2
3 frame 4 frame 5
frame 9
frame 8
frame 9 frame 10 frame 11 frame 12 frame 13
frame 15
(d) Found motifs for M = 5
Figure 11: Results from dataset 1 with fixed motif length (F = 21) for the different numbers of motifs (a) M = 1, (b) M
frame 6
frame 7
frame 8
frame 13
frame
frame
rame 16
frame 1/
rrame 19
2, (c) M = 3, and (d) M = 5.
(c) Found motifs for M = 3
K
E J=OE
PUbliShed as a ConferenCe PaPersICLR 2019
(b) Found motifs for F = 31
Figure 12: Results from dataset 1 with fixed number of motifs (M = 3) for the different motif lengths (a) F = 21 and (b) F = 31.

Published as a conference paper at ICLR 2019
ObE IMoE HâE
(e) a = 0.040
â´ a = 0.070
O-HOE I-RoE Z-ROE
(g) a = 0.100
Figure 13: Motifs found on real dataset 2 for small changes of a. The parameter a was increased
in steps of 0.003 from a = 0.001 (a) to a = 0.010 (d) and in steps of 0.030 from a = 0.010 (d) to
aa = 0.100 (g).
F Motif videos
In order to give the reader a better impression of what the used data and the motifs extracted as
short video sequences would look like, we provide a few video files containing extracted motifs,
25
Published as a conference paper at ICLR 2019


(b)a 10 2
(c) a = 1
Figure 14: Motifs found on real dataset 2 for huge changes of a. The parameter a was increased by
two orders of magnitude in each step from a = 10-4 (a) to a = 1 (c).
analyzed data and reconstructed videos at https://drive.google.com/drive/folders/
19F76JLn490RzZ4d7GxbWZoq6RdF2nt3w?usp=sharing.
The reconstructed videos are gained by convolving the found motifs with the corresponding found
activations. The videos are provided either in TIFF or MP4 format. Table 4 shows the names of
the files together with short descriptions what each video shows. The videos corresponding to the
synthetic dataset were generated with a frame rate of 30 fps and those corresponding to the real
dataset with 10 fps.
26
Published as a conference paper at ICLR 2019
O-HOE I-RoE Z-UOE O-E I-E Z-IIE
I-ROE Z-ROE
tanÂ«Â«




(g) Î²KL = 0.19
Figure 15: Motifs found on real dataset 2 for small changes of Î²KL. The parameter Î²KL
in steps of 0.03 from Î²KL = 0.01 (a) to Î²KL = 0.19 (g).
was increased
27
Published as a conference paper at ICLR 2019
Figure 16: Motifs found on real dataset 2 for huge changes of Î²KL. The parameter Î²KL was increased
by two orders of magnitude in each step from Î²KL = 10-3 (a) to Î²KL = 10 (c).
Table 4: Attached video files and descriptions. The used parameters for the analysis are the same as
given in table 3 if not mentioned differently. The three different types of video are: motif showing
a single motif; parallel video showing the original video from the dataset (upper left corner) and
reconstructions from the found motifs; and RGB video showing a superposition of RGB values of the
reconstructed videos from the three motifs found on the dataset. Additionally to the synthetic data
example discussed in the paper (with 10% noise spikes), we also provide videos from a synthetic
dataset with 50% spurious spikes.
File name	dataset	video type	number of motifs M	motif length F
real_1_e1_l21_recon.mp4	real dataset 1	parallel video	1	21
real_1_e3_l21_motif_0.tiff	real dataset 1	motif	3	21
real_1_e3_l21_motif_1.tiff	real dataset 1	motif	3	21
real_1_e3_l21_motif_2.tiff	real dataset 1	motif	3	21
real_1_e3_l21_recon.mp4	real dataset 1	parallel video	3	21
real_1_e3_l21_rgb.mp4	real dataset 1	RGB video	3	21
real_1_e3_l31_recon.mp4	real dataset 1	parallel video	3	31
real_1_e5_l21_recon.mp4	real dataset 1	parallel video	5	21
real_2_e3_l21_motif_0.tiff	real dataset 2	motif	3	21
real_2_e3_l21_motif_1.tiff	real dataset 2	motif	3	21
real_2_e3_l21_motif_2.tiff	real dataset 2	motif	3	21
real_2_e3_l21_recon.mp4	real dataset 2	parallel video	3	21
real_2_e3_l21_rgb.mp4	real dataset 2	RGB video	3	21
synth_example_e3_l21_motif_0.tiff	synth. example	motif	3	21
synth_example_e3_l21_motif_1.tiff	synth. example	motif	3	21
synth_example_e3_l21_motif_2.tiff	synth. example	motif	3	21
synth_example_e3_l21_recon.mp4	synth. example	parallel video	3	21
synth_example_e3_l21_rgb.mp4	synth. example	RGB video	3	21
synth_50noise_e3_l21_recon.mp4	synth. with 50% noise	parallel video	3	21
synth_50noise_e3_l21_rgb.mp4	synth. with 50% noise	RGB video	3	21
28