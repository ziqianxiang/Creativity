Figure 1: State probability allocation through stick-breaking in standard rSLDS and the TrSLDS.
Figure 2: TrSLDS applied to model the FitzHugh-Nagumo nonlinear oscillator. (a) The model wastrained on 100 trajectories with random starting points. (b) The model can infer the latent trajectories.
Figure 3: (a) The 50 trajectories used to train the model are plotted where the red "x" displays thestarting point of the trajectory. (b) The inferred latent states are shown, colored by their discretelatent state. (c) We see that the second layer approximates the Lorenz attractor with 2 ellipsoids. Atrajectory from the Lorenz attractor starting at the same initial point is shown for comparison. (d)Going one level lower in the tree, we see that in order to capture the nuances of the dynamics, each ofthe ellipsoids must be split in half. A trajectory from the Lorenz attractor is shown for comparison.
Figure 4: Modeling primary visual cortex spike trains. (top) Example spike raster plots in response toa drifting grating of orientations 150 and 240 degrees. Our data consisted of 200 such trials. (bottom)The average inferred latent trajectories over time for orientations 140 and 150 degrees colored by themost likely discrete latent state. (right top) Same plotted in space. The model is able to separate thelimit cycles for each orientation group (green-yellow vs. red-orange) and refine them further withthe leaf nodes. (right bottom) Two model generated predictive trajectories showing two stable limitcycles that resemble the two periodic orbits.
Figure 5: The logarithm of the joint density was computed for all the samples generated from the 3TrSLDS and smoothed using a trailing moving average filter. The sampler seems to converge to amode rather quickly for all the three instantiations of the TrSLDS.
Figure 6: TrSLDS applied to the synthetic NASCARR example. (left top) The true continuous latentstates colored by their discrete state assignment. (left bottom) TrSLDS is able to infer the continuousand discrete latent states. (middle top) The dynamics were constructed such that the trajectoriesproduced creates an oval track. (middle bottom) Although the partitioning is done through sequentialstick-breaking, TrSLDS is still able to recover the dynamics. (right) We can see that TrSLDS canindeed recover a multi-scale view. The root nodes captures the rotation. The second level seperatesthe track into two rotations of different speeds.
Figure 7: TrSLDS and rSLDS applied to the tree version ofto the synthetic NASCARR . (left top)Thetrue continuous latent states colored by their discrete state assignment. (left bottom) TrSLDS is ableto infer the continuous and discrete latent states. (middle) TrSLDS was able to learn the underlyingdynamics and partitions, indiicating that the sampler is mixing well. (right top)Due to the sequentialnature of rSLDS, the model canâ€™t adequately learn the dynamics of the model. (right bottom) Wecan see from the k-step R2 that TrSLDS outperforms rSLDS.
