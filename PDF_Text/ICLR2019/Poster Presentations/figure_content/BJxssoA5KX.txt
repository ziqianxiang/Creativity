Figure 1: Goal. (a) We seek to predict what will happen after a ball bounces off an everyday surface.
Figure 2: System overview. Our model (left) consists of a Physics Inference Module (top-right) anda Visual Inference Module (bottom-right). See text for more details.
Figure 3: Predicted post-bounce trajectories in novel scenes. (left) Input pre-bounce trajec-tories. (center) Observed post-bounce trajectories. (right) Our predicted post-bounce trajectories.
Figure 4: Inferred COR and collision normals. Given a single still image (first col.), we showinferred COR (second col., warmer colors indicate higher COR values), predicted collision normals(third col., colors indicate normal direction) from VIM and stereo camera surface normals (last col.).
Figure 5: Our collected Bounce Dataset of 5K real-world bounces. Our dataset spans a variety ofreal-world everyday scenes. In each image we mark the location of the observed bounce and showthe estimated coefficient of restitution at the top-left. Larger values correspond to harder surfacessuch as floors and countertops.
Figure 6: Our proposed encoder architecture takes as input a sequence of length T of point clouddata, each containing N points, and outputs a single vector.
Figure 7: Our proposed Core Physics Engine takes as input the encoded pre-bounce trajectory tialong with the physical parameters of the collision surface ρ to predict the encoded post-bouncetrajectory tp .
Figure 8: Forward prediction errors for trajectories belonging to different ranges of estimated COR.
Figure 9: Inferred COR and collision normals. Given a single still image (first col.), we showinferred COR (second col., warmer colors indicate higher COR values), predicted collision normals(third col., colors indicate normal direction) from VIM and stereo camera surface normals (last col.).
Figure 10: Predicted post-bounce trajectories in novel scenes. (left) Input pre-bounce trajecto-ries. (center) Observed post-bounce trajectories. (right) Our predicted post-bounce trajectories.
Figure 11:	We learn to estimate physical parameters of surfaces in a scene by observing bounces atdifferent locations (row 1). Our predictions of collision normals (row 2) and coefficient of restitu-tion (row 3) improve with number of bounces. The quantitative evaluation (row 4) provides strongevidence for the efficacy of our online learning approach.(Best viewed electronically)20Published as a conference paper at ICLR 2019Progressive improvementof COR PredictionProgressive improvementof COR Prediction0.2950.285U δ.更苦0.275P LUΦ φn 0 0.265cc oO 0 0.255o <
Figure 12:	The final predicted COR maps shows the ability of our approach to differentiate soft(pillows, moveable lamp) and rigid objects (edges of chairs and tables). Furthermore, the quanti-tative evaluation of the estimated collision normals and COR shows a strong improving trend withincreasing number of bounces.(Best viewed electronically)21Published as a conference paper at ICLR 2019Figure 13: Online Learning based Predicted post-bounce trajectories. (left) Input pre-bouncetrajectories. (center) Observed post-bounce trajectories. (right) Our predicted post-bounce trajecto-ries. We correctly predict the trajectory in different scenes. Bottom two rows are example failures.
Figure 13: Online Learning based Predicted post-bounce trajectories. (left) Input pre-bouncetrajectories. (center) Observed post-bounce trajectories. (right) Our predicted post-bounce trajecto-ries. We correctly predict the trajectory in different scenes. Bottom two rows are example failures.
