Figure 1: A snippet of a detected bug in RavenDB an open-source C# project. The code has beenslightly simplified. Our model detects correctly that the variable used in the highlighted (yellow) slotis incorrect. Instead, first should have been placed at the slot. We reported this problem whichwas fixed in PR 4138.
Figure 2: EXamPleS of graPh edgeS uSed in Program rePreSentation.
Figure 3:	VarMisuse predictions on slots within a snippet of the SeenProjTest set for theServiceStack project. Additional visualizations are available in Appendix B. The underlined tokensare the correct tokens. The model has to select among a number of string variables at each slot,where all of them represent some kind of path. The GGNN accurately predicts the correct variableusage in 11 out of the 13 slots reasoning about the complex ways the variables interact among them.
Figure 4:	A bug found (yellow) in RavenDB open-source project. The code unnecessarily ensuresthat the buffer is of size length rather than size (which our model predicts as the correct variablehere).
Figure 5:	A bug found (yellow) in the RavenDB open-source project. Although backupFilenameis found to be invalid by IsValidBackup, the user is notified that backupLocation is invalidinstead.
Figure 6: Precision-Recall and ROC curves for the GGNN model on VARMISUSE. Note that the yaxis starts from 50%.
