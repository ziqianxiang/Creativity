Figure 1: AmbientGAN training. The output of the generator is passed through a simulated randommeasurement function fΘ. The discriminator must decide if a measurement is real or generated.
Figure 2: (Left) Samples of lossy measurements used for training. Samples produced by (middle) abaseline that trains from inpainted images, and (right) our model.
Figure 3: Results with Convolve+Noise on celebA (left) and 1D-projections on MNIST (right).
Figure 4: Results with Block-Pixels on celebA. (left) Samples of lossy measurements. Each pixel isblocked independently with probability p = 0.95. Samples produced by (middle) unmeasure-blurbaseline, and (right) our model.
Figure 5: Results on celebA with (a) Keep-Patch, and (b) 1D projections.
Figure 6: Results with Block-Pixels on CIFAR-10. (left) Samples of lossy measurements. Each pixelis blocked independently with probability p = 0.8. Samples produced by (middle) unmeasure-blurbaseline, and (right) our model.
Figure 7: Results on MNIST with WGANGP. (left) Block-Pixels (right) Convolve+Noise6 5 4 3caj。US Uo=dωuu-AmbientGAN (ours)•—∙ ignore•—∙ unmeasure-blurBlock probability (p)Figure 8: Quantitative results on CIFAR-10 with ACWGANGP, Block-Pixels measurement. (left)Inception score vs blocking probability p. (right) Inception score vs training iteration with darknessproportional to 1 - p. Vertical bars indicate 95% confidence intervals.
Figure 8: Quantitative results on CIFAR-10 with ACWGANGP, Block-Pixels measurement. (left)Inception score vs blocking probability p. (right) Inception score vs training iteration with darknessproportional to 1 - p. Vertical bars indicate 95% confidence intervals.
Figure 9:	Results on MNIST with (a) Keep-Patch, and (b) Extract-Patchy 0*⅛c COG,λ5y y qy14 Q O O ʃ OW∕72G67∖/夕 O∕⅞2S7qτj⅛llr∖ 夕4 CT J P =N O。Css O>3¾J^44, 歹 W≠∙.*⅛J3 4 G÷7a7 C- S¾I 3√Z- 7 ⅛ y 5 P 626 7 Γ∙G 3 Aw 500∂,sgqζjA匕夕C3 了VKCnr-<∕qJ43 3949□62∕366 αɔ⅛5 J5
Figure 10:	Results with Convolve+Noise on MNIST. Each image is blurred with a Gaussian kernelof radius 1 pixel and noise of std dev σ is added. Rows from top to bottom have σ = 0.0, 0.1,0.2, and 0.5 respectively. Columns from left to right are: (1) Samples of lossy measurements. (2)Samples produced by ignore baseline. (3) Samples produced by unmeasure-wiener-deconvolutionbaseline. (4) Samples produced by our model.
Figure 11: Results with Block-Pixels on MNIST. Rows from top to bottom have blocking proba-bility 0.1, 0.5, 0.8, 0.9, 0.95 and 0.99 respectively. Columns from left to right are: (1) Samples oflossy measurements. (2) Samples produced by unmeasure-blur baseline. (3) Samples produced byunmeasure-inpaint-total-variation baseline. (4) Samples produced by our model.
Figure 12: Results with Block-Patch on MNIST. (left) Samples of lossy measurements. A ran-domly chosen 14 × 14 patch is set to zero. (middle) Samples produced by unmeasure-navier-stokes-inpainting baseline. (right) Samples produced by the our model.
Figure 13: Results with Convolve+Noise on celebA. Each image is blurred with a Gaussian kernelof radius 1 pixel and noise of std dev σ is added. Rows from top to bottom have σ = 0.0, 0.1, and0.2 respectively. The left column shows samples of lossy measurements. The right column showssamples produced by our model.
Figure 14: Results with Block-Pixels on celebA. Rows from top to bottom have blocking probability0.5, 0.8, 0.9, and 0.98 respectively. The left column shows samples of lossy measurements. Theright column shows samples produced by our model.
Figure 15: Results with Block-Pixels on CIFAR-10. Rows from top to bottom have blocking prob-ability 0.1, 0.5, 0.9, and 0.95 respectively. Columns from left to right are: (1) Samples of lossymeasurements. (2) Samples produced by unmeasure-blur baseline. (3) Samples produced by ourmodel.
Figure 16: MNIST with WGANGP (left) Robustness experiment with Block-Pixels measurement(right) Compressed sensing using AmbientGAN. Vertical bars indicate 95% confidence intervals.
