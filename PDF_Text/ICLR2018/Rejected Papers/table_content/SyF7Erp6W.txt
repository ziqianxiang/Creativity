Table 1: Lap times in seconds for two circuit configurations	HUMAN	AI	AI SETTINGSCIRCUIT 1 (12 tracks)			First lap	2.99 ± 0.46	3.12 ± 0.09	PWM=39% of full speedFinal lap	2.29 ± 0.14	2.52 ± 0.08	Analogies (adaptive speed)Best lap	2.11	2.12 ± 0.05	Bijection (imitation)CIRCUIT 2 (18 tracks)			First lap	4.30 ± 1.16	3.66 ± 0.03	PWM=39% of full speedFinal lap	3.08 ± 0.54	3.13 ± 0.02	Analogies (adaptive speed)Best lap	2.67	2.65 ± 0.02	Bijection (imitation)the mean, except for the best lap which is the shortest lap time among all laps. We noticed thatthe first of eight consecutive laps is always the slowest one for the eight human subjects. The AI,which starts with no previous information, only relies on a safe speed as described in 4.1.1 using aconstant PWM of 39% of the full speed. The analogy-based AI, which does not replay any recordedsamples of a human driving, improves lap times in less than ten laps, even on an unknown track.
Table 2: Comparison of game scores after 10 000 training framesGAME	RANDOM	HUMAN	DQN	AIBreakout	1.7	31.8	1.25±1.02	235.88±74.41Pong	-20.7	9.3	-21.00±0.00	-9.13±4.99The best scores are in the range of 200 points which, after analysis, corresponds to partially de-stroyed rows of bricks. It never destroys all the bricks, as it sometimes misses the ball, especiallywhen it looses the “me”, for instance when the paddle’s size changes or when the paddle disappearsaccording to the basic image processing algorithm. Moreover, we noticed that the movement of the“me” under control of the algorithm sometimes never reaches a steady-state: it oscillates by a fewpixels at a frequency of 5.4 Hz. Our explanation from a control perspective is as follows: the “me”can be approximated by a second-order system, and the control strategy is almost equivalent to aproportional controller. This, in the context of Linear-Time-Invariant (LTI) systems, would alreadyexplain the oscillations. Moreover, the strong non-linearities present both in the control input andthe non-LTI “me” also explain in part these oscillations. The input being quantized to only threevalues (left, nothing, right), the closed-loop system generates a signal similar to limit-cycles. Theseoscillations, in turn, are responsible for many of the balls missed by the algorithm.
