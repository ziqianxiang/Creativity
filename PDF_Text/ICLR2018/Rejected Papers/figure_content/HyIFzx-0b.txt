Figure 1: From orthogonal binary basis to convolutional filters.
Figure 2: Code Tree for OVSF Code GenerationFigure 2 shows the procedure for generating OVSF codes of different lengths as a recursive processin a binary tree (Adachi et al., 1997). Assuming code C with length N on a branch, the two codeson branches leading out of C are derived by arranging C in (C, C) and (C, -C). It is clear fromthis arrangement that C can only be defined for NS that are powers of 2.
Figure 5: Model size and number of operations of BinaryFlex on ImageNet at different configurations. Com-parison against other architectures. Circles represent all the trained configurations of BinaryFlex.
Figure 6: Model size and number of operations of BinaryFlex on ImageNet at different configurations whenvarying the portion of basis generated on-thefly. When off-loading the convolutional filters from the model,i.e. using OVSF basis to generated them on the fly, the model size is drastically reduced.
Figure 7: Scenario where the model doesn not fit in theRAm of the target platform.
Figure 8: Num. of parameters updated during Im-ageNet training.
