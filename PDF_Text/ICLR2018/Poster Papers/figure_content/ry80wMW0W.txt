Figure 1: Execution model for the hierarchical MLMDP (Saxe et al., 2017). a) Beginning at somestart state, the agent will make a transition under P1. This transition may be to an interior, boundary,or subtask state. b) Transitioning into a subtask state is equivalent to entering a state of the higherlayer MLMDP. No ‘real’ time passes during this transition. c) The higher layer MLMDP is thensolved and a next higher layer state is drawn. d) Knowing the next state at the higher layer allows usto specify the reward structure defining the current task at the lower layer. Control is then passedback to the lower layer to achieve this new task. Notice that the details of how this task should besolved are left to the lower layer (one possible trajectory being shown). e) At some point in the futurethe agent may again elect to transition into a subtask state - in this instance the transition is into adifferent subtask corresponding to a different state in the higher layer. f) The higher layer MLMDP issolved, and a next state drawn. This specifies the reward structure for a new task at the lower layer. g)Control is again passed back to the lower layer, which attempts to solve the new task. This processcontinues until the agent transitions into a boundary state.
Figure 2: Intuitive decompositions in structured domains. All colour-plots correspond to thedesirability functions for subtasks overlaid onto the base domains shown in panels a) and e). b,c,d)Subtasks correspond to ‘regions’, distributed patterns over preferred states, rather than single states.
Figure 3: Subtasks discovered in the TAXI problem correspond to intuitive semantics despite thenon-spatial nature of the domain. a) A variant of the standard TAXI domain in which a drivermust navigate between four potential pick-up/drop-off locations in a 5 × 5 grid. b) Learned subtaskdecomposition. Each column corresponds to a subtask. The desirability functions for each subtaskare overlaid onto a factored visualization of the domain in which each 5 × 5 block corresponds to thebase domain with the passenger at a different location. The subtasks have been given intuitive names,although they are autonomously discovered.
Figure 4: A simple recursive procedure for constructing hierarchical subtasks. At each layer, subtasksare uncovered by finding a low-rank approximation to the desirability basis Zl ≈ DlWl . Higherlayers are formed autonomously by defining the subtask transition matrix as a scalar multiple of thedata matrix, Ptl = αlDl. A designer need only specify the decomposition factors kl.
Figure 5: Recursive subtask discovery in a hierarchical domain. (LEFT) By projecting the state ateach layer back into the base domain, it becomes apparent that subtasks correspond to distributedpatterns of preferred states, rather than single goal states. In this way hierarchical subtasks are evermore abstracted in space and time, as higher layers are accessed. Tangibly, where the states at thelowest layer correspond to individual locations, higher layer states correspond to entire rooms, houses,and communities correspondingly. (RIGHT) An abstract representation of ‘subtasks’ as states of ahigher layer MLMDP. A key contribution of this paper is to define an autonomous way of uncoveringthe contents of higher layer states, and the transition structures into these states.
Figure 6: A natural duality exists between the subtasks uncovered by our scheme, and those typicallyuncovered by other methods. a) A filter-stack of four subtasks corresponding to the layer onedecomposition. Here k 1 = 4 and we present the full set of subtasks. Each of the four subtaskscorresponds to one of the four rooms in the domain. b) A hand picked example path through thedomain, chosen to illustrate the changing representation for different domain states in terms of thehigher layer states. This path and does not correspond to a real agent trajectory. c) For each statealong the example path we compute the desirability function zs and approximate it using a linearblend of our subtasks according to Eqn.(6). The task weights are plotted as a function of steps,revealing the change in representation for different states along the example path. d) Agnostic to anyparticular path, we compute the stability function g(s) for each state in the domain. It is immediatelyclear that unstable states, those for which the representation in Dl changes starkly, correspond to‘doorways’.
