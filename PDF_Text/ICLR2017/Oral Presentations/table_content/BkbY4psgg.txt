Table 1: Accuracy on Randomly Generated Problems for Bubble SortLength of Array Non-Recursive Partially Recursive Full Recursive2	100%	100%	100%3	6.7%	23%	100%4	10%	10%	100%8	0%	0%	100%20	0%	0%	100%90	0%	0%	100%We train using the Adam optimizer and use a 2-layer LSTM and task-specific state encoders for theexternal environments, as described in Reed & de Freitas (2016).
Table 2: Accuracy on Randomly Generated Problems for Topological SortNumber of Vertices Non-Recursive Recursive5	6.7%	100%6	6.7%	100%7	3.3%	100%8	0%	100%70	0%	100%Table 3: Accuracy on Randomly Generated Problems for QuicksortLength of Array Non-Recursive Recursive3	100%	100%5	100%	100%7	100%	100%11	73.3%	100%15	60%	100%20	30%	100%22	20%	100%25	3.33%	100%30	3.33%	100%70	0%	100%As mentioned in Section 2.1, we hypothesize the non-recursive programs do not generalize well
Table 3: Accuracy on Randomly Generated Problems for QuicksortLength of Array Non-Recursive Recursive3	100%	100%5	100%	100%7	100%	100%11	73.3%	100%15	60%	100%20	30%	100%22	20%	100%25	3.33%	100%30	3.33%	100%70	0%	100%As mentioned in Section 2.1, we hypothesize the non-recursive programs do not generalize wellbecause they have learned spurious dependencies specific to the training set, such as length of theinput problems. On the other hand, the recursive programs have learned the true program semantics.
Table 4: Accuracy on Randomly Generated Problems for Variant of Bubble SortLength of Array Non-Recursive Recursive2	100%	100%3	100%	100%4	100%	100%5	100%	100%6	90%	100%7	86.7%	100%8	6.7%	100%9	0%	100%10	0%	100%12	0%	100%15	0%	100%70	0%	100%which directly exposes which of the two values pointed to is larger. This modification also enablesus to sort arrays containing arbitrary comparable elements.
