Under review as a conference paper at ICLR 2017
Towards Principled Methods for Training
Generative Adversarial Networks
Martin Arjovsky
Courant Institute of Mathematical Sciences
martinarjovsky@gmail.com
Leon Bottou
Facebook AI Research
leonb@fb.com
Ab stract
The goal of this paper is not to introduce a single algorithm or method, but to
make theoretical steps towards fully understanding the training dynamics of gen-
erative adversarial networks. In order to substantiate our theoretical analysis, we
perform targeted experiments to verify our assumptions, illustrate our claims, and
quantify the phenomena. This paper is divided into three sections. The first sec-
tion introduces the problem at hand. The second section is dedicated to studying
and proving rigorously the problems including instability and saturation that arize
when training generative adversarial networks. The third section examines a prac-
tical and theoretically grounded direction towards solving these problems, while
introducing new tools to study them.
1 Introduction
Generative adversarial networks (GANs)(Goodfellow et al., 2014a) have achieved great success at
generating realistic and sharp looking images. However, they are widely general methods, now
starting to be applied to several other important problems, such as semisupervised learning, stabi-
lizing sequence learning methods for speech and language, and 3D modelling. (Denton et al., 2015;
Radford et al., 2015; Salimans et al., 2016; Lamb et al., 2016; Wu et al., 2016)
However, they still remain remarkably difficult to train, with most current papers dedicated to heuris-
tically finding stable architectures. (Radford et al., 2015; Salimans et al., 2016)
Despite their success, there is little to no theory explaining the unstable behaviour of GAN training.
Furthermore, approaches to attacking this problem still rely on heuristics that are extremely sensitive
to modifications. This makes it extremely hard to experiment with new variants, or to use them
in new domains, which limits their applicability drastically. This paper aims to change that, by
providing a solid understanding of these issues, and creating principled research directions towards
adressing them.
It is interesting to note that the architecture of the generator used by GANs doesn’t differ signifi-
cantly from other approaches like variational autoencoders (Kingma & Welling, 2013). After all, at
the core of it We first sample from a simple prior Z 〜P(Z) and then output our final sample gθ (z),
sometimes adding noise in the end. Always, gθ is a neural network parameterized by θ, and the main
difference is hoW gθ is trained.
Traditional approaches to generative modeling relied on maximizing likelihood, or equivalently min-
imizing the Kullback-Leibler (KL) divergence betWeen our unknoWn data distribution Pr and our
generator’s distribution Pg (that depends of course on θ). If We assume that both distributions are
continuous With densities Pr and Pg , then these methods try to minimize
KL(PrkPg )= P Pr (x)log ⅞τx)dx
X	Pg(x)
This cost function has the good property that it has a unique minimum at Pg = Pr, and it doesn’t
require knoWledge of the unknoWn Pr(x) to optimize it (only samples). HoWever, it is interesting to
see hoW this divergence is not symetrical betWeen Pr and Pg :
1
Under review as a conference paper at ICLR 2017
•	If Pr (x) > Pg (x), then x is a point with higher probability of coming from the data than
being a generated sample. This is the core of the phenomenon commonly described as
‘mode dropping’: when there are large regions with high values of Pr, but small or zero
values in Pg. It is important to note that when Pr (x) > 0 but Pg (x) → 0, the integrand
inside the KL grows quickly to infinity, meaning that this cost function assigns an extremely
high cost to a generator’s distribution not covering parts of the data.
•	If Pr(x) < Pg(x), then x has low probability of being a data point, but high probability of
being generated by our model. This is the case when we see our generator outputting an
image that doesn’t look real. In this case, when Pr(x) → 0 and Pg(x) > 0, we see that the
value inside the KL goes to 0, meaning that this cost function will pay extremely low cost
for generating fake looking samples.
Clearly, if we would minimize KL(Pg kPr) instead, the weighting of these errors would be re-
versed, meaning that this cost function would pay a high cost for generating not plausibly looking
pictures. Generative adversarial networks have been shown to optimize (in its original formulation),
the Jensen-shannon divergence, a symmetric middle ground to this two cost functions
JSD(PrkPg) = 2 KL(PrkPA) + 2 KL(Pg ∣∣Pa)
P +P
where PA is the average distribution, With density r2 g. An impressive experimental analysis
of the similarities, uses and differences of these divergences in practice can be seen at Theis et al.
(2016). It is indeed conjectured that the reason of GANs success at producing reallistically looking
images is due to the switch from the traditional maximum likelihood approaches. (Theis et al., 2016;
Huszar, 2015). However, the problem is far from closed.
Generative adversarial networks are formulated in two steps. We first train a discriminator D to
maximize
L(D, gθ) = Ex〜Pr [log D(x)] + Ex〜Pg [log(1 - D(x))]	(1)
One can show easily that the optimal discriminator has the shape
D*(x)
Pr(X)
Pr (x) + Pg (x)
(2)
and that L(D*,gθ) = 2JSD(Pr∣∣Pg) - 2log2, so minimizing equation (1) as a function of θ yields
minimizing the Jensen-Shannon divergence when the discriminator is optimal. In theory, one would
expect therefore that we would first train the discriminator as close as we can to optimality (so the
cost function on θ better approximates the JSD), and then do gradient steps on θ, alternating these
two things. However, this doesn’t work. In practice, as the discriminator gets better, the updates
to the generator get consistently worse. The original GAN paper argued that this issue arose from
saturation, and switched to another similar cost function that doesn’t have this problem. However,
even with this new cost function, updates tend to get worse and optimization gets massively unstable.
Therefore, several questions arize:
• Why do updates get worse as the discriminator gets better? Both in the original and the
new cost function.
• Why is GAN training massively unstable?
• Is the new cost function following a similar divergence to the JSD? If so, what are its
properties?
• Is there a way to avoid some of these issues?
The fundamental contributions of this paper are the answer to all these questions, and perhaps more
importantly, to introduce the tools to analyze them properly. We provide a new direction designed to
avoid the instability issues in GANs, and examine in depth the theory behind it. Finally, we state a
series of open questions and problems, that determine several new directions of research that begin
with our methods.
2
Under review as a conference paper at ICLR 2017
2 Sources of instability
The theory tells us that the trained discriminator will have cost at most 2 log 2 - 2J S D(Pr kPg).
However, in practice, if we just train D till convergence, its error will go to 0, as observed in
Figure 1, pointing to the fact that the JSD between them is maxed out. The only way this can
happen is if the distributions are not continuous1, or they have disjoint supports.
One possible cause for the distributions not to be continuous is if their supports lie on low dimen-
sional manifolds. There is strong empirical and theoretical evidence to believe that Pr is indeed
extremely concentrated on a low dimensional manifold (Narayanan & Mitter, 2010). As of Pg , we
will prove soon that such is the case as well.
In the case of GANs, Pg is defined via sampling from a simple prior Z 〜p(z), and then applying a
function g : Z → X, so the support ofPg has to be contained in g(Z). If the dimensionality of Z is
less than the dimension of X (as is typically the case), then it’s imposible for Pg to be continuous.
This is because in most cases g(Z) will be contained in a union of low dimensional manifolds, and
therefore have measure 0 in X. Note that while intuitive, this is highly nontrivial, since having an n-
dimensional parameterization does absolutely not imply that the image will lie on an n-dimensional
manifold. In fact, there are many easy counterexamples, such as Peano curves, lemniscates, and
many more. In order to show this for our case, we rely heavily on g being a neural network, since
we are able to leverage that g is made by composing very well behaved functions. We now state this
properly in the following Lemma:
Lemma 1. Let g : Z → X be a function composed by affine transformations and pointwise nonlin-
earities, which can either be rectifiers, leaky rectifiers, or smooth strictly increasing functions (such
as the sigmoid, tanh, softplus, etc). Then, g(Z) is contained in a countable union of manifolds of
dimension at most dim Z. Therefore, if the dimension of Z is less than the one of X, g(Z) will be a
set of measure 0 in X .
Proof. See Appendix A.	□
Driven by this, this section shows that if the supports of Pr and Pg are disjoint or lie in low dimen-
sional manifolds, there is always a perfect discriminator between them, and we explain exactly how
and why this leads to an unreliable training of the generator.
2.1	The perfect discrimination theorems
For simplicity, and to introduce the methods, we will first explain the case where Pr and Pg have
disjoint supports. We say that a discriminator D : X → [0, 1] has accuracy 1 if it takes the value 1
on a set that contains the support ofPr and value 0 on a set that contains the support ofPg. Namely,
Pr [D(x) = 1] = 1 and Pg [D(x) = 0] = 1.
Theorem 2.1.	If two distributions Pr and Pg have support contained on two disjoint compact sub-
sets M and P respectively, then there is a Smooth optimal discrimator D* : X → [0,1] that has
accuracy 1 and VχD*(x) = 0 for all X ∈ M∪P.
Proof. The discriminator is trained to maximize
Ex〜Pr [log D(x)] + Ex〜Pg [log(1 - D(x))]
Since M and P are compact and disjoint, 0 < δ = d(P, M) the distance between both sets. We
now define
M = {x : d(x,M) ≤ δ∕3}
P= {x : d(x,P) ≤ δ∕3}
1 ʌ 1 r∙ ∙ . ∙	i' ¢-	1	.Λ . 7^∖	1 Tl*	1	1 -t. . .	.	. EI	ɪ`	-t T T	1 ，
By definition of δ we have that P and M are clearly disjoint compact sets. Therefore, by Urysohn’s
smooth lemma there exists a smooth function D* : X → [0,1] such that D*∣λm ≡ 1 and D*∣p^ ≡ 0.
Since log D*(x) = 0 for all X in the support of Pr and log(1 一 D*(x)) = 0 for all X in the support
of Pg , the discriminator is completely optimal and has accuracy 1. Furthermore, let x be in M ∪ P.
If we assume that X ∈ M, there is an open ball B = B(X, δ∕3) on which D* |B is constant. This
shows that VxD*(x) ≡ 0. Taking X ∈ P and working analogously We finish the proof.	□
1By continuous we will actually refer to an absolutely continuous random variable (i.e. one that has a
density), as it typically done. For further clarification see Appendix B.
3
Under review as a conference paper at ICLR 2017
Figure 1: First, we trained a DCGAN for 1, 10 and 25 epochs. Then, with the generator fixed
we train a discriminator from scratch. We see the error quickly going to 0, even with very few
iterations on the discriminator. This even happens after 25 epochs of the DCGAN, when the samples
are remarkably good and the supports are likely to intersect, pointing to the non-continuity of the
distributions. Note the logarithmic scale. For illustration purposes we also show the accuracy of the
discriminator, which goes to 1 in sometimes less than 50 iterations. This is 1 even for numerical
precision, and the numbers are running averages, pointing towards even faster convergence.
In the next theorem, we take away the disjoint assumption, to make it general to the case of two
different manifolds. However, if the two manifolds match perfectly on a big part of the space, no
discriminator could separate them. Intuitively, the chances of two low dimensional manifolds having
this property is rather dim: for two curves to match in space in a specific segment, they couldn’t be
perturbed in any arbitrarilly small way and still satisfy this property. To do this, we will define the
notion of two manifolds perfectly aligning, and show that this property never holds with probability
1 under any arbitrarilly small perturbations.
Definition 2.1. We first need to recall the definition of transversallity. LetM andP be two boundary
free regular submanifolds of F , which in our cases will simply be F = Rd. Let x ∈ M ∩ P be
an intersection point of the two manifolds. We say that M and P intersect transversally in x if
TxM + TxP = TxF, where TxM means the tangent space of M around x.
Definition 2.2. We say that two manifolds without boundary M and P perfectly align if there is
an x ∈ M ∩ P such that M and P don’t intersect transversally in x.
We shall note the boundary and interior of a manifold M by ∂M and Int M respectively. We say
that two manifolds M and P (with or without boundary) perfectly align if any of the boundary free
manifold pairs (Int M, Int P), (Int M, ∂P), (∂M, Int P) or (∂M, ∂P) perfectly align.
The interesting thing is that we can safely assume in practice that any two manifolds never perfectly
align. This can be done since an arbitrarilly small random perturbation on two manifolds will lead
them to intersect transversally or don’t intersect at all. This is precisely stated and proven in Lemma
2.
As stated by Lemma 3, if two manifolds don’t perfectly align, their intersection L = M ∩ P will
be a finite union of manifolds with dimensions strictly lower than both the dimension of M and the
one of P.
Lemma 2. LetM andP be two regular submanifolds ofRd that don’t have full dimension. Letη, η0
be arbitrary independent continuous random variables. We therefore define the perturbed manifolds
as M = M + η and P = P + η0. Then
Pη,η0 (M does not perfectly align with P) = 1
Proof. See Appendix A.
□
4
Under review as a conference paper at ICLR 2017
Lemma 3. Let M and P be two regular submanifolds of Rd that don’t perfectly align and don’t
have full dimension. Let L = M ∩ P. If M and P don’t have boundary, then L is also a manifold,
and has strictly lower dimension than both the one of M and the one of P. If they have boundary,
L is a union of at most 4 strictly lower dimensional manifolds. In both cases, L has measure 0 in
both M and P.
Proof. See Appendix A.	□
We now state our perfect discrimination result for the case of two manifolds.
Theorem 2.2.	Let Pr and Pg be two distributions that have support contained in two closed mani-
folds M and P that don’t perfectly align and don’t have full dimension. We further assume that Pr
and Pg are continuous in their respective manifolds, meaning that if there is a set A with measure
0 in M, then Pr (A) = 0 (and analogously for Pg). Then, there exists an optimal discriminator
D* : X → [0,1] that has accuracy 1 and for almost any X in M or P, D* is smooth in a neigh-
bourhood of x and VχD* (x) = 0.
Proof. By Lemma 3 we know that L = M ∩ P is strictly lower dimensional than both M and P,
and has measure 0 on both of them. By continuity, Pr(L) = 0 andPg(L) = 0. Note that this implies
the support of Pr is contained in M \ L and the support of Pg is contained in P \ L.
Let x ∈ M \ L. Therefore, x ∈ Pc (the complement of P) which is an open set, so there exists a
ball of radius Ex such that B(χ, Ex) ∩ P = 0. This way, We define
M= U B(x,Ex∕3)
x∈M∖L
We define P analogously. Note that by construction these are both open sets on Rd. Since M\L ⊆
M, and P \ L ⊆ P, the support of Pr and Pg is contained in M and P respectively. As well by
construction, M ∩ P = 0.
Let US define D*(x) = 1 for all X ∈ M, and 0 elsewhere (clearly including P. Since log D*(x) = 0
for all x in the support of Pr and log(1 — D*(x)) = 0 for all X in the support of Pg, the discriminator
is completely optimal and has accuracy 1. Furthermore, let x ∈ M. Since M is an open set and
D* is constant on M, then VxD*∣M ≡ 0. Analogously, VxD*∣p^ ≡ 0. Therefore, the set of
points where D* is non-smooth or has non-zero gradient inside M ∪ P is contained in L, which has
null-measure in both manifolds, therefore concluding the theorem.	□
These two theorems tell us that there are perfect discriminators which are smooth and constant
almost everywhere in M and P. The fact that the discriminator is constant in both manifolds points
to the fact that we won’t really be able to learn anything by backproping through it, as we shall see
in the next subsection. To conclude this general statement, we state the following theorem on the
divergences ofPr and Pg, whose proof is trivial and left as an exercise to the reader.
Theorem 2.3.	Let Pr and Pg be two distributions whose support lies in two manifolds M and P
that don’t have full dimension and don’t perfectly align. We further assume that Pr and Pg are
continuous in their respective manifolds. Then,
JSD(PrkPg) =log2
KL(PrkPg) =+∞
KL(PgkPr) =+∞
Note that these divergences will be maxed out even if the two manifolds lie arbitrarilly close to each
other. The samples of our generator might look impressively good, yet both KL divergences will
be infinity. Therefore, Theorem 2.3 points us to the fact that attempting to use divergences out of
the box to test similarities between the distributions we typically consider might be a terrible idea.
Needless to say, if these divergencies are always maxed out attempting to minimize them by gradient
descent isn’t really possible. We would like to have a perhaps softer measure, that incorporates a
notion of distance between the points in the manifolds. We will come back to this topic later in
section 3, where we explain an alternative metric and provide bounds on it that we are able to
analyze and optimize.
5
Under review as a conference paper at ICLR 2017
2.2 The consequences, and the problems of each cost function
Theorems 2.1 and 2.2 showed one very important fact. If the two distributions we care about have
supports that are disjoint or lie on low dimensional manifolds, the optimal discriminator will be
perfect and its gradient will be zero almost everywhere.
2.2.1	The original cost function
We will now explore what happens when we pass gradients to the generator through a discriminator.
One crucial difference with the typical analysis done so far is that we will develop the theory for an
approximation to the optimal discriminator, instead of working with the (unknown) true discrimi-
nator. We will prove that as the approximaton gets better, either we see vanishing gradients or the
massively unstable behaviour we see in practice, depending on which cost function we use.
In what follows, we denote by kDk the norm
l∣Dk = SUp |D(x)| + l∣VχD(x)k2
x∈X
The use of this norm is to make the proofs simpler, but could have been done in another Sobolev
norm ∣∣ ∙ ∣∣ι,p for P < ∞ covered by the universal approximation theorem in the sense that We can
guarantee a neural network approximation in this norm (Hornik, 1991).
Theorem 2.4 (Vanishing gradients on the generator). Let gθ : Z → X be a differentiable func-
tion that induces a distribution Pg. Let Pr be the real data distribution. Let D be a differen-
tiable discriminator. Ifthe conditions of Theorems 2.1 or 2.2 are satisfied, ∣∣D 一 D*∣ < G and
Ez〜p(z) [k Jθgθ(z)k2] ≤ M2,2 then
∣∣VθEz〜p(z)[log(1 - D(gθ(z)))]∣2 < MT-I
Proof. In both proofs of Theorems 2.1 and 2.2 we showed that D* is locally 0 on the support of Pg.
Then, using Jensen’s inequality and the chain rule on this support We have
∣VθEz〜p(z)[log(1 - D(gθ(z)))]∣2 ≤ Ez〜p(z)
≤ Ez〜p(z)
< Ez〜p(z)
≤
M2
一∣VθD(gθ(z))k2 -
W- D(gθ(z))l2 一
一∣VχD(gθ(z))∣2kJθgθ(z)k2 ^
一 |1一 D(gθ(z))∣2	-
"(∣VχD*(gθ (z))∣2 + e)2∣Jθ gθ (z)k2
(|1一 D*(gθ(z))∣-e)2
e2∣Jθ gθ (z)l2
(1一拼
(1一拼
2
Taking square root of everything we get
∣VθEz〜p(z)[log(1 - D(gθ(z)))]∣2 < MI—
1一
finishing the proof
□
Corollary 2.1. Under the same assumptions of Theorem 2.4
Il lim	VθEz〜p(z)[log(1 - D(gθ(z)))] = 0
∣∣D-D*k→0	、/
2Since M can depend on θ, this condition is trivially verified for a uniform prior and a neural network. The
case of a Gaussian prior requires more work because we need to bound the growth on z, but is also true for
current architectures.
6
Under review as a conference paper at ICLR 2017
Figure 2: First, we trained a DCGAN for 1, 10 and 25 epochs. Then, with the generator fixed we
train a discriminator from scratch and measure the gradients with the original cost function. We see
the gradient norms decay quickly, in the best case 5 orders of magnitude after 4000 discriminator
iterations. Note the logarithmic scale.
This shows that as our discriminator gets better, the gradient of the generator vanishes. For com-
pleteness, this was experimentally verified in Figure 2. The fact that this happens is terrible, since
the fact that the generator’s cost function being close to the Jensen Shannon divergence depends on
the quality of this approximation. This points us to a fundamental: either our updates to the discrim-
inator will be inacurate, or they will vanish. This makes it difficult to train using this cost function,
or leave up to the user to decide the precise amount of training dedicated to the discriminator, which
can make GAN training extremely hard.
2.2.2	THE - logD ALTERNATIVE
To avoid gradients vanishing when the discriminator is very confident, people have chosen to use a
different gradient step for the generator.
∆θ = VeEz〜p(z) [- logD(gθ(z))]
We now state and prove for the first time which cost function is being optimized by this gradient
step. Later, we prove that while this gradient doesn’t necessarily suffer from vanishing gradients,
it does cause massively unstable updates (that have been widely experienced in practice) under the
prescence of a noisy approximation to the optimal discriminator.
Theorem 2.5. Let Pr and Pgθ be two continuous distributions, with densities Pr and Pgθ
tively. Let D*
Pr
Pgθ0 +Pr
be the optimal discriminator, fixed for a value θ03. Therefore,
respec-
Ez〜p(z) [-VθlogD(gθ(z))∣θ=θo] = Vθ [KL(PgθkPr) - 2JSD(PgθkPr)]入。	(3)
Before diving into the proof, let’s look at equation (3) for a second. This is the inverted KL minus
two JSD. First of all, the JSDs are in the opposite sign, which means they are pushing for the
distributions to be different, which seems like a fault in the update. Second, the KL appearing in
the equation is KL(PgkPr), not the one equivalent to maximum likelihood. As we know, this KL
assigns an extremely high cost to generating fake looking samples, and an extremely low cost on
mode dropping; and the JSD is symetrical so it shouldn’t alter this behaviour. This explains what
we see in practice, that GANs (when stabilized) create good looking samples, and justifies what is
commonly conjectured, that GANs suffer from an extensive amount of mode dropping.
3This is important since when backpropagating to the generator, the discriminator is assumed fixed
7
Under review as a conference paper at ICLR 2017
Proof. We already know by Goodfellow et al. (2014a) that
Ez 〜p(z) [Vθ Iog(I- D (gθ (Z)))lθ=θo] = Vθ 2 JSD(Pgθ kPr )lθ=θo
Furthermore, as remarked by Huszar (2016),
KL(PgθkPr)= Ex〜Pgθ logPPgθ(X)
Pgθ0 (x)	Pgθ (x)
=Ex〜％ 悭 η^(χy] - Ex〜％ [log pθjχyJ
_	「-	D* (x) 1	_____ .
=-Ex〜Pgθ log i - d*(x)	- KL(PgθkPgθο)
=-Ez~p(z) [log 1 DDgθgZ)Z)) ] - KL(PgθkPgθο)
Taking derivatives in θ at θ0 we get
VθKL(Pgθ kPr)∣θ=θο = -VθEz〜p(z) log 1 DDg(gZ)Z)) Iθ=θ0 -VθKL(PgθkPgθ0)∣θ=θ0
Γ v7 1	D*(gθ(Z)) ] i
=Ez~p(Z)卜vθ log1 - D*(gθ(z)) J lθ=θ0
Substracting this last equation with the result for the JSD, We obtain our desired result.	□
We now turn to our result regarding the instability ofa noisy version of the true distriminator.
Theorem 2.6 (Instability of generator gradient updates). Let gθ : Z → X be a differentiable
function that induces a distribution Pg. Let Pr be the real data distribution, with either conditions
of Theorems 2.1 or 2.2 satisfied. Let D be a discriminator such that D* — D = E is a centered
Gaussian process indexed by x and independent for every x (popularly known as white noise) and
VxD* - VxD = r another independent centered Gaussian process indexed by x and independent
for every x. Then, each coordinate of
Ez〜p(z) [-Vθ log D(gθ(z))]
is a centered Cauchy distribution with infinite expectation and variance.4
Proof. Let us remember again that in this case D is locally constant equal to 0 on the support of Pg .
We denote r(Z), E(Z) the random variables r(gθ(Z)), E(gθ(Z)). By the chain rule and the definition
of r, E, we get
Ez〜p(z) [-Vθ logD(gθ(z))] = Ez〜p(z)
Jθ gθ (Z)VxD(gθ (Z))"
D(gθ(Z))	.
Jθgθ(Z)r(Z)
E(Z)	.
Since r(Z) is a centered Gaussian distribution, multiplying by a matrix doesn’t change this fact.
Furthermore, when we divide by E(Z), a centered Gaussian independent from the numerator, we get
a centered Cauchy random variable on every coordinate. Averaging over Z the different independent
Cauchy random variables again yields a centered Cauchy distribution. 5	□
4 Note that the theorem holds regardless of the variance of r and . As the approximation gets better, this
error looks more and more as centered random noise due to the finite precision.
5A note on technicality: when is defined as such, the remaining process is not measurable in x, so we
can’t take the expectation in z trivially. This is commonly bypassed, and can be formally worked out by stating
the expectation as the result of a stochastic differential equation.
8
Under review as a conference paper at ICLR 2017
Figure 3: First, we trained a DCGAN for 1, 10 and 25 epochs. Then, with the generator fixed we
train a discriminator from scratch and measure the gradients with the - log D cost function. We
see the gradient norms grow quickly. Furthermore, the noise in the curves shows that the variance
of the gradients is also increasing. All these gradients lead to updates that lower sample quality
notoriously.
Note that even if we ignore the fact that the updates have infinite variance, we still arrive to the fact
that the distribution of the updates is centered, meaning that if we bound the updates the expected
update will be 0, providing no feedback to the gradient.
Since the assumption that the noises of D and VD are decorrelated is albeit too strong, We show
in Figure 3 how the norm of the gradient grows drastically as we train the discriminator closer to
optimality, at any stage in training of a well stabilized DCGAN except when it has already con-
verged. In all cases, using this updates lead to a notorious decrease in sample quality. The noise in
the curves also shows that the variance of the gradients is increasing, which is known to delve into
slower convergence and more unstable behaviour in the optimization (Bottou et al., 2016).
3 Towards softer metrics and distributions
An important question now is how to fix the instability and vanishing gradients issues. Something
we can do to break the assumptions of these theorems is add continuous noise to the inputs of the
discriminator, therefore smoothening the distribution of the probability mass.
Theorem 3.1.	If X has distribution PX with support on M and is an aboslutely continuous
distribution with density P, then PX+ is absolutely continuous with density
PX+(x) =
Ey~Pχ[P(x - y)]
P(x - y) dPX (y)
Proof. See Appendix A.	□
Corollary 3.1.	• If e 〜N(0, σ2I) then
1	ky-xk2
Pχ+e(x) = Z Le--^ dPx(y)
•	If e 〜N(0, Σ) then
Pχ+e(x) = 1 Ey〜PXhe-2 ky - Xkm i
9
Under review as a conference paper at ICLR 2017
•	If Pe(X) H kxk1d+ι then
PX+e(x) = ZZ Ey 〜PX
-	1	-
J∣χ - ykd+1.
This theorem therefore tells us that the density PX+e (x) is inversely proportional to the average
distance to points in the support of PX , weighted by the probability of these points. In the case
of the support of PX being a manifold, we will have the weighted average of the distance to the
points along the manifold. How we choose the distribution of the noise E will impact the notion
of distance we are choosing. In our corolary, for example, we can see the effect of changing the
covariance matrix by altering the norm inside the exponential. Different noises with different types
of decays can therefore be used.
Now, the optimal discriminator between Pg+e and Pr+e is
D*( ) = ____Pr+e(X)_____
(X)= Pr+e(x)+ Pg+e(x)
and we want to calculate what the gradient passed to the generator is.
Theorem 3.2.	Let Pr and Pg be two distributions with support on M and P respectively, with
E 〜N(0, σ21). Then, the gradient passed to the generator has theform
Ez〜p(z) [Vθ log(1- D*(gθ(z)))]
(4)
Ez〜p(z) a(Z) /
M
Pe (gθ (z) - y)Vθ ∣gθ (z) - y ∣2 dPr (y)
- b(z) P
Pe(gθ(z) - y)Vθ ∣gθ(z) - y∣2 dPg(y)
where a(z) and b(z) are positive functions. Furthermore, b > a if and only if Pr+e > Pg+e, and
b < a if and only if Pr+e < Pg+e.
This theorem proves that we will drive our samples gθ(z) towards points along the data manifold,
weighted by their probability and the distance from our samples. Furthermore, the second term
drives our points away from high probability samples, again, weighted by the sample manifold and
distance to these samples. This is similar in spirit to contrastive divergence, where we lower the free
energy of our samples and increase the free energy of data points. The importance of this term is seen
more clearly when we have samples that have higher probability of coming from Pg than from Pr .
In this case, we will have b > a and the second term will have the strength to lower the probability
of this too likely samples. Finally, if there’s an area around X that has the same probability to come
from Pg than Pr , the gradient contributions between the two terms will cancel, therefore stabilizing
the gradient when Pr is similar to Pg .
There is one important problem with taking gradient steps exactly of the form (4), which is that
in that case, D will disregards errors that lie exactly in g(Z), since this is a set of measure 0.
However, g will be optimizing its cost only on that space. This will make the discriminator extremely
susceptible to adversarial examples, and will render low cost on the generator without high cost on
the discriminator, and lousy meaningless samples. This is easilly seen when we realize the term
inside the expectation of equation (4) will be a positive scalar times Vx log(1 一 D*(x))Vθgθ(z),
which is the directional derivative towards the exact adversarial term of Goodfellow et al. (2014b).
Because of this, it is important to backprop through noisy samples in the generator as well. This
will yield a crucial benefit: the generator’s backprop term will be through samples on a set of
positive measure that the discriminator will care about. Formalizing this notion, the actual gradient
through the generator will now be proportional to VθJSD(Pr+e ∣Pg+e), which will make the two
noisy distributions match. As we anneal the noise, this will make Pr and Pg match as well. For
completeness, we show the smooth gradient we get in this case. The proof is identical to the one of
Theorem 3.2, so we leave it to the reader.
10
Under review as a conference paper at ICLR 2017
Corollary 3.2. Let e, e'〜N(0, σ21) and gθ (Z) = gθ (Z) + e', then
Ez〜p(z)e [Vθ log(1- D(Gθ(z)))]
(5)
Ez〜p(z),e0 a(Z) /
M
Pe(gθ (Z)- y)vθ kgθ (Z)- yk2 dPr (y)
- b(Z) P
Pe(Oθ (Z)- y)vθ kgθ(Z)- yk2 dPg (y)
2VθJSD(Pr+e kPg+e)
In the same as with Theorem 3.2, a and b will have the same properties. The main difference is
that we will be moving all our noisy samples towards the data manifold, which can be thought of
as moving a small neighbourhood of samples towards it. This will protect the discriminator against
measure 0 adversarial examples.
Proof of theorem 3.2. Since the discriminator is assumed fixed when backproping to the generator,
the only thing that depends on θ is gθ(Z) for every Z. By taking derivatives on our cost function
Ez〜p(z) [Vθ log(1- D飞gθ(z)))]
Ez 〜p(z)
vθ log
Pg+e(gθ(Z))	一
Pr+e(gθ (Z)) + Pg+e(gθ (Z))_
Ez 〜p(z) [Vθ log Pg+e(gθ (z)) - Vθ log (Pg+e(gθ (z)) + Pr+e(gθ (z)))]
vθPg+e(gθ(Z))	vθPg+e(gθ(Z)) + vθPr+e(gθ(Z))
— ----:--:——— — --------:--:  -------:--:  ---
Pg+e(gθ(Z))	Pg+e (gθ (Z)) + Pr+e(gθ(Z))
Ez 〜P(Z) ]pg+e(gθ (Z))+ P+e(gθ (Z))	[-^+^ (Z))]-
____________1____________Pr+e(gθ (Z))
Pg+e(gθ(Z)) + Pr+e(gθ (Z)) Pg+e(gθ (Z))
Vθ [-Pg+e (gθ (Z))]
Let the density of be
1	-kχk2	…	I C
Z e 2σ2 . We now define
a(Z) = 2σ2 Pg+e(gθ (z))+ Pr+e(gθ (Z))
b(Z) = J 1 pr+e(gθ (Z))
2σ2 pg+e(gθ (z)) + Pr+e(gθ (z)) pg+e(gθ (z))
Trivially, a and b are positive functions. Since b = app+, We know that b > a if and only if
Pr+e > Pg+e, and b < a if and only if Pr+e < Pg+e as we wanted. Continuing the proof, we know
Ez〜p(z) [Vθ log(1- D*(gθ(z)))]
=Ez〜p(z) [2σ2a(z)Vθ[-Pr+e(gθ(z))] - 2σ2b(z)Vθ[-Pg+e(gθ(z))]
Ez 〜p(z)
1 , k f	1	-kgθ(Z)-yk2	1	1	1 -kgθ(Z)-yk2
2σ2a(z) J	-VθZe	2σ2	dPr(y) - 2σ2b(z) J -VθZe	2σ2	dPg(y)
Ez 〜p(z) a(Z)
1	1	-k gθ(Z) -y k2	0
L Ze	2σ2	vθkgθ(z) - yk2 dPr(y)
1 -kgθ (z)-yk22
-b(z) JP Ze —2σ2	Vθ∣∣gθ(z) - yk2 dPg(y)
Ez 〜p(z)
a(Z)	Pe(gθ(Z) - y)Vθkgθ(Z) - yk2 dPr(y)
- b(Z)	Pe(gθ(Z) - y)Vθ kgθ (Z) - yk2dPg(y)
P
Finishing the proof.
□
11
Under review as a conference paper at ICLR 2017
An interesting observation is that if we have two distributions Pr and Pg with support on manifolds
that are close, the noise terms will make the noisy distributions Pr+ and Pg+ almost overlap, and
the JSD between them will be small. This is in drastic contrast to the noiseless variants Pr and Pg,
where all the divergences are maxed out, regardless of the closeness of the manifolds. We could
argue to use the JSD of the noisy variants to measure a similarity between the original distributions,
but this would depend on the amount of noise, and is not an intrinsic measure ofPr and Pg. Luckilly,
there are alternatives.
Definition 3.1. We recall the definition of the Wasserstein metric W(P, Q) for P and Q two distri-
butions over X . Namely,
W(P,Q) = inf
γ∈Γ
/
X×X
kx - yk2dγ(x, y)
where Γ is the set of all possible joints on X × X that have marginals P and Q.
The Wasserstein distance also goes by other names, most commonly the transportation metric and
the earth mover’s distance. This last name is most explicative: it’s the minimum cost of transporting
the whole probability mass of P from its support to match the probability mass of Q on Q’s support.
This identification of transporting points from P to Q is done via the coupling γ . We refer the reader
to Villani (2009) for an in-depth explanation of these ideas. It is easy to see now that the Wasserstein
metric incorporates the notion of distance (as also seen inside the integral) between the elements in
the support of P and the ones in the support of Q, and that as the supports of P and Q get closer and
closer, the metric will go to 0, inducing as well a notion of distance between manifolds.
Intuitively, as we decrease the noise, PX and PX+ become more similar. However, it is easy to see
again that J SD(PX kPX+) is maxed out, regardless of the amount of noise. The following Lemma
shows that this is not the case for the Wasserstein metric, and that it goes to 0 smoothly when we
decrease the variance of the noise.
Lemma 4. If is a random vector with mean 0, then we have
W(PX,Pχ+e) ≤ V1
where V = E[kk22] is the variance of .
Proof. LetX 〜PX, and y = X + E with E independent from x. We call Y the joint of (x,y), which
clearly has marginals PX and PX+ . Therefore,
W(PX,PX+) ≤ kX - yk2dγ(X, y)
=Ex〜PXEy〜χ+e[∣∣χ - y∣∣2]
=Ex 〜PX Ey 〜x+e[kEk2]
=Ex 〜PX Ee[∣∣E∣∣2]
= E[kEk2]
≤ Ee [kEk2] 2 = V2
where the last inequality was due to Jensen.
□
We now turn to one of our main results. We are interested in studying the distance between Pr
and Pg without any noise, even when their supports lie on different manifolds, since (for example)
the closer these manifolds are, the closer to actual points on the data manifold the samples will be.
Furthermore, we eventually want a way to evaluate generative models, regardless of whether they are
continuous (as in a VAE) or not (as in a GAN), a problem that has for now been completely unsolved.
The next theorem relates the Wasserstein distance of Pr andPg, without any noise or modification, to
the divergence of Pr+e and Pg+e, and the variance of the noise. Since Pr+e and Pg+e are continuous
distributions, this divergence is a sensible estimate, which can even be attempted to minimize, since
a discriminator trained on those distributions will approximate the JSD between them, and provide
smooth gradients as per Corolary 3.2.
12
Under review as a conference paper at ICLR 2017
Theorem 3.3.	Let Pr and Pg be any two distributions, and be a random vector with mean 0 and
variance V. If Pr+ and Pg+ have support contained on a ball of diameter C, then 6
W (Pr, Pg ) ≤ 2V 2 + 2C，JSD(Pr+J∣Pg+e)
(6)
Proof.
W(Pr,Pg) ≤ W (Pr, Pr+) + W (Pr+, Pg+) + W (Pg+, Pg)
≤ 2V1 + W(Pr+e,Pg+e)
≤ 2V1 + Cδ(Pr+e,Pg+e)
≤ 2V2 + C (δ(Pr+e, Pm) + δ(Pg+j Pm))
≤
2V1 + C ( 22 K KL(Pr+ekPm) + ↑j g KL(Pg+∕∣Pm)
≤ 2V1 + 2C，JSD(Pr+ekPg+e)
We first used the Lemma 4 to bound everything but the middle term as a function ofV. After that, we
followed by the fact that W(P, Q) ≤ Cδ(P, Q) wih δ the total variation, which is a popular Lemma
arizing from the Kantorovich-Rubinstein duality. After that, we used the triangular inequality on δ
and Pm the mixture distribution between Pg+ and Pr+. Finally, we used Pinsker’s inequality and
later the fact that each individual KL is only one of the non-negative SUmands of the JSD.	□
Theorem 3.3 points us to an interesting idea. The two terms in equation (6) can be controlled. The
first term can be decreased by annealing the noise, and the second term can be minimized by a
GAN when the discriminator is trained on the noisy inputs, since it will be approximating the JSD
between the two continuous distributions. One great advantage of this is that we no longer have to
worry about training schedules. Because of the noise, we can train the discriminator till optimality
without any problems and get smooth interpretable gradients by Corollary 3.2. All this while still
minimizing the distance between Pr andPg, the two noiseless distributions we in the end care about.
Acknowledgments
The first author would like to especially thank Luis Scoccola for help with the proof of Lemma 1.
The authors would also like to thank Ishmael Belghazi, Yoshua Bengio, Gerry Che, Soumith Chin-
tala, Caglar Gulcehre, Daniel Jiwoong Im, Alex Lamb, Luis Scoccola, Pablo Sprechmann, Arthur
Szlam, Jake Zhao for insightful comments and advice.
References
Leon Bottou, Frank E. Curtis, and Jorge Nocedal. Optimization methods for large-scale machine
learning. CoRR, abs/1606.04838, 2016.
Emily L. Denton, Soumith Chintala, Arthur Szlam, and Rob Fergus. Deep generative image models
using a laplacian pyramid of adversarial networks. In Advances in Neural Information Processing
Systems 28, pp. 1486-1494. Curran Associates, Inc., 2015.
Ian J. Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair,
Aaron Courville, and Yoshua Bengio. Generative adversarial nets. In Advances in Neural Infor-
mation Processing Systems 27, pp. 2672-2680. Curran Associates, Inc., 2014a.
Ian J. Goodfellow, Jonathon Shlens, and Christian Szegedy. Explaining and harnessing adversarial
examples. CoRR, abs/1412.6572, 2014b.
Kurt Hornik. Approximation capabilities of multilayer feedforward networks. Neural Networks, 4
(2):251 - 257, 1991.
6While this last condition isn’t true if is a Gaussian, this is easily fixed by clipping the noise
13
Under review as a conference paper at ICLR 2017
Ferenc Huszar. How (not) to train your generative model: Scheduled sampling, likelihood, adver-
sary? CoRR, abs/1511.05101, 2015.
Ferenc Huszar. An alternative update rule for generative adversarial net-
works.	Blogpost,	2016.	URL http://www.inference.vc/
an-alternative-update-rule-for-generative-adversarial-networks/.
Diederik P. Kingma and Max Welling. Auto-encoding variational bayes. CoRR, abs/1312.6114,
2013.
Alex Lamb, Anirudh Goyal, Ying Zhang, Saizheng Zhang, Aaron Courville, and Yoshua Bengio.
Professor forcing: A new algorithm for training recurrent networks. Corr, abs/1610.09038, 2016.
Hariharan Narayanan and Sanjoy Mitter. Sample complexity of testing the manifold hypothesis. In
Advances in Neural Information Processing Systems 23, pp. 1786-1794. Curran Associates, Inc.,
2010.
Alec Radford, Luke Metz, and Soumith Chintala. Unsupervised representation learning with deep
convolutional generative adversarial networks. CoRR, abs/1511.06434, 2015.
Tim Salimans, Ian J. Goodfellow, Wojciech Zaremba, Vicki Cheung, Alec Radford, and Xi Chen.
Improved techniques for training gans. CoRR, abs/1606.03498, 2016.
Lucas Theis, Aaron van den Oord, and Matthias Bethge. A note on the evaluation of generative
models. In International Conference on Learning Representations, Apr 2016.
Cedric Villani. Optimal Transport: Old and New. Grundlehren der mathematiSchen Wis-
senschaften. Springer, Berlin, 2009. ISBN 978-3-540-71049-3. URL http://opac.inria.
fr/record=b1129524.
Jiajun Wu, Chengkai Zhang, Tianfan Xue, William T. Freeman, and Joshua B. Tenenbaum. Learn-
ing a probabilistic latent space of object shapes via 3d generative-adversarial modeling. Corr,
abs/1610.07584, 2016.
14
Under review as a conference paper at ICLR 2017
A	Proofs of things
Proof of Lemma 1. We first consider the case where the nonlinearities are rectifiers or leaky rec-
tifiers of the form σ(x) = l[x < 0]cιx + l[x ≥ 0]c2x for some c1,c2 ∈ R. In this case,
g(z) = DnWn . . . D1W1z, where Wi are affine transformations and Di are some diagonal matri-
ces dependent on z that have diagonal entries c1 or c2 . If we consider D to be the (finite) set of all
diagonal matrices with diagonal entries c1 or c2 ,theng(Z) ⊆ Di∈D DnWn... D1W1Z, which
is a finite union of linear manifolds.
The proof for the second case is technical and slightly more involved. When σ is a pointwise
smooth strictly increasing nonlinearity, then applying it vectorwise it’s a diffeomorphism to its im-
age. Therefore, it sends a countable union of manifolds of dimension d to a countable union of
manifolds of dimension d. If we can prove the same thing for affine transformations we will be fin-
ished, sinceg(Z) is just a composition of these applied to adim Z dimensional manifold. Of course,
it suffices to prove that an affine transformation sends a manifold to a countable union of manifolds
without increasing dimension, since a countable union of countable unions is still a countable union.
Furthermore, we only need to show this for linear transformations, since applying a bias term is a
diffeomorphism.
Let W ∈ Rn×m be a matrix. Note that by the singular value decomposition, W = UΣV, where
Σ is a square diagonal matrix with diagonal positive entries and U, V are compositions of changes
of basis, inclusions (meaning adding 0s to new coordinates) and projections to a subset of the co-
ordinates. Multiplying by Σ and applying a change of basis are diffeomorphisms, and adding 0s to
new coordinates is a manifold embedding, so we only need to prove our statement for projections
onto a subset of the coordinates. Let π : Rn+k → Rn, where π(x1, . . . , xn+k) = (x1, . . . , xn) be
our projection and M ⊆ Rn+k our d-dimensional manifold. If n ≤ d, we are done since the image
of π is contained in all Rn , a manifold with at most dimension d. We now turn to the case where
n > d. Let πi(x) = xi be the projection onto the i-th coordinate. If x is a critical point of π, since
the coordinates of π are independent, then x has to be a critical point of a πi . By a consequence of
the Morse Lemma, the critical points of πi are isolated, and therefore so are the ones of π, meaning
that there is at most a countable number of them. Since π maps the non-critical points onto a d
dimensional manifold (because it acts as an embedding) and the countable number of critical points
into a countable number of points (or 0 dimensional manifolds), the proof is finished.	□
Proof of Lemma 2. For now we assume that M and P are without boundary. IfdimM + dimP ≥
d it is known that under arbitrarilly small perturbations defined as the ones in the statement of
this Lemma, the two dimensions will intersect only transversally with probability 1 by the General
Position Lemma. If dim M + dim P < d, we will show that with probability 1, M + η and P + η0
will not intersect, thereby getting our desired result. Let us then assume dimM + dimP < d. Note
that M ∩ P = 0 if and only if there are X ∈ M,y ∈ P such that X + η = y + η0, or equivalently
X — y = η0 一 η. Therefore, M and P intersect if and only if η0 一 η ∈ M — P. Since η, η0 are
independent continuous random variables, the difference is also continuous. IfM - P has measure
0 in Rd then P(η0 一 η ∈ M 一 P) = 0, concluding the proof. We will therefore show that M 一 P
has measure 0. Let f : M × P → Rd be f(X, y) = X 一 y. If m andp are the dimensions ofM and
P, then f is a smooth function between an m + p-dimensional manifold and a d dimensional one.
Clearly, the image of f is M 一 P . Therefore,
M-P = f ({z ∈M× P∣rank(dz f) < m + p})
∪ f({z ∈ M × P |rank(dz f) = m + p})
The first set is the image of the critical points, namely the critical values. By Sard’s Lemma, this
set has measure 0. Let’s call A = {z ∈ M × P |rank(dz f) = m + p}. Let z be an element
of A. By the inverse function theorem, there is a neighbourhood Uz ⊆ M × P of z such that
f |Uz is an embedding. Since every manifold has a countable topological basis, we can cover A by
countable sets Uzn, where n ∈ N. We will just note them by Un. Since f|Un is an embedding,
f(Un) is an m + p-dimensional manifold, and since m +p < d, this set has measure 0 in Rd. Now,
f(A) = Sn∈N f(Un), which therefore has measure 0 in Rd, finishing the proof of the boundary free
case.
15
Under review as a conference paper at ICLR 2017
Now we consider the case where M and P are manifolds with boundary. By a simple union bound,
P%η (M perfectly aligns With P) ≤「明犷(Int M perfectly aligns With Int P)
+ P”,η (Int M perfectly aligns With ∂P)
+ P”,η (∂M perfectly aligns with Int P)
+ P”,η (∂M perfectly aligns with ∂P)
=0
1	.1 1	1 ∙ .	♦	1	F ♦ ♦	. 1 Γ∙ . .t . T .~ l /	T . * 2	T . /	I J∖
Where the last equality arizes When combining the facts that Int M = η + Int M = Int (η + M) =
Int M (and analogously for the boundary and P), that the boundary and interiors of M and P are
boundary free regular submanifolds of Rd Without full dimension, and then applying the boundary
free case of the proof.	□
Proof of Lemma 3. Let m = dim M and p = dim P . We again consider first the case Where M
and P are manifolds without boundary. If m + p < d, then L = 0 so the statement is obviously true.
If m + p ≥ d, then M and P intersect transversally. This implies that L is a manifold of dimension
m + p - d < m,p. Since L is a submanifold of both M and P that has lower dimension, it has
measure 0 on both of them.
We now tackle the case where M and P have boundaries. Let us remember that M = Int M ∪ ∂M
and the union is disjoint (and analogously for P). By using elementary properties of sets, we can
trivially see that
L = M ∩P = (Int M ∩IntP) ∪ (Int M ∩∂P) ∪ (∂M ∩IntP) ∪ (∂M ∩∂P)
where the unions are disjoint. This is the disjoint union of 4 strictly lower dimensional manifolds,
by using the first part of the proof. Since each one of these intersections has measure 0 on either
the interior or boundary of M (again, by the first part of the proof), and interior and boundary are
contained in M, each one of the four intersections has measure 0 in M. Analogously, they have
measure 0 in P, and by a simple union bound we see that L has measure 0 in M and P finishing
the remaining case of the proof.	□
Proof of Theorem 3.1. We first need to show that PX+ is absolutely continuous. Let A be a Borel
set with Lebesgue measure 0. Then, by the fact that and X are independent, we know by Fubini
PX+(A) =
Rd
=Z
Rd
P(A - x) dPX (x)
0 dPX (x) = 0
Where we used the fact that if A has Lebesgue measure zero, then so does A - x and since P is
absolutely continuous, P(A - x) = 0.
Now we calculate the density ofPX+. Again, by using the independence ofX and , for any Borel
set B we know
PX+(B)
P(B - y) dPX (y)
Rd
Ey~Pχ[P(B - y)]
Ey 〜Px
Ey 〜Px
P (x)dx
P (x - y)dx
B
/ Ey〜Px [Pe(x - y)] dx
B
Therefore, PX+(B) = B PX+(x)dx for our proposed PX+ and all Borel sets B. By the unique-
ness of the Radon-Nikodym theorem, this implies the proposed PX+ is the density of PX+ . The
equivalence of the formula changing the expectation for M PX is trivial by the definition of expec-
tation and the fact that the support of PX lies on M.	□
16
Under review as a conference paper at ICLR 2017
B Further Clarifications
In this appendix we further explain some of the terms and ideas mentioned in the paper, which due
to space constrains, and to keep the flow of the paper, couldn’t be extremely developed in the main
text. Some of these have to do with notation, others with technical elements of the proofs. On the
latter case, we try to convey more intuition than we previously could. We present these clarifications
in a very informal fashion in the following item list.
•	There are two different but very related properties a random variable can have. A random
variable X is said to be continuous if P(X = x) = 0 for all single points x ∈ X. Note that
a random variable concentrated on a low dimensional manifold such as a plane can have this
property. However, an absolutely continuous random variable has the following property:
if a set A has Lebesgue measure 0, then P (X ∈ A) = 0. Since points have measure 0 with
the Lebesgue measure, absolute continuity implies continuity. A random variable that’s
supported on a low dimensional manifold therefore will not be absolutely continuous: let
M a low dimensional manifold be the support of X . Since a low dimensional manifold
has 0 Lebesgue measure, this would imply P (X ∈ M) = 0, which is an absurd since
M was the support of X . The property of X being absolutely continuous can be shown
to be equivalent to X having a density: the existence of a function f : X → R such that
P (X ∈ A) = A f (x) dx (this is a consequence of the Radon-Nikodym theorem).
The annoying part is that in everyday paper writing when we talk about continuous random
variables, we omit the ”absolutely” word to keep the text concise and actually talk about
absolutely continuous random variables (ones that have a density), this is done through
almost all sciences and throughout mathematics as well, annoying as it is. However we
made the clarification in here since it’s relevant to our paper not to mistake the two terms.
•	The notation Pr [D(x) = 1] = 1 is the abbreviation of Pr [{x ∈ X : D(x) = 1}] = 1 for a
measure Pr. Another way of expressing this more formally is Pr[D-1 (1)] = 1.
•	In the proof of Theorem 2.1, the distance between sets d(A, B) is defined as the usual
distance between sets in a metric space
d(A, B) = inf d(x, y)
x∈A,y∈B
where d(x, y) is the distance between points (in our case the Euclidean distance).
•	Note that not everything that’s outside of the support of Pr has to be a generated image.
Generated images are only things that lie in the support of Pg , and there are things that
don’t need to be in the support of either Pr or Pg (these could be places where 0 < D < 1
for example). This is because the discriminator is not trained to discriminate Pr from all
things that are not Pr, but to distinguish Pr from Pg. Points that don’t lie in the support of
Pr or Pg are not important to the performance of the discriminator (as is easily evidenced
in its cost). Why we define accuracy 1 as is done in the text is to avoid the identification
of a single ‘tight’ support, since this typically leads to problems (if I take a measure 0 set
from any support it still is the support of the distribution). In the end, what we aim for is:
-	We want D(X) = 1 with probability 1 when X 〜Pr.
-	We want D(X) = 0 with probability 1 when X 〜Pg.
-	Whatever happens elsewhere is irrelevant (as it is also reflected by the cost of the
discriminator)
• We say that a discriminator D* is optimal for gθ (or its corresponding Pg) if for all mea-
surable functions D : X → [0, 1] we have
L(D*,gθ) ≥ L(D,gθ)
for L defined as in equation (1).
17