Figure 1: Sample synthetic images generated by DCGAN4 Steganographic Generative Adversarial NetworksIn order to apply GAN methodology to steganographic applications, we introduce SteganographicGenerative Adversarial Networks model (SGAN), which consists of•	a generator network G, which produces realistic looking images from noise;•	a discriminator network D, which classifies whether an image is synthetic or real;•	a discriminator network S, the steganalyser, which determines if an image contains aconcealed secret message.
Figure 2: SGAN information flow diagramStochastic mini-batch Gradient descent update rules for components of SGAN are listed below:•	for D the rule is Θd J Θd + YD VgL withPGL = ∂θ^{Eχ~Pdata(χ) [logD(x,θD)]+ Ez~pnoise(z) [ log(1 - D(G(z, θG), θD))]o;•	for S (it is updated similarly to D): θS J θS + γSPSL where∂Vs L =荷 Ez 〜Pnoise(Z) [log SlStegoIGIz,Θg},Θ s) + log(1 - S(G(z,Θg),Θs ))];∂θS•	for the generator G: ΘG J ΘG - γGVGL with VGL given by∂VGL = ∂θ^αEz^Pnoise(z) [lθg(1 - D(G(z, θG), θD))]∂+	∂θ^ (I- a)EZ-Pnoise(z) [lOg(S(Stego(G(z,θG),θS )))]∂+	∂θ^ (I- a)EZ-Pnoise(z) [lθg(1 - SlGI z,0 G ),θS))].
Figure 3: Examples of images, generated by SGAN after training for 8 epochs on the Celebritiesdataset5.2	Experimental SetupIn this section we describe the SGAN model structure. By C2D-BN-LR we denote the followingstructural block of a convolutional neural network: Conv2d → Batch Normalization → Leaky ReLU.
