Figure 1:	Syntax of the language, presented in Backus-Naur form. The symbols delimited by hiare non-terminals while the symbols delimited by ‘’ are terminals. hprogrami is the starting non-terminal.
Figure 2:	Semantics of the language, presented as inference rules. The semantics is defined as fourpredicates formalizing the evaluation of expressions (Γ ` e ⇒ V), single statement step (Γ, s ⇒ Γ),the reflexive and transitive closure of statements (Γ, S → Γ), and the evaluation of the programoverall (JpK = V).
Figure 3: A look inside the prediction of different networks that use an LSTM and a differentiableset data structure. The commented line shows the label attached to each variable by the network. A1 means a variable is properly used while a 0 means a variable was not initialized.
Figure 4: Overview of a network utilizing the differentiable set data structure for the task of staticanalysis. It consists of a neural controller and a fixed size filter.
Figure 5: Example of programs annotated with variable usage. The use colored in blue are consid-ered to have been properly defined while the use in purple are considered to be faulty. This tool isrun when the classifier detects a program error to help the programmer understand what the problemis.
