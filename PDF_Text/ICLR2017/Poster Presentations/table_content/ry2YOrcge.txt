Table 1: Performance of Neural Programmer compared to baselines from (Pasupat & Liang, 2015).
Table 2: Model ablation studies. We find that dropout and weight decay, along with the booleanfeature indicating a matched table entry for column selection, have a significant effect on the perfor-mance of the model.
Table 3: A few examples of programs induced by Neural Programmer that generate the correctanswer in the development set. mfe is abbreviation for the operation most frequent entry. The modelruns for 4 timesteps selecting an operation and a column at every step. The model employs hardselection during evaluation. The column name is displayed in the table only when the operationpicked at that step takes in a column as input while the operation is displayed only when it is otherthan the reset operation. Programs that choose count as the final operation produce a number as thefinal answer while programs that select print as the final operation produce entries selected from thetable as the final answer.
Table 4: Statistics of the different sequence of operations among the examples answered correctlyby the model in the development set. For each sequence of operations in the table, we also pointto corresponding example programs in Table 3. Superlative operations include argmax and argmin,while comparison operations include greater than, less than, greater than or equal to and less thanor equal to. The model induces a program that results in a scalar answer 30.7% of the time whilethe induced program is a table lookup for the remaining questions. print and select are the two mostcommon operations used 69.3% and 66.7% of the time respectively.
Table 5: List of all operations provided to the model along with their definitions. mfe is abbreviationfor the operation most frequent entry. [cond] is 1 when cond is True, and 0 otherwise. Comparison,select, reset and mfe operations are independent of the timestep while all the other operations arecomputed at every time step. Superlative operations and most frequent entry are computed within acolumn. The operations calculate the expected output with the respect to the membership probabili-ties given by the row selector so that they can work with probabilistic selection.
