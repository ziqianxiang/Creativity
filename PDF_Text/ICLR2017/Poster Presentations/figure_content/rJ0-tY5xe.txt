Figure 1: The QRAQ query graphs for both examples, illustrating the depth parameter4Published as a conference paper at ICLR 2017shown in Figure 1. These graphs (technically DAGs) show the query policy requiredto solve the problem. Each node represents an informational state of the agent, and eachedge the outcome of relevant queries. We define the depth of a query graph to be maximumnumber of variables that must be queried in the worst case2 , given the ground truth variableassignments. Examples of such paths in the graphs of Figure 1 are shown in bold. Thesepaths pass only through states consistent with the ground truth. By this definition, Figure1(a) has depth 1, and figure 1(b) has depth 2. As we discuss in Section 5.2, depth is animportant driver of problem complexity.
Figure 2: The architecture. Figure (a) represents the control flow of the interaction of both our RLarchitectures with the User. Figure (b) shows the impRL memory network architecture. See textfor details.
Figure 3: Test trajectory distributions over problem depths for impSL and impRL on the hardestLoc dataset. The bars show the the percentage of trajectories satisfying corresponding criteria forimpSL and impRL. The figures show that impSL performs much better than impRL on deeperproblems.
