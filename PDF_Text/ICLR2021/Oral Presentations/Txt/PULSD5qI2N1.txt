Published as a conference paper at ICLR 2021
Optimal Rates for Averaged Stochastic Gra-
dient Descent under Neural Tangent Kernel
Regime
Atsushi Nitanda1,2,3,t, Taiji Suzuki1,2,?
1	Graduate School of Information Science and Technology, The University of Tokyo
2	Center for Advanced Intelligence Project, RIKEN
3	PRESTO, Japan Science and Technology Agency
Email: tnitanda@mist.i.u-tokyo.ac.jp, ?taiji@mist.i.u-tokyo.ac.jp
Ab stract
We analyze the convergence of the averaged stochastic gradient descent for over-
parameterized two-layer neural networks for regression problems. It was recently
found that a neural tangent kernel (NTK) plays an important role in showing the
global convergence of gradient-based methods under the NTK regime, where the
learning dynamics for overparameterized neural networks can be almost character-
ized by that for the associated reproducing kernel Hilbert space (RKHS). However,
there is still room for a convergence rate analysis in the NTK regime. In this study,
we show that the averaged stochastic gradient descent can achieve the minimax
optimal convergence rate, with the global convergence guarantee, by exploiting the
complexities of the target function and the RKHS associated with the NTK. More-
over, we show that the target function specified by the NTK of a ReLU network
can be learned at the optimal convergence rate through a smooth approximation of
a ReLU network under certain conditions.
1 Introduction
Recent studies have revealed why a stochastic gradient descent for neural networks converges to
a global minimum and why it generalizes well under the overparameterized setting in which the
number of parameters is larger than the number of given training examples. One prominent approach
is to map the learning dynamics for neural networks into function spaces and exploit the convexity of
the loss functions with respect to the function. The neural tangent kernel (NTK) (Jacot et al., 2018)
has provided such a connection between the learning process of a neural network and a kernel method
in a reproducing kernel Hilbert space (RKHS) associated with an NTK.
The global convergence of the gradient descent was demonstrated in Du et al. (2019b); Allen-Zhu
et al. (2019a); Du et al. (2019a); Allen-Zhu et al. (2019b) through the development of a theory of
NTK with the overparameterization. In these theories, the positivity of the NTK on the given training
examples plays a crucial role in exploiting the property of the NTK. Specifically, the positivity
of the Gram-matrix of the NTK leads to a rapid decay of the training loss, and thus the learning
dynamics can be localized around the initial point of a neural network with the overparameterization,
resulting in the equivalence between two learning dynamics for neural networks and kernel methods
with the NTK through a linear approximation of neural networks. Moreover, Arora et al. (2019a)
provided a generalization bound of O(T -1/2), where T is the number of training examples, on a
gradient descent under the positivity assumption of the NTK. These studies provided the first steps in
understanding the role of the NTK.
However, the eigenvalues of the NTK converge to zero as the number of examples increases, as shown
in Su & Yang (2019) (also see Figure 1), resulting in the degeneration of the NTK. This phenomenon
indicates that the convergence rates in previous studies in terms of generalization are generally slower
than O(T -1/2) owing to the dependence on the minimum eigenvalue. Moreover, Bietti & Mairal
(2019); Ronen et al. (2019); Cao et al. (2019) also supported this observation by providing a precise
1
Published as a conference paper at ICLR 2021
estimation of the decay of the eigenvalues, and Ronen et al. (2019); Cao et al. (2019) proved the
spectral bias (Rahaman et al., 2019) for a neural network, where lower frequencies are learned first
using a gradient descent.
By contrast, several studies showed faster convergence rates of the (averaged) stochastic gradient
descent in the RKHS in terms of the generalization (Cesa-Bianchi et al., 2004; Smale & Yao, 2006;
Ying & Zhou, 2006; Neu & Rosasco, 2018; Lin et al., 2020). In particular, by extending the results
in a finite-dimensional case (Bach & Moulines, 2013), Dieuleveut & Bach (2016); Dieuleveut et al.
—2rβ
(2017) showed convergence rates of O(T2rβ+1) depending on the complexity r ∈ [1/2,1] of the
target functions and the decay rate β > 1 of the eigenvalues of the kernel (a.k.a. the complexity of
the hypothesis space). In addition, extensions to the random feature settings (Rahimi & Recht, 2007;
Rudi & Rosasco, 2017; Carratino et al., 2018), to the multi-pass variant (Pillaud-Vivien et al., 2018b),
and to the tail-averaging and mini-batching variant (MUCke et al., 2019) have been developed.
Motivation. The convergence rate of O(T 2rβ+1) is always faster than O(TT/2) and is known as
the minimax optimal rate (Caponnetto & De Vito, 2007; Blanchard & MUcke, 2018). Hence, a gap
exists between the theories regarding NTK and kernel methods. In other words, there is still room for
an investigation into a stochastic gradient descent due to a lack of specification of the complexities of
the target function and the hypothesis space. That is, to obtain faster convergence rates, we should
specify the eigenspaces of the NTK that mainly contain the target function (i.e., the complexity of the
target function), and specify the decay rates of the eigenvalues of the NTK (i.e., the complexity of the
hypothesis space), as studied in kernel methods (Caponnetto & De Vito, 2007; Steinwart et al., 2009;
Dieuleveut & Bach, 2016). In summary, the fundamental question in this study is
Can stochastic gradient descent for overparameterized neural networks achieve the optimal rate in
terms of the generalization by exploiting the complexities of the target function and hypothesis space?
In this study, we answer this question in the affirmative, thereby bridging the gap between the theories
of overparameterized neural networks and kernel methods.
Figure 1: An estimation of the eigenvalues of Σ∞ using two-layer ReLU networks with a width of
M = 2 × 104. The number of uniformly randomly generated samples on the unit sphere is n = 104
and the dimensionality of the input space is d ∈ {5, 10, 100}.
1.1	Contributions
The connection between neural networks and kernel methods is being understood via the NTK, but it
is still unknown whether the optimal convergence rate faster than O(T -1/2) is achievable by a certain
algorithm for neural networks. This is the first paper to overcome technical challenges of achieving
the optimal convergence rate under the NTK regime. We obtain the minimax optimal convergence
rates (Corollary 1), inherited from the learning dynamics in an RKHS, for an averaged stochastic
gradient descent for neural networks. That is, we show that smooth target functions efficiently
specified by the NTK are learned rapidly at faster convergence rates than O(1 / VT). Moreover, we
-2rd
obtain an explicit optimal convergence rate of O (T 2rd+d-1 J for a smooth approximation of the
ReLU network (Corollary 2), where d is the dimensionality of the data space and r is the complexity
of the target function specified by the NTK of the ReLU network.
1.2	Technical Challenge
The key to showing a global convergence (Theorem 1) is making the connection between kernel
methods and neural networks in some sense. Although this sort of analysis has been developed
in several studies (Du et al., 2019b; Arora et al., 2019a; Weinan et al., 2019; Arora et al., 2019b;
2
Published as a conference paper at ICLR 2021
Lee et al., 2019; 2020), we would like to emphasize that our results cannot be obtained by direct
application of their results. A naive idea is to simply combine their results with the convergence
analysis of the stochastic gradient descent for kernel methods, but it does not work. The main reason
is that we need the L2 -bound weighted by a true data distribution on the gap between dynamics of
stochastic gradient descent for neural networks and kernel methods if we try to derive a convergence
rate of population risks for neural networks from that for kernel methods. However, such a bound is
not provided in related studies. Indeed, to the best of our knowledge, all related studies make this
kind of connection regarding the gap on training dataset or sample-wise high probability bound (Lee
et al., 2019; Arora et al., 2019b). That is, a statement “for every input data x with high probability
|gn(tn)(x) - gn(tt)k(x)| < ” cannot yield a desired statement “kgn(tn) - gn(tt)kkL2(ρX) < ” where gn(tn) and
gn(tt)k are t-th iterate of gradient descent for a neural network and corresponding iterate described by
NTK, and ∣∣∙∣∣L2(ρχ)isthe L2-norm weighted by a marginal data distribution PX over the input space.
Moreover, we note that we cannot utilize the positivity of the Gram-matrix of NTK which plays a
crucial role in related studies because We consider the population risk with respect to ∣∣ ∙ kL2(ρχ)
rather than the empirical risk.
To overcome these difficulties we develop a different strategy of the proof. First, we make a bound
on the gap between two dynamics of the averaged stochastic gradient descent for a two-layer neural
network and its NTK with width M (Proposition A), and obtain a generalization bound for this
intermediate NTK (Theorem A in Appendix). Second, we remove the dependence on the width of M
from the intermediate bound. These steps are not obvious because we need a detailed investigation
to handle the misspecification of the target function by an intermediate NTK. Based on detailed
analyses, we obtain a faster and precise bound than those in previous results (Arora et al., 2019a).
The following is an informal version of Proposition A providing a new connection between a two-layer
neural networks and corresponding NTK with width M .
Proposition 1 (Informal). Under appropriate conditions we simultaneously run averaged stochastic
gradient descent for a neural network with width of M and for its NTK. Assume they share the same
hyper-parameters and examples to compute stochastic gradients. Then, for arbitrary number of
iterations T ∈ Z+ and > 0, there exists M ∈ Z+ depending only on T and such that ∀t ≤ T,
kgntn - gntkkL∞(ρχ)≤ 3
where g't) and gntk are iterates obtained by averaged stochastic gradient descent.
This proposition is the key because it connects two learning dynamics for a neural network and its
NTK through overparameterization without the positivity of the NTK. Instead of the positivity, this
proposition says that overparameterization increases the time stayed in the NTK regime where the
learning dynamics for neural networks can be characterized by the NTK. As a result, the averaged
stochastic gradient descent for the overparameterized two-layer neural networks can fully inherit
preferable properties from learning dynamics in the NTK as long as the network width is sufficiently
large. See Appendix A for detail.
1.3	Additional Related Work
Besides the abovementioned studies, there are several works (Chizat & Bach, 2018b; Wu et al.,
2019; Zou & Gu, 2019) that have shown the global convergence of (stochastic) gradient descent for
overparameterized neural networks essentially relying on the positivity condition of NTK. Moreover,
faster convergence rates of the second-order methods such as the natural gradient descent and Gauss-
Newton method have been demonstrated (Zhang et al., 2019; Cai et al., 2019) in the similar setting,
and the further improvement of Gauss-Newton method with respect to the cost per iteration has been
conducted in Brand et al. (2020).
There have been several attempts to improve the overparameterization size in the NTK theory. For
the regression problem, Song & Yang (2019) has succeeded in reducing the network width required
in Du et al. (2019b) by utilizing matrix Chernoff bound. For the classification problem, the positivity
condition can be relaxed to a separability condition using another reference model (Cao & Gu,
2019a;b; Nitanda et al., 2019; Ji & Telgarsky, 2019), resulting in mild overparameterization and
generalization bounds of O(T-1/2) or O(T -1/4) on classification errors.
For an averaged stochastic gradient descent on classification problems in RKHSs, linear convergence
rates of the expected classification errors have been demonstrated in Pillaud-Vivien et al. (2018a);
3
Published as a conference paper at ICLR 2021
Nitanda & Suzuki (2019). Although our study focuses on regression problems, we describe how to
combine their results with our theory in the Appendix.
The mean field regime (Nitanda & Suzuki, 2017; Mei et al., 2018; Chizat & Bach, 2018a) that is a
different limit of neural networks from the NTK is also important for the global convergence analysis
of the gradient descent. In the mean field regime, the learning dynamics follows the Wasserstein
gradient flow which enables us to establish convergence analysis in the probability space.
Moreover, several studies (Allen-Zhu & Li, 2019; Bai & Lee, 2019; Ghorbani et al., 2019; Allen-Zhu
& Li, 2020; Li et al., 2020; Suzuki, 2020) attempt to show the superiority of neural networks over
kernel methods including the NTK. Although it is also very important to study the conditions beyond
the NTK regime, they do not affect our contribution and vice versa. Indeed, which method is better
depends on the assumption on the target function and data distribution, so it is important to investigate
the optimal convergence rate and optimal method in each regime. As shown in our study, the averaged
stochastic gradient descent for learning neural network achieves the optimal convergence rate if the
target function is included in RKHS associated with the NTK with the small norm. It means there are
no methods that outperform the averaged stochastic gradient descent under this setting.
2 Preliminary
Let X ⊂ Rd and Y ⊂ R be the measurable feature and label spaces, respectively. We denote by ρ a
data distribution on XXY, by PX the marginal distribution on X, and by ρ(∙∣X) the conditional
distribution on Y, where (X, Y)〜ρ. Let '(z, y) (Z ∈ R,y ∈ Y) be the squared loss function
1 (Z - y)2, and let g : X → R be a hypothesis. The expected risk function is defined as follows:
L(g) d=f E(x,y)〜ρ['(g(X),Y)].	(1)
The Bayes rule gρ : X → R is a global minimizer of L over all measurable functions.
For the least squares regression, the Bayes rule is known to be gρ(X) = EY[Y|X] and the excess
risk of a hypothesis g (which is the difference between the expected risk of g and the expected risk
of the Bayes rule gρ) is expressed as a squared L2 (ρX)-distance between g and gρ (for details, see
Cucker & Smale (2002)) up to a constant:
L(g) - LlgP) = 2kg - gPkL2(ρχ),
where k ∙ ∣∣L2(ρχ)is L2-norm weighted by PX defined as ∣∣g∣∣L2(ρχ)d=f (Rg2(X)dρx(X))1/2
(g ∈ L2 (ρX)). Hence, the goal of the regression problem is to approximate gρ in terms of the
L2(PX)-distance in a given hypothesis class.
Two-layer neural networks. The hypothesis class considered in this study is the set of two-layer
neural networks, which is formalized as follows. Let M ∈ Z+ be the network width (number of
hidden nodes). Let a = (a1, . . . , aM)> ∈ RM (ar ∈ R) be the parameters of the output layer, B =
(b1, . . . , bM) ∈ Rd×M (br ∈ Rd) be the parameters of the input layer, and c = (c1, . . . , cM)> ∈ RM
(cr ∈ R) be the bias parameters. We denote by Θ the collection of all parameters (a, B, c), and
consider two-layer neural networks:
1M
gθ (x) = √= Ear σ(b> X + Ycr),
r=1
(2)
where σ : R → R is an activation function and γ > 0 is a scale of the bias terms.
Symmetric initialization. We adopt symmetric initialization for the parameters Θ. Let a(0) =
(a(10), . . . , a(M0))>, B(0) = (b(10), . . . , b(M0)), and c(0) = (c(10), . . . , c(M0))> denote the initial values
for a, B, and c, respectively. Assume that the number of hidden units M ∈ Z+ is even. The
parameters for the output layer are initialized as。心0) = R for r ∈ {1,..., M} and。心0) = -R for
r ∈ { M + 1,. ..,M}, where R > 0 is a positive constant. Let μo be a uniform distribution on the
sphere Sd-1 = {b ∈ Rd | kbk2 = 1} ⊂ Rd used to initialize the parameters for the input layer. The
parameters for the input layer are initialized as
E+m for r ∈ {1,..., MM }, where (b(°'))r=ι
4
Published as a conference paper at ICLR 2021
are independently drawn from the distribution μ0. The bias parameters are initialized as c，= 0 for
r ∈ {1, . . . , M}. The aim of the symmetric initialization is to make an initial function gΘ(0) = 0,
where Θ(0) = (a(0) , B(0), c(0)). This is just for theoretical simplicity. Indeed, we can relax the
symmetric initialization by considering an additional error stemming from the nonzero initialization
in the function space.
Regularized expected risk minimization. Instead of minimizing the expected risk (1) itself, we
consider the minimization problem of the regularized expected risk around the initial values:
mΘn ∣L(gθ) + 2 (ka - a(0)k2 + IIB - B(O)IlF + Ilc - c(0)k2) }.	⑶
where the last term is the L2-regularization at an initial point with a regularization parameter λ > 0.
This regularization forces iterations obtained by optimization algorithms to stay close to the initial
value, which enables us to utilize the better convergence property of regularized kernel methods.
Averaged stochastic gradient descent. Stochastic gradient descent is the most popular method
for solving large-scale machine learning problems, and its averaged variant is also frequently used
to stabilize and accelerate the convergence. In this study, we analyze the generalization ability
of an averaged stochastic gradient descent. The update rule is presented in Algorithm 1. Let
Θ(t) = (a(t), B(t), c(t)) denote the collection of t-th iterates of parameters a ∈ RM, B ∈ Rd×M,
and c ∈ RM . At t-th iterate, stochastic gradient descent using a learning rate ηt for the problem
(3) with respect to a, B, C is performed on lines 4-6 for a randomly sampled example (xt, yt)〜ρ.
These updates can be rewritten in an element-wise fashion as follows. For r ∈ {1, . . . , M},
art+1) - ar0) = (1 - ηtλ)(a?)-。")一ηtM-1/2(gQ(t)(xt) - yt)σ(bWxt + Ycrt)),
b(rt+1) -	b(r0)	= (1 -	ηtλ)(b(rt)	-	b(r0))	- ηt M -1/2 (gΘ(t) (xt)	- yt)a(rt)σ0(b(rt)>xt + γc(rt))xt,
cf+D -cr0)	= (1-	ηtλ)(crt)	-	cr0))	- ηtMT/23(t)(xt)	- yt)art)γσ0(brt)>xt + Ycrt)),
where a(t) = (a(1t), . . . , a(Mt))>, B(t) = (b(1t), . . . , b(Mt)), and c(t) = (c(1t), . . . , c(Mt))>. Finally, a
weighted average using weights αt of the history of parameters is computed on line 9. In our theory,
we consider the constant learning rate ηt = η and uniform averaging αt = 1/(T + 1).
Algorithm 1 Averaged Stochastic Gradient Descent
1:	Input: number of iterations T, regularization parameter λ, learning rates (ηt)tT=-01, averaging
weights (αt)tT=0, initial values Θ(0) = (a(0), B(0), c(0))
2:	for t = 0 to T - 1 do
3:	Randomly draw a sample (xt, yt)〜P
4:	a(t+1) - a(t) - ηt∂a'(gθ(t) (xt),yt) - ηtλ(a(t) - a(0))
5：	B(t+1) J B⑴-ηt∂Β'(gθ(t) (xt), yt) - ηtλ(B⑴-B(O))
6：	C(t+1) J C(t) - ηt∂c'(gθ(t) (xt),yt) - ηtλ(c(t) - C(O))
7:	Θ(t+1) J (a(t+1), B(t+1), c(t+1))
8:	end for
9： Θ(T) = (PT=O αta(t), PT=o αtB(t), P= atc(t))
10: Return g^(T)
Integral and Covariance Operators. The integral and covariance operators associated with the
kernels, which are the limit of the Gram-matrix as the number of examples goes to infinity, play
a crucial role in determining the learning speed. For a given Hilbert space H, we denote by XH
the tensor product on H, that is, ∀(f, g) ∈ H2, f XH g defines a linear operator; h ∈ H →
(f XH g)h = hf,hiHg ∈ H. Note that f XH g naturally induces a bilinear function: (h, h0) ∈
H×H7→ h(f XH g)h, h0iH = hf, hiH hg, h0iH. When H is a reproducing kernel Hilbert space
(RKHS) associated with a bounded kernel k : X × X → R, the covariance operator Σ : H 7→ H is
defined as follows: Set KX d=f k(X, ∙) and
∑ = EX〜PX [Kχ XH KX].
5
Published as a conference paper at ICLR 2021
Note that the covariance operator is a restriction of the integral operator on L2 (ρX):
f ∈ L2 (ρX) 7-→ Σf
f(X)KXdρX
X
∈ L2(ρX).
We use the same symbol as above for convenience with a slight abuse of notation. Be-
cause Σ is a compact self-adjoint operator on L2(ρX), Σ has the following eigendecomposi-
tion: Σf = Pi∞=1 λi hf, φiiL2 (ρX) φi for f ∈ L2 (ρX), where {(λi, φi)}i∞=1 is a pair of eigen-
values and orthogonal eigenfunctions in L2 (ρX). For s ∈ R, the power Σs is defined as
Σsf = Pi=1 λis hf, φiiL2(ρX) φi.
3	Main Results: Minimax Optimal Convergence Rates
In this section, we present the main results regarding the fast convergence rates of the averaged
stochastic gradient descent under a certain condition on the NTK and target function gρ.
Neural tangent kernel. The NTK is a recently developed kernel function and has been shown to
be extremely useful in demonstrating the global convergence of the gradient descent method for
neural networks (cf., Jacot et al. (2018); Chizat & Bach (2018b); Du et al. (2019b); Allen-Zhu et al.
(2019a;b); Arora et al. (2019a)). The NTK in our setting is defined as follows: ∀x, ∀x0 ∈ X,
k∞ (x, x0) d=ef Eb(0) [σ(b(0)>x)σ(b(0)>x0)] + R2(x>x0 + γ 2)Eb(0) [σ0(b(0)>x)σ0(b(0)>x0)],	(4)
where the expectation is taken with respect to b(0) 〜μ0. The NTK is the key to the global convergence
of a neural network because it makes a connection between the (averaged) stochastic gradient descent
for a neural network and the RKHS associated with k∞ (see Proposition A). Although this type of
connection has been shown in previous studies (Arora et al., 2019b; Weinan et al., 2019; Lee et al.,
2019; 2020), note that their results are inapplicable to our theory because we consider the population
risk. Indeed, our study is the first to establish this connection for an (averaged) stochastic gradient
descent in terms of the uniform distance on the support of the data distribution, enabling us to obtain
faster convergence rates. We note that an NTK k∞ is the sum of two NTKs, that is, the first and
second terms in (4) are NTKs for the output and input layers with bias, respectively.
3.1	Global Convergence Analysis
Let H∞ be an RKHS associated with NTK k∞, and let Σ∞ be the corresponding integral operator.
Let {λi}∞=ι denote the eigenvalues of Σ∞ sorted in decreasing order: λι ≥ λ? ≥ ….
Assumption 1.
(A1) There exists C > 0 such that ∣∣σ00k∞ ≤ C, ∣∣σ0k∞ ≤ 2, and ∣σ(u)∣ ≤ 1 + |u| for ∀u ∈ R.
(A2) supp(ρX) ⊂ {x ∈ Rd | kxk2 ≤ 1}, Y ⊂ [-1, 1], R = 1, andγ ∈ [0, 1].
(A3) There exists r ∈ [1/2, 1] such that gρ ∈ Σr∞ (L2(ρX)), i.e., ∣Σ-∞rgρ∣L2(ρX) < ∞.
(A4) There exists β > 1 such that λi = Θ(i-β).
Remark.
•	(A1): Typical smooth activation functions, such as sigmoid and tanh functions, and smooth
approximations of the ReLU, such as swish (Ramachandran et al., 2017), which performs as
well as or even better than the ReLU, satisfy Assumption (A1). This condition is used to relate
the two learning dynamics between neural networks and kernel methods (see Proposition A).
•	(A2): The boundedness (A2) of the feature space and label are often assumed for stochastic
optimization and least squares regression for theoretical guarantees (see Steinwart et al. (2009)).
Note that these constants in (A2) can be relaxed to arbitrary constants.
•	(A3): Assumption (A3) measures the complexity of gρ because Σ∞ can be considered as a
smoothing operator using a kernel k∞ . A larger r indicates a faster decay of the coefficients of
expansion ofgρ based on the eigenfunctions of Σ∞ and smoothens gρ. In addition, Σr∞ (L2(ρX))
6
Published as a conference paper at ICLR 2021
shrinks with respect to r and Σ∞2(L2(ρχ)) = H∞, resulting in gρ ∈ H∞. This condition
is used to control the bias of the estimators through L2-regularization. The notation Σ-∞rgρ
represents any function G ∈ L2(ρX) such that gρ = Σr∞G.
•	(A4): Assumption (A4) controls the complexity of the hypothesis class H∞. A larger β indicates
a faster decay of the eigenvalues and makes H∞ smaller. This assumption is essentially needed
to bound the variance of the estimators efficiently and derive a fast convergence rate. Theorem
1 and Corollary 1, 2 hold even though the condition in (A4) is relaxed to λi = O(i-β) and the
lower bound λi = Ω(i-β) is necessary only for making obtained rates minimax optimal.
Under these assumptions, we derive the convergence rate of the averaged stochastic gradient descent
for an overparameterized two-layer neural network, the proof is provided in the Appendix.
Theorem 1. Suppose Assumptions (A1)-(A3) hold. Run Algorithm 1 with a constant learning rate η
satisfying 4(6 + λ)η ≤ 1. Then, for any > 0, kΣ∞ kop ≥ λ > 0, δ ∈ (0, 1), and T ∈ Z+, there
exists M0 ∈ Z+ such that for any M ≥ M0, the following holds with high probability at least 1 - δ
over the random choice of features Θ(0):
E[kgΘ(τ) - gPkL2(ρx)] ≤ E + α 八2r IN∞rgPkLz(ρχ) + T+1 kgPkH∞ + λη2(T + 1)2 kgPkH∞)
+ T +1 (1 + kgPkL2(ρχ) + 值投gPkLz(ρχ)) Tr (ς∞N∞ + λI厂1),
where a > 0 is a universal constant and 目豆(丁) is an iterate obtained through Algorithm 1.
Remark. The first term E and second term λ2r kΣ-∞rgρ k2L (ρ ) are the approximation error and
bias, which can be chosen to be arbitrarily small. The first term comes from the approximation of
the NTK using finite-sized neural networks, and the second term comes from the L2-regularization,
which coincides with a bias term in the theory of least squares regression (Caponnetto & De Vito,
2007). The third and fourth terms come from the convergence of the averaged semi-stochastic
gradient descent (which is considered in the proof) in terms of the optimization. The appearance of
an inverse dependence on λ in the fourth term is common because a smaller λ indicates a weaker
strong convexity, which slows down the convergence speed of the optimization methods (Rakhlin
et al., 2012). The term Tr Σ∞(Σ∞ + λI)-1 is the variance from the stochastic approximation of
the gradient, and it is referred to as the degree of freedom or the effective dimension, which is known
to be unavoidable in kernel regression problems (Caponnetto & De Vito, 2007; Dieuleveut & Bach,
2016; Rudi & Rosasco, 2017).
Global convergence in NTK regime. This theorem shows the global convergence to the Bayes
rule gρ, which is a minimizer over all measurable maps because the approximation term E can be
arbitrarily small by taking a sufficiently large network width M . The required value of M has an
exponential dependence on T; note, however, that reducing M is not the main focus of the present
study. The key technique is to relate two learning dynamics for two-layer neural networks and kernel
methods in an RKHS approximating H∞ up to a small error. Unlike existing studies (Du et al.,
2019b; Arora et al., 2019a;b; Weinan et al., 2019; Lee et al., 2019; 2020) showing such connections,
we establish this connection in term of the L∞(ρX)-norm, which is more useful in a generalization
analysis. Moreover, existing studies essentially rely on the strict positivity of the Gram-matrix to
localize all iterates around an initial value, which can slow down the convergence rate in terms of the
generalization because the convergence of the eigenvalues of the NTK to zero affects the Rademacher
complexity. By contrast, our theory succeeds in demonstrating the global convergence in the NTK
regime without the positivity of the NTK.
3.2	Optimal Convergence Rate
We derive the fast convergence rate from Theorem 1 by utilizing Assumption (A4), which defines
the complexity of the NTK. The regularization parameter λ mainly controls the trade-off within the
generalization bound, that is, a smaller value decreases the bias term but increases the variance term
including the degree of freedom. The degree of freedom Tr Σ∞(Σ∞ + λI)-1 can be specified
by imposing Assumption (A4) because it determines the decay rate of the eigenvalues of Σ∞ . As a
result, this trade-off between bias and variance depending on the choice of λ becomes clear, and we
7
Published as a conference paper at ICLR 2021
can determine the optimal value. Concretely, by setting λ = T-e/(2re+1), the sum of the bias and
variance terms is minimized, and these terms become asymptotically equivalent.
Corollary 1. Suppose Assumptions (A1)-(A4) hold. Run Algorithm 1 with the constant learning
rate γ-> O(1) SatisfVing 4(6 + λ)τ? ≤ 1 and λ T-β/(2rβ+1) Then for anv f> 0 δ ∈ (0 1) and
rae η = sasfyng + η ≤ an =	. en, for any > , ∈ , an
T ∈ Z+ satisfying kΣ∞ kop ≥ λ, there exists M0 ∈ Z+ such that for any M ≥ M0, the following
holds with high probability at least 1 - δ over the random choice of random features Θ(0):
E[kgθ(τ) - gρkL2(Pχ)] ≤ e + αT2-β+β1 (1 + k^rgplKpx)),
where a > 0 is a universal constant and 目豆(丁) is an iterate obtained by Algorithm 1.
The resulting convergence rate is O(T2rβ+1) with respect to T by considering a sufficiently large
network width of M such that the error stemming from the approximation of NTK can be ignored.
Because T corresponds to the number of examples used to learn a predictor g©(『),this convergence
rate is simply the generalization error bound for the averaged stochastic gradient descent. In general,
this rate is always faster than T -1/2 and is known to be the minimax optimal rate of estimation
(Caponnetto & De Vito, 2007; Blanchard & Mucke, 2018) in H∞ in the following sense. Let P(β, r)
be a data distribution class satisfying Assumptions (A2)-(A4). Then,
IimO lTminf iɪrʌ sup Puh(T) - gρkL2(ρχ)>τT2-ββ1] = 1,
τ →0 T→∞ h(T) ρ
where ρ is taken in P(β, r) and h(T) is taken over all mappings (xt, yt)tT=-01 7→ h(T) ∈ H∞.
3.3	Explicit Optimal Convergence Rate for Smooth Approximation of ReLU
For smooth activation functions that sufficiently approximate the ReLU, an optimal explicit conver-
gence rate can be derived under the setting in which the target function is specified by NTK with
the ReLU, and the data are distributed uniformly on a sphere. We denote the ReLU activation by
σ(u) = max{0, u} and a smooth approximation of ReLU by σ(s), which converges to ReLU, as
s → ∞ in the following sense. We make alternative assumptions to (A1), (A2), and (A3):
Assumption 2.
(A1’) σ(s) satisfies (A1). σ(s) and σ(s)0 converge pointwise almost surely to σ and σ0 as s → ∞.
(A2’) ρX is a uniform distribution on {x ∈ Rd | kxk2 = 1}. Y ⊂ [-1, 1], R = 1, and γ ∈ (0, 1].
(A3’) The condition (A3) is satisfied by the NTK associated with the ReLU activation σ.
(A1’) and (A2’) are special cases of (A1) and (A2). There are several activation functions that satisfy
this condition, including swish (Ramachandran et al., 2017): σ(s)(u) = 1+6乂；(_§田.Under these
conditions, We can estimate the decay rate of the eigenvalues for the ReLU as β = 1 + d-ɪ, yielding
the explicit optimal convergence rate by adapting the proof of Theorem 1 to the current setting. Note
that Algorithm 1 is run for a neural network with a smooth approximation σ(s) of the ReLU.
Corollary 2. Suppose Assumptions (A1’), (A2’), and (A3’) hold. Run Algorithm 1 with the constant
learning rate η = O(1) satisfying 4(6 + λ)η ≤ 1, and λ = T-d/(2rd+d-1). Given any e > 0,
δ ∈ (0, 1) and T ∈ Z+ satisfying kΣ∞kop ≥ 2λ, let s be an arbitrary and sufficiently large positive
value. Then, there exists M0 ∈ Z+ such that for any M ≥ M0, the following holds with high
probability at least 1 - δ over the random choice of random features Θ(0):
E[kgΘ(T) — gPkL2(ρx)] ≤ e + αT2rd+dτ (1 + 偿妥gPkL2(ρx)),
where a > 0 is a universal constant and gg(τ) is an iterate obtained by Algorithm 1.
4	Experiments
We verify the importance of the specification of target functions by showing the misspecification
significantly slows down the convergence speed. To evaluate the misspecification, we consider
8
Published as a conference paper at ICLR 2021
single-layer learning as well as the two-layer learning, and we see the advantage of two-layer learning.
Here, note that, with evident modification of the proofs, the counterparts of Corollaries 1 and 2
for learning a single layer also hold by replacing Σ∞ with the covariance operator Σa,∞ (Σb,∞)
associated with ka,∞ (kb,∞), where
ka,∞(x, x0) = Eb(0) [σ(b(0)>x)σ(b(0)>x0)],
kb,∞(x, x0) = R2(x>x0 + γ2)Eb(0) [σ0(b(0)>x)σ0(b(0)>x0)],
which are components ofk∞ = ka,∞+kb,∞ corresponding to the output and input layers, respectively.
Then, from Corollaries 1 and 2, a Bayes rule gρ is learned efficiently by optimizing the layer which
has a small norm kΣ-rgρkL2(ρX) for Σ ∈ {Σa,∞, Σb,∞, Σ∞}.
0.5 0.6 0.7 0.8 0.9 1.0	0.5 0.6 0.7 0.8 0.9 1.0	0.5 0.6 0.7 0.8 0.9 1.0
r	r	r
0.10∣------------------------------------------ 0.08
Figure 2: Top: Estimation of kΣ-rgρkL2(ρX) (r ∈ [0.5, 1]) for integral operators Σ ∈
{Σa,∞ , Σb,∞ , Σ∞} of two-layer ReLU networks. Bayes rules gρ are set to the average eigen-
functions of Σa,∞ (left), Σb,∞ (middle), and Σ∞ (right). Bottom: Learning curves of test errors for
Algorithm 1 with two-layer swish networks.
Experimental settings. Figure 2 (Top) depicts norms kΣ-rgρkL2(ρX) for Σ ∈ {Σa,∞, Σb,∞, Σ∞}.
Bayes rules gρ are averages of eigenfunctions of Σa,∞ (left), Σb,∞ (middle), and Σ∞ (right) corre-
SPonding to the 10-largest eigenvalues excluding the first and second, with the setting: R = 1∕(20√2),
Y = 10√2, and PX is the uniform distribution on the unit sphere in R2. To estimate eigenvalues and
eigenfunctions, we draw 104-samPles from ρX and M = 2 × 104-hidden nodes of a two-layer ReLU.
Empirical observations. We observe gρ has the smallest norm with respect to the integral operator
which specifies gρ and has a comparably small norm with respect to Σ∞ even for the cases where gρ
is specified by Σa,∞ or Σb,∞. This observation suggests the efficiency of learning a corresponding
layer to gρ and learning both layers, and it is empirically verified. We run Algorithm 1 10-times with
respect to output (blue), input (purple), and both layers (orange) of two-layer swish networks with
s = 10. Figure 2 (Bottom) depicts the average and standard deviation of test errors. From the figure,
we see that learning a corresponding layer to gρ and both layers exhibit faster convergence, and that
misspecification significantly slows down the convergence speed in all cases.
5	Conclusion
We analyzed the convergence of the averaged stochastic gradient descent for overparameterized two-
layer neural networks for a regression problem. Through the development of a new proof strategy that
does not rely on the positivity of the NTK, we proved that the global convergence (Theorem 1) relies
only on the overparameterization. Moreover, we demonstrated the minimax optimal convergence
rates (Corollary 1) in terms of the generalization error depending on the complexities of the target
function and the hypothesis class and showed the explicit optimal rate for the smooth approximation
of the ReLU.
9
Published as a conference paper at ICLR 2021
Acknowledgments
AN was partially supported by JSPS Kakenhi (19K20337) and JST-PRESTO. TS was partially
supported by JSPS KAKENHI (18K19793, 18H03201, and 20H00576), Japan Digital Design, and
JST CREST.
References
Zeyuan Allen-Zhu and Yuanzhi Li. What can resnet learn efficiently, going beyond kernels? In
Advances in Neural Information Processing Systems 32,pp. 9017-9028, 2019.
Zeyuan Allen-Zhu and Yuanzhi Li. Backward feature correction: How deep learning performs deep
learning. arXiv preprint arXiv:2001.04413, 2020.
Zeyuan Allen-Zhu, Yuanzhi Li, and Zhao Song. A convergence theory for deep learning via over-
parameterization. In Proceedings of International Conference on Machine Learning 36, pp.
242-252, 2019a.
Zeyuan Allen-Zhu, Yuanzhi Li, and Zhao Song. On the convergence rate of training recurrent neural
networks. In Advances in neural information processing systems, pp. 6676-6688, 2019b.
Sanjeev Arora, Simon Du, Wei Hu, Zhiyuan Li, and Ruosong Wang. Fine-grained analysis of
optimization and generalization for overparameterized two-layer neural networks. In Proceedings
of International Conference on Machine Learning 36, pp. 322-332, 2019a.
Sanjeev Arora, Simon S Du, Wei Hu, Zhiyuan Li, Russ R Salakhutdinov, and Ruosong Wang. On
exact computation with an infinitely wide neural net. In Advances in Neural Information Processing
Systems, pp. 8139-8148, 2019b.
Kendall Atkinson and Weimin Han. Spherical harmonics and approximations on the unit sphere: an
introduction. Springer, 2012.
Francis Bach. Breaking the curse of dimensionality with convex neural networks. The Journal of
Machine Learning Research, 18(1):629-681, 2017a.
Francis Bach. On the equivalence between kernel quadrature rules and random feature expansions.
The Journal of Machine Learning Research, 18(1):714-751, 2017b.
Francis Bach and Eric Moulines. Non-strongly-convex smooth stochastic approximation with
convergence rate O(1/n). In Advances in Neural Information Processing Systems 26, pp. 773-781,
2013.
Yu Bai and Jason D Lee. Beyond linearization: On quadratic and higher-order approximation of wide
neural networks. In International Conference on Learning Representations, 2019.
Peter L Bartlett, Michael I Jordan, and Jon D McAuliffe. Convexity, classification, and risk bounds.
Journal of the American Statistical Association, 101(473):138-156, 2006.
Alberto Bietti and Julien Mairal. On the inductive bias of neural tangent kernels. In Advances in
Neural Information Processing Systems, pp. 12873-12884, 2019.
Gilles Blanchard and Nicole Mucke. Optimal rates for regularization of statistical inverse learning
problems. Foundations of Computational Mathematics, 18(4):971-1013, 2018.
Jan van den Brand, Binghui Peng, Zhao Song, and Omri Weinstein. Training (overparametrized)
neural networks in near-linear time. arXiv preprint arXiv:2006.11648, 2020.
Tianle Cai, Ruiqi Gao, Jikai Hou, Siyu Chen, Dong Wang, Di He, Zhihua Zhang, and Liwei Wang.
Gram-gauss-newton method: Learning overparameterized neural networks for regression problems.
arXiv preprint arXiv:1905.11675, 2019.
Yuan Cao and Quanquan Gu. A generalization theory of gradient descent for learning over-
parameterized deep relu networks. arXiv preprint arXiv:1902.01384, 2019a.
10
Published as a conference paper at ICLR 2021
Yuan Cao and Quanquan Gu. Generalization bounds of stochastic gradient descent for wide and deep
neural networks. arXiv preprint arXiv:1905.13210, 2019b.
Yuan Cao, Zhiying Fang, Yue Wu, Ding-Xuan Zhou, and Quanquan Gu. Towards understanding the
spectral bias of deep learning. arXiv preprint arXiv:1912.01198, 2019.
Andrea Caponnetto and Ernesto De Vito. Optimal rates for the regularized least-squares algorithm.
Foundations of Computational Mathematics,7(3):331-368, 2007.
Luigi Carratino, Alessandro Rudi, and Lorenzo Rosasco. Learning with sgd and random features. In
Advances in Neural Information Processing Systems 31, pp. 10192-10203, 2018.
Nicolo Cesa-Bianchi, Alex Conconi, and Claudio Gentile. On the generalization ability of on-line
learning algorithms. IEEE Transactions on Information Theory, 50(9):2050-2057, 2004.
Lenaic Chizat and Francis Bach. On the global convergence of gradient descent for over-parameterized
models using optimal transport. In Advances in Neural Information Processing Systems 31, pp.
3040-3050, 2018a.
Lenaic Chizat and Francis Bach. A note on lazy training in supervised differentiable programming.
arXiv preprint arXiv:1812.07956, 2018b.
Felipe Cucker and Steve Smale. On the mathematical foundations of learning. Bulletin of the
American mathematical society, 39(1):1-49, 2002.
Aymeric Dieuleveut and Francis Bach. Nonparametric stochastic approximation with large step-sizes.
The Annals of Statistics, 44(4):1363-1399, 2016.
Aymeric Dieuleveut, Nicolas Flammarion, and Francis Bach. Harder, better, faster, stronger con-
vergence rates for least-squares regression. The Journal of Machine Learning Research, 18(1):
3520-3570, 2017.
Simon Du, Jason Lee, Haochuan Li, Liwei Wang, and Xiyu Zhai. Gradient descent finds global
minima of deep neural networks. In Proceedings of International Conference on Machine Learning
36, pp. 1675-1685, 2019a.
Simon S Du, Xiyu Zhai, Barnabas Poczos, and Aarti Singh. Gradient descent provably optimizes
over-parameterized neural networks. International Conference on Learning Representations 7,
2019b.
Behrooz Ghorbani, Song Mei, Theodor Misiakiewicz, and Andrea Montanari. Limitations of lazy
training of two-layers neural network. In Advances in Neural Information Processing Systems 32,
pp. 9111-9121, 2019.
Arthur Jacot, Franck Gabriel, and Clement Hongler. Neural tangent kernel: Convergence and
generalization in neural networks. In Advances in Neural Information Processing Systems 31, pp.
8580-8589, 2018.
Ziwei Ji and Matus Telgarsky. Polylogarithmic width suffices for gradient descent to achieve
arbitrarily small test error with shallow relu networks. arXiv preprint arXiv:1909.12292, 2019.
Jaehoon Lee, Lechao Xiao, Samuel Schoenholz, Yasaman Bahri, Roman Novak, Jascha Sohl-
Dickstein, and Jeffrey Pennington. Wide neural networks of any depth evolve as linear models
under gradient descent. In Advances in neural information processing systems, pp. 8570-8581,
2019.
Jason D Lee, Ruoqi Shen, Zhao Song, and Mengdi Wang. Generalized leverage score sampling for
neural networks. In Advances in Neural Information Processing Systems, 2020.
Yuanzhi Li, Tengyu Ma, and Hongyang R Zhang. Learning over-parametrized two-layer neural
networks beyond ntk. In Proceedings of Conference on Learning Theory 33, pp. 2613-2682, 2020.
Junhong Lin, Alessandro Rudi, Lorenzo Rosasco, and Volkan Cevher. Optimal rates for spectral
algorithms with least-squares regression over hilbert spaces. Applied and Computational Harmonic
Analysis, 48(3):868-890, 2020.
11
Published as a conference paper at ICLR 2021
Song Mei, Andrea Montanari, and Phan-Minh Nguyen. A mean field view of the landscape of two-
layer neural networks. Proceedings ofthe National Academy of Sciences, 115(33):E7665-E7671,
2018.
Mehryar Mohri, Afshin Rostamizadeh, and Ameet Talwalkar. Foundations of Machine Learning.
The MIT Press, 2012.
Nicole Mucke, Gergely Neu, and Lorenzo Rosasco. Beating sgd saturation with tail-averaging and
minibatching. In Advances in Neural Information Processing Systems, pp. 12568-12577, 2019.
Gergely Neu and Lorenzo Rosasco. Iterate averaging as regularization for stochastic gradient descent.
In Proceedings of Conference On Learning Theory 32, pp. 3222-3242, 2018.
Atsushi Nitanda and Taiji Suzuki. Stochastic particle gradient descent for infinite ensembles. arXiv
preprint arXiv:1712.05438, 2017.
Atsushi Nitanda and Taiji Suzuki. Stochastic gradient descent with exponential convergence rates of
expected classification errors. In Proceedings of International Conference on Artificial Intelligence
and Statistics 22, pp. 1417-1426, 2019.
Atsushi Nitanda, Geoffrey Chinot, and Taiji Suzuki. Gradient descent can learn less
over-parameterized two-layer neural networks on classification problems. arXiv preprint
arXiv:1905.09870, 2019.
Loucas Pillaud-Vivien, Alessandro Rudi, and Francis Bach. Exponential convergence of testing error
for stochastic gradient methods. In Proceedings of Conference on Learning Theory 31, pp. 1-47,
2018a.
Loucas Pillaud-Vivien, Alessandro Rudi, and Francis Bach. Statistical optimality of stochastic
gradient descent on hard learning problems through multiple passes. In Advances in Neural
Information Processing Systems, pp. 8114-8124, 2018b.
Nasim Rahaman, Aristide Baratin, Devansh Arpit, Felix Draxler, Min Lin, Fred A Hamprecht,
Yoshua Bengio, and Aaron Courville. On the spectral bias of neural networks. In Proceedings of
International Conference on Machine Learning 36, pp. 5301-5310, 2019.
Ali Rahimi and Benjamin Recht. Random features for large-scale kernel machines. In Advances in
Neural Information Processing Systems 20, pp. 1177-1184, 2007.
Alexander Rakhlin, Ohad Shamir, and Karthik Sridharan. Making gradient descent optimal for
strongly convex stochastic optimization. In Proceedings of International Conference on Machine
Learning 29, pp. 1571-1578, 2012.
Prajit Ramachandran, Barret Zoph, and Quoc V. Le. Searching for activation functions. arXiv preprint
arXiv:1710.05941, 2017.
Basri Ronen, David Jacobs, Yoni Kasten, and Shira Kritchman. The convergence rate of neural
networks for learned functions of different frequencies. In Advances in Neural Information
Processing Systems, pp. 4763-4772, 2019.
Alessandro Rudi and Lorenzo Rosasco. Generalization properties of learning with random features.
In Advances in Neural Information Processing Systems, pp. 3215-3225, 2017.
Steve Smale and Yuan Yao. Online learning algorithms. Foundations of computational mathematics,
6(2):145-170, 2006.
Zhao Song and Xin Yang. Quadratic suffices for over-parametrization via matrix chernoff bound.
arXiv preprint arXiv:1906.03593, 2019.
Ingo Steinwart, Don R Hush, and Clint Scovel. Optimal rates for regularized least squares regression.
In Proceedings of Conference on Learning Theory 22, pp. 79-93, 2009.
Lili Su and Pengkun Yang. On learning over-parameterized neural networks: A functional approx-
imation perspective. In Advances in Neural Information Processing Systems, pp. 2637-2646,
2019.
12
Published as a conference paper at ICLR 2021
Taiji Suzuki. Generalization bound of globally optimal non-convex neural network training: Trans-
portation map estimation by infinite dimensional langevin dynamics. In Advances in Neural
Information Processing Systems, 2020.
E Weinan, Chao Ma, and Lei Wu. A comparative analysis of optimization and generalization
properties of two-layer neural network and random feature models under gradient descent dynamics.
Science China Mathematics, pp.1-24, 2019.
Xiaoxia Wu, Simon S Du, and Rachel Ward. Global convergence of adaptive gradient methods for an
over-parameterized neural network. arXiv preprint arXiv:1902.07111, 2019.
Yiming Ying and D-X Zhou. Online regularized classification algorithms. IEEE Transactions on
Information Theory, 52(11):4775-4788, 2006.
Guodong Zhang, James Martens, and Roger B Grosse. Fast convergence of natural gradient descent
for over-parameterized neural networks. In Advances in Neural Information Processing Systems,
pp. 8082-8093, 2019.
Tong Zhang. Statistical behavior and consistency of classification methods based on convex ris
minimization. The Annals of Statistics, 32(1):56-134, 2004.
Difan Zou and Quanquan Gu. An improved analysis of training over-parameterized deep neural
networks. In Advances in Neural Information Processing Systems, pp. 2053-2062, 2019.
13
Published as a conference paper at ICLR 2021
Appendix
A Proof S ketch of the Main Results
We provide several key results and a proof sketch of Theorem 1 and Corollary 1. We first recall the
definition of stochastic gradients of L in a general RKHS (H, h, iH) associated with a uniformly
bounded real-valued kernel function k : X ×X → R. We set KX = k(X, ∙). Then, it follows that
for ∀g, ∀h ∈ H,
L(g + h) = L(g) + hE[∂z'(g(X), Y)Kχ], h〉H + o(kh∣∣H),
which is confirmed by the following equations:
E[l((g + h)(X), Y)] = E[l(g(X), Y) + ∂ζl(g(X), Y)h(X) + o(|h(X)|)],
h(X) = hh, k(X, ∙)>h, and |h(X)| ≤ ∣∣h∣∣H Jk(X, X). This means that the stochastic gradient of
L in H is given by d《'(g(X), Y)k(X, ∙) for (X, Y)〜ρ. In addition, the stochastic gradient of the
L2-regularized risk is given by d4'(g(X), Y)k(X, ∙) + λg.
A. 1 Reference Averaged Stochastic Gradient Descent
We consider a random feature approximation of NTK k∞: for an initial value B(0) = (b(r0))rM=1,
∀x, ∀x0 ∈ X ,
M	>0	2 M
kM(χ,χ0) = Mxσ(br0)>χ)σ(br0) χ0) +—M— χ〃(丛0)%”(bro) x0),	⑸
r=1	r=1
We can confirm that kM is an approximation of NTK, that is, kM converges to k∞ uniformly
over supp(ρX) × supp(ρX ) almost surely by the uniform law of large numbers. We denote by
(HM, h,iHM) an RKHS associated with kM. By the assumptions, we see kM (x, x0) ≤ 12 for
∀(x, x0) ∈ supp(ρX) × supp(ρX ).
We introduce averaged stochastic gradient descent in HM (see Algorithm 2) as a reference for
Algorithm 1. The notation G(t) represents a stochastic gradient at the t-th iterate:
G㈤ d=f ∂z'(g㈤(xt),yt)kM(xt, ∙).
Algorithm 2 Reference ASGD in HM
1:	Input: number of iterations T, regularization parameter λ, learning rates (ηt)0T=-11, averaging
weights (αt)tT=0,
2:	g⑼—0
3:	for t = 0 to T - 1 do
4:	Randomly draw a sample (xt, yt)〜P
5:	g(t+1) — (1 - ηtλ)g(t) - ηtG(t)
6:	end for
7:	Return g(T) = PT=0 αtg㈤
The following proposition shows the equivalence between the averaged stochastic gradient descent
for two-layer neural networks and that in HM up to a small constant depending on M.
Proposition A. Suppose Assumptions (A1) and (A2) hold. Run Algorithms 1 and 2 with the constant
learning rate ηt = η satisfying ηλ < 1 and η ≤ 1. Moreover, assume that they share the same
hyper-parameter settings and the same examples (xt, yt)tT=-01 to compute stochastic gradient. Then,
for arbitrary T ∈ Z+ and > 0, there exists M ∈ Z+ depending only on T and such that ∀t ≤ T,
kgΘ(t) - g(t)kL∞ (PX) ≤ e,	⑹
where g©(t)and g(t) are iterates obtained by Algorithm 1 and 2, respectively.
14
Published as a conference paper at ICLR 2021
Remark. Note that this proposition holds for non-averaged SGD too because it is a special case of
averaged SGD by setting only one αt to 1.
Key idea. This proposition is the key because it connects two learning dynamics for neural networks
and RKHS HM by utilizing overparameterization without the positivity of NTK unlike existing
studies (Weinan et al., 2019; Arora et al., 2019b) that provide such a connection for continuous
gradient flow with the positive NTK. Instead of the positivity of NTK, Proposition A says that
overparameterization increases the time stayed in the NTK regime where the learning dynamics for
neural networks can be characterized by the NTK. As a result, because M is free from the other
hyper-parameters, the averaged stochastic gradient descent for the overparameterized two-layer neural
networks can fully inherit preferable properties from learning dynamics in HM with an appropriate
choice of learning rates and regularization parameters as long as the network width is sufficiently
large depending only on the number of iterations and the required accuracy.
A. 2 Convergence Rate of the Reference ASGD
We give the convergence analysis of Algorithm 2 in HM, which will be a part of a bound in Theorem
1. Proofs essentially rely on several techniques developed in serial studies (Bach & Moulines, 2013;
Dieuleveut & Bach, 2016; Dieuleveut et al., 2017; Pillaud-Vivien et al., 2018a; Rudi & Rosasco,
2017; Carratino et al., 2018) with several adaptations to our settings.
Let M ∈ Z+ ∪ {∞} be a positive number or ∞. We set Km,x d= kM(X, ∙) and denote by ∑m the
covariance operator defined by kM :
def
∑M = EX〜PX [Km,X ZHM Km,X].
We denote by gM,λ the minimizer of the regularized risk over HM:
gM,λ d= arg min [L⑷ + λ IlgkHM ].
g∈HM	2
We remark that ΣM : L2 (ρX ) → HM is isometric (Cucker & Smale, 2002), that is, ∀(f, g) ∈
L2(ρX) × L2(ρX),
DΣM f, ΣM gE	= hf, giL2(ρX) ,
HM
and we use this fact frequently. It is known that gM,λ is represented as follows (Caponnetto & De Vito,
2007):
gM,λ = (ΣM + λI)-1E(X,Y) [Y KM,X]
= (ΣM + λI)-1ΣMgρ.	(7)
The following theorem provides a convergence rate of Algorithm 2 to the minimizer gM,λ .
Theorem A.	Suppose Assumptions (A1), (A2) and (A3) hold. Run Algorithm 2 with the constant
learning rate ηt = η satisfying 4(6 + λ)η ≤ 1. Then, for ∀λ > 0 and ∀δ ∈ (0, 1) there exists M0 > 0
such that for ∀M ≥ M0 the following holds with high probability at least 1 - δ:
E ng(TT-gM,λt2(ρχ)] ≤ η2(τ4+1)2k(£M + λI厂1gM,λkL2(ρχ)
2 242
+ τ + ι MςM + λI)	gM,λkL2(ρχ)
8
+ T +1 (1 + kgPkL2(ρχ)+ 24INcxrgpkL2(px)) Tr (ςM3m + λI)1),
where g(T) is an iterate obtained by Algorithm 2.
Remark. The first and second terms stem from the optimization speed of a semi-stochastic part
of averaged stochastic gradient descent. The first term has a better dependency on T, but it has
a worse dependency on λ than the second one. This kind of deterioration due to the weak strong
convexity is common in first-order optimization methods. However, as confirmed later, these two
15
Published as a conference paper at ICLR 2021
terms are dominated by the variance term corresponding to the third term by setting hyper-parameters
appropriately.
To make the bound in Theorem A free from the size of M, we introduce the following proposition.
Proposition B. Suppose gρ ∈ H∞ holds. Under Assumption (A1) and (A2), for any δ ∈ (0, 1),
there exists M0 ∈ Z+ such that for any M ≥ M0, the following holds with high probability at least
1 - δ:
k(ΣM + λI)-1gM,λk2L2(ρX) ≤ 2λ-1 kgρk2H∞,
∣KςM + λI厂1∕2gM,λ∣∣L2(ρχ)≤ 2kgρkH∞,
and if λ ≤ kΣ∞ kop, then
Tr (∑m(∑m + λI)-1) ≤ 3Tr (∑∞(Σ∞ + λI)-1).
Remark. The last inequality on the degree of freedom was shown in Rudi & Rosasco (2017).
To show the convergence to gρ, we utilize the following decomposition:
3kg(T) - gρkL2(ρχ) ≤ Ilg(T) - gM,λ∣∣L2(ρχ) + kgM,λ - g∞,λ ∣∣L2(ρχ) + kg∞,λ - gρl∣L2(ρχ),
(8)
where g∞,λ d= argming∈H∞{L(g) + λ2∣∣g∣∣H∞}.
The first term is the optimization speed evaluated in Theorem A, and the second and third terms are
approximation errors from a random feature approximation of NTK and imposing L2-regularization,
respectively. These approximation terms can be evaluated by the following existing results. The next
proposition is a simplified version of Lemma 8 in Carratino et al. (2018)
Proposition C (Carratino et al. (2018)). Under Assumption (A1), (A2), and (A3), for any , λ > 0
and δ ∈ (0, 1], there exists M0 ∈ Z+ depending on , λ, δ such that for any M ≥ M0, the following
holds with high probability at least 1 - δ:
kgM,λ - g∞,λ k2L2(ρX ) ≤ .
Proposition D (Caponnetto & De Vito (2007)). Under Assumption (A3), it follows that
kg∞,λ - gρk2L2(ρX) ≤ λ2rkΣ-∞rgρk2L2(ρX).
By combining Theorem A, Proposition B, C, and D with the decomposition (8), we can establish the
convergence rate of reference ASGD to reach gρ, which is simply the generalization error bound.
Theorem B.	Assume the same conditions as in Theorem A. Then, for ∀ > 0, kΣ∞ kop ≥ ∀λ > 0,
and ∀δ ∈ (0, 1), there exists M0 ∈ Z+ such that for ∀M ≥ M0, the following holds with high
probability at least 1 - δ over the random choice of random features Θ(0):
E[kg(T) - gρkL2(ρχ)] ≤ e + 3λ2rk∑∞rgρkL2(ρχ)
+ UT (288 + λη2(T + i)) kgρkH∞
+ T +1 (1 + kgρkL2(ρX) + 24惨妻 gρkL2(ρx J Tr (ς∞(ς∞ + λI )-1),
where g(T) is an iterate obtained by Algorithm 2.
A. 3 Convergence Rates of ASGD for Neural Networks
As explained earlier, the generalization bound for the reference ASGD is inherited by that for two-
山yer neural networks through Proposition A with the following decomposition: for an iterate Θt
obtained by Algorithm 1,
kgΘ(T) - gPkL2(ρx) ≤ kgθ(T) - g(T)kL2(ρx) + kg(T) - gρl∣L2(ρχ).
16
Published as a conference paper at ICLR 2021
That is, these two terms are bounded by Proposition A and Theorem B under Assumption (A1)-(A3),
resulting in Theorem 1, which exhibits comparable generalization error to Theorem B as long as the
network width M is sufficiently large.
Theorem 1 immediately leads to the fast convergence rate in Corollary 1 by setting ηt = η = O(1)
satisfying 4(6 + Nn ≤ 1 and λ = T-e/(2re+1) with the bounds on ∣∣gρkHg, kgρkL2(px), and the
degree of freedom. Because β in Assumption (A4) controls the complexity of the hypothesis space
H∞, it derives a bound on the degree of freedom, as shown in Caponnetto & De Vito (2007):
Tr (∑∞(∑∞ + λI)-1) = O(λ-1").
In addition, the boundedness of kΣ∞ kop ≤ O(1) gives
kgρkH∞ = k∑∞ 1 ∑∞rgρkL2(ρx) ≤ O (k∑∞rgρkL2(ρx)),
kgρkL2(ρx) ≤ k∑∞∑∞rgρkL2(ρx) ≤ O(k∑∞rgρkL2(ρx)).
This finishes the proof of Corollary 1.
B Proof of Proposition A
We first show the Proposition A that says the equivalence between averaged stochastic gradient
descent for two-layer neural networks and that in an RKHS associated with kM .
Proof. Proof of Proposition A
Bound the growth of kgΘ(t) kL∞(ρX). We first show that there exist increasing functions d(t) and
M(t) depending only on t uniformly over the choice of the history of examples (xt, yt)t∞=1 used in
Algorithms such that kgΘ(s) kL∞(ρX) ≤ d(t) for ∀s ≤ t when M ≥ M (t). We show this statement
by the induction.
Without loss of generality, we assume that there is no bias term, kb(r0) k2 = 1, and supp(ρX) ⊂ {x ∈
Rd+1 | ∣∣x∣∣2 ≤ 2} by setting X — (x, Y) (where Y ∈ (0,1)). Hence, We consider the update only for
parameters a and B . The above statement clearly holds for t = 0. Thus, we assume it holds for t. We
recall the specific update rules of the stochastic gradient descent:
art+1)—ar0) = (I—nλ)(art) - arO)) - √=①㊀⑴(Xt) - y∕σert>>Xt),
brt+1)- br0) = (I- nλ)(brt) - br0)) - √=①㊀⑴(Xt)- yt)art)σ0(brt)>χt)χt.
(9)
(10)
Here, let us consider ∀M ≥ M (t). Set dbM (t) = maxs≤t,1≤r≤M kb(rs)k2. Then, by expanding
equation (9), we get
ιart+1) - aro)| ≤ ιart) - ar0) |+√M (d(t)+1)(I+2dM ⑴)
t
≤ √M X(d(S)+1)(I+2dM (t))
s=0
≤ n√+)(d(t) + 1)(1 + 2dM(t)),
M
(11)
where we used kσ(u)k ≤ 1 + u and |yt| ≤ 1. As for the term |a(rs) | (s ≤ t + 1), from the similar
augment for s and the monotonicity, we have for s ≤ t + 1,
|a(rs)| ≤ 1+ |a(rs) - a(r0) |
≤ 1 + n√^(d(t) + 1)(1 + 2dM (t))
M
≤ 1 + η(t + 1)(d(t) + 1)(1 + 2dbM (t)).
17
Published as a conference paper at ICLR 2021
We next give a bound on kb(rt+1) - b(r0) k2. By expanding equation (10), we get
iibrt+1) - br0)k2 ≤ kbrt)- br0)k2+√= ιart)ι(d(t)+I)
M
4η	t
≤ √m x |ar，Kd(S)+I)
s=0
≤ 4η⅛+≡(d(t) + 1) (l + η√+^(d(t) + 1)(1 + 2dM(t))) ,	(12)
MM
where we used iσ0i∞ ≤ 2 and ixti2 ≤ 2. Here, we evaluate dbM (t). From the similar augment for
s ≤ t, the monotonicity, and ib(rs) i2 ≤ 1 + ib(rs) - b(r0) i2, we get
dM(t) ≤ 1 + 4η(√+1)(d(t) + 1)(1 + η¾1⅛(t) + 1)(1 + 2dM(t))).
MM
Let M0(t + 1) be a positive integer depending on t and d(t) such that √^(d(t) + 1) ≤ ɪ. Let Us
reconsider ∀M ≥ M0(t + 1). Then, since η ≤ 1, we have
55
db ⑴ ≤ 2, |ar | ≤ 2 (Vs ≤t + 1).
From the derivation of (11) and (12) and since η ≤ 1, we have for 0 ≤ ∀s ≤ t + 1,
Iars)- aro)∣ ≤ d√⅛11, kbrs) -丛叫2 ≤ d2√⅛11,	(⑶
MM
where d1 (t + 1) and d2(t + 1) are set to
d1 (t + 1) = 6(t + 1)(d(t) + 1), d2 (t + 1) = 10(t + 1)(d(t) + 1).
We next bound |g@(t+i)(x)| for X ∈ ∀supp(ρχ) as follows. Since g@(o)≡ 0,
∣gθ(t+i)(x)| = ∣gθ(t+i)(χ) - gθ(0)(x)I
M
≤ √m χn∣(art+) - ar0))σ(br0)>χ)∣+∣art+1) (σ(brt+ )>x)) - σ(br0)>x)∣o
M
≤√M X {2 ∣art+1) - ar0)∣+4 卜尸 ∣ 忙1) - b，1}
≤ 2d1(t+ 1) + 10d2(t+ 1).
In summary, by setting M(t + 1) = max{M (t), 16(t + 1)2(d(t) + 1)2} and d(t + 1) = 2d1(t +
1) + 10d2(t + 1), we get igΘ(t+1) iL∞(ρX) ≤ d(t + 1) when M ≥ M(t + 1). We note that from
the above construction, d(t), d1 (t), d2(t) depend only on t and inequalities (13) are always hold for
∀t ∈ Z+ when M ≥ M(t + 1).
Linear approximation of the model. For a given T ∈ Z+, we consider ∀M ≥ M(T) and define
the neighborhood of Θ(0) = (a(r0), b(r0))rM=1 :
Bt(Θ(O)) d=f I (ar,br )r=ι ∈ (R × Rd+1)M I |ar I ≤ 5, |ar - ar0)∣ ≤ d√M, ∣br - br0)k2 ≤ d√
From Taylor,s formula ∣σ(b>x) - σ(br0)>x) - σ0(b(r0^τx)(br -40))>/| ≤ 2∣σ00k∞kbr - b(0)k2
and the smoothness ofσ, we get for Θ ∈ BT (Θ(0)) and x ∈ supp(ρX),
∣∣arσ(br>x) - (a(r0)σ(b(r0)>x) + (ar - a(r0))σ(b(r0)>x) + a(r0)σ0(b(r0)>x)(br - b(r0))>x)∣∣
≤ 4Iar - a(r0)Iibr -b(r0)i2+2CIarIibr -b(r0)i22
≤
2dι (T )d2(T)	5Cd2(T)
M +
(14)
M
18
Published as a conference paper at ICLR 2021
We here define a linear model:
M
Mx)	=	√m X W-	ar)"r)	X)	+ ar)σ0(br)	x)(br	- br)) x).
By taking the sum of (14) over r ∈ {1, . . . , M} and by gΘ(0) ≡ 0,
∣gθ (x) - hθ(x)∣ ≤
1 X (2dι(T)d2(T)	5Cd2(T) ∖
√M ⅛v—M —
1
≤ √M
(2dι(T)d2(T) + 5Cd2(T)).
We denote d3 (T) d=ef 2d1 (T)d2 (T) + 5Cd22(T). Since iterates (Θ(t))tT=0 obtained by Algorithm 1
are contained in BT(Θ(0)), weighted averages (Θ⑶)乜0 are also contained in BT(Θ(0)). Thus, We
get for ∀t ∈ {1, . . . , T},
ιgθ⑴(χ) — hθ(t) (x)| ≤ √M,	∣gθ(t) (x)- hθ(t) (x)| ≤ √M.	(i5)
Recursion of hΘ(t) using the random feature approximation of NTK.	We here derive a recur-
sion of hΘ(t) using kM. From the updates (9) and (10), we have
hΘ(t+1) (x)
M
^ ^X ((af+1) - ar0))σ(bro)>x) + °*°0以0)>/)(6!+1)-μ0))>/
r=1
M
=(1 - ηλ)hθ(t) (x) - M X(gθ(t) (xt) - yt)σ(brt)>xt)σ(br0)>x)
r=1
M
-M X a*σ'(b(OKx)(gee (xt) - yt)a(t)σ'(b(t"xt)x>x.	(16)
Note that for t ∈ {0, . . . , T},
∣(gθ(t) (xt) - yt)σ(brt)>xt) - (hθ(t) (xt) - yt)σ(br0)>xt)∣
≤ ∣(gθ(t) (xt) - hθ(t) (xt))σ(br0)>xt)∣ + ∣(gθ(t) (xt) - yt)(σ(brt)>xt) -。(丛0)>々))|
≤ 2√=) +4(d(T) + 1)|的)一队叫2
M
2
≤ √M (d3(T) + 2(d(T) + 1)d2(T)) ,
and
∣(gθ(t) (xt) - yt)art)σ0(brt)>xt) - (hθ(t) (xt) - yt)a*0σ(丛0)>々)[
≤ ∣(gθ(t) (xt) - hθ(t) (xt))ar0)σ0(br0)>xt)∣ + |(ge(t)(xt) - Iyt)(a，t。0解)>々) -。尹。0(丛0)>々))|
≤ 2d3≡ + (d(T) + 1)∣art)σ0(brt)>xt) - ar0)σ0(br0)>xt))∣
M
≤ 2√(T) + (d(T) + 1) n ∣ar0)(σ0(brt)>xt) - σ0(br0)>xt))∣ + |(a，)-。，))。0(5，)>々)|}
M
≤ 2√=T) + 2(d(T) + 1) {。|的)-丛叫2 + ∣art) - ar0)∣O
M
2d3(T)	2(d(T) + 1)
WF +
√M
(d1(T) +Cd2(T))
2
√M (d3 (T) + (d(T) + 1)(d1 (T) + Cd2(T))) .
19
Published as a conference paper at ICLR 2021
Plugging these two inequalities into (16), we have ∀t ∈ {1, . . . , T - 1},
M
hθ(t+i) (X) ≤ (1 - ηλ)hθ(t) (χ) - MM	(hΘ(t) (Xt) - yt)σ(b(r0)>Xt)σ(b(r0)>X)
M
-MMm Xσ0(br0)>X)(hθ(t) (Xt) - yt)σ0(bro)>Xt)X>x
r=1
+ √= (2d3(T) + (d(T) + 1)(dι(T) + (C +2)d2(T)))
M
1M
(1 - ηλ)hθ(t) (x) - η(hθ(t) (Xt) - yt)M X (σ(br0)>Xt)σ(br0)>x) + σ0(bro)>x)σ0(br0)>Xt)x>x
r=1
+ √= (2d3(T) + (d(T) + I) (d1(T) + (C + 2)d2(T)))
M
η
=(I - ηλ)hθ(t)(x) - η(hθ(t)(Xt) - yt)kM(x,Xt) + √^d4(T),
where d4(T) = 2d3(T) + (d(T) + 1) (d1 (T) + (C + 2)d2(T)). Clearly, the inverse inequality also
holds:
η
hθ(t+i)(X) ≥ (I - ηλ)hθ(t)(x) - η(hθ(t) (χt) - yt)kM(X, Xt) - √~^d4(T).
Thus, we get
η
lhθ(t+i)(X) - (1 - ηλ)hθ(t)(x) + η(hθ(t)(Xt) - yt)kM(x,Xt)I ≤ √~^d4(T).	(17)
Equivalence between Algorithm 1 and 2. We provide a bound between recursions of Algorithm
2 and (17). Noting that hΘ(0) ≡ g(0) ≡ 0, we have for ∀t ∈ {0, . . . , T - 1},
∣hθ(t+i)(χ) -g(t+1)(χ)∣ ≤ (1 - ηλ)∣hθ(t)(χ) -g(t)(χ)I + η∣hθ(t)(χt) -g⑶(Xt)|kM(χ,χt) + √=^d4(T).
Noting kkMkL∞(ρX) ≤ 12 and taking a supremum over X, Xt ∈ supp(ρX) in both sides, we have
khΘ(t+1) - g(t+1) kL∞(ρX) ≤ (1 - ηλ)khΘ(t) - g(t) kL∞(ρX) + ηkhΘ(t) - g(t) kL∞(ρX) kkMkL∞(ρX) + √Md4(T)
≤(I- ηλ+i2η)khθ⑴-g(t)kL∞(ρχ)+√η=d4(T)
≤ X(i + i2η)t-s√MMd4(T)
s=0
≤ -7^(1 + 12η)Td4(T).
Since hθ is a linear model, We have h^(τ)= PT=O αthθ(t and
TT
khθ(T) - g(T )kL∞(ρx) ≤ EatlIh㊀⑴-g(t)kL∞(ρχ) ≤ √≡ (1 + 12η)T d4(T).
t=0	M
Combining this inequality With (15), We finally have
kgθ(T) - g(T)l∣L∞(ρx) ≤ ∣∣gθ(T) - hθ(T) l∣L∞(ρχ) + llhθ(T)
-g(T)kL∞(ρx)
1
≤ √M
(d3(T) + 13TTd4(T)).
Because (d3 (T) + 13TTd4(T)) depends only on T and C from the construction, lgΘ(T) -
g(T)∣L∞(ρx) → 0 as M → ∞. This finishes the proof of Proposition A.	□
20
Published as a conference paper at ICLR 2021
C Proof of Theorem A
In this section, we give the proof of the convergence theory for the reference ASGD (Algorithm 2).
We introduce an auxiliary result for proving Theorem A.
def
Lemma A. Suppose Assumption (A1), (A2), and (A3) hold. Set ξ = YKm,x 一 (Km,x XHM
KM,X + λI)gM,λ. Then, for ∀λ > 0 and ∀δ ∈ (0, 1) there exists M0 > 0 such that for ∀M ≥ M0
the following holds with high probability at least 1 一 δ:
E(X,Y)〜ρ[ξ 名HM ξ] 4 2(I + kgP∣lL2(ρχ) + 24IN^gPkLzSx)»M.
Proof. Since ξ = (Y 一 gM,λ(X))KM,x 一 λgM,λ, we get
E[ξ XHM ξ] = E[(Y 一 gM,λ(X))2KM,x XHM KM,x]
一 λE[(Y 一 gM,λ (X))KM,x] XHM gM,λ
一 λgM,λ XHM E[(Y 一 gM,λ (X))KM,x]
+ λ2gM,λ XHM gM,λ .
We evaluate an expectation in the second and third terms in the right hand side of the above equation
as follows:
E[(Y 一 gM,λ(X))KM,x] = E[YKM,x 一 (KM,x XHM KM,x)gM,λ]
= E[YKM,x] 一 ΣM gM,λ
= E[YKM,x] 一 ΣM(ΣM + λI)-1E[YKM,x]
= E[YKM,x] 一 (ΣM + λI 一 λI)(ΣM + λI)-1E[YKM,x]
= λ(ΣM + λI)-1E[YKM,x]
= λgM,λ .
Hence, we get
E[ξ XHM ξ] 4 E[(Y 一 gM,λ(X))2KM,x XHM KM,x].
For h ∈ HM,
E[(Y 一 gM,λ (X))2KM,x XHM KM,x]h, hHM
= E[(Y 一 gM,λ (X))2 h(KM,x XHM KM,x)h, hi HM ]
≤ IY 一 gM,λ(X)I2L∞(ρX)E[h(KM,x XHM KM,x)h, hiHM]
≤ 2(1 + IgM,λI2L∞(ρX))E[h(KM,x XHM KM,x)h, hiHM],
(18)
where we used Assumption (A2) for the last inequality.
Finally, we provide an upper-bound on ∣∣gM,λ∣∣L∞(ρχ). Since ST - TT = -ST(S - T)TT for
arbitrary operators S and T, we get
Il (N∞ + λI 厂1 一(ςm + λI 厂1) gρkLz(ρχ)
= I(Σ∞ + λI)-1 (Σ∞ 一 ΣM)(ΣM + λI)-1gρIL2(ρX)
= I(Σ∞ + λI)-1IopIΣ∞ 一 ΣM Iop I(ΣM + λI)-1IopIgρIL2(ρX)
≤ λ IIς∞ - ςM Ilop kgPkL2(ρχ).	(19)
We denote	F∞	=	(Σ∞	+ λI)-1gρ	and	FM	=	(ΣM	+ λI)-1gρ.	Noting	g∞,λ = Σ∞ F∞	and
gM,λ = ΣMFM, we get for ∀x ∈ supp(ρx),
∣g∞,λ(x) - gM,λ(x)∣ = ∣∑∞F∞(x) - ∑M FM (x)|
K∞,x(X)F∞(X)dρx 一	KM,x(X)FM(X)dρx
X
(K∞,x 一 Km,x)(X)F∞(X)dρx 一 K Km,x(X)(Fm(X) — F∞(X))dρx
X
≤ kK∞,x 一 KM,xkL2(ρX)kF∞ kL2(ρX) + kKM,xkL2(ρX)kFM 一 F∞ kL2(ρX)
1	12
≤ λ kk∞ -kM kL∞(ρx )2 kgPkL2(ρx) + λ IIς∞ 一 ςM kopkgρkL2(ρχ),
21
Published as a conference paper at ICLR 2021
where we used kM (x, x0) ≤ 12 for ∀(x, x0) ∈ supp(ρX) × supp(ρX) and inequality (19).
Moreover, we get
lg∞,λ(X)I = | hg∞,λ, Kxih∞ |
≤ kKx kH∞ kg∞,λ kH∞
≤ 2√3k∑∞(∑∞ + λI)-1gρkH∞
≤ 2√3k∑∞+r(∑∞ + λI)-1∑∞rgρkH∞
≤ 2√3k∑∞+r(∑∞ + λI)-1∑∞rgρkL2(ρχ)
≤ 2√3k∑∞+r (∑∞ + λI )-1kopk∑∞r gρkL2(ρχ )
≤ 2√3k∑∞rgρkL2(ρχ).
(20)
where We used Assumption (A3) and the isometric map Σ∞2 : L2(ρχ) → H∞.
Hence, we get
kgM,λkL∞(ρX) ≤ (λ kk∞ - kM l∣L∞(ρx )2 + λ IIς∞ - ςM l∣op) kgρl∣L2(ρχ) + 2√3∣ς∞ gρ kL2 (ρX ) .
By the uniform law of large numbers (Theorem 3.1 in Mohri et al. (2012)) and the Bernstein’s
inequality (Proposition 3 in Rudi & Rosasco (2017)) to random operators, kk∞ - kMkL∞(ρX ×ρX)
and kΣ∞ - ΣM kop converge to zero as M → ∞ in probability. That is, for given λ > 0 and
δ ∈ (0, 1), there exists M0 such that for any M ≥ M0 the following holds with high probability at
least 1 - δ:
kgM,λ∣∣L∞ (PX) ≤ 2 kgPkL2(ρx) + 2√3∣∣ς∞ gρ kL2 (ρX ) .
Combining with (18), we get
〈E[(Y — gM,λ(X))2KM,X XHM KM,X]h, h)HM
≤ 2(1 + kgρkL2(ρχ) + 24k∑∞rgρkL2(ρχ))E[h(KM,x XHM KM,X)h, hiHM].
□
Proof of Theorem A. Since, stochastic gradient in HM is described as
Gtt = dz '(g(t) (Xt)Jyt )kM (Xt, ∙) = (DKM,xt ,g(t)E* - yt) KMxt,
the update rule of Algorithm 2 is
g(t+1) = (1 - ηλ)g(t) - η DKM,xt, g(t)E	- yt KM,xt
= (I - ηKM,xt XHM KM,xt - ηλI) g(t) + ηytKM,xt.
Hence, we get
g(t+1) - gM,λ = (I - ηKM,xt XHM KM,xt - ηλI) (g(t) - gM,λ)
'----------------{z----------------'、-----{z-----}
=αt	=At
-η(KM,xt XHM KM,xt + λI)gM,λ + ηytKM,xt .
X-----------------------{------------------------}
=βt
(21)
This leads to the following stochastic recursion: t ∈ {0, . . . , T - 1},
t	tt
At+1 = αtAt + βt =	αsA0 +	αsβs .
s=0	s=0 l=s+1
22
Published as a conference paper at ICLR 2021
By taking the average, we get
1
T +1
T
XAt
t=0
1 Tt
T⅛ XYαs A0 +
t=0 s=0
Bias term
Tt t
T⅛ XX Y ɑsβs .
t=0 s=0 l=s+1
(22)
Noise term
Thus, the average AT is composed ofbias and noise terms. We next bound these two terms, separately.
Bound the bias term. Note that the bias term exactly corresponds to the recursion (21) with
βt = 0. Hence, we consider the case of βt = 0 and consider the following stochastic recursion in
HM: A0 = -gM,λ,
At+1 = (I - ηHt - ηλI)At,
where we define Ht = Km,x± XHM Km,x± . In addition, we consider the deterministic recursion of
this recursion: A00 = A0,
A0t+1 = (I - ηΣM - ηλI)A0t .
We set
—	1 N —	1 三.
AT = T+1XAt, A0T = T+1XAt.
Then, the bias term we want to evaluate is decomposed as follows: by Minkowski’s inequality,
(E[kATkL2(ρx)])1 ≤ kA7TK(ρχ) + (E[kAT - A7TkL2(ρχ)])2 .	(23)
We here bound the first term in the right hand side of (23). Note that from 4(6 + λ)η ≤ 1 and
kkMkL∞(ρχ)2 ≤ 12,wesee1 η(∑M + λI) 4 η(12+λ)I Y 11. SinceAt = (I-η∑M-nλI)tgM,λ,
its average is
T
——	1 L ∙	1	-,
A0T = T + 1 £ At	=	η(τ + 1)Nm +	λI)	(I	- (I - η∑M	- ηλ) 十	)gM,λ.
Therefore,
IIA0T l∣L2(ρχ) = η(τ + 1) IKςM + λI )T (I - (I - η∑M - ηλ)T +1)gM,λkL2(ρX)
≤ η(τ: 1)"ςM + λI)-1gM,λkL2(ρχ).	(24)
We bound the second term in (23), which measures the gap between AT and A0T. To do so, we
consider the following recursion:
At+1 - A0t+1 = At - A0t - η(Ht + λI)(At - A0t) + η(ΣM - Ht)A0t.
Hence, we have
IAt+1 - A0t+1I2HM = IAt - A0t I2HM
- η hAt - A0t, (Ht + λI)(At - A0t) - (ΣM - Ht)A0tiHM
- η h(Ht + λI)(At - A0t) - (ΣM - Ht)A0t, At - A0tiHM
+ η2I(Ht + λI)(At - A0t) - (ΣM - Ht)A0tI2HM .
1In general, for any operator F : L2 (ρX) → L2 (ρX) that commutes with ΣM and has a common eigen-
bases with ΣM, it follows that F(HM) ⊂ HM and inequality F < 0 in L2(ρX) is equivalent with F |HM < 0.
Hence, we do not specify a Hilbert space we consider in such a case for the simplicity.
23
Published as a conference paper at ICLR 2021
Let (Ft)tT=-01 be a filtration. We take a conditional expectation given Ft:
E[kAt+1 - A0t+1k2HM | Ft] ≤ kAt - A0tk2HM - 2η h(ΣM + λI)(At - A0t), At - A0tiHM
+ 2η2E[k(Ht + λI)(At - A0t)k2HM |Ft]	(25)
+ 2η2E[k(ΣM - Ht)A0tk2HM | Ft],	(26)
where we used kg + hk2HM ≤ 2(kgk2HM + khk2HM).
For g ∈ HM, we have
〈E[(KM,xt XHM KM,Xt)2]g,g>HM = E [〈 (KM,xt XHM KM,xt )2 9,9〉制霞]
= E	hKM,xt , giHM (KM,xt XHM KM,xt )KM,xt , g
HM
E
kM(xt, xt)KM,xt , g
HM
= E hKM,xt , gi2HM kM(xt, xt)
≤ 12E hhKM,xt, gi2HM i
= 12 hE [KM,xt XHM KM,xt] g, giHM .
(27)
where we used kM(xt, xt) ≤ 12 which is confirmed from the definition of kM and Assumption (A2).
This means that E[Ht2] = E[(KM,xt XHM KM,xt )2] 4 12ΣM on HM × HM. Hence, we get a
bound on (25) as follows:
E[k(Ht + λI)(At - 4)∣∣Hm | Ft] = EK(Ht + λI)2(At - At), At- A)HM | Ft]
=<(λ2I + 2Xςm + E[(KM,χt XHM KM,Xt)2]) (At- At), At- At)HM
≤ <(λ2I + 2(6 + λRM) (At- At), At- At)Hj
M
Next, we bound a term (26):
E[k(ΣM-Ht)A0tk2HM |Ft] =E[(ΣM-Ht)2A0t,A0t)HM |Ft]
=E[(Σ2M-ΣMHt-HtΣM+Ht2)A0t,A0t)HM |Ft]
= (E[Ht2] -Σ2M)A0t,A0t)HM
≤ E[Ht2]A0t,A0t)HM
≤ 12hΣMA0t,A0tiHM .
Combining these inequalities, we get
E[kAt+1 - A0t+1k2HM |Ft] ≤kAt-A0tk2HM-2ηh(ΣM+λI)(At-A0t),At-A0tiHM
+ 2η2 <(λ2I + 2(6 + λRM) (At- At), At- At)HM
+ 24η2 hΣMA0t,A0tiHM
= (1 - 2λη+ 2λ2η2)kAt - A0tk2HM - 2ηhΣM (At - A0t), At - A0tiHM
+ 4η2(6 + λ) hΣM (At - A0t), At - A0tiHM
+ 24η2 hΣM A0t, A0tiHM
≤ kAt - A0tk2HM - η hΣM (At - A0t), At - A0tiHM
+ 24η2 hΣMA0t,A0tiHM,	(28)
where for the last inequality we used 4η(6 + λ) ≤ 1.
By taking the expectation and the average of (28) over t ∈ {0, . . . , T - 1}, we get
1 T	24η T
T+1 X hΣM(At - At), At - At)HM ≤ T+1 X h*MAt, At)HM .
T+1 t=0	T+ 1 t=0
24
Published as a conference paper at ICLR 2021
Since ∑M2 : L2(ρx) → HM is isometric, We See ∣∣∑M2(At - AQIIhm = ∣∣At - At∣∣L2(ρχ). Thus,
the second term in (23) can be bounded as follows:
E[∣At - ATkL2(ρχ)]= E[∣∑M2(At - AT)∣Hm]
1T
≤ τ+1 XE[kHM2(At -4)∣Hm]
T
≤ T +1 X ∣ςm2AtkHM
τ+ 1 t=0
T
=τ +1 X kHM2(I - nHM - ηλI)tgM,λkHM
τ+ 1 t=0
24η
T+
-^M - ηλIYtHMZgMk, ςm∕2gMλ I
HM
24
≤ -——
一τ +1
_	24
=T +1
DNm + λI)-1夕匕2gM,λ, ςM2gM,λE
HM
∣KςM + λI 厂"2gM,λ∣∣L2(ρχ)
(29)
Where We used the convexity for the first inequality and We used the folloWing inequality for the last
inequality: since kkMkL∞(ρχ)2 ≤ 12 and η(∑M + λI) 4 η(12 + λ)I 4 21,
T
X(I-ηΣM-
t=0
ηλI)2t 4 —(ςm + λI)-1.
η
By plugging (24) and (29) into (23), We get the bound on the bias term:
E[kAτ kL2(ρX)] ≤ 2kA0Tl∣L2(ρχ) + 2E[kAT - A0Tl∣L2(ρχ)]
2	242
≤ η2 (T + 1)2 k(*M + λl)	gM,λkL2(ρx) + T+1 k("M + λI) g gM,λkL2(ρx).
(30)
Bound the noise term. Note that the noise term in (22) exactly corresponds to the recursion (21)
with Ao = 0. Hence, it is enough to consider the case of Ao = 0 to evaluate the noise term. In this
case, the average AT can be rewritten as follows:
Tt t	TT t
AT	= τ4l	XX	Y	αιβs	= T+1	XX	Y	αιβ .
t=o s=o l=s+1	s=o t=s l=s+1
X----{z-----}
=Zs
We here evaluate the noise term. We set zs = (xs, ys). Note that since Ezs [βs] = 0, we have for
s < s0,
E(zs,...,zT)
, Zs0 iL2(ρX )
s ,...,zT )
Ttr	β
11 al一
η
l=s+1
JVl N IdPX
加 zs[βs]E(Z-) [βs0 (XXl∏ι 力(E1=⅛1 力]dρX
0.
25
Published as a conference paper at ICLR 2021
Therefore, we have
2
E[kATkL2(ρx)] = (T+1)2 E
2
=(T +1)2 E
T	2
X Zs
s=0	L2 (ρX)
T
X hZs, Zs0 iL2 (ρX)
s,s0=0
η2
(T + 1)2
T
XE hZs,ZsiL2(ρX)
s=0
2T
(T+1)2 X E [惶弘2&&].
(31)
Here, we apply Lemma 21 in Pillaud-Vivien et al. (2018a) with A = ΣM, H = ΣM + λI, C =
2(1+kgρk2L2(ρX)+24kΣ-∞rgρk2L2(ρX))ΣM . One of required conditions in this lemma is verified by
Lemma A. We verify the other required condition described below:
E [(Km,x 0h Km,x + λI)CH-1(Km,x XH Km,x + λI)] 4 ηC.	(32)
Indeed, we have
E [(KM,X XH KM,X + λI)CH-1(KM,X XH KM,X + λI)]
= E [KM,X XH KM,X CH-1KM,X XH KM,X ] + 2λΣMCH-1 + λ2CH-1
4 E [KM,X XH KM,X CH-1KM,X XH KM,X ] + 6λ(1 + kgρk2L2(ρX) + 24kΣ-∞rgρk2L2(ρX))ΣM,
where we used ΣM (ΣM + λI)-1 4 I and λ(ΣM + λI)-1 4 I. Moreover, we see
E [KM,X XH KM,X CH-1 KM,X XH KM,X]
= 2(1 + kgρk2L2(ρX) + 24kΣ-∞rgρk2L2(ρX))E [KM,X XH KM,XΣM(ΣM + λI)-1KM,X XH KM,X ]
4 2(1 + kgρk2L2(ρX) + 24kΣ-∞rgρk2L2(ρX))E [(KM,X XH KM,X)2]
424(1+kgρk2L2(ρX)+24kΣ-∞rgρk2L2(ρX))ΣM,
where we used (27) for the last inequality. Hence, we get
E [(KM,X XH KM,X + λI)CH-1 (KM,X XH KM,X + λI)]
4 (24+6λ)(1+kgρk2L2(ρX)+24kΣ-∞rgρk2L2(ρX))ΣM.
Since, 4η(6 + λ) ≤ 1, the condition (32) is verified. We apply Lemma 21 in Pillaud-Vivien et al.
(2018a) to (31), yielding the following inequality:
E[kATkL2(ρx)] ≤	T+1	(1 +	kgρ kL2 (ρX )	+ 24k∑∞rgρkL2(ρχ)) Tr (∑M(∑m + λI)-2)
≤	T +1	(1 +	kgPkL2(ρχ)+ 24|加投gρkL2(ρχ)) Tr (∑m(∑m + λI)-1)	.(33)
Convergence rate in terms of the optimization. Finally, by combining (30) and (33) with (22),
we get the convergence rate of averaged stochastic gradient descent to gM,λ :
E Hg(T) - gM,λ^L2(ρχ)_ ≤ η2(T4+1)2 k(*M + λl)- 1gM，ikL2(Px)
+ T + 1 ”(ςm + λI 厂"gM,λkL2(ρχ)
8
+ T +1 (1 + kgPkL2(ρχ)+ "N-JgpkLzSx)) Tr (ςm(ςm + λI) 1),
where g(T) deef T+1 PL g(t). This finishes the proof.	口
26
Published as a conference paper at ICLR 2021
D	Proof of Proposition B
We provide Proposition B which provides the bound on Theorem A.
Proof of Proposition B. From the Bernstein’s inequality (Proposition 3 in Rudi & Rosasco (2017))
to random operators, the covariance operator ΣM converges to Σ∞ as M → ∞ in probability.
Especially, there exits M0 ∈ Z+ such that for any M ≥ M0 , it follows that with high probability at
least 1 - δ, Σ∞ - ∑m 4 2(Σ∞ + λI) in L2(ρx). Thus, for ∀f ∈ L2(ρx), We see
D(Σ∞ + λI)-^2(Σ∞ - ∑m)(Σ∞ + λI)-1/2f,fE
L2(ρX)
=D(∑∞ - ∑m )(∑∞+λi)—i/2 f, (∑∞+λi)-1/2f E
L2(ρX)
≤ 2 D(∑∞ + λI)(Σ∞ + λI)-1/2f, (Σ∞ + λI)-1/2f〉工2(”)
=2 kf k L2(pχ).
Hence, We have
(ς∞ + λI厂1∕2(ς∞ - ςmXς∞ + λI厂1/2 4 2I.
FolloWing the argument in Bach (2017b), We have for ∀f ∈ L2 (ρX ),
(ΣM + λI)-1f, fL2(ρX)
= (Σ∞ + λI + ΣM - Σ∞)-1f, fL2(ρX)
=(Il + (∑∞ + λI )-1/2 (∑M - Σ∞)(Σ∞ + λI )-1/2 )-1 (Σ∞ + λI )-1/2f, (Σ∞ + λI )-1/2f\
L2(ρX)
=2 D(Σ∞ + λI)-1/2f, (Σ∞ + λI)-1/2f E
L2(ρX)
= 2 (Σ∞ + λI)-1f, fL2(ρX).
Thus, We confirm that With high probability at least 1 - δ,
(ΣM + λI)-1 4 2(Σ∞ + λI)-1	(34)
Utilizing this inequality, We shoW the first and second inequalities in Proposition B as folloWs. It is
sufficient to prove the second inequality because of
∣∣(ςM + λI厂lgM,λ∣∣L2(ρχ)≤ λ II(ςm + λI厂"2gM,λ∣∣L2(ρχ)
Noting that gρ ∈ H∞ and gM,λ = (ΣM + λI)-1ΣMgρ, We get
∣∣(ςM + λI 厂“2gM,λ∣∣L2(ρχ) = ∣∣(ςm + λI 厂1∕2(ςm + λI )-1夕M gρ∣∣L2(ρχ)
≤k(∑M + λI )T2gρkL2(ρχ)
≤ 2k(∑∞ + λI)-1/2gpkL2(px)
≤ 2∣∣∑∞1∕2gρkL2(ρχ)
= 2kgρk2H∞ .
The third inequality on the degree of freedom is a result obtained by RUdi & Rosasco (2017).	□
E Eigenvalue Analysis of Neural Tangent Kernel
E. 1 Review of Spherical Harmonics
We briefly revieW the spherical harmonics Which is useful in analyzing the eigenvalues of dot-product
kernels. For references, see Atkinson & Han (2012); Bach (2017a); Bietti & Mairal (2019); Cao et al.
(2019).
27
Published as a conference paper at ICLR 2021
Here, we denote by τd-1 is the uniform distribution on the sphere Sd-1 ⊂ Rd. The surface area of
Sd-1 is ωd-ι = Γ2∏d/) where Γ is the Gamma function. In L2(τd-1), there is an orthonomal basis
consisting of a constant 1 and the spherical harmonics Ykj (x), k ∈ Z≥1, j = 1, . . . , N(d, k), where
N (d, k) = 2k+d 2 ( d _ 2	) . ThatiS, hYki ,YSj i L2(τd-1) = δks δij and hYki，liL2(τd-1) = 0.
The spherical harmonics Ykj are homogeneous functions of degree k, and clearly Ykj have the same
parity as k.
Legendre polynomial Pk(t) of degree k and dimension d (a.k.a. Gegenbauer polynomial) is defined
as (Rodrigues’ formula):
Pk(t) = (-1∕2)k γ r(+d-i) (1 ― t2)(3 j (ddt j (1 ― t2)k+(d-3)/2
Legendre polynomials have the same parity as k. This polynomial is very useful in describing several
formulas regarding the spherical harmonics.
Addition formula. We have the following addition formula:
N(d,k)
X Ykj(x)Ykj(y) =N(d,k)Pk(x>y),	∀x, ∀y ∈ Sd-1.	(35)
j=1
Hence, We see that Pk (χ> ∙) is spherical harmonics of degree k. Using the addition formula and the
orthogonality of spherical harmonics, we have
P	Pj (Z Tx)Pk (Z >y)dτd-ι(Z) = -δjk- Pk (χ>y).	(36)
Sd-1	N(d, k)
Combining the following equation: for x = ted + √1 _ t2x0, (x ∈ Sd-1,x0 ∈ Sd-2, t ∈ [—1,1]),
ωd-1 dτd-ι(x) = (1 — t2)(d-3"2dtdτd-2(x0),
ωd-2
we see the orthogonality of Legendre polynomials in L2([_1, 1], (1 _ t2)(d-3)/2dt) and since
Pk (1) = 1 we see
「Pk⑻(1- t2)(d-3"2dt =山 vɪ.
-1	ωd-2 N(d, k)
Recurrence relation. We have the following relation:
k	k +d _ 2
k(t) = 2k + d - 2PkTg + 2k + d - 2Pk+1(t),
for k ≥ 1, and for k = 0 we have tP0(t) = P1(t).
(37)
Funk-Hecke formula. The following formula is useful in computing Fourier coefficients with
respect to spherical harmonics via Legendre polynomials. For any linear combination Yk of Ykj ,
(j ∈ {1, . . . , N(d, k)}) and any f ∈ L2([-1, 1], (1 - t2)(d-3)/2dt), we have for ∀x,
L f(xTy)K(y)dτd-ι(y) = ωd-2Yk(x)∕1j(t)Pk(t)(1- t2)(d-3”2dt.
(38)
This formula say that spherical harmonics are eigenfunctions of the integral operator defined by
f(xTy) and each eigen-space is spanned by spherical harmonics of the same degree. Moreover, it
also provides a way of computing corresponding eigenvalues.
28
Published as a conference paper at ICLR 2021
E. 2 Eigenvalues of Dot-product Kernels
Let μo be the uniform distribution on Sd-1. Note that although τd-ι and μo are the same distribution,
We use two distributions τd-ι and μo depending on random variables. First, We consider any
activation function σ : R → R and a kernel function k(x,x0)= 旧从。)〜*0 [σ(b(0) x)σ(b(0) x0)]
on the sphere Sd-1. We shoW this kernel function is a type of dot-product kernels, that is, there

is k : R → R such that k(x, x0) = k(x>x0). In fact, it can be confirmed as follows. For any
x, x0 ∈ Sd-1, we take θ ∈ [0, π] so that x>x0 = cos θ, and an orthogonal matrix A ∈ Rd×d so that
Ax = (1, 0, . . . , 0)> and Ax0 = (cos θ, sin θ, 0, . . . , 0)> because A preserves the value of x>x0.
Then, since μo is rotationally invariant we see
k(x,x0)= [	σ(b(0)>Ax)σ(b(0)> Ax0)dμo(b(0))
Sd-1
=[	σ(bι0))σ(bι0) cos(θ) + b20) sin(θ))dμo(b(0)),
Sd-1
where b(0) = (b01, b(20), . . . , b(d0)). In other words, we see k is a function of θ = arccos (x>x0), and is
a dot-product kernel k(x, x0) = R(x>x0). Hence, we can apply Funk-Hecke formula (38) to k(x, ∙).
The derivation of eigenvalues of the integral operator follows a way developed by Bach (2017a);
Bietti & Mairal (2019); Cao et al. (2019). In general, g ∈ L2(τd-1) can be decomposed by spherical
harmonics as follows.
∞ N(d,k)
g -	g(Z)dτd-1(Z) = X X hg, YkjiL2(τd-1) Ykj
Sd-1	k=1 j=1	2 d-1
∞ N(d,k)
=XX	g(Z )Ykj (Z)Ykj (∙)dτd-i(Z)
k=1 j=1 Sd-1
∞
=XN(d,k) /	g(Z∙)Pk(Z>∙)dτd-ι(Z),
k=1	Sd-1
where we used addition formula to the last equality.
(39)
T T	1 .1 ∙ 1	∙ . ∙	∕CC∖,7/	∖	1 / ^Γ ∖ <-1 ∙	I -> / Γ7~∖~ ∖ ∙	1 ∙	Λ ∙ . ∙
Here, we apply this decomposition (39) to k(x, ∙) = k(x 1 ∙). Since Pk(Z 1 ∙) is a linear combination
of spherical harmonics of degree k (see addition formula), We get
k(x, ∙) -	k(x>
Sd-1
∞
Z)dτd-1(Z) =XN(d,k)
k=1
∞
X
k	k(x>Z )Pk (Z >∙)dτd-i(Z)
Sd-1
ʌ	~Γ .
λk N(d,k)Pk (χ>∙),
(40)
k=1
where we used Funk-Hecke formula (38) and we set λk = ωd-2 R-ι k(t)Pk(t)(1 -12)(d-3"2dt. We
note that λk is eigenvalue with multiplicity N(d, k) of the integral operator defined by k.
Next, we derive another expression of k. In a similar way, we obtain the following equation:
∞
σ(b(0)>x) - /	σ(Z>x)dτd-i(Z) = XμkN(d,k)Pk(b(0)>x),
Sd-1	k=1
where μk = ωd-2 R'1 σ(t)Pk(t)(1 - t2)(d-3)/2dt. By the definition of k and the orthogonality of
spherical harmonics, we get
(x, x0) = Eb(0) hσ(b(0)>x)σ(b(0)>x0)i
=	σ(Z>x)dτd-1(Z)	σ(Z>x0)dτd
Sd-1	Sd-1
∞
-1(Z)+ X μkN2(d,k)Eb(0) [Pk(b⑼>x)Pk (b(0)>x0)]
k=1
∞
σ(Z>x)dτd-1(Z)
Sd-1	Sd-
σ(Z>x0)dτd-i(Z) + E μkN(d, k)Pk(x>x0),	(41)
1	k=1
29
Published as a conference paper at ICLR 2021
where we used equation (36). By the rotationally invariance, we can show
/	R(x>Z)dτd-i(Z) = /	σ(Z>x)dτd-i(Z) /	σ(Z>x0)dτd-i(Z).
Thus, comparing (40) with (41), We get λk =昧.
E. 3 Eigenvalues of Neural Tangent Kernels
Utilizing a relation 黑 =μk, we derive a way of computing eigenvalues of the integral operator
defined by the integral operators Σ∞ associated with the activation σ. Recall the definition of the
neural tangent kernel:
k∞(x,x) =f Eb(0)~μ0 [σ(b(0)>x)σ(b(0)>xo)] + (x>x0 + Y2)旧从0)~*。[σ0(b(o)>x)σ0(b⑼>x0)].
A neural tangent kernel consists of three kernels:
hι(x,x0) = Eb(0)~μ0 [σ(b⑼>x)σ(b(0)>x0)i ,
h2(x,x0) = Eb(0)~μ0 hσ0(b(0)>x)σ0(b(o)>x0)i ,
h3(x,x0) = x>x0Eb(0)~μ0 hσ0(b(0)>x)σ0(b(o)>x0)i .
By the argument in the previous subsection, hi and h2 are dot-product kernel, that is, there exist hi
and h2 such that hi(x, x0) = hi(x>x0) and h2(x, x0) = h2(x>x0). Moreover, h3 is a dot-product
kernel as well because we get h3(x, x0) = h3(x>x0) by setting h3(t) = th2(t). Hence, theory
explained earlier is applicable to these kernels.
Eigenvalues μk for kernels hi and h2 are described as follows:
Zi
σ(t)Pk(t)(1- t2)(d-3"2dt,
i
ωd-2 J ɪ σ0(t)Pk(t)(1 - t2)(d-3"2dt,
(42)
(43)
yielding eigenvalues 乂1) = (μf) )2 and 乂2)=(m)2 for hi and h2, respectively. As for eigenval-
ues λk3) for h3, we have
ωd-2 / 1
ωd-i √-i
k
th2(t)Pk(t)(1 - t2)(d-3)/2dt
ωd-2
2k + d - 2 ωd-i
k + d — 2 ωd-2
+ 2k + d - 2 ωd-ι
k	(2)
∕iJ2(t)Pk-i(t)(1-12 )(d-3)/2dt
∕iJ2 (t)Pk+ι(t)(i - t2)(d-3”2dt
k + d - 2 (2)
_________ I (%) _|_ _ ' - 一 ^(4)
2k + d - 2λk-i + 2k + d - 2λk+i,
where we used the recurrence relation (37). Since, hi, h2, and h3 have the same eigenfunctions,
eigenvalues λ∞,k of k∞ is
^
λ∞,k
+ ~2^⑵ + k ^(2) + k + d - 2 ^(2)
+ Y k + 2k + d - 2λk-i + 2k + d - 2λk+1.
(44)
Hence, calculation of {λ∞,k}∞=i results in computing μf) and 谓 for given activation σ.
30
Published as a conference paper at ICLR 2021
Eigenvalues for ReLU and smooth approximations of ReLU. As for ReLU activation, its eigen-
values were derived in Bach (2017a). Let σ be ReLU. Then, μf) = 0 and μk2) 〜k-d/2 when k is
odd and μk1) 〜k-d/2-1 and μk2) = 0 when k is even. Consequently, we see λ∞,k = Θ(k-d).
We note that the multiplicity of λ∞,k is N(d, k), so that we should take into account the multiplicity
to derive decay order of eigenvalues λ∞,i of Σ∞. Since 1 + Pjk=1 N(d- 1, j) = N(d, k) (for details
see Atkinson & Han (2012)), we see λ∞,N(d+1,k) = Θ(k-d). Moreover, N(d + 1, k) = Θ(kd-1)
yields λ∞,N(d+i,k)= Θ (N(d + 1, k)-1-d-1). As a result, Assumption (A4) is verified with
β = 1 + d-1 for ReLU.
For the smooth approximation σ(s) of ReLU satisfying Assumption (A1’), we can show that every
eigenvalue of Σ(∞s) derived from σ (s) converges to that for ReLU as s → ∞ because of (42) and (43)
with Lebesgue’s convergence theorem.
F Explicit Convergence Rates for Smooth Approximation of ReLU
For convenience, we here list notations used in this section. In this section, let σ and σ(s) be ReLU
activation and its smooth approximation satisfying (A1’), respectively, and for M ∈ Z+ ∪ {∞} let
kM, ΣM, gM,λ, kM(s), Σ(Ms), gM(s),λ be corresponding kernel, integral operators, and minimizers of the
regularized expected risk functions. Let g(T) be iterates obtained by the reference ASGD (Algorithm
2) in the RKHS associated with kM(s).
We consider the following decomposition:
3kg(T) - gρkL2(ρχ) ≤ kg(T) - gMlλkL2(ρχ)	(45)
+ kgM(s),λ - g∞(s),λk2L2(ρX)	(46)
+ kg∞(s),λ - g∞,λk2L2(ρX)	(47)
+ kg∞,λ - gρk2L2(ρX).	(48)
These terms can be made arbitrarily small by taking large M and s. As for (48) this property is a
direct consequence of Proposition D. Note that Proposition C is not applicable to (46) because this
proposition require the specification of the target function by k∞(s) which does not hold in general.
In the following, we treat the remaining terms.
Proposition E. Suppose (A1’) and (A2’) hold. Then, we have
1.	plimM →∞kkM(s) - k∞(s) kL∞(ρX)2 = 0, lims→∞ kk∞(s) - k∞kL∞(ρX)2 = 0,
2.	plimM →∞ Tr Σ(Ms) - Σ(∞s)	= 0, lim
s→∞ Tr Σ(∞s) - Σ∞	= 0,
3.	plimM →∞ kgM,λ - g∞,λ kL∞ (ρX) = 0, lims→∞ kg∞,λ - g∞,λ kL∞(ρX ) = 0,
where plim denotes the convergence in probability.
Proof. We show the first statement. By the uniform law of large numbers (Theorem 3.1 in Mohri
et al. (2012)), we see the convergence in probability:
- k∞(s)kL∞(ρX)2
≤ sup
x,x0 ∈Sd-1
M
—X σ(S) (br0)>x)σ(S) (br0)>x0) - Eb(0) [σ(S) (b(O)>x)σ(S) (b(O)>x0)]
r=1
+ (1 + γ2) sup
x,x0 ∈Sd-1
M
ɪ Xσ(S)0(br0)>x)σ(S)0(br0)>X)- Eb(0) [σ(S)0(b(O)>x)σ(S)0(b(O)>x0)]	→ 0,
r=1
31
Published as a conference paper at ICLR 2021
where the limit is taken with respect to M → ∞ and the notation -→p denotes the convergence in
probability. Next, we have the following convergence:
kk∞(s)-k∞kL∞(ρX)2 ≤ sup Eb(0) hσ(s)(b(0)>x)σ(s)(b(0)>x0) - σ(b(0)>x)σ(b(0)>x0)i
x,x0∈Sd-1
+ (1 + γ2)	sup	Eb(0) hσ(s)0 (b(0)>x)σ(s)0 (b(0)> x0) - σ0(b(0)>x)σ0(b(0)>x0)i
x,x0 ∈Sd-1
≤ 4 sup	Eb(0)	hσ(s) (b(0)>x)	- σ(b(0)>x)i + 4(1 +	γ2)	sup	Eb(0)	hσ(s)0 (b(0)> x)	-	σ0(b(0)>x)
x∈Sd-1	x∈Sd-1
= 4 hσ(s)(b(0)>e1) -σ(b(0)>e1)i +4(1 +γ2)Eb(0) σ(s)0(b(0)>e1) -σ0(b(0)>e1) → 0,
where for the first inequality we used the boundedness of σ, σ0, σ(s) , and σ(s)0 on [-1, 1], for the
equality We used the rotationally invariance of the measure μo, and the limit is taken with respect
to s → ∞. For the final convergence in the above expression we used Assumption (A1’) and
boundedness with Lebesgue’s convergence theorem.
In general, for a kernel k and associated integral operator Σ with ρX, we have Tr (Σ) =
RSd-1k(X,X)dρX.Hence, Tr Σ(Ms) -Σ(∞s) ≤ kkM(s)-k∞(s)kL∞(ρX)2 and Tr Σ(∞s) -Σ∞ ≤
kk∞(s) - k∞kL∞(ρX)2, and the second statement holds immediately.
Finally, we show the third statement. In the same manner as the derivation of inequality (19), we get
k((∑M) + λI)-1 - (∑∞) + λI)-1)gρkL2(ρχ) ≤ Bk∑M) - Σ∞)kopkgρkL2(ρX).
We denote FM(s) = (Σ(Ms) + λI)-1gρ and F∞(s) = (Σ(∞s) + λI)-1gρ. Noting gM(s),λ = Σ(Ms)FM(s) and
g∞(s),λ = Σ(∞s)F∞(s), we get for x ∈ Sd-1,
|gM)i(X)-g∞)λ(X)I
= Σ(Ms)FM(s)(x) -Σ(∞s)F∞(s)(x)
= Z KM(s),x(X)FM(s)(X)dρX-Z K∞(s),x(X0)F∞(s)(X0)dρX
XX
= Z (KM(s),x-K∞(s),x)(X)FM(s)(X)dρX-Z K∞(s),x(X)(FM(s) -F∞(s))(X)dρX
≤ kKM,x - K∞,x kL2(ρX) kFM kL2(ρX )+kK∞(s),xkL2(ρX)kFM(s) -F∞(s)kL2(ρX)
≤ λ kkM) - k∞∞)kL∞(Px )2 kgPkL2 (PX) + λ k"M)- Σ∞)koPkgPkL2(Px A	(49)
The both terms in the last expression (49) converge to 0 in probability because of the first statement of
this proposition and the Bernstein’s inequality (Proposition 3 in Rudi & Rosasco (2017)) to random
operators. This finishes the proof of the former of the third statement.
In the same manner, we have
1	12
kg∞,λ - g∞,λkL∞(ρχ) ≤ λ kk∞ - k∞ l∣L∞(ρx )2 kgPkL2(ρx) + λ Hς∞ - ς∞ l∣opkgPkL2(ρx )∙
(50)
The first term in the right hand side converges to 0 because of the first statement of this proposition.
We next show the convergence kΣ∞ - Σ(∞s) kop → 0 as s → ∞. As seen in the previous section,
Σ∞ and Σ(∞s) share the same eigenfunctions and every eigenvalue of Σ(∞s) converges to that of Σ∞
as s → ∞. Let {λ(∞s),i}i∞=1 and {λ∞,i}i∞=1 be eigenvalues of Σ(∞s) and Σ∞, respectively. For an
arbitrary > 0, we can take i such that Pi∞=i λ∞,i < . From the convergence λ(∞s),i → λ∞,i and
Tr (∑∞)) → Tr (Σ∞) as S → ∞, we see that for arbitrarily sufficiently large s, ∣λ∞,i 一 λ∞,i∣ < E
(i < ie) and P∞=ie λ∞),i < 2e. Clearly, for i ≥ ie, lλ∞),i - λ∞M ≤ P∞=ie (λ∞)i + λ∞,i) < 3e∙
32
Published as a conference paper at ICLR 2021
Therefore, We conclude the uniform convergence suPi∈{i,…,∞} ∣λ∞)i - λ∞,力 → 0 as S → ∞. This
implies ∣∣Σ∞ - Σ∞)kop → 0 as S → ∞.	口
So far, We have shoWn that (46), (47), and (48) can be made arbitrarily small by taking large s and M
depending on λ. The remaining problem is to shoW the convergence of (45). To do so, We establish
the counterpart of Theorem B by adapting Theorem A and Proposition B to the current setting.
The counterpart of Theorem B. In Theorem A, the condition (A3) is required for NTK associated
With the smooth activation σ(s) and it is not satisfied in general. Note that (A3) is used for bounding
∣gM(s),λ∣L∞(ρX) uniformly as seen in the proof of Lemma A. Let us consider the decomposition:
∣gM(s),λ ∣L∞(ρX) ≤ ∣g∞,λ∣L∞(ρX) + ∣gM(s),λ - g∞(s),λ∣L∞(ρX) + ∣g∞(s),λ - g∞,λ ∣L∞(ρX)
≤ 2再1夕衰gPkL2(ρx) + kgM,λ - g∞,λkL∞(ρx) + kg∞,λ - g∞,λkL∞(ρχ)
→ 2，3N£rgPkL2(px).
Here, for the second inequality We used (20). Note that the inequality (20) holds for Σ∞ because
the condition (A3) is supposed for ReLU. For the last inequality We used Proposition E. Hence,
Theorem A can be applicable and the same convergence in Theorem A holds for σ(s). For arbitrarily
sufficiently large S and M With high probability, We have
E ]Mt )- g(½∣Lρχ)] ≤ η2(τ⅛ k(⅛)+λI 尸g^Kx)
+ 2-+42 k(⅛M) + λI )T2gM‰kL2(ρχ)
+ T+1 (1 + kgρkL2(ρχ) + 24k∑∞rgρkL2(ρχ)) Tr (∑M)(∑M) + λI尸).
(51)
Next, We adapt Proposition B to the current setting. By inequality (34), there exists M0 ∈ Z+ such
that ∀M ≥ M0, With high probability,
k(⅛M) + λI)T2g(⅛kL2(ρχ) ≤ 2∣(ς∞) + λI)-"gρkL2(ρχ).
If (Σ(∞s) + λI)-1 4 2(Σ∞ + λI)-1 holds, then We have the counterpart of the second inequality in
Proposition B because
k(∑∞ + λI)T2gρkL2(ρχ) ≤ k∑U2gρkL2(ρχ) = kgρkH∞,	(52)
Where We used the fact that gρ is contained in H∞ because of (A3’). Note that the first inequality
in Proposition B is a direct consequence of the second one. We consider eigenvalues {λ(∞s),i}i∞=1
and {λ∞,i}∞=ι of Σ∞) and Σ∞, respectively. Let iλ be an index such that for ∀i > iλ, λ∞ ≤ 2.
Since, every eigenvalue of {λ(∞s),i}i∞=1 converges to that of {λ∞,i}i∞=1 as S → ∞, for an arbitrarily
sufficiently large s, we have ∣λ∞),i - λ∞,/ ≤ 2 for ∀i < iλ, leading to 1∕(λ + λ∞j ≤ 2∕(λ + λ∞,i).
As for the case i ≥ iλ, since 2λ ≥ λ + λ∞,i, we have 1∕(λ + λ∞),j ≤ 1∕λ ≤ 3∕(2(λ + λ∞,i)).
Combining these, we obtain (Σ(∞s) + λI)-1 4 2(Σ∞ + λI)-1 and
sl→im∞ plimM →∞∣(Σ(Ms) +λI)-1gM(s),λ∣
L2(ρX) ≤4λ-1∣gρ∣2H∞,	(53)
s→m∞ PlimM-/(琮) + λI 尸∕2gM,λkL2(ρX) ≤4∣gρ∣2H∞ .	(54)
These are the counterpart of the first and second inequalities in Proposition B.
Next, we consider the bound on the degree of freedom in this proposition. Assume λ ≤ 21 ∑∞ ∣op.
As seen earlier, an operator Σ(∞s) converge to Σ∞ in terms of the operator norm. Hence, λ ≤ ∣Σ(∞s) ∣op
33
Published as a conference paper at ICLR 2021
for an arbitrarily sufficiently large s and the bound on the degree of freedom in Proposition B is
applicable. We get
TrΣ(Ms)(Σ(Ms)+λI)-1 ≤3TrΣ(∞s)(Σ(∞s)+λI)-1.	(55)
Let us consider upper bounding the right hand side:
iλ-1 Tr Σ(∞s)(Σ(∞s)+λI)-1 = i=1	λ(s) λ∞,i λ + λ∞,i	∞	(s) + X	λ∞,i i=λ λ + λ∞,i	
iλ-1	λ(s)	∞ +1Xλ i=iλ	
≤X i=1	λ∞,i λ + λ∞i		s) ,i
iλ-1	λ(s)	iλ -1 -λ Xλ i=1	∞,i + ITr
=X i=1	λ∞,i λ+λ∞,i		
On the other hand, by the definition of iλ,
2Tr (	iλ-1 Σ∞(Σ∞+λI)-1) =2X i=1	λ∞,i λ + λ∞,i	∞ + 2 'X	λ∞,i λ+ λ + λ∞,i i=iλ	,
	iλ-1 ≥2X i=1	λ ∞,i λ + λ∞,i	1∞ + ʌ Σ λ∞,i i=iλ
iλ -1	iλ -1
=2 X λ+∞^ - 1 X λ∞,i + 1τr(∑∞)
i=1	∞,i	i=1
iλ -1	iλ -1
≥ X λ⅛ -1X Z+λTr(∑∞)
i=1	,	i=1
Therefore, by inequality (55), the convergence of λ(∞s),i → λ∞,i for i ∈ {1, . . . , iλ - 1} as s → ∞,
and the second statement in Proposition E, we have
plims→∞ lim Tr (∑M)(∑M) + λI)-1) ≤ 9Tr (∑∞(Σ∞ + λI尸).	(56)
M→∞
Combining (45)-(48) with (51), (53), (54), and (56), we establish the counterpart of Theorem B. For
given , λ, and δ, there exist sufficiently large s and M such that with high probability 1 - δ,
E Hg(T)- gρk(ρχ)≤e+6勺同衰gρkL2(ρχ)+ τ+ι (1 + 入用(T+1)) kgρkH∞
+ T +1 (1 + kgPkL2(ρχ)+ k∑∞rgρkL2(ρχ)) Tr (∑∞(∑∞ + λI)T)，
(57)
where α > 0 is a universal constant.
Proof of Corollary 2. Since conditions (A1’) and (A2’) are special cases of (A1) and (A2), we can
apply Proposition A to Algorithm 1 for the neural network with the smooth approximation σ(s) of
ReLU. Hence, by setting ηt = η = O(1) satisfying 4(6 + λ)η ≤ 1 and λ = T—e/(2re+1) where
β = 1 + d-ɪ, and by applying Tr (∑∞(Σ∞ + λI)-1) = O(λ-1") (Caponnetto & De Vito, 2007)
and
kgPkH∞ , kgρl∣L2(ρχ) ≤ O (k ς∞ gρ k L2 (ρχ))
because of kΣ∞kop ≤ O(1), we finish the proof of Corollary 2.
34
Published as a conference paper at ICLR 2021
G	Application to B inary Classification Problems
In this paper, we mainly focused on regression problems, but our idea can be applied to other
applications. We briefly discuss its application to binary classification problems. A label space is set
to Y = {-1, 1} and a loss function is set to be the squared loss: `(z, y) = 0.5(y - z)2. The ultimate
goal of the binary classification problem is to obtain the Bayes classifier that minimizes the expected
classification error,
R(g) d=f P(x,y)〜ρ[sgn(g(X))= Y],
over all measurable maps. It is known that the Bayes classifier is expressed as sgn(gρ(X)), where gρ
is the Bayes rule of L(g) = Eρ[l(g(X), Y)] (see Zhang (2004); Bartlett et al. (2006)). Therefore, if
gρ satisfies a margin condition, i.e., ∣gρ(x)∣ ≥∃τ> 0 on SuPP(PX), then this goal is achieved by
obtaining an τ /2-accurate solution of gρ in terms of the uniform norm on supp(ρX ). That is, the
required optimization accuracy on ||g©(T) - gρ∣∣L∞(ρχ) to obtain the Bayes classifier depends only on
the margin τ unlike regression problems. Due to this property, averaged stochastic gradient descent
in RKHSs can achieve the linear convergence rate demonstrated in Pillaud-Vivien et al. (2018a). To
leverage this theory to our problem setting, we consider the following decomposition:
kgθ(T)- gPkL∞(ρx) ≤ kgθ(T)- g(T )kL∞(Px)	(58)
+ kg(T) - gM,λkL∞(ρχ)	(59)
+ kgM,λ - g∞,λ kL∞(ρX )	(60)
+ kg∞,λ - gρkL∞(ρX).	(61)
The last term (61) can be made arbitrary small by λ → 0 as shown in Pillaud-Vivien et al. (2018a).
A term (60) can be bounded in the same manner as the third statement of Proposition E, yielding
the convergence to 0 as M → ∞ with high probability. The convergence of (59) was shown in
Pillaud-Vivien et al. (2018a) and the convergence of (58) is guaranteed by Proposition A. As a result,
we can show the following exponential convergence of the classification error R(g) for two-layer
neural networks with a sufficiently small λ as demonstrated in Pillaud-Vivien et al. (2018a).
E[R(gθ(τ)) -R(gρ)] ≤ 2exp(-O(λ2τ2T)).
In Nitanda & Suzuki (2019), an exponential convergence was shown for the logistic loss `(z, y) =
log(1 + exP(-yz)) as well. Proposition A also holds for the logistic loss with an easier proof than
the squared loss because of the boundedness of stochastic gradients of the loss. Hence, their theory is
also applicable to the reference ASGD in an RKHS. In summary, (58), (59), and (61) can be bounded
by the above argument. However, we note that bounding (60) is not obvious and is left for future
work.
35