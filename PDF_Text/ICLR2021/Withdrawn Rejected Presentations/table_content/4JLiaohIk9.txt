Table 1: nuScenes: Experiment results on nuScenes dataset (Caesar et al., 2019b) with Trajectron++(Salzmann et al., 2020). FDE and ADE are averaged over 200 trajectories drawn from the predicteddistribution. Our proposed loss improves the performance of Trajectron++ by about 8%, and avoid16% context-violated prediction compared to Trajectron++, which indicates a better predicted dis-tribution. Mean and standard deviation are calculated over 5 runs.
Table 2: nuScenes: Experimental results on the nuScenes dataset for single prediction. FDE andADE are computed by only one predicted trajectory. For both Trajectron++ and our method, thistrajectory is sampled by greedy search. Our method helps to improve the predicted accuracy. Meanand standard deviation are calculated over 5 runs.
Table 3: Argoverse: Experimental results on Argoverse dataset. Compared to our base modelTrajectron++, our proposed method helps increase the accuracy and stable the performance.
Table 4: nuScenes: Ablation study on prediction horizon of negative candidates on nuScenesdataset.
Table 5: The influence of our loss without map input to the model on nuScenes. Compared toTrajectron++ without map input, our loss performs better, which indicates that our loss can injectcontext information into learning signalsModelFDE-Full 3s ADE-Full 3sTrajectron++ without map input 1.52±0.04Trajectron++	1.46±0.07Ours without map input	1.42±0.03Ours	1.34±0.040.61±0.020.59±0.040.57±0.010.54±0.02without map input, our unlikelihood loss still offers context information to support the training sincethis loss is calculated using the context. Therefore, our model receives more information duringtraining and performs better. Besides, our method without map input even achieves a comparableresult (FDE-FUll 1.42) compared to Trajectron++ with map input (FDE-Full 1.46). This experimentshows that our loss can inject context information into learning signals. In addition, map input im-proves FDE-Full of Trajectron++ in 3s prediction from 1.52 to 1.46, which is about 6 cm. However,when we further add our unlikelihood loss, performance improved from 1.46 to 1.34, which is 12
Table 6: Experimental results on Argoverse datasetModel	minADE-12	minFDE-12CSP (Deo & Trivedi, 2018; Park et al., 2020)	1.39	2.57DESIRE (Lee et al., 2017; Park et al., 2020)	0.90	1.45MATF-GAN (Zhao et al., 2019; Park et al., 2020)	1.26	2.31R2P2-MA (Rhinehart et al., 2019; Park et al., 2020)	1.11	1.77AttGlobal-CAM-Nf (Park et al., 2020)	0.73	1.12Trajectron++ (Salzmann et al., 2020)	0.65±0.09	1.08±0.07Ours	0.63±0.04	1.08±0.06F	Qualitative ResultsHere, we demonstrate our method’s qualitative results compared with Trajectron++ for 3 secondsprediction. We randomly sample 50 trajectories from the predicted prediction, use kernel densityestimation (KDE) to approximate the total output distribution from the samples, and print it out inFig.4. White points represent the ground truth trajectories. Compared to Trajectron++, our methodsuits the contextual information more and therefore is more accurate and plausible.
