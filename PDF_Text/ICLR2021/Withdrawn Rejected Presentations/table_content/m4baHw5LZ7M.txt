Table 1: Dimension= 1, Eigenfunction Error AnalysisM	Mean PSNR (Per ef.)	Mean RMSE (Per ef.)1	28.84	1.30e-32	56.58	2.21e-63	52.21	8.54e-64	48.78	2.05e-5where the last term is explicitly given byNs M Mν	ui (xk)uj (xk),k=1 i=1 j=i+1with point set size Ns. For each eigenfunction ui we impose the L2 and L∞ terms, boundary con-ditions and normalization as before. The weight of the Rayleigh quotient is multiplied by γi = 1/isince we want a monotonic penalty of the size of λi. The last term enforces the orthogonality of dis-tinct eigenfunctions. Figure 3 demonstrates the outcome of the algorithm in 1D. In this case we haveone network with M output values, one for every eigenfunctuion. The ground truth eigenfunctionsof the Laplacian with u(0) = u(π) = 0 are given byUn(x) = ʌ/- sin(nx), λn = n2, n = 1, 2, 3,....
Table 2: Dimension= 1, Eigenvalue Error AnalysisM	Ground Truth	Predicted	Mean MAE (per ev.)	Mean MRE (per ev.)1	1	1.02	0.02	0.022	1,4	1.11, 4.09	0.10	0.073	1,4,9	1.08, 8.93, 4.13	0.09	0.044	1,4,9,16	1.12, 4.09, 9.03, 15.95	0.07	0.04Figure 4: The solution to the 2D Laplace eigevalue problem, with M = 1 at iterations (from left toright) 1, 100 and 1000.
Table 3: Dimension= 2, Eigenfunction Error AnalysisM	Mean PSNR(per ef.)	Mean SSIM(per ef.)	Mean RMSE(per ef.)1	36.67	0.93	2.14e-42	31.66	0.89	1.33e-33	24.84	0.84	3.92e-34	18.97	0.52	1.52e-14 (Laplacian matrix)	19.39	0.75	2.45e-1periments, the algorithm seemed to be sensitive to discretization and initialization. Table 5 showsthe performance of the proposed algorithm compared with the inverse power method. Better resultsare obtained in almost all quantitative measures. Furthermore, the inverse power method finds onlya single eigenpair, while the proposed method outputs the M smallest eigenpairs. Although it ispossible to calculate more eigenpairs based on the previous one via orthogonality constraints, anundesired accumulated error may emerge.
Table 4: Dimension= 2, Eigenvalue Error AnalysisM	GT	Predicted	MAE	MRE	Rayleigh Quotient std1	2	2.01	0.0073	0.0037	0.01701	2	1.99	0.05	0.01	0.0432	5	4.91			3	2	1.94	0.07	0.019	0.0603	5	5.08				5	4.93			4	2	1.98	0.0490	0.0093	0.0234	5	4.93				5	4.96				8	7.91			Laplacian Matrix					4	2	1.96	0.1	0.02		5	4.90				5	4.90				8	7.84			Table 5: Comparison to the Inverse Power Method where λgt = 2	λ	PSNR	SSIM	RMSEInverse power method	2.02	20.57	0.99	8.76e-3
Table 5: Comparison to the Inverse Power Method where λgt = 2	λ	PSNR	SSIM	RMSEInverse power method	2.02	20.57	0.99	8.76e-3Proposed	2.01	36.67	0.93	2.14e-49 ConclusionInteresting works have been recently published in the field of solving ODEs and PDEs with NNs[Raissi et al. (2017); Flamant et al. (2020); Bar & Sochen (2019); Sirignano & Spiliopoulos (2018)].
