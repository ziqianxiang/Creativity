Figure 1: Predicting the dynamics of two billiards balls (left) using a baseline RNN cell (center) anda Jumpy RNN cell (right). Whereas the baseline model produces a hidden state ht at each time step,our jumpy model predicts a continuous-time hidden state, over a predicted interval ∆%. This allows itto skip over long spans of predictable motion and focus on key events such as collisions.
Figure 2: Our Jumpy RNN defines a continuous-time, piece-wise linear hidden state.
Figure 3: A comparison between a Jumpy RNN and a baseline RNN trained the circles task.
Figure 4: Jumpiness increases as we in-crease model capacity (hidden state size).
Figure 5: Analyzing a jumpy RNN and a baseline RNN trained on four billiards tasks.
Figure 6: Success rates for RNN- andJumpy RNN-based planners.
Figure 7:	A comparison between a jumpy RNN and two baseline RNNs trained on the Jena weatherdataset. Each subplot shows a different test set trajectory and the corresponding predictions of themodels. They warmup period occurs during the 20 time steps preceding the vertical gray lines. Wesee that the Jumpy model consistently produces trajectories that match or improve upon either of thebaseline models. We see less variability in jump sizes compared to the synthetic tasks; this is becausethe inherent noise in the data prevented our model from ever taking jumps larger than ∆i = 4. Infuture work, we hope to investigate alternative criteria for jumpiness, such as cumulative predictionerror, which could mitigate this effect.
Figure 8:	A comparison between a jumpy RNN and a baseline RNN trained on lines task.
