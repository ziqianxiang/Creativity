Figure 1: Illustration of the atom-coefficient de-composition. A convolutional kernel K withC X c0 filters is reconstructed by multiplying m2D dictionary Atoms with sizes l × l and coeffi-cients A ∈ Rc×c0 ×m.
Figure 2: Illustration of ACDC-net deployed ina simple CNN. % denotes matrix multiplication.
Figure 3: Illustration on how coefficientsare shared across three layers with increas-ing numbers of channels. The shared coeffi-cients are initialized with the largest dimen-sions required.
Figure 4: ACDC with grouping with three groups at layer n. Theinput feature is first equally divided into groups (denoted as boxes withdifferent grey scales), each of which is convolved with one group offilters reconstructed by multiplying the corresponding filter dictionaryatoms and the shared coefficients. The output of three groups arecombined by channel shuffle.
Figure 5: FeW-shotAtom-drop0	0.01	0.05	0.1	0.2	0.3	0.4	0.5Atom Drop RateU Accuracy With different atom drop rate p.
Figure 8: Illustration on extending CAM from the last layer to all layers with ACDC-net. In CAM,the visualized heatmap explains the importance of image regions. Each row shows the class activationmaps of a sample from the first convolution layer (left) to the final convolution layer (right).
Figure 9: Comparisons against network compression and pruning methods on CIFAR-10 dataset.
