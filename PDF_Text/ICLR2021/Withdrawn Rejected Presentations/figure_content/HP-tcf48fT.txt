Figure 1: Left: For graph pair (G1 , G2) with node labels, the induced connected MCS is the five-member ring structure highlighted in circle. Right: At this step, there are two nodes currently selected.
Figure 2: An illustration of the search process for MCS detection. For (G1, G2), the branch and boundsearch algorithm (Section 2.2 and Algorithm 1) yields a tree structure where each node representsone state (st) with id reflecting the order in which states are visited, and each edge represents anaction (at) of selecting one more node pair. The search is essentially depth-first with pruning by theupper bound check. Our model learns the node pair selection strategy, i.e. which state to visit first. Ifstate 6 can be visited before state 1, a large solution can be found in less iterations. When the searchcompletes or a pre-defined search iteration budget is used up, the best solution (output subgraphs)will be returned, corresponding to state 13 (and 14).
Figure 3: Visualization of MCS results on Road. Nodes with large degrees have large circles. Foreach method, we show the two graphs being matched. Selected subgraphs are colored in green.
Figure 4: Comparison of the best solution sizes of different methods on Road.
Figure 5: An illustration of how the estimated cumulative sum of rewards is computed for state 7.
Figure 6: An example illustrating the idea of equivalent states. It is important to note that states 23, 5, 6 are different since their node-node mappings are different. However, the solutions derivedfrom both states 3 and 6 have the same subgraph size, 3. In other words, there can be multiple waysto arrive at the same solution size, with different underlying sequential processes to reach the finalstates.
Figure 7: For each method, we maintain the best solution found so far in each iteration during thesearch process. We plot the size of the largest extracted common subgraphs found so far vs searchiteration count for all the methods across all the datasets. The larger the subgraph size, the better(“smarter”) the model in terms of quickly finding a large MCS solution under limited budget for largegraphs.
Figure 8: For each method, we maintain the best solution found so far in each iteration during thesearch process. We plot the size of the largest extracted common subgraphs found so far vs the realrunning time for all the methods across all the datasets. The larger the subgraph size, the better(“smarter”) the model in terms of quickly finding a large MCS solution under limited budget for largegraphs.
Figure 9: Visualization of 5 sampled graph pairs with the MCS results by GLSearch on Nci109.
Figure 10: Visualization of McSp result on Road. Extracted subgraphs are highlighted in green.
Figure 11: Visualization of GLSearch result on Road. Extracted subgraphs are highlighted ingreen.
Figure 12:	Visualization of MCSP result on DbEn. Extracted subgraphs are highlighted in blue.
Figure 13:	Visualization of GLSEARCH result on DbEn. Extracted subgraphs are highlighted inblue.
Figure 14: Visualization of McSp result on DbZh. Extracted subgraphs are highlighted in pink.
Figure 15: Visualization of GLSearch result on DbZh. Extracted subgraphs are highlighted inpink.
Figure 16: Visualization of MCSP result on Dbpd. Extracted subgraphs are highlighted in purple.
Figure 17: Visualization of GLSEARCH result on DBPD. Extracted subgraphs are highlighted inpurple.
Figure 18: Visualization of McSp result on Enro. Extracted subgraphs are highlighted in blue.
Figure 19: Visualization of GLSearch result on Enro. Extracted subgraphs are highlighted in blue.
Figure 20: Visualization of McSp result on CoPr. Extracted subgraphs are highlighted in blue.
Figure 21: Visualization of GLSearch result on CoPr. Extracted subgraphs are highlighted inblue.
Figure 22: Visualization of the original graph pair of Circ. Different colors denote different nodelabels. There are 6 node labels in total: M (71.67%), null (10.41%), PY (9.1%), NY (8.23%), N(0.37%), andP (0.21%).
Figure 23: Visualization of McSp result on Circ. Extracted subgraphs are highlighted in yellow.
Figure 24: Visualization of GLSearch result on Circ. Extracted subgraphs are highlighted inyellow.
Figure 25: Visualization of McSp result on HPpi. Extracted subgraphs are highlighted in cyan.
Figure 26: Visualization of GLSearch result on HPpi. Extracted subgraphs are highlighted in cyan.
