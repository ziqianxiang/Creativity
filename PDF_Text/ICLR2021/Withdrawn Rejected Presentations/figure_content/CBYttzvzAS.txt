Figure 1: Each line is the mean over 100 random policies; the standard errors are smaller than thewidth of the lines. At every time step, the policy is updated as in Algorithm 1. Each value on theplot is the cosine similarity of the trace at that time, compared to what the trace would have been ifthe initial policy had been what the current policy is now, and if the exact same trajectory had beenfollowed-the so-called CounterfaCtual trace. The CounterfaCtual trace is calculated With Equation 5using the current policy and the stored trajectory up until that point.
Figure 2: Each line is the mean over 100 random policies; the standard errors are smaller than thewidth of the lines. At every time step, the policy is updated as in Algorithm 1. Each point on a solidline is the cosine similarity of Pj=0 Rt+1 et with Vθ JY (πθt). The dotted lines represent the cosinesimilarity of £二0 YtRt+ι Pj=0 Vθ∏θ°(aj | Sj) (REINFORCE) and Vθ JY(n&).
Figure 4: Each line is the mean over 100 random policies; the standard errors are smaller than thewidth of the lines. At every time step, the policy is updated as in Algorithm 1. Each value on theplot is the cosine similarity of the trace at that time, compared to what the trace would have been ifthe initial policy had been what the current policy is now, and if the exact same trajectory had beenfollowed-the so-called CounterfaCtual trace. The CounterfaCtual trace is calculated with Equation 5using the current policy and the stored trajectory up until that point.
Figure 5: AUCs over 100,000 steps in the CartPole-v0 environment. Results are averaged over 30runs, and shaded regions represent one standard error. Note the log-scale of the x-axis.
Figure 6: AUCs over 100,000 steps in the CartPole-v0 environment. Results are averaged over 30runs, and shaded regions represent one standard error. Note the log-scale of the x-axis.
