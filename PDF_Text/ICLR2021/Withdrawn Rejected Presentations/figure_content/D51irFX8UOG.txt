Figure 1: illustration of the Super Halma playingtask. By playing the game with scarce supervi-sion, Ada should be able to learn basic conceptsof numbers and arithmetic, such as concepts withboth (a) valid and (b) invalid actions (jumps).
Figure 2: Illustration of the HALMA basics (see Section 3.1), problem generation, and concept space (seeSection 3.2). (a) Given a visual panel with various colored MNIST digits and a hint, an autonomous agent istasked to reach the goal in a maze. The concept space guides the generation of the visual panels; it consists of(b) spatial grammar, (c) temporal grammar, and (d) causal structure. (e) The semantics and affordance of thecolored MNIST digits are augmented on the corresponding maze; the maze is not shown to the agent.
Figure S1: Examples of mazes and visual panels. (a) (b) Mazes have valid optimal paths in HALMA, high-lighted in green and blue. (c) A maze configuration leads to ambiguous observations, highlighted by a redcircle at the bottom-right corner. (d) (e) Visual panels correspond to the corner highlighted in blue in (a) (b),respectively. (f) Visual panels corresponds to the corner, highlighted in red in (c).
Figure S2: Illustration of valid optimal path generation. Given the initial state position and the goal state posi-tion, one can determine the directions where the optimal path should expand towards. For example, (a) Basedon the initial state position, the optimal path can only expand upwards or to the right to reach the goal stateposition. (b) Examples of possible valid optimal paths.
Figure S3: An example of adding deceptive branches tothe valid optimal path.
Figure S4: Visualization of an example trial completed by the oracle agent in 8 steps. Mazes at the bottom-rightin (a)-(h) illustrate the trajectory of the oracle agent.
Figure S5: Key statistics of visual panels in the HALMA training set. Each training set contains 100 HALMAgrid-world mazes. We randomly sample 10 training sets and report the mean and standard deviation of theoccurrence count of (a) colors, (b) number of digits in a panel, (c) digits distribution over these 10 sets, and (d)digits distribution in log-scale.
Figure S6: Illustration of the testing maze generation pipeline.
Figure S7: Architecture of the actor model, where T is equal to max_opt_len.
Figure S8: Architecture of the critic model, where T is equal to max_opt_len.
Figure S9: Learning curves of the evaluated agents with max_opt_len=5.
