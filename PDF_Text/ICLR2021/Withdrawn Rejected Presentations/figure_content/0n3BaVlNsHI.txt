Figure 1: Schematic view of DJMix. In DJMix, CNN models are trained to minimize divergencebetween the features of each input image fθ (x) and its discretized image fθ (X), as well as the task-specific loss between fθ (X) and the label y. This pipeline barely affects the appearance of inputimages, and thus, can be used for various image recognition tasks, e.g., classification, (semantic)segmentation, and detection.
Figure 2: DJMix reduces the sensitivity of CNN models to additive noise. FoUrier-basis vectorswhose L2 norm is 4 are added to 2,048 randomly sampled test samples of CIFAR10 whose imagesize is 32 × 32, and pixels present the averaged error rates. Each pixel corresponds to a certainFourier basis, e.g., the center area of lower frequencies and the edges of higher frequencies. Theleftmost images are examples of images with additive noise enhanced for visualization.
Figure 3: Examples of the SegmentatiOn-C dataset with the severest noise of each corruptiontype. We created this dataset to benchmark the robustness of segmentation networks by degeneratingvalidation images with 10 operations, such as Gaussian noise. Similarly, We created Detection-Cas a detection counterpart of Segmentation-。.
Figure 4: Schematic comparison of DJMix (ours) and AugMix of mixing two examples (HendryCkSet al., 2020). Both methods use mixing strategies, but the details are different. Notably, a recon-structed image of DJMix X is almost indistinguishable from the original image x.
Figure 5: Test error rates on different combinations of (β0, β1) of Beta distribution used for mixing.
