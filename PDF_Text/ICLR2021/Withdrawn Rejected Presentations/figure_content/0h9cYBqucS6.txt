Figure 1: Conventional secure aggregation (SA) (Bonawitz et al., 2017) versus the suggested communication-computation efficient secure aggregation (CCESA). Via selective secret sharing across only a subset of clientpairs, the proposed algorithm reduces the communication cost (for exchanging public keys and secret sharesamong clients) and computational cost (for generating secret shares and pseudo-random values, and performingkey agreements), compared to the existing fully-shared method. CCESA still maintains virtually the same levelsof reliability and privacy, as proven by the theoretic analysis of Section 4.
Figure 2: A training image and the reconstructed images using model inversion attacks with (a) the proposedscheme (CCESA), (b) existing secure aggregation (SA) (Bonawitz et al., 2017), (C) federated averaging with nosecurity measures (McMahan et al., 2017). The federated averaging scheme leaks private data from the trans-mitted model, while SA and the proposed CCESA do not. Note that the required communication/computationalresources of CCESA are only 40% of those of SA. Additional examples are given in Supplementary Materials.
Figure 3: Upper bounds on the error probabilities Pe(r) and Pe(p) in Theorems 5 and 6 for p = p?, where p? isthe threshold connection probability for achieving both reliability and privacy as in (5). Note that for arbitraryp > p? , the error probabilities are lower than the upper bounds marked in the figure. One can confirm that thesuggested CCESA algorithm is private and reliable with a high probability, provided that p > p? .
Figure 4: Test accuracies of SA versus proposed CCESA(n, p) with various connection probability p, forfederated learning using CIFAR-10 dataset. Here, we set n = 1000 and qtotal = 0.1. The suggested CCESAachieves the ideal test accuracy by using only 75% of the communication/computational resources used in theconventional SA. This shows the reliability of CCESA in real-world scenarios.
