Figure 1: Traditional Centralized Learning SystemThe diagram contains four stages: 1) data collection from multiple distributed edge devices 2) modeltraining in a central server 3) model validation based on existing testing data 4) model deployment1Under review as a conference paper at ICLR 2021to edge devices. However, the data collected from edge devices need to be transmitted to a centralserver and perform model training on that enormous data set, which turns out to be inefficient andexpensive. In order to solve these challenges, Federated Learning has been introduced as an efficientapproach which can distribute learning tasks to the edge devices and avoid massive data transmis-sion. Furthermore, due to the characteristics of Federated Learning, on-device training becomespossible and the local model quality can be continuously improved.
Figure 2: Model descriptionThe model contains two different neural branches which consume spatial information and temporalinformation as the inputs of two streams and then output the predicted steering angle. For the firststream the model consumes 3 frames of RGB images, which can be denoted as {At-2, At-1, At}.
Figure 3: Example of the optical flowâ€¢	Angle prediction performance: We use root mean square error (RMSE), a common met-ric, to measure the difference between prediction results and ground truth. The metrics canprovide good estimation about the quality of trained model in each edge vehicles.
Figure 4: Diagram of end-to-end on-device learning procedure in a single vehicleAfter finishing each training epoch, models in edge vehicles will also be updated to the aggregationserver and form a global knowledge among other cars (Figure 5). The aggregation applied in thispaper is FedAvg (Li et al., 2019), which is a commonly used Federated Learning algorithm in mostof the research. The steps of FedAvg algorithm is listed below:Step 1:Step 2:Step 3:Step 4:Edge vehicles locally compute the model; After finishing each five local training epoch,they send updated model results to the aggregation server.
Figure 5: Process of Federated Learning5	EvaluationIn this section, we present the experiment results of the presented end-to-end on-device FederatedLearning approach on the use case of steering wheel angle prediction. We evaluate the system per-formance in three aspects (The metrics are defined in section 3.4) - (1) Angle prediction performance(2) Model Training Time (3) Bandwidth cost.
Figure 6: The comparison of angle prediction performance on four local vehicle test set with Feder-ated Learning and two baseline models(b) Vehicle 2	Vehicle 1	Vehicle 2	Vehicle 3	Vehicle 4	OverallFL	3.154	8.875	17.209	5.581	10.242ML	5.371	7.914	16.215	7.258	10.099Local ML	4.017	14.775	25.670	7.313	15.419Table 2: Steering wheel angle regression error (RMSE) on test set of each edge vehicle (4 vehiclesin total)Table 3 gives the comparison of total training time and bytes transferred between Federated Learningand two baseline model. The total number of training epochs for all the models is 100 and the modeltraining is accelerated by Nvidia Tesla T4 GPU. The results show that Federated Learning needslightly more training time than independently locally trained model due to the model exchangetime cost. However, the training time of Federated Learning is reduced about 75% and we saveabout 25% bandwidth compared with traditional centralized learning method.
