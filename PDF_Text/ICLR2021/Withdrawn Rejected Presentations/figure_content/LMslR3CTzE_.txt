Figure 1: Overview of NeuroMatch. We decompose target graph GT by extracting k-hop neighbor-hood Gu around at every node u. We then use a GNN to embed each Gu (left). We refer to u asthe center node of Gu. We train the GNN to reflect the subgraph relationships: If Gv is a subgraphof Gu, then node Ï… should be embedded to the lower-left of u. For example, since the 2-hop graphof the violet node is a subgraph of the 2-hop graph of the red node, the embedding of the violetsquare is to the lower-left of the red square node. At the query stage, we decompose the query GQ bypicking an anchor node q and embed it. From the embedding itself we can quickly determine thatQuery 1 is a subgraph of the neighborhood around red, blue, and green nodes in target graph becauseits embedding is to the lower-left of them. Similarly, Query 2 is a subgraph of the purple and rednodes and is thus positioned to the lower-left of both nodes. Notice NeuroMatch avoids expensivecombinatorial matching of subgraphs.
Figure 2: Example sampled queries GQ ateach level of the curriculum in the MSRC_21dataset. The diameter and number of nodesincrease as curriculum level advances.
Figure 3: TSNE visualization of order embed-ding for a subset of subgraphs sampled fromthe Enzymes dataset. As seen by examplesto the right, the order constraints are well-preserved. Graphs are colored by number ofedges.
