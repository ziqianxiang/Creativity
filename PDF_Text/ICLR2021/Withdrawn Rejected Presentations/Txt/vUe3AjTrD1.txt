Published as a conference paper at ICLR 2021
Grid cell modeling with mapping representa-
tion of self-motion for path integration
Jiru Wang
College of Computer Science
Sichuan University
Chengdu 610065, China
somnus0722@foxmail.com
Rui Yan
College of Computer Science
Zhejiang University of Technology
Hangzhou 310023, China
Ryan@zjut.edu.cn
Huajin Tang*
College of Computer Science and Technology
Zhejiang University
Hangzhou 310027, China
htang@zju.edu.cn
Abstract
The representation of grid cells in the medial entorhinal cortex (MEC) region is
crucial for path integration. In this paper, we proposed a grid cell modeling mech-
anism by mapping the agent’s self-motion in Euclidean space to the neuronal ac-
tivity of grid cells. Our representational model can achieve hexagonal patterns of
grid cells from recurrent neural network (RNN) and enables multi-scale path inte-
gration for 1D, 2D and 3D spaces. Different from the existing works which need
to learn weights of RNN to get the vector representation of grid cells, our method
can obtain weights by direct matrix operations. Moreover, compared with the clas-
sical models based on continuous attractor network (CAN), our model avoids the
connection matrix’s symmetry limitation and spatial representation redundancy
problems. In this paper, we also discuss the connection pattern between grid cells
and place cells to demonstrate grid cells’ functioning as a metric for coding space.
1	Introduction
Many species can keep track of their own position without environmental cues and navigate based
completely on self-motion information, which is called path integration. The discoveries of spatial
sensitive neurons, such as place cells and grid cells, show us spatial cognition may arise from neural
activity of these neurons. Exploring how they represent Euclidean space is the key to knowing the
brain’s representation and encoding for space-related tasks. For unique distributed firing patterns,
grid cells have been kept in focus in spatial cognition research field. They are considered as path
integrators in brain (Moser et al., 2008; Jacobs et al., 2013; Daniel et al., 2015), helping animals
estimate spatial position based on self-motion in the absence of external cues. Grid cells have
distributed hexagonal firing patterns covering the environment explored by the animal. A grid cell
is characterized by three parameters: spatial scale (the distance between centers of two neighboring
firing fields), orientation (the angle between the line joining two neighboring firing fields and a
reference axis) and phase (the offset relative to a reference point)(Fyhn et al., 2004; Hafting et al.,
2005), as shown in Figure 1.
Many models have been proposed to account for grid cell’s hexagonal firing pattern. What they have
in common is that the distributed pattern arises from path integration driven by incoming velocity
signals from the agent’s self-motion in space(Moser et al., 2008). Generally speaking, grid cell can
be modeled at the single-cell or network level, depending on whether recurrent interactions between
grid cells exist. Oscillatory interference (OI) models are classical single-cell models (Burgess et al.,
2010), which have been challenged by further research with other animals except for rats (Yartsev
* Corresponding Author
1
Published as a conference paper at ICLR 2021
Figure 1: Spatial firing patterns of grid cells. (a) The firing pattern of a specific grid cell
from the neuroscience experiment (data from http://www.ntnu.edu/kavli/research/
grid-cell-data). (b)First column, schematic of grid cell (green circle), being defined by spa-
tial scale, phase and orientation. The next three columns, three grid cells (green, orange and blue
circle) with different spatial scales, phases and orientations.
Figure 2: Continuous attractor network (CAN)-based grid cell modeling. (a)Schematic of lo-
cal, excitatory weighted connections between grid cells. Darker color means stronger connec-
tion. (b)Spatial representation redundancy in CAN. Each column illustrates the heat map of all
grid cells’ activity at the same time in a CAN. For each heat map, taking grid cells covered by a
semi-transparent panel as a unit, they will always have the same activity as grid cells in other units.
et al., 2011). The problem of single-cell based models is the relative difference of firing patterns be-
tween neighboring cells can hardly be kept across environments where the animal’s movement may
be very different. CAN-based models are classical network models in which grid cells are connected
by short-range excitation and global inhibition (Burak & Fiete, 2009). Activity bumps form sponta-
neously and move smoothly driven by velocity input and then path integration is done (McNaughton
et al., 2006; Fuhs & Touretzky, 2006; Welinder et al., 2010). The problem of CAN-based models
is the strong assumption about the wiring between grid cells in the network and they cannot explain
the non-topography of spatial phases in the grid cell population. Moreover, many grid cells in CAN
share identical firing patterns, which means that their activity level will maintain the same for all
time. Here we call it spatial representation redundancy, as shown in Figure 2. For the same spatial
area, CANs with smaller spatial scales have more representation redundancy. Recently, researchers
try to simulate animals’ spatial behaviors through artificial intelligence techniques(Banino et al.,
2018; Cueva & Wei, 2018). Specifically, with movement-related velocity signals, a recurrent neural
network is trained to perform self-localization in a virtual space and grid-like neuronal representa-
tion emerges within the network, similar to grid cells’ hexagonal firing patterns observed in rodent’s
brain. Training-based models show us the potential of using artificial intelligence to test theories
about the spatial cognition mechanism in brain. However, they are not preferable because of higher
computational cost for training and the slow and unsatisfactory convergence with observed grid-like
firing patterns in mammals. In addition, most of the studies on grid cell modeling are done in 2D
space. A considerable proportion of animals perform daily activities in 3D space. Therefore a gen-
eral grid cell modeling mechanism is necessary, at the network level, to achieve grid cell modeling
for path integration in spaces of different dimensionality.
In this paper, a novel grid cell modeling mechanism is proposed, in which Jacobian Matrix J , as
the mapping representation, is applied to map the agent’s self-motion in Euclidean space to neural
activity of grid cells. Based on our proposed modeling mechanism, representational models of grid
cells for 1D, 2D and 3D path integration can be achieved and hexagonal firing patterns of grid cells
will emerge from recurrent neural networks (RNN). Compared with currently existing models, our
representational models will benefit from the following advantages:
1.	This modeling mechanism is the combination of single-cell and network based grid cell
modeling. Different from IO models, recurrent connections between grid cells are main-
tained. Compared with CAN-based models, the symmetry limitation on connection matrix
and spatial representation redundancy in CAN are effectively avoided in our models.
2
Published as a conference paper at ICLR 2021
2.	Different from existing training-based RNN models, network weights in our models are
derived from the mapping from self-motion in Euclidean space to neuronal activity of grid
cells, but not high-cost network training.
3.	It is a general mechanism that can achieve representational grid cell models and multi-scale
path integration in 1D, 2D and 3D spaces.
In addition, we analyze how grid scale and phase distribution exert influence on our model’s grid
coding performance and give referable grid cell modeling instruction. We also underline the ne-
cessity of grid cells’ distance metric ability from the engineering modeling perspective and through
artificial intelligence technique, we provide an instructive way of thinking about how grid cells
function as a metric for coding space.
2The general mechanism for grid cell modeling
When animals move in environment, they can integrate self-motion information through neural rep-
resentations of Euclidean space in brain. Here a mapping representation is given to map self-motion
in Euclidean space to neural activity of grid cells. Jacobian matrix is a very useful tool that has
been heavily used in robotic and automation domains to define the dynamic relationship between
two different representations in a system. The path integration in brain can be seen as a mapping
f : Rm → Rn from Euclidean space to grid cells’ activity space and the Jacobian matrix J ∈ Rm×n
can be used for the mapping from mD space to nD space. Inspired by this, the mapping from self-
motion in Euclidean space to grid cells’ activity is completed based on Jacobian matrix and then a
general grid cell modeling mechanism is achieved for path integration in 1D, 2D and 3D space. The
flow of the general mechanism for grid cell modeling we proposed is given below:
1.	With biologically plausible scales, orientations and phases of grid cells in neuroscience,
formulaic description s(r): Rm → Rn is built to simulate n grid cells’ firing patterns, a
vector function with respect to the mD Cartesian coordinate x in Euclidean space.
2.	According to s(r), the Jacobian matrix J can be obtained to complete the mapping from
mD Euclidean space to nD vector space of grid cell activity.
3.	The grid cell dynamics is achieve based on a recurrent neural network in which recurrent
weights can be worked out based on J during the mapping process.
For the simple implementation of grid cell modeling in 1D and 2D space, the modeling details
are not included and the network weights’ calculation formulas necessary for building the grid cell
dynamics will be included in the Appendix. In the following part, we will show how to achieve the
mapping representation of grid cells for path integration in 3D space.
3 Mapping representation of grid cells
In this section, the proposed grid cell modeling mechanism is illustrated by grid cell modeling in 3D
space. The specific implementation will be detailed through three parts: the formulaic description
of grid cell’s firing pattern, the mapping from self-motion in Euclidean space to neuronal activity of
grid cells, and dynamical model for path integration.
3.1	Formulaic description of grid cells’ firing patterns
Although a significant corpus of computational models exists in 2D space Guanella et al. (2007);
Burak & Fiete (2009); Burgess et al. (2010); Bush & Burgess (2014), models of 3D path integration
are comparatively fewer. Grid-like firing patterns in 3D space can be formed by stacking multiple
layers of hexagonal firing patterns in the plane and these layers are composed of three repeated
layers with specific shift, called face-centered cubic(FCC) lattice. Many modeling studies have
predicted the possibility of FCC lattice structure for the grids in the 3D space owing to its higher
packing fraction(Federico & Alessandro, 2015; Mathis et al., 2015; Misun & Maguire, 2019). FCC
lattice structure is used for modeling 3D grid cells in this paper. Since the actual scale, phase and
orientation of 3d grid cell have not been empirically confirmed yet, the biological validity of the
chosen scale and phase remains to be verified.
3
Published as a conference paper at ICLR 2021
N grid cells are included and the grid cell population’s activity is denoted as s(r) =
[si, s2,…，SN]T. The formulaic description of the ith grid cell,s firing patterns can be formed
as the function of 3D spatial position r(r1, r2, r3), as shown below:
(1)
si(r)
14
WEcOS (ki(r - δT))
4 i=1
	Γki1		一	0	0	√3T2'
K=	k2	_ 2π	2/√3	0	--/√6
	k3	ko	--/√3		--√6
	k4		一--/√3	- -	--/√6.
where ki is given as the row vector of the matrix K,∆r =(∆r1,∆r2,∆r3) and k0 respectively
determine the phase and spatial scale of grid cell firing patterns. Then S(r) can be represented as
s(r) = Mg(r), where
coski∆rι •… cosk4∆r1 sink1∆r1	•… Sink4∆r1
M =-	.	.	.	.	.	.
...	...
cosk∖∆rN •… cosk4∆rN Sinkι∆r N •… sink4∆r n
g(r) = [coski r •…	cosk4r SinkIr •…	sink4r]τ
Let M* denotes the pseudo-inverse matrix of M, then:
g(r) = M *s(r)
(2)
3.2	Mapping from euclidean space to neural activity
For achieving the mapping from self-motion in Euclidean space to grid cell population activity, Jaco-
bian matrix is expected to be used as the mapping representation, which is a matrix of all first-order
partial derivatives of the vector-valued function s. With s(r): R3 → RN and the corresponding
Jacobian matrix J ∈ R3×N, the following formula is obtained:
ds
dt
dr
* 丁
dt
J * vt
(3)
J
∂ S1∕∂r1	∂S1∕∂r2	∂S1∕∂r3
J =	.	:	:
...
∂sn/∂rι ∂ SN/∂ r2	∂ SN/∂ r3
and vt =[vit,v2t ,v3t]T is the velocity vector in Euclidean space at time t. Combining with s(r) in
Eq. 1, J can be worked out:
J =愕	∂S	∂f] = [MB1 g(r)
MB2g(r)	MB3g(r)]
(4)
Bm
一 0
Bm2
Bmi = diag [-Kim,-K2m,-K3m,-K4m]
Bmi
0
Bm2 = diag [Kim, K2m, K3m, K4m]
Combined with Eq. 2 and 4, Eq. 3 can be translated and finally the following formula can be
obtained: ds/dt = P；=i Wi * Vt * S and W = [MBγM* MB2M* MB3M1
3.3	Grid Cell Dynamics for Path Integration
The mapping representation, Jacobian matrix, has been introduced for mapping self-motion in Eu-
clidean space to neural activity of grid cells. To organize grid cells thyough recurrent connec-
tions and complete path integration, the rate-based dynamics of grid cells can be formulated as
Tds/dt = f (p3=i Wi* vt * s) and the activation function f(x)=0ifx ≤ 0 else f(x) = -.
4
Published as a conference paper at ICLR 2021
4 Experiment results
In this section, grid cell modeling is done based on the modeling mechanism we proposed for multi-
scale path integration in 2D and 3D spaces. In our model, grid cells are grouped into five modules.
Grid cells in each module are organized into a recurrent neural network (called sub-RNN below) for
multi-scale path integration and they have the same spatial scale and orientation but different phases.
4.1	Grid firing patterns
Two grid cell models are firstly completed respectively in 2D and 3D space, which have similar
network structures. Both of them include 5 sub-RNNs with different grid scales for path integration
and each network includes a grid cell population with different phases but the same scale.
In 2D space, Figure3(a) shows the agents’ random exploration in a 25m2 square area. Five grid
cells are randomly selected respectively from sub-RNNs with different grid scales and their spatial
activity maps are illustrated in Figure3(b). In the same way, we also obtain spatial firing patterns of
five grid cells randomly selected from the 3D grid cell model, as shown in Figure 4 (a).
Figure 3: Exploration of the agent in 2D space. (a) The agent’s random exploration in a 25m2 area
(orange line) and place cells (grey circles) uniformly covering the whole area. (b) Multi-scale spatial
activity maps of grid cells. (c) Spatial activity maps of place cells.
(a) t
/，・*：: e∙∙√* ∙ *，'.
密娇*：："“・一，舟.
・• • •・
Figure 4: Grid firing patterns in 3D space. (a) Multi-scale spatial activity maps of grid cells. (b)
Spatial activity maps of place cells.
4.2	Grid coding performance Analysis
The grid cell models’ coding performance has relationship with grid cells’ spatial scale and phase
distribution. In the following experiments, statistical analysis based on different network size are
done both in 2D and 3D space to arrive at more general conclusions and derive some helpful
modeling instructions. An indicator AGE quantifying the models’ coding performance is defined:
AGE = (1/N) PT=0 kGpt - Ggtk, which is all grid cells’ average of accumulated grid coding
error during exploration. N is the number of grid cells involved, Gpt = (Gp1,Gp2, ∙, GpN) and
Ggt = (Ggt, Ggt, ∙, Ggt) respectively represent the population activity of grid cells derived from
our models and the corresponding ground truth activity. Gpti is the ith grid cell’s activity at time t.
4.2.1	Grid Scale
Grid cells with different spatial scales have varying sensitivity to velocity input, so the grid cod-
ing performance of sub-RNNs with different scales will differ from each other. Signals from the
5
Published as a conference paper at ICLR 2021
same exploration trajectory (Figure 5 (b)) are taken as network input for analyzing the relation-
ship between grid scale and coding performance. The phase distribution of grid cells generated by
hexagonal tiling method is set for aɪl SUb-RNNs, as shown in Figure 5 (a).
The activity of five grid cells form sub-RNNs with different spatial scales in our model is recorded
and compared with the ground truth activation (Figure 5 (d)). It can be seen that sub-RNNs with
smaller scales are more sensitive to the external input and networks with larger scales are easier to
keep stable grid coding performance. The statistical result of AGE for the five sub-RNNs in Figure
5 (c) and the experiment result in 2D space in Figure 10 (in Appendix) also demonstrate this point.
Figure 5: Grid coding performance analysis based on different grid scales in 3D space. (a) The phase
distribution of sub-RNNs with different scales. (b) The agent,s exploring trajectory in a 125m3 area.
(c) Histogram showing accumulated coding error of each sub-RNN after path integration following
the simulation trajectory in (b). (d) The comparison between the coding result derived from our
model and the ground truth activity of the selected grid cells in (a).
4.2.2	Grid Phase
In experiment, phases of grid cells are respectively generated through random uniform distribution,
square tiling and hexagonal tiling, as shown in Figure 6 (a) and Figure 11 (a) (in Appendix). For
the same grid cell model with the same moving trajectory as input signals, we record its grid coding
performance in the cases of the different phase distributions, as shown in Figure 6 (b) and Figure 11
(b) (in Appendix). Furthermore, to ensure valid conclusive analysis, grid cell models with different
network sizes are tested. As illustrated in Figure 6 (c), the vertical axis represents models, AGE
while the horizontal axis represents the sub-RNN,s size in models. For example, ‘27’ means each
sub-RNN includes 27 grid cells and the whole model includes 27 X 5 grid cells.
Figure 6: Grid coding performance analysis based on different phase distributions in 3D space.
(a) The phase distributions respectively generated by uniform random distribution, square tiling
and hexagonal tiling. (b) The comparison between the ground truth and grid coding derived from
our model for three grid cells randomly selected in the cases of different phase distribution. (c)
Histogram showing, with different network sizes, accumulated grid coding error of the whole model
in the case of different phase distributions.
Statistical results in 3D and 2D space (in Appendix) show that with smaller network size and fewer
grid cells, the above three phase distributions vary greatly, leading to different coding performance.
With the network size gradually increases, the phase distributions gradually tend to be uniform
coverage, leading to similar coding performance. To be specific, the square tiling can make better
6
Published as a conference paper at ICLR 2021
coding performance only when the network size is larger, unsuitable for smaller networks while the
hexagonal tiling can bring the best coding performance when the network size is smaller. Moreover,
unless the uniform random distribution can make better coding performance in all cases, we won’t
choose it even it can bring the best coding performance in some cases. This is because principally it
is an unstable method relying heavily on random seed we choose. In brief, the hexagonal tiling is a
better phase generation method for grid cell modeling, which is more suitable for different network
sizes and can yield better coding performance in most cases.
4.3	Path integration
There is evidence that in mammals, place representation exists in close anatomical proximity to grid
cell (Barry & Burgess, 2014). Grid cells in adult rodents appear to contribute to the neural activity
of place cells(Zhang et al., 2013; de Almeida et al., 2009). We first build two grid cell models in
2D and 3D space, respectively including five sub-RNNs for multi-scale path integration. Velocity
signals from simulated trajectories are provided as network input. Sub-RNNs are projected to place
cells via a linear layer for path prediction. The vector of activities in the place cells corresponding
to the current position was provided as a supervised training signal at each time step.
Figure 7 and Figure 8 show us the path prediction results in a 25m2 2D space and a 125m3 3D
space. To keep localization error lower than 0.25m, 625 and 8000 place cells are set for spatial
location decoding. In the grid cell models, each sub-RNN includes 216 grid cells.
(a)	-Graundtnith Place cells	(b)
⅜∕v ■■■■■
5m
Figure 7: Path integration in 2D space. (a) A 25m2 area with place cells uniformly covered during
the experiment. Self-location decoded from our model (varying colors) resembles the actual path
(black). (b) Top, firing fields of five place cells. Bottom, the corresponding predictive results from
our model.
Figure 8: Path planning of grid cells in 3D space.(a),(b) Similar to Figure 7
As shown in Figure 7 (a), with 625 place cells uniformly covering the working area, 9 trajectories
are simulated. the black lines represent the ground truth and colored lines demonstrate the predicted
results. Figure 7 (b) illustrates the ground truth activity of five place cells and the decoding results
from our model. The spatial locations and the corresponding place cells can be rightly predicted.
4.4 Functioning as a metric for coding space
According to the neuroscience definition of place cell, one place cell will be only activated in one
specific spatial location in an area and then represents one specific location in the area. So when it
comes to engineering modeling, it means that there are enough place cells that can cover the agent’s
whole working area and ensured the spatial coding accuracy is kept at an acceptable level. As shown
in Figure 9 (a), for a 5 × 5m2 2D area, 625 place cells are needed to uniformly cover the whole area
and keep the localization error within an acceptable range (here 0.2m) and for a 20 × 20m2 2D area,
7
Published as a conference paper at ICLR 2021
1600 place cells are needed. However, when it comes to 3D space, 15625 and 64000 place cells are
respectively are needed. The huge increase in the number of place cells compared with 2D space,
adding more computational burden to the system.
(a)
6xl04 -
g4xlθ4 -
c?2xl04 -
OxlO4 -
Figure 9: Analysis about grid cells’ metric ability. (a) Histogram showing the numbers of place
cells needed for spatial representation in 2D and 3D spaces. (b) Schematic of the connection pattern
between grid cells and place cells. (c) Top, the spatial activity maps of five grid cells with different
spatial scales in our 2D grid cell model. Bottom, the connection pattern between the five grid cells
to all place cells.
Neuroscience shows us that grid cells are organized in distinct modules, where each module contains
grid cells with similar scale and orientation of the firing pattern (Stensola et al., 2012; Gu et al.,
2018). The joint spatial response of grid cells in only several modules is enough to generate an
enormous diversity of ensemble activity because of the varying spatial scales and phases of grid cells.
It is similar to the combination theory(Fiete et al., 2008; Moser et al., 2015). Take the combination
lock as an example, more than tens of thousands of unique password series can be generated by the
combination of only several modules of decimal digits. The coding advantage of grid cells should be
fully exerted in spatial cognition. In Banino et al. (2018), a recurrent network was trained to perform
path integration, leading to the emergence of representations resembling grid cells, furnishing agents
with a Euclidean spatial metric. No details have yet been given about how grid cell functions as a
metric. Here we go a step further about the connection pattern between grid cells and place cells,
and do some preliminary exploration of grid cells’ functioning as a metric for coding space.
According to Figure 9 (b), connection patterns between grid cells and place cells are mapped as
heat maps, as shown in the bottom of Figure 9 (c), which exhibit spatially tuned grid-like patterns
resembling grid cells. The implication of this discovery is instructive: though there is no clear
conclusion about the connection between grid and place cells in neuroscience, the weight training
between grid cells and place cells to furnish the agent with the ability to decode self-locations leads
to grid-like connection patterns. We should ponder it from another perspective: connection weights
can be seen as grid cells’ contributions during spatial location decoding, which, to some extent,
is spatially tuned and strongly correlated with its own firing patterns. If the delicate relationship
between them can be determined, grid cells can really function as a direct metric for coding space
and do distance measure, path planning and navigation without place cells. The exploration of the
grid-like connection pattern provides a referable and instructive way of thinking about grid cells’
functioning as the metric of coding space.
5 Conclusion
In this paper, a general grid cell modeling mechanism is given for mapping the self-motion in Eu-
clidean space to grid cell’s neural activity, achieving path integration in 1D, 2D and 3D space. Path
integration is done at the network level and recurrent connections between grid cells are maintained.
Different from training-based models, network weights can be worked out during the mapping pro-
cess. Compared with classical CAN-based models, there is no symmetry limitation on the connec-
tion matrix and spatial representation redundancy. We go a step further based on the grid cell built
following our proposed modeling mechanism. The effect of grid scale and phase on our models’
grid coding performance is analyzed for deriving helpful grid cell modeling instructions to achieve
accurate path integration in space of different dimensionality. In addition, the necessity of grid cells’
function as a metric for coding space is underlined from the engineering modeling perspective and
an instructive and new way of thinking about exploring the distance metric mechanism of grid cells,
which is the import research topic we will look further into.
8
Published as a conference paper at ICLR 2021
Acknowledgments
This work was supported by the National Natural Science Foundation of China under Grant No.
61773271 and 61673283.
References
Andrea Banino, Caswell Barry, Benigno Uria, Charles Blundell, Timothy Lillicrap, Piotr Mirowski,
Alexander Pritzel, and et. al. Vector-based navigation using grid-like representations in artificial
agents. Nature, 557(7705):429-433, 2018.
Caswell Barry and Neil Burgess. Neural mechanisms of self-location. Current Biology, 24(8):
R330-339, 2014.
Yoram Burak and Ila R. Fiete. Accurate path integration in continuous attractor network models of
grid cells. PLOS Computational Biology, 5(2):1-16, 2009.
Neil Burgess, Caswell Barry, and John O’Keefe. An oscillatory interference model of grid cell
firing. Hippocampus, 17(9):801-812, 2010.
Daniel Bush and Neil Burgess. A hybrid oscillatory interference/continuous attractor network model
of grid cell firing. The Journal of neuroscience : the official journal of the Society for Neuro-
science, 34(14):5065—5079, 2014.
Christopher J. Cueva and Xue-Xin Wei. Emergence of grid-like representations by training recur-
rent neural networks to perform spatial localization. In International Conference on Learning
Representations, 2018. URL https://openreview.net/forum?id=B17JTOe0-.
Bush Daniel, Barry Caswell, Manson Daniel, and Burgess Neil. Using grid cells for navigation.
Neuron, 87(3):507-520, 2015.
Licurgo de Almeida, Marco Idiart, and John E. Lisman. The input-output transformation of the
hippocampal granule cells: from grid cells to place fields. The Journal of neuroscience, 29(23):
7504-7512, 2009.
Stella Federico and Treves Alessandro. The self-organization of grid cells in 3d. eLife, 4, 2015.
Ila R. Fiete, Yoram Burak, and Ted Brookings. What grid cells convey about rat location. Journal
of Neuroscience, 28(27):6858-6871, 2008.
Mark C. Fuhs and David S. Touretzky. A spin glass model of path integration in rat medial entorhinal
cortex. Journal of Neuroscience, 26(16):4266-4276, 2006.
Marianne Fyhn, Sturla Molden, Menno P. Witter, Edvard I. Moser, and May-Britt Moser. Spatial
representation in the entorhinal cortex. Science, 305(5688):1258-1264, 2004.
Yi Gu, Sam Lewallen, Amina A. Kinkhabwala, Cristina Domnisoru, Kijung Yoon, Jeffrey L. Gau-
thier, IIa R. Fiete, and David W. Tank. A map-like micro-organization of grid cells in the medial
entorhinal cortex. Cell, 175(3):736-750.e30, 2018.
Alexis Guanella, Kiper Daniel, and Paul Verschure. A model of grid cells based on a twisted torus
topology. International Journal of Neural Systems, 17(04):231-240, 2007.
Torkel Hafting, Marianne Fyhn, Sturla Molden, May-Britt Moser, and Edvard I. Moser. Microstruc-
ture of a spatial map in the entorhinal cortex. Nature, 436:801-806, 2005.
Joshua Jacobs, Christoph T. Weidemann, Jonathan F. Miller, Alec Solway, and et al. Direct record-
ings of grid-like neuronal activity in human spatial navigation. Nature neuroscience, 16(9):1188,
2013.
Alexander Mathis, Martin B. Stemmler, and Andreas VM. Herz. Probable nature of higher-
dimensional symmetries underlying mammalian grid-cell activity patterns. eLife, 4:e05979, 2015.
9
Published as a conference paper at ICLR 2021
Bruce L. McNaughton, Francesco P. Battaglia, Ole Jensen, Edvard I. Moser, and May-Britt Moser.
Path integration and the neural basis of the ’cognitive map’. Nature Reviews Neuroscience, 7:
663-678, 2006.
Kim Misun and Eleanor A. Maguire. Can we study 3d grid codes non-invasively in the human brain?
methodological considerations and fmri findings. NeuroImage, 186:667-678, 2019.
Edvard I. Moser, Emilio Kropff, and May-Britt Moser. Place cells, grid cells, and the brain’s spatial
representation system. Annual review of neuroscience, 31:69-89, 2008.
May Britt Moser, David C. Rowland, and Edvard I. Moser. Place cells, grid cells, and memory. Cold
Spring Harbor Perspectives in Biology, 7(2):a021808, 2015.
Hanne Stensola, Tor Stensola, Trygve Solstad, Kristian Fraland, May-Britt Moser, and Edvard I.
Moser. The entorhinal grid map is discretized. Nature, 492(7427):72-78, 2012.
Peter E. Welinder, Yoram Burak, and Ila R. Fiete. Grid cells: The position code, neural network
models of activity, and the problem of learning. Hippocampus, 18(12):1283-1300, 2010.
Michael M. Yartsev, Menno P. Witter, and Nachum Ulanovsky. Grid cells without theta oscillations
in the entorhinal cortex of bats. Nature, 479:103-107, 2011.
Sheng-Jia Zhang, Jing Ye, Chenglin Miao, Albert Tsao, Ignas Cerniauskas, Debora Ledergerber,
May-Britt Moser, and Edvard I. Moser. Optogenetic dissection of entorhinal-hippocampal func-
tional connectivity. Science, 340(6128), 2013.
A Appendix
A.1 Grid Cell Modeling in 1D Space
The position in 1D space is denoted as r, which is a scalar value. There are N grid cells in the neural
network and s(r) = [si(r), s2(r),…，SN(r)]T(or S = [si, s2,…，SN]T) represents the grid cell
population activity. The formulaic description of grid cell firing patterns we used as below:
Si(r) = 1 cos(ko(r - ∆r)) + 1
cosk0∆ri
M =	.
.
osk0∆rN
where ∆r and k0 respectively determine the grid pattern phase and spatial scale. The weight can be
calculated as follows:
W = M * Ko * Mt
where
-k0
0
sink0∆ri
.
.
.
sink0 ∆rN
M* denotes the pseudo-inverse matrix of M and can be obtained through the singular value decom-
position of matrix M. Finally, the dynamics of grid cells in 1D space is τ ds/dt = f (W * vt * s)
where f(x)=0ifx ≤ 0 else f(x)=1and vt is the moving velocity in 1D space.
A.2 Grid Cell Modeling in 2D Space
The position in 2D space is denoted as r=(x, y). There are N grid cells in the neural network and
s(r) = [si(r), s2(r),…，SN(r)]T(or S = [si, s2,…，SN]T) represents the grid cell population
activity. The formulaic description of grid cell firing patterns we used as below:
13	1
Si(T) = W ECoS(kj(r - δt^ + W
j=i
10
Published as a conference paper at ICLR 2021
where si(r) is the ith grid cell’s activity. ∆r=(∆x, ∆y) determine the grid pattern phase. kj can be
given as the row vector of the matrix K :
k1
K =	k2	= k0
COS ( 6 - θ)
cos(- 6 - θ)
cos (-2 - θ)
Sin(6 - θ)
sin(- 6 - θ)
Sin (-2 - θ)
where ko = 2∏∕T. T and θ respectively represent the grid scale and direction, which are same for
grid cells in a neural network. The weight can be calculated as follows:
Wm = M * Bm * Mt (m =1, 2)
where
0	Bm1
Bm = Bm2	0
Bm1 = diag([-K1m, -K2m, -K3m]) Bm2 = diag([K1m, K2m, K3m])
M = I
cosk1∆r1 cosk2∆r1 cosk3∆r1 sink1∆r1 sink2∆r1 sink3∆r1
cosk1∆rN cosk2∆rN cosk3 ∆rN sink1∆rN sink2∆rN sink3∆rN
It should be noted that M* denotes the pseudo-inverse matrix of M and can be obtained through
the singular value decomposition of matrix M . Finally, the dynamics of grid cells in 2D space is
τ ds/dt = f (P2=1 Wm * vt * s) where f(x)=0if x ≤ 0, else f(x)=0and vt =[v1t,v2t]T is
the moving velocity vector in 2D space.
A.3 Grid coding performance Analysis in 2D space
Grid coding performance analysis based on different grid scales in 2D space:
Figure 10: Grid coding performance analysis based on different grid scales in 2D space. (a) The
phase distribution of sub-RNNs with different scales. (b) The agent’s exploring trajectory in a 25m2
area. (c) Histogram showing accumulated coding error of each sub-RNN after path integration
following the simulation trajectory in (b). (d) The comparison between the coding result derived
from our model and the ground truth activity of the selected grid cells in (a).
Grid coding performance analysis based on different phase distributions in 2D space:
11
Published as a conference paper at ICLR 2021
Figure 11: Grid coding performance analysis based on different phase distributions in 2D space.
(a) The phase distributions respectively generated by uniform random distribution, square tiling
and hexagonal tiling. (b) The comparison between the ground truth and grid coding derived form
our model for three grid cells randomly selected in the cases of different phase distribution. (c)
Histogram showing, with different network sizes, accumulated grid coding error of the whole model
in the case of different phase distributions.
12