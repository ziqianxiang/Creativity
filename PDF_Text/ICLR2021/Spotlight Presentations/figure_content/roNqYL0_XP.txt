Figure 1: Diagram of MeshGraphNets operating on our SphereDynamic domain (video). Themodel uses an Encode-Process-Decode architecture trained with one-step supervision, and can beapplied iteratively to generate long trajectories at inference time. The encoder transforms the inputmesh Mt into a graph, adding extra world-space edges. The processor performs several rounds ofmessage passing along mesh edges and world edges, updating all node and edge embeddings. Thedecoder extracts the acceleration for each node, which is used to update the mesh to produce Mt+1.
Figure 2: Our model can predict dynamics of vastly different physical systems, from structuralmechanics over cloth to fluid dynamics. We demonstrate this by simulating (a) a flag waving in thewind, (b) a deforming plate, (c) flow of water around a cylinder obstacle, and (d) the dynamics ofair around the cross-section of an aircraft wing (videos). The color map shows the von-Mises stressin (b), and the x-component of the velocity field in (c),(d).
Figure 3: Simulation of a cloth interacting with a sphere. (a) In red, we highlight two nodes whichare close in world-space but far in mesh-space, between which a world edge may be created. (b)With the same number of nodes, adaptive remeshing enables significantly more accurate simulationsthan a regular mesh with the same number of nodes.
Figure 4: (a) Rollout of our model versus ground truth on dataset Airfoil. Adaptive meshingallows us to accurately predict dynamics at large and small scales. The grid-based U-Net baseline iscapable of making good predictions at large scales, but it cannot resolve the smaller scales, despiteusing four times more cells than our model (video). (b) At inference time, our model can be scaledup to significantly larger and more complex setups than seen during training (video).
Figure 5: (a) Our model outperforms GCN and CNN-based baselines. (b) GNS diverges on clothdatasets; providing mesh-space positions (GNS+mesh-pos) helps, but still fails on dynamic meshes.
