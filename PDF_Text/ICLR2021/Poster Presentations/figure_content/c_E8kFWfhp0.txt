Figure 1: VSim is a unified differentiable rendering and multiphysics framework that allows solving a range ofcontrol and parameter estimation tasks (rigid bodies, deformable solids, and cloth) directly from images/video.
Figure 2: VSim: Given video observations of an evolving physical system (e), We randomly initialize sceneobject properties (a) and evolve them over time using a differentiable physics engine (b), which generates states.
Figure 3: Parameter Estimation: Fordeformable experiments, we optimizethe material properties of a beam to match a videoof a beam hanging under gravity. In the rigidexperiments, we estimate contact parameters(elasticity/friction) and object density to match avideo (GT). We visualize entire time sequences (t)with color-coded blends.
Figure 4: Loss landscapes when optimizing for physical attributes using VSim. (Left) When estimating themass of a rigid-body with known shape using VSim, despite images being formed by a highly nonlinearprocess (simulation), the loss landscape is remarkably smooth, for a range of initialization errors. (Right) whenoptimizing for the elasicity parameters of a deformable FEM solid. Both the LamC parameters λ and μ are set to1000, where the MSE loss has a unique, dominant minimum. Note that, for fair comparison, the ground-truth forour PyBullet+REINFORCE baseline was generated using the PyBullet engine.
Figure 5: Visuomotor Control: VSim providesgradients suitable for diverse, complex visuo-motor control tasks. For control-fem andcontrol-walker experiments, we train a neu-ral network to actuate a soft body towards a targetimage (GT). For control-cloth, we optimizethe cloth’s initial velocity to hit a target (GT) (spec-ified as an image), under nonlinear lift/drag forces.
Figure 6: Convergence Analysis: Performance of ▽ Sim on visuomotor control using image-based supervision,3D supervision, and random policies.
Figure 7: Including shading and texture cues lead tofaster convergence. Inset plot has a logarithmic Y-axis.
Figure 8: Mesh Discretization: We use triangular (a) and tetrahedral (b) FEM models with angle-based andvolumetric activation parameters, α. These mesh-based discretizations are a natural fit for our differentiablerasterization pipeline, which is designed to operate on triangles.
Figure 9: Contact Model: To model non-interpenetration constraints we use a relaxed model of contact thatreplaces a delta function with a linear hinge corresponding to a quadratic penalty energy (a). To model frictionwe use a relaxed Coulomb model, that replaces the step function with a symmetric hinge (b).
Figure 10: Our simple network architecture used the for control-walker and control-fem tasks.
Figure 11:	Loss Landscapes: (left) when optimizing for the elasicity parameters of a deformable FEM solid.
Figure 12:	Impact of the length of a video sequence on the loss landscape. Notice how the loss landscape ismuch steeper for smaller videos (e.g., MSE of first and last frames). Nonetheless, all cases have a smooth losslandscape with the same unique minimum.
Figure 13: Objects used in our rigid-body experiments. All of these meshes have been simplified to contain250 or fewer vertices, for faster collision detection times.
