Figure 1: Targeted Attack. Malicious instances generated for a sparse attack with differentquery budgets using our SparseEvo attack algorithm employed on black-box models built for theImageNet task. With an extremely sparse perturbation (78 perturbed pixels over a total of 50,176pixels), an image with ground-truth label traffic light is misclassified as a street sign.
Figure 2: An illustration of SparseEvo algorithm. Population Initialization creates the first popu-lation generation. This population is evolved over iterations through Binary Differential Recombi-nation, Mutation, Fitness Evaluation (Adversarial Example Construction and Fitness Computation)and Selection stages. The source and starting images (used in a targeted attack) are employed to cre-ate the initial candidate solutions —binary vector representations—at Population Initialisation andto construct an adversarial example based on a candidate solution v(m) at Fitness Evaluation stage.
Figure 3: The Binary Differential Recombination isshown in Algorithm 1 (line 6) and equation 5. isan element-wise product, v(kb) , v(j), v(q) are the bestand two randomly selected candidate solutions from apopulation respectively.
Figure 4: Evaluation set from ImageNet using the ResNet50 model with image size (W×H):224 × 224. a) Median sparsity with the first and third quartiles used as lower and upper error barsversus the number of model queries; and b) attack success rate versus sparsity thresholds.
Figure 5: Evaluation set from ImageNet using the ViT model with image size (W×H): 224 ×224.
Figure 6: Attack success rate versus sparsity thresholds at different query budgets for the evaluationset from ImageNet with ViT vs ResNet. PGDq is a white-box attack (ideal).
Figure 7: Sparsity versus number of model queries on CIFAR10 with ResNet18 to show the impactsof different hyper-parameters on SparseEvo.
Figure 8: Different sparse attacks against an adversarially trained model on the CIFAR10 task. Weshow sparsity versus queries and ASR versus sparsity two different query budgets: 200 and 500.
Figure 9: Evaluation set from CIFARl 0 using a ResNetl8 model, a) Median sparsity with the firstand third quartiles used as lower and upper error bars versus number of model queries; and b) attacksuccess rate (ASR) versus sparsity thresholds.
Figure 10: Visualisations from a targeted attack Settings. Malicious instances generated for a sparseattack with different query budgets using our SparseEvo attack algorithm employed on black-boxmodels built for the ImageNet task.
