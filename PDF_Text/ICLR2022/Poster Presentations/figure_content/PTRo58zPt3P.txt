Figure 1: An illustrative example of motivation.
Figure 2: Illustration of GraphANGEL’s relation prediction workflow, where different edge colors in the graph Grepresent different relation types, and dashed edges in G represent the triplet hs, r, ti we wish to predict. The leftbox shows the patterns considered in our implementation, where black edges mean matching edges irrespectiveof relation types. The bottom boxes show the logical function of the three patterns.
Figure 3: Performance change of GraPhANGEL with different number of subgraphs in terms of ACC and AUC.
Figure A1: An illustrated example of notations in GraphANGEL.
Figure A2: An illustrated example of nodes and edges involved in GraphANGEL and other existing approaches,where nodes and edges in grey are not activated while the other colors of nodes and edges represent their types.
Figure A3: An illustrated example of divid-ing Gnew (including the nodes and edges inthe black box) into Gold (including the nodesand edges in the blue circle), ∆Gnew (includ-ing the nodes and edges in the green circle)and ∆Gold (including the nodes and edges inpurple color), when putting ∆G - aside. Notethat there is overlapping nodes but no overlap-ping edges between Gold and ∆Gold, ∆Gnewand ∆Gold. (a)(b) denote the two types of3-cycles and (c)-(g) denote five types of 4-cycles not within either Gold or ∆Gnew .
Figure A4: An illustrated example of how GraphANGEL works on both the heterogeneous graph shown in (a)and the homogeneous graph shown in (d), where the colors of the nodes and edges represent their types in theheterogeneous graph. For the heterogeneous graph, GraphANGEL can automatically find the graph patternby scanning on the graph schema by given shapes (e.g., Pair, 3-cycle, 4-cycle). We show an example graphpattern in (b). Based on the graph and graph pattern, we show the nodes and edges activated in GraphANGELin (c), where the nodes and edges in colors are activated and those in black are not activated. However, forthe homogeneous graph, since there is no graph pattern based on the node and edge type, we design the graphpattern directly based on the shape (i.e., hexagon shape in (e)). We then show the nodes and edges activated in(f), where nodes and edges in red construct a subgraph following target pattern and the green ones compose asubgraph following analogy pattern.
Figure A5: Illustrations of generated heat map of attention scores. While Figure 5 can provide a global view foreach graph pattern, this figure can see the importance of detailed subgraphs.
Figure A6: Performance change of GraphANGEL with different size of the buffer in term of ACC and AUC,where we investigate the performance of GraphANGEL using 0.25, 0.5, 0.75 number of supporting instance in3-cycles (i.e., ∏+-cycle), or 0.25, 0.5, 0.75 number of supporting instance in 4-cycles (i.e., ∏+-cycle) on Amazonand Douban Book datasets.
Figure A7: Time comparisons of GraPhANGEL against baseline models on Amazon dataset in (a) and onFB15k-237 dataset in (b).
