Published as a conference paper at ICLR 2022
Creating Training Sets via Weak Indirect
Supervision
Jieyu Zhang1,2, Bohan Wang1,3, Xiangchen Song4, Yujing Wang1, Yaming Yang1, Jing Bai1,
Alexander Ratner2,5
1Microsoft Research Asia 2University of Washington
3 University of Science and Technology of China 4Carnegie Mellon University 5Snorkel AI, Inc.
{jieyuz2, ajratner}@cs.washington.edu
{yujwang, yayaming, jbai}@microsoft.com
wbhfy@mail.ustc.edu.cn
xiangchensong@cmu.edu
Ab stract
Creating labeled training sets has become one of the major roadblocks in machine
learning. To address this, recent Weak Supervision (WS) frameworks synthesize
training labels from multiple potentially noisy supervision sources. However,
existing frameworks are restricted to supervision sources that share the same output
space as the target task. To extend the scope of usable sources, we formulate Weak
Indirect Supervision (WIS), a new research problem for automatically synthesizing
training labels based on indirect supervision sources that have different output label
spaces. To overcome the challenge of mismatched output spaces, we develop a
probabilistic modeling approach, PLRM, which uses user-provided label relations
to model and leverage indirect supervision sources. Moreover, we provide a
theoretically-principled test of the distinguishability of PLRM for unseen labels,
along with a generalization bound. On both image and text classification tasks as
well as an industrial advertising application, we demonstrate the advantages of
PLRM by outperforming baselines by a margin of 2%-9%.
1	Introduction
One of the greatest bottlenecks of using modern machine learning models is the need for substantial
amounts of manually-labeled training data. In real-world applications, such manual annotations are
typically time-consuming, labor-intensive and static. To reduce the efforts of annotation, researchers
have proposed Weak Supervision (WS) frameworks (Ratner et al., 2016; 2018; 2019; Fu et al., 2020)
for synthesizing labels from multiple weak supervision sources, e.g., heuristics, knowledge bases,
or pre-trained classifiers. These frameworks have been widely applied on various machine learning
tasks (Dunnmon et al., 2020; Fries et al., 2021; Safranchik et al., 2020; Lison et al., 2020; Zhou
et al., 2020; Hooper et al., 2021; Zhan et al., 2019; Varma et al., 2019) and industrial data (Bach
et al., 2019). Among them, data programming (Ratner et al., 2016), one representative example
that generalizes many approaches in the literature, represents weak supervision sources as labeling
functions (LFs) and synthesizes training labels using Probabilistic Graphical Model (PGM).
Given both the increasing popularity of WS and the general increase in open-source availability of
machine learning models and tools, there is a rising tide of available supervision sources that WS
frameworks and practitioners could potentially leverage, including pre-trained machine learning
models or prediction APIs (Chen et al., 2020; d’Andrea & Mintz, 2019; Yao et al., 2017). However,
existing WS frameworks only utilize weak supervision sources with the same label space as the
target task. This incompatibility largely limits the scope of usable sources, necessitating manual
effort from domain experts to provide supervision for unseen labels. For example, consider target
task of classifying {“dog”, “wolf ”, “cat”, “lion”} and a set of three weak supervision sources
(e.g. trained classifiers or expert heuristics) with disjoint output spaces {“caninae”, “felidae”},
{“domestic animals”, “wild animals”} and {“husky”, “bengal cat”} respectively. We call these types
of sources indirect supervision sources. For concreteness, we follow the general convention of data
programming (Ratner et al., 2016) and refer to these sources as indirect labeling functions (ILFs).
1
Published as a conference paper at ICLR 2022
Despite their apparent utility, existing weak supervision methods could not directly leverage such
ILFs, as their output spaces have no overlap with the target one.
In this paper, we formulate a novel research problem that aims to leverage such ILFs automatically,
minimizing the manual efforts to develop and deploy new models. We refer to this as the Weak
Indirect Supervision (WIS) setting, a new Weak Supervision paradigm which leverages ILFs, along
with the relational structures between individual labels, to automatically create training labels.
The key difficulty of leveraging ILFs is due to the mismatched label spaces. To overcome this, we
introduce pairwise relations between individual labels to the WIS setup, which are often available
in structured sources (e.g. off-the-shelf Knowledge Bases (Miller, 1995; Sinha et al., 2015; Dong
et al., 2020) or large scale label hierarchies (Murty et al., 2017; The Gene Ontology Consortium,
2018; Partalas et al., 2015) for various domains), or can be provided by subject matter experts in
far less time than generating entirely new sets of weak supervision sources. For example, in the
aforementioned example, we could rely on a biological species ontology to see that the unseen labels
“dog” and “cat” are both subsumed by the seen label “domestic animals”. Based on the label relations,
we can automatically leverage the supervision sources as ILFs. Notably, previous work (Qu et al.,
2020) also leveraged a label relation graph but was focused on relation extraction task in a few-shot
learning setting, while You et al. (2020) proposed to learn label relations given data for each label in
a transfer learning scenario. In contrast, we aim to solve the target task directly and without clean
labeled data.
The remaining questions are (1) how to synthesize labels based on pair-wise label relations and ILFs?
and (2) How can we know whether, given a set of ILFs and label relations, the unseen labels are
distinguishable or not? To address the first question, we develop a probabilistic label relation model
(PLRM), the first PGM for WIS which aggregates the output of ILFs and models the label relations as
dependencies between random variables. In turn, we use the learned PLRM to produce labels for
training an end model. Furthermore, we derive the generalization error bound of PLRM based on
assumptions similar to previous work (Ratner et al., 2016).
The second question presents an important stumbling block when dealing with unseen labels, as we
may not be able to distinguish the unseen labels given existing label relations and ILFs, resulting in
an unsatisfactory synthesized training set. To address this issue, we formally introduce the notion
of distinguishability in WIS setting and theoretically establish an equivalence between: (1) the
distinguishability of the label relation structure as well as the ILFs, and (2) the capability of PLRM
to distinguish unseen labels. This result then leads to a simple sanity test for preventing the model
from failing to distinguish unseen labels. In preliminary experiments, we observe a significant drop
in model performance when the condition is violated.
In experiments, we make non-trivial adaptations for baselines from related settings to the new WIS
problem. On both text and image classification tasks, we demonstrate the advantages of PLRM over
adapted baselines. Finally, in a commercial advertising system where developers need to collect
annotations for new ads tags, we illustrate how to formulate the training label collection as a WIS
problem and apply PLRM to achieve an effective performance.
Summary of Contributions. Our contributions are summarized as follows:
•	We formulate Weak Indirect Supervision (WIS), a new research problem which synthesizes
training labels based on indirect supervision sources and label relations, minimizing human efforts
of both data annotation and weak supervision sources construction;
•	We develop the first model for WIS, the Probabilistic Label Relation Model (PLRM) with
comparable statistical efficiency to previous WS frameworks and standard supervised learning;
•	We introduce a new notion of distinguishability in WIS setting, and provide a simple test of the
distinguishability of PLRM for unseen labels by theoretically establishing the connection between
the label relation structures and distinguishability;
•	We showcase the potential of the WIS formulation and the effectiveness of PLRM in a commercial
advertising system for synthesizing training labels of new ads tags. On academic image and
text classification tasks, we demonstrate the advantages of PLRM over baselines by quantitative
experiments. Overall, PLRM outperforms baselines by a margin of 2%-9%.
2
Published as a conference paper at ICLR 2022
2	Related Work
Table 1: Comparisons between the proposed weak indirect supervision (WIS) and related machine
learning tasks. Compared to normal and weakly supervised learning, WIS handles mismatched train
and test label spaces. WIS is similar in spirit to indirect supervision (IS) and zero-shot learning
(ZSL), but distinct in that WIS only takes as input weak or noisy labels and a simple set of logical
label relations, and aims to output a training data set rather than a trained model, affording complete
modularity in which final model class is used.
Task	Label Type	Ytrain = Ytest	Label Information	When Label Info. is Required
Supervised Learning (SL) Weak Supervision (WS) Indirect Supervision (IS) Zero-Shot Learning (ZSL)	Clean Labels	X Noisy Sources	X Clean Labels Clean Labels	Label Trans. Matrix Label Embed. / Attribute	Training Training & Test
Weak Indirect Supervision (WIS)	Noisy Sources	Label Relation	Training
We briefly review related settings. The comparison between WIS and related tasks is in Table 1.
Weak Supervision: We draw motivation from recent work which model and integrate weak supervi-
sion sources using PGMs (Ratner et al., 2016; 2018; 2019; Fu et al., 2020) and other methods (Guan
et al., 2018; Khetan et al., 2018) to create training sets. While they assume supervision sources
share the same label space as the new tasks, we aim to leverage indirect supervision sources with
mismatched label spaces in a labor-free way.
Indirect Supervision: Indirect supervision arises more generally in latent-variable models for various
domains (Brown et al., 1993; Liang et al., 2013; Quattoni et al., 2004; Chang et al., 2010; Zhang
et al., 2019). Very recently, Raghunathan et al. (2016) proposed to use the linear moment method for
indirect supervision, wherein the transition between desired label space Y and indirect supervision
space O is known, as well as the ground truth of indirect supervisions for training. In contrast,
both are unavailable in WIS. Theoretically, Wang et al. (2020) developed a unified framework for
analyzing the learnability of indirect supervision with shared or superset label spaces, while we focus
on disjoint label spaces and the consequent unique challenge of distinguishability of unseen classes.
Zero-Shot Learning: Zero-Shot Learning (ZSL) (Lampert et al., 2009; Wang et al., 2019) aims to
learn a classifier that is able to generalize to unseen classes. The WIS problem differentiates from
ZSL by (1) in ZSL setting, the training and test data belong to seen and unseen classes, respectively,
and training data is labeled, while for WIS, both training and test data belong to unseen classes
and unlabeled; (2) ZSL tends to render a classifier that could predict unseen classes given certain
label information, e.g., label attributes (Romera-Paredes & Torr, 2015), label descriptions (Srivastava
et al., 2018) or label similarities (Frome et al., 2013), while WIS aims to provide training labels for
unlabeled training data, allowing users to train any machine learning models, and the label relations
are used only in synthesizing training labels.
3	Preliminary: Weak Supervision
We first describe the Weak Supervision (WS) setting. A glossary of notations used is in App. A.
Definitions and notations. We assume a k-way classification task, and have an unlabeled dataset D
consisting of m data points. Denote by Xi ∈ X the individual data point and Yi ∈ Y = {y1 , . . . , yk}
the unobserved interested label of Xi . We also have n sources, each represented by a labeling
function (LF) and denoted by λj. Each λj outputs a label Yj ∈ Yλ, = {y1 ,...,yjλ } on Xi, where
Yλj is the label space associated with λj and ∣Yλj | = kλj. We denote the concatenation of LFs'
output as Yi = [Yi1, Yi2, . . . , Yin], and the union set of LFs’ label spaces as Y with |Y| = k. Note
ʌ
that k is not necessarily equal to the sum over kλj , since LFs may have overlapping label spaces. We
call y ∈ Y Seen label and y ∈ Y desired labels. In WS settings, We have Y ⊂ Y. Notably, We assume
all the involved labels come from the same semantic space.
The goal of WS. The goal is to infer the training labels for the dataset D based on LFs, and to use
them to train an end discriminative classifier fW : X → Y, all without ground truth training labels.
3
Published as a conference paper at ICLR 2022
Figure 1: An example of WIS problem: the input consists of an unlabeled dataset, a label graph, and
n indirect labeling functions (ILFs). The ILFs represent weak supervision sources such as pretrained
classifiers, knowledge bases, heuristic rules, etc. We can see that the ILFs cannot predict desired
labels i.e., {“dog”, “wolf”, “cat”, “lion”}. To address this, a label graph is given; here we only
visualize the subsuming relation. Finally, a label model, instantiated as a PGM, takes the ILF’s
outputs and produces probabilistic labels in the target output space, which are in turn used to train an
end machine learning model that can generalize beyond them.
4	Weak Indirect Supervision
Now, we introduce the new Weak Indirect Supervision (WIS) problem. Unlike the standard WS
setting, we only have indirect labeling functions (ILFs) instead of LFs, and an additional label graph
is given. The goal of WIS remains the same as WS. An example of WIS problem is in Fig. 1.
Indirect Labeling Function. In WIS, we only have indirect labeling functions (ILFs), which cannot
ʌ
directly predict any desired labels, i.e., Y∩Y = 0. Therefore, We refer to the desired labels as unseen
labels. To make it possible to leverage the ILFs, a label graph is given, which encodes pair-wise label
relations between different seen and unseen labels.
Label Graph. Concretely, a label graph G = (V, E) consists of (1) a set of all the labels as nodes, i.e.,
ʌ
V = Y ∪ Y, and (2) a set of pair-wise label relations as typed edges, i.e., E = {(yi, yj, tyiyj)|tyiyj ∈
T, i < j, ∀yi, yj ∈ V}. Here, T is the set of label relation types and, similar to Deng et al. (2014),
there are four types of label relations: exclusive, overlapping, subsuming, subsumed, notated by
to, te, tsg, tsd, respectively. Notably, for any ordered pair of labels (yi, yj), their label relation should
fall into one of the four types. The rationale behind these label relations is that when treating each
label as a set, there are four unique set relations and each corresponds to one defined label relation
respectively as shown in Fig. 2. For convenience, we denote the set of non-exclusive neighbors of a
given label y in Y as N(y, YY), i.e., N(y, Y) = {y ∈ Y∣tyy = te}.
Label relation:	Exclusive
Set relation:	A ∩ B = 0
Subsuming
A % B
Subsumed
A$B
Overlap
A ∩ B = 0,A ⊂ B,B ⊂ A
Figure 2: The one-to-one mapping between label relations and set relations.
5 Probabilistic Label Relation Model
One of the key difficulties in both WS and WIS is that we do not observe the true label Yi . Following
prior work (Ratner et al., 2016; 2019; Fu et al., 2020), we use a latent variable Probabilistic Graphical
Model (PGM) for estimating Yi based on the Yi output by ILFs. Specifically, the PGM is instantiated
4
Published as a conference paper at ICLR 2022
as a factor graph model. This standard technique lets us describe the family of generative distributions
in terms of M known dependencies/factor functions {φ}, and an unknown parameter Θ ∈ RM as
Pθ(∙) a exp(Θ>Φ(∙)), where Φ is the concatenation of {φ}. However, the unique challenge for
WIS is that the dependencies {φ} between Yi and Yi are unknown due to the mismatches of label
spaces. We overcome these by leveraging the label graph G to build the dependencies for the PGM.
5.1	A Baseline PGM for WIS
In prior work (Ratner et al., 2016; Bach et al., 2017), the PGM for WS is governed by accuracy
dependencies:
φAcc(Y,Yj):= 1{Y = Yj = y}
which is defined for each λj and y ∈ Yλj ∩Y. However, in WIS, the ILFs cannot predict desired label
y ∈ Y . As a simple baseline approach to start, we leverage the coarse-grained exclusive/non-exclusive
label relation to build a corresponding "accuracy" factor. Specifically, for an ILF λj and one label
y ∈ Yλj, given a desired label y ∈ Y, if y and y have non-exclusive label relation, i.e., y ∈ N(y, Yλj)
We expect a certain portion of data assigned y should be labeled as y. Thus, We treat Yj = y as a
pseudo indicator of Y = y and add a pseudo accuracy dependency between them:
ΦAcy,j (Y,Y j :=叫Y = y ∧ Yj = y}
We call the PGM governed by pseudo accuracy dependencies Weak Supervision with Label Graph
(WS-LG). Notably, it can be treated as a simple adaptation of PGM for WS (Ratner et al., 2016; 2019;
FU et al., 2020) to the WIS problem. However, such a naive adaptation might have two drawbacks:
1.	It does not model specific dependencies ILFs with different undesired labels. For example, two
ILFs outputting “Husky” and “bulldog” respectively would be naively modeled the same as if they
both output “Dog”.
2.	It can only directly model exclusive/non-exclusive label relations, ignoring the prior knowledge
encoded in other relation types, i.e., subsuming, subsumed, or overlapping. For example, given
an unseen label “Dog” and some ILFs outputting “Husky” or “Domestic Animals”, WS-LG
would treat all ILFs as indicators of “Dog”. However, we know a “Husky” is of course a “Dog”
(subsumed relation) while a “Domestic Animals” is not necessarily a “Dog” (subsuming relation).
5.2	Probabilistic Label Relation Model
To more directly model the full range and nuance of label relations, we propose a new probabilistic
label relation model (PLRM). In PLRM, we explicitly model both (1) the dependency between ILF
outputs and the true labels in their output spaces, i.e. their direct accuracy, and (2) the dependencies
between these labels and the target unseen labels, as separate dependency types, thus explicitly
incorporating the full label relation graph into our model and learning its corresponding weights.
Concretely, we augment the WS-LG model with (1) latent variables representing the assignment
of the data to each seen label, and (2) label relation dependencies which capture fine-grained label
relations between these output labels and desired labels. To model seen label in Y, we introduce
a binary latent random vector Y = [Y 1,..., Yk], where Yi indicating whether the data should be
assigned yi. Then, for ILF λj that could predict yi, we have accuracy dependency:
φAcj(Yi,Yj):= H{Yi = ι ∧ Yj= yi}
To model fine-grained label relations, for a desired label y ∈ Y and seen label yi ∈ Y, we add label
relation dependencies. We enumerate the label relation dependencies corresponding to the four label
relation types, i.e., exclusive, overlapping, subsuming, subsumed, as follows:
Φy,^i(Y,Y'i) ：= -i{Y = y ∧ Yi = ι}
φy-(Y*i) ：= 1{Y = y ∧ Yi = 1}
φygyi(Y,Yi) := -1{Y = y ∧ Yi = ι}
φydyi(Y,Y i):= -1{Y = y ∧ Y i = 0}
5
Published as a conference paper at ICLR 2022
The above dependencies encode the prior knowledge of the label relations, but also allow the model
to learn corresponding parameters. For example, an exclusive label relation dependency φe outputs
-1 when two exclusive labels are activated at the same time for the same data, otherwise 0, which
reflects our prior knowledge of the exclusive label relation; and the corresponding parameter can be
treated as the strength of the label relation. Likewise, for any pair of seen labels, we add label relation
dependency following the same convention. Finally, we specify the model as:
Pθ(Y,Y,Y) Y exp (θ>Φ(Y,Y,Y)).	⑴
Recall that Y is the unobserved true label, Y is the binary random vector, each of whose binary value
reflects whether the data should be assigned seen
of ILFs.
ʌ ʌ
label yi ∈ Y, and Y is the concatenated outputs
Yi
Learning Objective. We estimate the parameters ΘΘ by minimizing the negative log marginal
likelihood Pθ (Y) for observed ILF outputs Y1：m:
m
Θ = arg min -X log X Pθ(Y,Y ,Yi) .	(2)
θ	i=1 y,Y
We follow Ratner et al. (2016) to optimize the objective using stochastic gradient descent.
Training an End Model. Let p& (Y | Y) be the probabilistic label (i.e. distribution) predicted by
learned PLRM. We then train an end model fW : X → Y parameterized by W, by minimizing the
empirical noise-aware loss (Ratner et al., 2019) with respect to ΘΘ over m unlabeled data points:
arg min
W
1m
m X EY 〜pθ (γ∣Yi)'(Y,fW(Xi)),
i=1
(3)
where '(Y, fw(Xi)) is a standard cross entropy loss.
Generalization Error Bound. We extend previous results from (Ratner et al., 2016) to bound both
the expected error of learned parameter ΘΘ and the expected risk for W. All the proof details and
description of assumptions can be found in Appendix.
Theorem 1. Suppose that we run
stochastic gradient descent to produce ΘΘ and W based on Eqs. (2)
and (3), respectively, and that our setup satisfies certain assumptions (App D.2). Let |D| be the size
of the unlabeled dataset. Then we have
E∣∣Θ — θ*∣∣2 ≤ o
E ['(W) — '(W*)] ≤ X + O (H jl°D^!.
Interpreting the Bound. By Theorem 1, the two errors decrease by the rate O(1/|D|) and
O(1/|D|1/2) respectively as |D| increases. This shows that although we trade computational effi-
ciency for the reduction of human efforts by using complex dependencies and more latent variables,
we maintain comparable statistical efficiency as previous WS frameworks and supervised learning
theoretically.
6 Distinguishability of Unseen Labels
One unique challenge of WIS is that there may exist pairs of unseen
labels which cannot be distinguished by the learned model. For
example, as shown in Fig. 3, where “Dog” is a seen label for which
LFs could predict for and “Husky” and “Bulldog” are unseen labels
for which we want to generate training labels; however, we could
not distinguish between “Husky” and “Bulldog” even though the LFs
make correct predictions of seen label “Dog”, because both “Husky”
and “Bulldog” share the same label relation to “Dog”.
To tackle this issue, we theoretically connect the distinguishability of
unseen labels to the label relation structures and provide a testable
Figure 3: Example of in-
distinguishable unseen labels
“Husky” and “Bulldog”.
W
6
Published as a conference paper at ICLR 2022
condition for the distinguishability. Intuitively, same label relation
structures could lead to indistinguishable unseen labels as shown in Fig. 3; however, it turns out to be
challenging to prove that different label relation structures could guarantee the distinguishability
with respect to the model. To illustrate, we formally define the distinguishability as below.
— ʌ _
Definition 1 (Distinguishability). For any model PΘ(Y, Y , Y ) with parameters Θ, any pair of unseen
labels yi, yj ∈ Y are distinguishable w.r.t. the model, if for a.e. Θ > 0 (element-wisely), there does
~ — ʌ
NOT exist such a Θ > 0 that, for ∀Y , Y , the following equations hold
一 ʌ 一 ʌ 一 ʌ 一 ʌ
Pθ (Y = yi | Y ,Y) = Pθ (Y =	yj IY, Y) ,Pθ(y =	yj | Y, Y)	= P& (Y =	y IY ,Y),	(4)
一 ʌ 一 ʌ
Pθ(Y = y∣Y,Y) = Pθ(Y = y∣Y,Y),∀y ∈ Y{yi,y},	(5)
Pθ(Y) = Pθ (Y).	(6)
From the definition, we can see that the opposite of distinguishability, i.e., indistinguishability,
describes an undesired model: for any learned parameter Θ > 0, we can always find another Θ
which optimizes the loss equally well (Eq. (6)), but Eqs. (4-5) implies whenever PΘ predict yi,
Pθ WiUpredict yj instead, which reflects that the model cannot distinguish the two unseen labels.
Note that the notion of distinguishability is different from the identifiability in PGMs: the generic
identifiability (Allman et al., 2015), the strongest notion of identifiability, requires the model to be
identifiable up to label swapping, while the distinguishability aims to avoid the label swapping.
However, distinguishability is hard to verify since Eqs. (4-5) and (6) need to hold for any possible
configuration of Y, Y, and any pair of unseen labels. Fortunately, for the proposed PLRM, we
prove that distinguishability is equivalent to the asymmetry of the label relation structures when two
conditions hold. To state the required conditions, we first introduce the notations of consistency and
informativeness to characterize the label graph and ILFs.
Consistency. We discuss the consistency of a label graph to avoid an ambiguous or unrealistic label
graph. We interpret semantic labels ya, yb as sets A, B, and then connect the label relations to the set
relations (Fig. 2). Given the set interpretations, we define the consistency of label graph as:
Definition 2 (Consistent Label Graph). A label graph G = (Y, E) is consistent if the induced set
relations are consistent.
For example, assume Y = {ya, yb, yc}, and tab = tbc = tca = tsg. From tab, tbc, we can observe
that A % B % C, which contradicts to C % A implied by tca = tsg . Thus, G is inconsistent.
Informativeness. In addition, we try to describe what kind of ILF is desired. Intuitively, an ILF is
uninformative if it always "votes" for one of the desired labels. For example, if the desired label
space Y is {“Dog”, “Bird”}, then for an ILF λ1 outputting {“Husky”, “Bulldog”}, we know “Dog” is
non-exclusive to “Husky” and “Bulldog”, while “Bird” exclusive to both. In such case, λ1 can hardly
provide information to help distinguish “Dog” from “Bird”, because it always votes for “Dog”. On
the other hand, a binary classifier of “Husky”, i.e., λ2, is favorable since it could output “Not a Husky”
to avoid consistently voting for “Dog”. We can see an undesired ILF always votes for a single desired
label. To formally describe this, we define an informative ILF as:
Definition 3 (Informative ILF). An ILF λj is informative if, for ∀y ∈ Y, there exists Xi ∈ D s.t. the
output of λj on Xi is not in N (y,Yλj), i.e., Yj ∈ N (y,Yλj).
Testable Conditions for Distinguishability. Based on the introduced notations, we prove the
necessary and sufficient condition for learned PLRM being able to distinguish unseen labels:
Theorem 2. For PLRM induced from a consistent label graph, as well as informative ILFs, for any
pair of yi, yj ∈ Y, they are indistinguishable, if and only if tik = tjk for Yyk ∈ Y.
Theorem 2 provides users with a testable condition: for any pair of unseen labels yi, yj, there should
exist at least one seen label yk such that yk has different label relations to yi and yj, i.e., tik 6= tjk,
so that PLRM is able to distinguish yi and yj . In preliminary experiments, we observe the violation
of this condition causes a dramatic drop in overall performance (about 10 points). Notably, based on
Theorem 2, users could theoretically guarantee the distinguishability of a pair of unseen labels by
adding only one seen label and corresponding ILFs to break the symmetry.
7
Published as a conference paper at ICLR 2022
7	Experiments
We demonstrate the applicability and performance of our method on image classification tasks
derived from ILSVRC2012 (Russakovsky et al., 2015) and text classification tasks derived from
LSHTC-3 (Partalas et al., 2015). Both datasets have off-the-shelf label relation structure (Deng et al.,
2014; Partalas et al., 2015), which are directed acyclic graphs (DAGS) and from which we could
query pairwise label relations. Indeed, there is a one-to-one mapping between a DAG structure of
labels and a consistent label graph (See App. E.1 for an example). The ILSVRC2012 dataset consists
of 1.2M training images from 1,000 leave classes; for non-leave classes, we follow Deng et al. (2014)
to aggregate images belonging to its descendent classes as its data points. The LSHTC-3 dataset
consists of 456,886 documents and 36,504 labels organized in a DAG.
7.1	Setup
For each dataset, we randomly sample 100 different label graphs, each of which consists of 8 classes,
and use each label graph to construct a WIS task. For each label graph, we treat 3 of the sampled
classes as unseen classes and the other 5 as seen classes. The distinguishable condition in Sec. 6
is ensured for all the WIS tasks, and the performance drop when it is violated can be found in
App. G.1. We sample data belonging to unseen classes for our experiments and split them into
train and test set. For image classification tasks, we follow Mazzetto et al. (2021b;a) to train a
branch of image classifiers as supervision sources of seen classes. For text classification tasks, we
made keyword-based labeling functions as supervision sources of seen classes following Zhang et al.
(2021); each of the labeling functions returns its associated label when a certain keyword exists in
the text, otherwise abstains. Notably, all the involved supervision sources are "weak" because they
cannot predict the desired unseen classes. Experimental details and additional results are in App. F.
7.2	Compared Methods and Results
In addition to the WS-LG baseline, which is an adaptation of Data Programming (Ratner et al., 2019)
to WIS task, and PLRM, we also include the following baselines. Note that all compared methods
input the same data, ILFs, and label relations throughout our experiments for fair comparisons.
Label Relation Majority Voting (LR-MV). We modify the majority voting method based on the
label,s non-exclusive neighbors: We replace y predicted by any ILF with the set of desired labels
N(y, Y), i.e., the desired labels with non-exclusive relation to y, then aggregate the modified votes.
Weighted Label Relation Majority Voting (W-LR-MV). LR-MV only leverages exclusive/non-
exclusive label relations. To leverage fine-grained label relations, W-LR-MV attaches a weight to
each replaced label. Specifically, if the ILF,s output y is replaced with its ancestor label y (subsumed
relation), then the weight of y equals 1, while for the other relations, the weight is ∣γ%)∣, where
Y*(仍={y ∈Y(y)∣tyy = tsd}.
For the above methods, we compare the performance of (1) directly applying included models on the
test set and (2) the end models (classifiers) trained with inferred training labels.
Zero-Shot Learning (ZSL). It is non-trivial to apply ZSL methods, because ZSL assumes label
attributes for all classes and a labeled training set of seen classes, while WIS input an unlabeled
dataset of unseen classes, label relations and ILFs. Fortunately, the Direct Attribute Prediction
(DAP) (Lampert et al., 2013) method is able to make predictions solely based on attributes without
labeled data, by training attribute classifier p(ai|x) for each attribute ai. Therefore we include it in
our experiments. The details of applying DAP can be found in App. F.2.
Evaluation Results. For a fair comparison, we fix the network architecture of the classifiers for all
the methods. For image classification, we use ResNet-32 (He et al., 2016) and for text classification,
we use logistic regression with pre-trained text embedding (Reimers & Gurevych, 2019). The overall
results for both datasets can be found in Table 2. From the results, we can see that PLRM consistently
outperforms baselines. The advantages of PLRM show the effect of not just leveraging the label
graph, as the baselines do, but modeling the accuracy of ILFs and the strengths of label relations
8
Published as a conference paper at ICLR 2022
Table 2: Averaged evaluation results over 100 WIS tasks derived from LSHTC-3 and ILSVRC2012.
Method	LSHTC-3		ILSVRC2012	
	Accuracy	F1-score	Accuracy	F1-score
DAP	42.90 ± 13.53	35.98 ± 15.73	33.25 ± 3.68	29.13 ± 4.63
LR-MV	58.86 ± 10.50	54.33 ± ιι.ιo	46.88 ± 10.66	40.11 ± 16.44
W-LR-MV	59.28 ± 10.47	54.55 ± 11.36	41.39 ± 10.80	30.19 ± 16.94
Label Model WS-LG	62.60 ± 10.12	57.50 ± 11.19	53.68 ± 7.62	52.15 ± 7.94
PLRM	64.65 ± 11.30	60.01 ± 13.39	56.18 ± 7.35	54.94 ± 7.44
LR-MV	67.17 ± 12.25	62.49 ± 13.95	49.60 ± 12.80	42.83 ± 18.17
W-LR-MV End Model	66.57 ± 11.73	61.80 ± 13.24	42.61 ± 12.46	31.34 ± 18.20
WS-LG	70.69 ± 13.05	67.36 ± 14.24	56.56 ± 9.68	54.57 ± 11.17
PLRM	72.32 ± 13.18	69.37 ± 14.41	58.38 ± 8.27	56.83 ± 8.49
as PLRM does. The reported results have high variance, which actually indicates the 100 different
WIS tasks are diverse and have varying difficulty. Also, we can see the end models are much better
than directly applying the label models on the test set; this shows that the end models are able to
generalize beyond the training labels produced by label models.
7.3	Real-world Application
In this section, on a commercial advertising system (CAS), we showcase how to reduce human
annotation efforts of new labeling tasks by formulating them as WIS problems. In a CAS, ads tagging
(classification) is a critical application for understanding the semantics of ads copy. When new ads
and tags are added to the system, manual annotations need to be collected for training a new classifier.
As tags are commonly organized as taxonomies, the label relations between existing and new tags are
readily available or can be trivially figured out by humans; Existing classifiers and the heuristic rules
previously used for annotating existing tags could serve as ILFs. Therefore, given (1) an unlabeled
dataset of new tags, (2) the label relations, and (3) ILFs, we formulate it as a WIS problem.
On such WIS formulation, we apply our method and baselines, to synthesize training labels of new
tags. Specifically, we have two WIS tasks where the tags are under the “Car Accessories” and
“Furniture” categories respectively. For both tasks, we have 3 new tags and leverage 5 existing
tags related to the new ones with given relations. On a test set, we evaluate the performance of
DAP and the quality of labels produced by label models, as shown in Table 3. Note that since we
re-use the existing labeling sources tailored for existing tags as ILFs and obtain label relations from
an existing taxonomy, we achieve these results without any manual annotation or creation of new
labeling functions. This demonstrates the potential of the proposed WIS task in real-world scenarios.
Table 3: Evaluation on product tagging with new tags.
Category	Metric	DAP	LR-MV	W-LR-MV	WS-LG	PLRM
Car Accessories	F1	50.62	68.68	68.06	66.85	76.37
	Accuracy	52.83	68.17	67.67	66.33	75.83
Furniture	F1	30.81	64.70	61.45	70.59	80.57
	Accuracy	33.60	72.53	72.13	74.51	82.02
8	Conclusion
We propose Weak Indirect Supervision (WIS), a new research problem which leverages indirect
supervision sources and label relations to synthesize training labels for training machine learning
models. We develop the first method for WIS called Probabilistic Label Relation Model (PLRM) with
the generalization error bound of both PLRM and end model. We provide a theoretically-principled
sanity test to ensure the distinguishability of unseen labels. Finally, we provide experiments to
demonstrate the effectiveness of PLRM and its advantages over baselines on both academic datasets
and industrial scenario.
9
Published as a conference paper at ICLR 2022
Reproducibility Statement. All the assumptions and proofs of our theory can be found in App. C
& D. Examples and illustrations of label graph are in App. E. Experimental details can be found in
App. F. Additional experiments are in App. G.
References
Elizabeth S Allman, John A Rhodes, Elena Stanghellini, and Marco Valtorta. Parameter identifiability
of discrete bayesian networks with hidden variables. Journal of Causal Inference, 3(2):189-205,
2015.
StePhen H. Bach, Bryan He, Alexander J. Ratner, and Christopher R6. Learning the structure of
generative models without labeled data. In Proceedings of the 34th International Conference on
Machine Learning (ICML 2017), Sydney, Australia, 2017.
Stephen H. Bach, Daniel Rodriguez, Yintao Liu, Chong Luo, Haidong Shao, Cassandra Xia, Souvik
Sen, AleX Ratner, Braden Hancock, Houman Alborzi, Rahul Kuchhal, Chris R6, and Rob Malkin.
Snorkel drybell: A case study in deploying weak supervision at industrial scale. In Proceedings
of the 2019 International Conference on Management of Data, SIGMOD ’19, pp. 362-375, New
York, NY, USA, 2019. Association for Computing Machinery. ISBN 9781450356435. doi:
10.1145/3299869.3314036. URL https://doi.org/10.1145/3299869.3314036.
Peter F Brown, Stephen A Della Pietra, Vincent J Della Pietra, and Robert L Mercer. The mathematics
of statistical machine translation: Parameter estimation. Computational linguistics, 19(2):263-311,
1993.
Ming-Wei Chang, Vivek Srikumar, Dan Goldwasser, and Dan Roth. Structured output learning with
indirect supervision. In ICML, pp. 199-206, 2010.
Lingjiao Chen, Matei Zaharia, and James Zou. Frugalml: How to use ml prediction apis more
accurately and cheaply. In Advances in Neural Information Processing Systems (NeurIPS), 2020.
Carlos d,Andrea and Andre Mintz. Studying the live cross-platform circulation of images with
computer vision api: An experiment based on a sports media event. International Journal of
Communication, 13(0), 2019. ISSN 1932-8036.
Jia Deng, Nan Ding, Yangqing Jia, Andrea Frome, Kevin Murphy, Samy Bengio, Yuan Li, Hartmut
Neven, and Hartwig Adam. Large-scale object classification using label relation graphs. In
European conference on computer vision, pp. 48-64. Springer, 2014.
Xin Luna Dong, Xiang He, Andrey Kan, Xian Li, Yan Liang, Jun Ma, Yifan Ethan Xu, Chenwei
Zhang, Tong Zhao, Gabriel Blanco Saldana, et al. Autoknow: Self-driving knowledge collection
for products of thousands of types. In Proceedings of the 26th ACM SIGKDD International
Conference on Knowledge Discovery & Data Mining, pp. 2724-2734, 2020.
Jared A. Dunnmon, Alexander J. Ratner, Khaled Saab, Nishith Khandwala, Matthew Markert,
Hersh Sagreiya, Roger Goldman, Christopher Lee-Messer, Matthew P. Lungren, Daniel L.
Rubin, and Christopher Re. Cross-modal data programming enables rapid medical machine
learning. Patterns, 1(2):100019, 2020. ISSN 2666-3899. doi: https://doi.org/10.1016/j.patter.
2020.100019. URL https://www.sciencedirect.com/science/article/pii/
S2666389920300192.
Jason A Fries, Ethan Steinberg, Saelig Khattar, Scott L Fleming, Jose Posada, Alison Callahan, and
Nigam H Shah. Ontology-driven weak supervision for clinical entity classification in electronic
health records. Nature Communications, 12(1), 2021.
Andrea Frome, Greg S Corrado, Jon Shlens, Samy Bengio, Jeff Dean, Marc' Aurelio Ran-
zato, and Tomas Mikolov. Devise: A deep visual-semantic embedding model. In
C. J. C. Burges, L. Bottou, M. Welling, Z. Ghahramani, and K. Q. Weinberger (eds.), Ad-
vances in Neural Information Processing Systems, volume 26, pp. 2121-2129. Curran Asso-
ciates, Inc., 2013. URL https://proceedings.neurips.cc/paper/2013/file/
7cce53cf90577442771720a370c3c723-Paper.pdf.
10
Published as a conference paper at ICLR 2022
Daniel Y. Fu, Mayee F. Chen, Frederic Sala, Sarah M. Hooper, Kayvon Fatahalian, and Christopher
R6. Fast and three-rious: Speeding UP weak supervision with triplet methods. In Proceedings of
the 37th International Conference on Machine Learning (ICML 2020), 2020.
Melody Y. Guan, Varun Gulshan, Andrew M. Dai, and Geoffrey E. Hinton. Who said what: Modeling
individual labelers improves classification. In AAAI, 2018.
K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning for image recognition. In 2016
IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pp. 770-778, 2016. doi:
10.1109/CVPR.2016.90.
Sarah Hooper, Michael Wornow, Ying Hang Seah, Peter Kellman, Hui Xue, Frederic Sala, Curtis
Langlotz, and Christopher Re. Cut out the annotator, keep the cutout: better segmentation
with weak supervision. In International Conference on Learning Representations, 2021. URL
https://openreview.net/forum?id=bjkX6Kzb5H.
Ashish Khetan, Zachary C. Lipton, and Anima Anandkumar. Learning from noisy singly-labeled data.
In International Conference on Learning Representations, 2018. URL https://openreview.
net/forum?id=H1sUHgb0Z.
Christoph H Lampert, Hannes Nickisch, and Stefan Harmeling. Learning to detect unseen object
classes by between-class attribute transfer. In 2009 IEEE Conference on Computer Vision and
Pattern Recognition, pp. 951-958. IEEE, 2009.
Christoph H Lampert, Hannes Nickisch, and Stefan Harmeling. Attribute-based classification for zero-
shot visual object categorization. IEEE transactions on pattern analysis and machine intelligence,
36(3):453-465, 2013.
Percy Liang, Michael I Jordan, and Dan Klein. Learning dependency-based compositional semantics.
Computational Linguistics, 39(2):389-446, 2013.
Pierre Lison, Jeremy Barnes, Aliaksandr Hubin, and Samia Touileb. Named entity recognition
without labelled data: A weak supervision approach. In Proceedings of the 58th Annual Meeting
of the Association for Computational Linguistics, pp. 1518-1533, Online, July 2020. Association
for Computational Linguistics. doi: 10.18653/v1/2020.acl-main.139. URL https://www.
aclweb.org/anthology/2020.acl-main.139.
Alessio Mazzetto, Cyrus Cousins, Dylan Sam, Stephen H Bach, and Eli Upfal. Adversarial multi
class learning under weak supervision with performance guarantees. In Marina Meila and Tong
Zhang (eds.), Proceedings of the 38th International Conference on Machine Learning, volume 139
of Proceedings of Machine Learning Research, pp. 7534-7543. PMLR, 18-24 Jul 2021a. URL
https://proceedings.mlr.press/v139/mazzetto21a.html.
Alessio Mazzetto, Dylan Sam, Andrew Park, Eli Upfal, and Stephen Bach. Semi-supervised ag-
gregation of dependent weak supervision sources with performance guarantees. In Arindam
Banerjee and Kenji Fukumizu (eds.), Proceedings of The 24th International Conference on Artifi-
cial Intelligence and Statistics, volume 130 of Proceedings of Machine Learning Research, pp.
3196-3204. PMLR, 13-15 Apr 2021b. URL https://proceedings.mlr.press/v130/
mazzetto21a.html.
George A Miller. Wordnet: a lexical database for english. Communications of the ACM, 38(11):
39-41, 1995.
Shikhar Murty, Pat Verga, L. Vilnis, and A. McCallum. Finer grained entity typing with typenet.
AKBC Workshop, 2017.
Ioannis Partalas, Aris Kosmopoulos, Nicolas Baskiotis, Thierry ArtiEes, George Paliouras, Eric
Gaussier, Ion Androutsopoulos, Massih-Reza Amini, and Patrick Gallinari. LSHTC: A benchmark
for large-scale text classification. CoRR, abs/1503.08581, 2015.
Meng Qu, Tianyu Gao, Louis-Pascal Xhonneux, and Jian Tang. Few-shot relation extraction via
bayesian meta-learning on relation graphs. In International Conference on Machine Learning, pp.
7867-7876. PMLR, 2020.
11
Published as a conference paper at ICLR 2022
Ariadna Quattoni, Michael Collins, and Trevor Darrell. Conditional random fields for object recogni-
tion. Advances in neural information processing Systems, 17:1097-1104, 2004.
Aditi Raghunathan, Roy Frostig, John Duchi, and Percy Liang. Estimation from indirect supervision
with linear moments. In International Conference on Machine Learning (ICML), 2016.
A. J. Ratner, Christopher M. De Sa, Sen Wu, Daniel Selsam, and C. R6. Data programming:
Creating large training sets, quickly. In Proceedings of the 29th Conference on Neural Information
Processing Systems (NIPS 2016), Barcelona, Spain, 2016.
A. J. Ratner, B. Hancock, J. Dunnmon, F. Sala, S. Pandey, and C. R6. Training complex models with
multi-task weak supervision. In Proceedings of the AAAI Conference on Artificial Intelligence,
Honolulu, Hawaii, 2019.
Alexander Ratner, Stephen H. Bach, Henry Ehrenberg, Jason Fries, Sen Wu, and Christopher
R6. Snorkel: Rapid training data creation with weak supervision. In Proceedings of the 44th
International Conference on Very Large Data Bases (VLDB), Rio de Janeiro, Brazil, 2018.
Nils Reimers and Iryna Gurevych. Sentence-bert: Sentence embeddings using siamese bert-networks.
In Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing.
Association for Computational Linguistics, 11 2019. URL https://arxiv.org/abs/1908.
10084.
Bernardino Romera-Paredes and Philip Torr. An embarrassingly simple approach to zero-shot
learning. In International conference on machine learning, pp. 2152-2161. PMLR, 2015.
Olga Russakovsky, Jia Deng, Hao Su, Jonathan Krause, Sanjeev Satheesh, Sean Ma, Zhiheng Huang,
Andrej Karpathy, Aditya Khosla, Michael Bernstein, Alexander C. Berg, and Li Fei-Fei. Imagenet
large scale visual recognition challenge. Int. J. Comput. Vision, 115(3):211-252, December 2015.
ISSN 0920-5691. doi: 10.1007/s11263-015-0816-y. URL https://doi.org/10.1007/
s11263-015-0816-y.
Esteban Safranchik, Shiying Luo, and Stephen Bach. Weakly supervised sequence tagging from
noisy rules. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 34, pp.
5570-5578, 2020.
Arnab Sinha, Zhihong Shen, Yang Song, Hao Ma, Darrin Eide, Bo-June Paul Hsu, and Kuansan
Wang. An overview of microsoft academic service (mas) and applications. In WWW, 2015.
Shashank Srivastava, Igor Labutov, and Tom Mitchell. Zero-shot learning of classifiers from natural
language quantification. In Proceedings of the 56th Annual Meeting of the Association for
Computational Linguistics (Volume 1: Long Papers), pp. 306-316, Melbourne, Australia, July
2018. Association for Computational Linguistics. doi: 10.18653/v1/P18-1029. URL https:
//www.aclweb.org/anthology/P18-1029.
The Gene Ontology Consortium. The Gene Ontology Resource: 20 years and still GOing strong.
Nucleic Acids Research, 47(D1):D330-D338, 11 2018. ISSN 0305-1048. doi: 10.1093/nar/
gky1055. URL https://doi.org/10.1093/nar/gky1055.
Paroma Varma, Frederic Sala, Shiori Sagawa, Jason Alan Fries, Daniel Y. Fu, Saelig Khattar, Ash-
wini Ramamoorthy, Ke Xiao, Kayvon Fatahalian, James Priest, and Christopher R6. Multi-
resolution weak supervision for sequential data. In Hanna M. Wallach, Hugo Larochelle,
Alina Beygelzimer, Florence d'Alche-Buc, Emily B. Fox, and Roman Garnett (eds.), Ad-
vances in Neural Information Processing Systems 32: Annual Conference on Neural Informa-
tion Processing Systems 2019, NeurIPS 2019, December 8-14, 2019, Vancouver, BC, Canada,
pp. 192-203, 2019. URL https://proceedings.neurips.cc/paper/2019/hash/
93db85ed909c13838ff95ccfa94cebd9- Abstract.html.
Kaifu Wang, Qiang Ning, and Dan Roth. Learnability with indirect supervision signals. Advances in
Neural Information Processing Systems 32, 2020.
Wei Wang, Vincent W Zheng, Han Yu, and Chunyan Miao. A survey of zero-shot learning: Settings,
methods, and applications. ACM Transactions on Intelligent Systems and Technology (TIST), 10
(2):1-37, 2019.
12
Published as a conference paper at ICLR 2022
Yuanshun Yao, Zhujun Xiao, Bolun Wang, Bimal Viswanath, Haitao Zheng, and Ben Y. Zhao.
Complexity vs. performance: Empirical analysis of machine learning as a service. In Proceedings
ofthe 2017Internet Measurement Conference,IMC'17,pp. 384-397, New York, NY USA, 2017.
Association for Computing Machinery. ISBN 9781450351188. doi: 10.1145/3131365.3131372.
URL https://doi.org/10.1145/3131365.3131372.
Kaichao You, Zhi Kou, Mingsheng Long, and Jianmin Wang. Co-tuning for transfer learning.
Advances in Neural Information Processing Systems, 33, 2020.
Eric Zhan, Stephan Zheng, Yisong Yue, Long Sha, and Patrick Lucey. Generating multi-agent
trajectories using programmatic weak supervision. In International Conference on Learning
Representations, 2019. URL https://openreview.net/forum?id=rkxw-hAcFQ.
Jieyu Zhang, Yue Yu, Yinghao Li, Yujing Wang, Yaming Yang, Mao Yang, and Alexander Ratner.
Wrench: A comprehensive benchmark for weak supervision. In Thirty-fifth Conference on Neural
Information Processing Systems Datasets and Benchmarks Track (Round 2), 2021.
Yivan Zhang, Nontawat Charoenphakdee, and Masashi Sugiyama. Learning from indirect observa-
tions, 2019.
Wenxuan Zhou, Hongtao Lin, Bill Yuchen Lin, Ziqi Wang, Junyi Du, Leonardo Neves, and Xiang
Ren. Nero: A neural rule grounding framework for label-efficient relation extraction. The Web
Conference, 2020.
13
Published as a conference paper at ICLR 2022
S upplementary materials for
“Creating Training Sets via Weak Indirect Supervision”
The supplementary materials are organized as follows. In Appendix A, we provide a glossary of
variables and symbols used in this paper. In Appendix B, we provide the details of PLRM model.
In Appendix C and D, we provide the detailed proofs of Theorem 2 and Theorem 1 respectively. In
Appendix E, we provide the detailed examples and illustrations of label graph in WIS. In Appendix F
and G, we provide experimental details and additional experiment resulst respectively.
A Glossary of Symbols
Table 4: Glossary of variables and symbols used in this paper.
Symbol	Simplified	Used for
Xi m Yi y Y k		The i-th data point, Xi ∈ X Number of data points The true desired label of the i-th data point, Yi ∈ Y A semantic label, e.g., "dog" The set of desired labels, Y = {y1, y2, . . . , yk} Cardinality of Y, i.e., k = |Y|
λj n Yj ʌ Yi yj Yλj kλj Y ʌ k K	Yj kj	The j-th Indirect labeling function (ILF) Number of ILF The output label of j-th ILF on i-th data point, Yj ∈ Yλj The concatenation OfILFs' output, Yi = [Yi1, Yi2,...,Yn] A semantic label in the label space of λj Label label space of ILF λj∙, yx. = {yj ,yj ,...,^ λ } λj Cardinality of the output space of ILF λ, i.e., kλj = ∣Yλj | Union Set of all the Yλj∙, Y = {y1,y2,...,y^ } Cardinality of the Y, i.e., k = |Y| ʌ Total number of labels, i.e., K = k + k
Yi Y		Latent binary variable indicating whether the data should be assigned yi ∈ Y. ^~r ^	^~r ^ Concatenation of all latent binary variable, Y = [Y 1,...,Yk ]
G E T te to tsg tsd N(y, Y)		Label graph, G =(Y ∪ Y, E) The set of label relations, E = {(yi,yj,tyiyj)|tyiyj ∈ T,i < j,∀yi,yj ∈ V} The set of label relation types, T = {te, to, tsd, tsg} Exclusive label relation Overlap label relation Subsuming label relation Subsumed label relation ʌ the set of non-exclusive neighbors ofa given label y in Y
φ Φ M θ Θ Θ Θ* W W W *		A single dependency, or, factor function Concatenation of all individual dependency Number of total dependencies A single parameter of the PGM Concatenation of all parameters of the PGM, Θ ∈ RM The learned parameters The golden parameters The parameter of an end model The learned parameters The golden parameters
14
Published as a conference paper at ICLR 2022
B	Details of the PLRM
We use Y, Y, and Y to represent random vector. Then, We give the formal form of the PLRM as:
Pθ(Y,Y,Y) (X exp (θ>Φ(Y,Y,Y)).	⑺
Recall that Y is the unobserved true label, Y is the binary random vector, each of whose binary value
—. ʌ ʌ
Yi reflects whether the data should be assigned seen label yi ∈ Y, and Y is the concatenated outputs
of ILFs. Specifically, we enumerate Φ as below:
1.	(Pseudo accuracy dependency): ∀j ∈ [n],y ∈ Y/{unknown},y ∈ Yλj, we have
ΦAcyc,j (Y,Yj)：= i{y = y ∧ Yj = y ∧ y ∈ NyQ入号'
2.	(Accuracy dependency): ∀j ∈ [n], yi ∈ Y ∩ Yj we have
ΦAcj (Y i,Yj )：= i{Y i = ι ∧ Yj = yi}
3.	(Label relation dependency between seen labels): Yyi, yj ∈ Y,i < j
(a)	if t^i^j = te, we have
φ^i,^j (Y i,Yj ):= -1{Y i = ι ∧ Yj = 1}
(b)	if t^i^j = to, we have
*
Φ0i^ (Y i,Yj ):= 1{YYi = I ∧ Yj = 1}
(c)	if t^i^j = tsg, we have
φ^g,^j (Yi,Yj) := -1{Yi = 0 ∧ Yj = i}
(d)	if t^.^j = tsd, we have
φ^d,^∙ (Y i,γj)：= -my i = ι ∧ Yj = o}
ʌ
4.	(Label relation dependency between desired and seen labels): ∀y ∈ Y/{unknown}, tyi, ∈ Y
(a)	if ty^i = te, we have
φy^ (Y, Yi)：= -i{Y = y ∧ Yi = 1}
(b)	if ty^i = to, we have
Φy,yi(Y,Yi):= 1{Y = y ∧ Y i = i}
(c)	if ty^. = tsg, we have
φyg^ (Y,Yi):= -1{Y = y ∧ Y i = i}
(d)	if ty^i = tsd, we have
φ 黑^ (Y,Yi):= -1{Y = y ∧ Yi =0}
And example of our PLRM is shown in Fig. 4, where square with difference colors corresond to
different dependency/factor functions in PLRM.
■ Label Relation Dependency
■ TrUe Accuracy Dependency
, Pseudo Accuracy Dependency
Figure 4: PLRM.
1When y ∈ N(y,YλJφAcy,jis always zero and will not occur in the model. Here we use this form for the
sack of rigorous representation.
15
Published as a conference paper at ICLR 2022
C Proof of Theorem 2
C.1 Simplifying the notation
To simplify the indexing of dependencies, we use Φ1 to represent the concatenation of φ which
involves both Y and Y, Φ2 to represent the concatenation of φ which involve both Y and Λ, and Φ3
to represent the concatenation of remaining φ which do not involve Y.
Specifically, Φ1 consists of k × k components corresponding to the dependency between the k desired
ʌ
labels and the k seen labels. We use the subscript i, j to denote the dependency function between the
desired label yi and seen label yj, i.e.,
φi,j = φViyJj ,
where ? is the corresponding relation.
Similarly, Φ2 consists of k × (Pjn=1 kj ) components corresponding to the dependency between the
k desired labels and the kj seen labels output by the ILF λj (j ∈ [n]), and we use Φi2,j,l to denote the
dependency of yi and yj, and Φ2j = (Φ2j Jk= Jo denote the dependency of yi and yj.
According to Φ1 , Φ2, and Φ3, we also divide the parameter Θ into Θ1 (with elements being Θi1,j
correspondingly), Θ2 (with elements being Θi2,j = (Θi2,j,l)lk=j1 correspondingly), and Θ3, and the
joint probability is then given as:
_	exp ((Θ1)TΦ1(Y,Y) + (Θ2)>Φ2(Y,Y) + (Θ3)TΦ3(Y,Y))
Pθ (Y,Y ,Y) =-----------------------------Z-----------------:------------[八、(8)
Pyo,γo,γo exp((Θ1)>Φ1(Y0,Y0) + (Θ2)>Φ2(Y0,Y0) + (Θ3)TΦ3(Y0,Y0))
Also, for notation convenience, we adopt following simplifications:
1.	Yyi ∈Y—∀i ∈ [k] since |Y| = k, similarly, ∀yi ∈ Yj →∀i ∈ [kj] and ∀yi ∈Y →∀i ∈
ʌ
[^];
2.	∀λj → ∀j ∈ [n] since we have n ILFs in total;
3.	φtyyii,yyjj → φtyi,yj where t = tyiyj and can be seen from the subscript of the dependency.
C.2 Propositions and Lemmas
First, we state some propositions and lemmas that will be useful in the proof to come.
Proposition 1 (Multi-class classification). For a multi-class classification task, ∀yi , yj ∈ Y, we have
tyiyj = te. Similarly, ∀yα, yb ∈ Y, we have t^a^b = te.
ʌ
Lemma 1. For a consistent label graph G and	NyI	∈	Y, ∀yi,yj∙	∈	Y,	if tyi^l	=	to,	we have
tyj ^ι = tsg .
Proof. For ∀yi, yj ∈ Y, based on Proposition 1, we know tyiyj = te, which implies (1) the
ʌ
intersection of the sets labeled by y% and yj is empty. For ∀yι ∈ Y, if tyi^l = to, We have (2)
the intersection of the sets labeled by yi and yι is not empty. If tyj y, = tsg, which implies (3)
yj % yι. Based on (2)(3), we have yi ∩ yj∙ = 0, which is contradictory to (1). Thus, we prove when
tyi^ι = to,tyj yι = tsg∙	□
Lemma 2. For an informative ILF λj∙ and given any yd ∈ Y, there exists some y( ∈ Yj, SuCh that,
φd,j,ι(yd,y) =0, ∀l ∈ [kj].
Proof. Because ILF λj∙ is informative, we know there exists one yα ∈ YjSUCh that yα is exclusive to
yd, i.e., ya / N(yd, Yj). Therefore, for any yι ∈ Y, either ya = yι, or yι = ya / Yj, which leads to
the conclusion by the definition of Φ2d,j,ι = φAccyι,j.	□
16
Published as a conference paper at ICLR 2022
C.3 Definitions
Before the main proof, we connect the indistinguishablity of label relation structure with the depen-
dency structure of PLRM by introducing the concept of symmetry as follows:
Definition 4 (Symmetry). For yi, yj ∈ Y, we say yi and yj have symmetric dependency structure if
the following equation holds:
φ1,l = j ∀l ∈ k;
Φi2,a,b = Φj2,a,b,∀a ∈ [n],b∈ [ka].	(9)
Based on the construction of PLRM, We know that for ∀yi, yj ∈ Y, ∀yb ∈ Y, tyiyb = tyj^b (the
statement in Theorem 2) is equivalent to yi and yj have symmetric dependency structure.
C.4 Equivalent S tatement of Theorem 2
Our main result states that asymmetric is equivalent to distinguishable as in the following theorem,
which can readily be seen to be identical to Theorem 2 in the main body of the paper:
Theorem 3. For a probability model defined as Eq. (8) induced from a consistent label graph and
informative ILFs, for any pair of yi, yj∈ Y, yi and yjare distinguishable if and only if they have
asymmetric dependency structure.
C.5 Proof of the necessity in Theorem 3: Necessary Condition
We first prove that for any yi , yj∈ Y, yi and yjhave asymmetric dependency structure is the
necessary condition of that they are distinguishable.
Proof of Theorem 3. We prove this theorem by reduction to absurdity. Suppose yi and yj are sym-
metric. Then, by Eq. (8), the distribution of Y condition on any Y and Y can be calculated as
follows:
Pθ(Y = yi∣Y,Y)
一 ʌ
Pθ3,Y,Y)
一 ʌ
Pθ(Y ,Y)
On the other hand, applying Y = yi in the definition of Φ2 leads to
Φr,a,ι(yi, ∙) = 0, ∀r ∈ [k],r = i, ∀a ∈ [n], ∀l ∈ [k。].
We further separate Φ1 into (Φi1)ik=1, where Φi1 collects all the dependency in Φ1 with yi involved,
i.e.,
φ1 = (φ1,j )k=1,
with the corresponding parameters respectively denoted as Θi1 with Θ1 = (Θi1 )ik=1 . Similarly, Φ2 is
also divided into (Φi2)ik=1 following the same routine and Θ2 is respectively divided into (Θi2)ik=1 .
Specifically, if yi and yj are symmetric, we further have
Φi1 =Φj1,Φi2 = Φj2.
Based on the notation, Pθ (Y = yi |Y, Y) can then be represented as
Pθ(Y = yi∣Y,Y) (Xexp ((Θ1)>Φ1(Y0,Y) + (Θ2)>Φ2(Y0,Y) + (Θ3)tΦ3(Y,
exp
k
)TΦ1(yi,Y) + X(θ2)TΦ2(yi, Y) + (θ3)tφ3(Y , Y)
l=1
17
Published as a conference paper at ICLR 2022
which further leads to
Pθ(Y = yi∖Y,Y) (Xexp ((Θ1)τΦ1(Y0, Y) + (Θ2)τΦ2(Y0, Y)
=eχp (X(θ1)tφ13,Y) + (θ2)tφ2‰,Y))
which is independent of Θ3. Similarly,
Pθ(Y = yj|Y, Y) (Xexp ((Θ1)>Φ1(Y', Y) + (Θ2)τΦ2(Y0, Y)
= exp (X(θ1)τΦl(yi, Y) + (Θ2)τφ2(yj, Y)
and Vl ∈ [k]∕{i,j},
Pθ(Y = yι∣Y,Y) (Xexp ((Θ1)τΦ1(Y0, Y) + (Θ2)τΦ2(Y0, Y)
(k
X(Θ1 )tφ13,Y) + (θ2)tφ2(%,Y)
l=1
(10)
(11)
(12)
∙-v
Let Θ be defined as follows:
θ 1 = θ1, θ 1 = θ1, θ 1 = θ1,vι ∈ {i, j},
Θ2 = Θ2, Θj = Θ2, Θ2 = Θ2,Vi ∈ {i,j},
and
Θ3 = θ3.
We then have
Pθ(Y = yi∣Y,Y)
Pθ (Y = % ∣Y ,Y)
(Py, exp ((Θ1)τΦ1(Y0, Y) + (Θ2)τΦ2(Y0, Y)))
(Py, exp ((Θ1)τΦ1(Y0, Y) + (Θ2)τΦ2(Y0, Y)))
-	exp((θ1)τ(Φl(yi,Y)- Φj(yj, 1Y)) + (θ))τ(Φ)(yi,Y) - Φ"yj, Y)) + (Θ2)τ(Φ2(yi, Y) - Φj(yj,Y)))
(Py, exp ((Θ 1)τΦ1(Y; Y) + (Θ2)τΦ2(Y0, Y)))
(Pyo exp ((Θ1)τΦ1(Y0, Y) + (Θ2)τΦ2(Y0, Y))).
Similarly,
Pθ(Y = yj ∣Y ,Y)
Pθ (Y = yi∣Y,Y)
(Py, exp ((Θ 1)τΦ1(Y; Y) + (Θ2)τΦ2(Y0, Y)))
(Pyo exp ((Θ1)τΦ1(Y0, Y) + (Θ2)τΦ2(Y0, Y)))
-	exp((θ))τ(φi(yj,Y)- Φl(yi,Y)) + (θ1)τ(Φl(yj, Y)-①义m,Y)) 十 份力丁&其%,Y)- Φ23,Y)))
(Pyo exp ((Θ 1)τΦ1(Y0, Y) + (Θ2)τΦ2(Y0, Y)))
(Pyo exp ((Θ1)τΦ1(Y0, Y) + (Θ2)τΦ2(Y0, Y))).
18
Published as a conference paper at ICLR 2022
and ∀l ∈ [k]/{i, j},
Pθ(Y = yι∣Y,Y) = (PY0 exp ((θ 1)>φ1(Y0,y) + (θ2)>φ2(γ0,Y)))
pΘ(Y = yi|Y, Y) (pY0 exp ((Θ1)>Φ1(Y0,Y) + (Θ2)>Φ2(Y0, Y)))
Similarly, we have
Pθ(Y = UnknownIY,Y) = (PY，exp ((θ1)>φ1(γ0, Y) + (θ2)>φ2(Y0,Y)))
Pθ(Y = unknown∣Y,Y) (PYO exp ((Θ1)>Φ1(Y0, Y) + (Θ2)>Φ2(Y0, Y)))
Therefore, we have
Pθ(Y = yi∣Y,Y) = Pθ(Y = yj |Y,Y)
Pθ (Y = yj∣Y ,Y) - Pθ (Y = yi∣Y,Y)
Pθ(Y = y∣Y,Y)
Pθ (Y = y∣Y,Y)
, ∀y ∈ Y/{yi , yj }.
Since
Pθ (Y = yi IY ,Y) + Pθ (Y = yj IY, Y) + £ Pθ(Y = yι IY, Y) = 1,
l6=i,j
and
Pθ (Y = yj IY, Y) + Pθ (Y = yi I Y,Y)+ X Pθ (Y = y I Y, Y) = 1,
l6=i,j
we obtain that
Pθ(y = yiIY,Y) = Pθ (Y = yj』Y ,Y)
Pθ (Y = yjIY,Y) = Pθ (Y = yiIY,Y)
Pθ(Y = yιIY,Y) = Pθ (Y = yιIY,Y),
which indicates yi and yj indistinguishable, and leads to a contradictory.
The proof is completed.
□
C.6 Proof of Theorem 3: S ufficient Condition
We then prove that for any yi , yj ∈ Y, yi and yj have asymmetric dependency structure is the
sufficient condition of that they are distinguishable.
Proof. We use the same notations (Θi1)ik=1, (Θi2)ik=1, and Θ3 in Appendix C.5 to denote the separation
of the parameter Θ. Let Θ be any parameter satisfying that there exists a parameter Θ, such that Eq.
(4-5) holds. By Eqs. (10), (11), and Eq. (12) together with Eqs. (4-5), we have ∀r ∈ [k], r 6= i, j,
exp((θ1)τΦl (yi,Y) + (Θ1 )τΦl(yi,Y) + (θ2)τΦ2(yi,Y))
exp((Θ 1)τΦl(yj∙ ,Y) + (Θ 1)τΦl(yj∙ ,Y) + (Θ 界 Φj(yj ,Y))
=exp((θ1)Tφ1(yj,Y) + (θ1)τφ1(yj,Y) + (θ2)τφ)(yj,Y))
-exp((Θ 1)τΦl (yi,Y) + (Θ 1 )τΦl(yi,Y) + (Θ 2)τΦ)(yi,Y))
= exp((Θ1)τΦ1^(yrIY) + (Θ1)τΦι1(yr,Y)) = exp((Θ1)τΦ1(yj∙, Y) + (Θ1)τΦ1(yi, Y))
= exp((Θ 1)τΦl(yr,Y) + (Θ 1)τΦl(yr,Y)) = exp ((Θ 1)τΦl(yj∙, Y) + (Θj)"j(yi, Y)).
By simple rearranging, we have
((θ1)τΦl(yi,Y) + (θ1)τΦl(yi,Y) + (θ2)τΦ2(yi,Y) + (θ2)τφ2(yi, Y))
-((Θi)τΦ1(yj,Y) + (Θ 1)τφi(yj,Y) + (Θ2)τΦ2(yj,Y) + 向)τφ2(yj-,Y))
=((θ1)τφi(yj ,Y) + (Θ1)τφi (yj- ,Y) + (Θ2)τ Φ2(yj ,Y) + (Θj>Φj(yj ,Y))
-((Θ 1)τΦl(yi,Y) + (Θi)τΦ1 (yi,Y) + (Θ2)τΦ2(yi,Y) + (Θ2)τφ2(yi,Y))
=((θ1)τφi(yj,Y) + (Θ1)τφi(yi,Y)) - ((Θi)τΦ1(yj,Y) + (Θ 1)τφi(yi,Y)).	(13)
19
Published as a conference paper at ICLR 2022
By the equality between the second term and the third term in Eq. (13), we obtain that
(θi)Tφi(yi,Y) - (Θ 1)Tφi(yj,Y)
=((θ1)TΦj(yj,Y) + (θj)TΦj(yj,Y)) - ((Θ 1)TΦ1 (yi,Y) + (ΘR)TΦ2(%,Y)).	(14)
We further set Y in Eq. (14) respectively to e( (the one hot vector with its l-th position being 1) and
ʌ
0 for any fixed l ∈ [k], i.e.,
((θ1)Tφi(yi, eι) - (Θ1 )Tφi(yi, 0)) - ((Θ 1)TΦl(yj, e，)一 (Θ 1)TΦl(yj, 0))
=((θi)Tφi(yj, eι) - (θi)Tφi(yj, 0)) - ((Θ 1)TΦ"yi, e，)- (Θ 1)TΦ"yi, 0)),
which by simple rearranging further leads to
θj,ι(φj,ι(yj, 1) - φj,ι(yj,O)- φ1,ι(yi, 1)) = θ1,∕φ1,∕yi,1) - φi,ι(yi,O)- φ1,ι(yj,1)).
Since Θj，, Θ1，＞ 0, and by definition we have
lφ1,ι(yj, 1) - φj,ι(yj, O)- φ1,ι(yi, 1)| = 1,
and
lφ1,ι(yi, 1) - φi,ι(yi, 0) - φ1,ι(yj, 1)| = 1,
we obtain Θj，= Θ1，, and
Φj,ι(yj, 1) - Φj,ι(y,0) - Φ1,ι3,1) = Φ1,ι3,1) - Φ1,ι3,O) - Φ1,ι(yj, 1).	(15)
Therefore, either tyjyl ∈ {to,tsd,tsg} and tyi^l ∈ {to,tsd,tsg}, Ortyjyl = te and tyi^l = te, which
by definition further indicates that ΦR = Φj2 (recall the way we build dependency between Y and Y).
As l is arbitrarily picked, we then have Θj is equal to Θ1 component-wisely.
By the equality between the first term and the third term in Eq. (13) and following exact the same
routine, we also have Θj = Θ1.
ʌ — ʌ ʌ
On the other hand, for any r ∈ [k], fixing Y and Ys (∀s = r), and setting Yr = y[ (l ∈ kr,
yr ∈ N(yj, Y1)) in Eq. (14), we have
(θj)TΦj(yj,Y) + (Θj)TΦj(yj,Y) + θ2,r,ιΦ2,r,ι(yj,^) + X θj,sΦj,s(y,Ys)
s6=r
= (θj)Tφj(yi, Y) + (Θ 1)Tφ1(yi, Y) + Θ 2,r,lφ2,r,l(yi, y ) + X Θ 2,sΦ2,s(yi, YS ).
s6=r
On the other hand, by Lemma 2, there exists somep, s.t., yp / N(yj, Yr) (which by ΦR = Φj further
leads to yp / N(y%, Yr)). Setting Yr = yr leads to
(Θj )TΦj (y∙ ,Y) + (Θj )τΦ1(yj ,Y)+ X θR,s Φ2,s(yj, YS)
s6=r
=(θj)TΦj(yi,Y) + (Θ 1)Tφi(yi,Y) + X Θ 2,sΦ2,s(yi,Ys).
S6=r
Subtracting the above two equations leads to Θj a l = Θ2 al. Since a and l are arbitrarily picked, we
conclude that ΘR = ΘR. Following the same routine, we also have ΘR = Θ j
Therefore, by applying Θj = Θ1, Θ1 = Θj, Θj = Θ2, and Θ2 = Θj in Eq. (13), we have
(θj)TΦj(yi,Y) - (θj)TΦj(yj,Y) = (θj)TΦj(yj,Y) - (θj)TΦj(yi,Y),
(θj)TΦj(yj,Y) - (θj)TΦj(yi,Y) = (θj)TΦj(yi,Y) - (θj)TΦj(yj,Y).
20
Published as a conference paper at ICLR 2022
一 ʌ
Let Y = 1^ (i.e., the k-dimension all 1 vector), We have
(θ1)τ((Φl(yi, 1^) - Φl(yj, 1^)) - ((Φi(yj, 1^) - Φj(yi,")))) = 0,	(16)
(θ1)T((Φl(yi, 1^) - Φl(yj, 1^)) - ((Φi(yj, 1^) - Φj(yi∖)))) = 0.	(17)
Since yi and y7- are asymmetric, We have that there exists l, such that tyτ^fl = ty,j^l. Concretely, by
Eq. (15), we have tyi^l ∈ {to,tsd,tsg}, tyjy, = {to,tsd,tsg}, and tyi^l = tyjy「On the other hand,
Φi* 1,l(yi, 1) - Φi1,l(yj, 1)) = Φj1,l(yj, 1) - Φj1,l(yi, 1),
if and only if ty^ = to, ty,y, = tsg, or ty,y, = to, tyi^l = tsg, which contradicts Lemma 1.
Therefore,
Φi1,l(yi, 1) - Φi1,l(yj, 1)) 6= Φj1,l(yj, 1) - Φj1,l(yi, 1).
In this case, solutions of Θi1, Θj1 subject to respectively Eqs. (16) and (17) lie along a zero-measure
set.
The proof is completed.	□
D	Proof of Theorem 1
D. 1 Learning Algorithm
We first present the algorithm for producing Θ and W in Algorithm 1.
Algorithm 1 WIS
Require: Step size η, dataset D ⊂ X, and initial parameter Θ0.
Θ → Θo.
for all X ∈ D do
—ʌ — ʌ ʌ
Independently sample (Y, Y, Y) from ns, and (Y0, Y0, Y0) from n& conditionally given Y0 =
ʌ
Y(X).
Θ J Θ + η(Φ(Y, Y, Y) - φ(y0, Y0, Y0)).
Compute W as described in (3) using Θ.
output (Θ,W)
D.2 Assumptions
First, the problem distribution ∏ needs to be accurately modeled by some distribution Θ* in the
family that we are trying to learn:
.>. ʌ. ʌ. ʌ.
∃Θ* s.t. ∀(Y,Y),P(X,Y)5*(Y,Y)= Pθ*(Y,Y).
Secondly, given an example (X, Y)〜 ∏*, we assume Y is independent of X given Y(X):
. . ... .ʌ .
(X,Y)〜π* ⇒ Y ⊥ X | Y(X).
(18)
(19)
This assumption encodes the idea that while the ILFs can be arbitrarily dependent on the features,
they provide sufficient information to accurately identify the true label vector. Then, for any Θ,
accurately learning Θ from data distribution is possible. That is, there exists an unbiased estimator
ʌ _
Θ(D) which is a function of the dataset D of i.i.d from πΘ, such that, for any Θ and some c > 0,
I
COVaD)) W 2C同.	(20)
And we are reasonably certain in our guess of latent variables, i.e., Y and Y. That is, for any Θ, Θ*,
-k	k	,
EY*3 XCni + ^var(γ,Y,Y)〜∏Θ (1 Y=yi|Y = Y*)2 + X(mi + K - I)Var(Y,Y,Y)〜∏Θ(YIY = Y*)2
i=1	i=1
1
2
(21)
21
Published as a conference paper at ICLR 2022
We also assume that the output of the last layer of end model hw has bounded '∞ norm, that is, for
any possible parameter W,
khW k∞ ≤ H.	(22)
Finally, we assume that solving Eq. (3) has bounded generalization risk such that for some χ > 0,
solution W satisfies
EW ['θ (W)- mWn'θ (W)] ≤ X∙	(23)
D.3 Proof of Theorem 1
To begin with, we state two basic lemmas needed for proofs throughout this section:
Lemma D.1. Let x1, x2 be two binary random variable. Then we have variance of product of x1
and x2 can be bounded as
Var [x1x2] ≤ Var [x1] + Var [x2] .
Lemma D.2. Let Y be a random vector and |卜|[ be the spectral norm. Then we have
kCov(Y, Y)ks ≤ X Var(Yi).
i
Then, we borrow two lemmas from (Ratner et al., 2016), which are slightly different from the original
ones but can be easily proved following the same derivations:
Lemma D.3. [Lemma D.1 in (Ratner et al., 2016)] Given a family of maximum-entropy distributions
- ,∖
∏Θ (Y, Y ,Y) =
A

1
^exp(ΘτΦ(Y,Y ,Y)).
ZΘ
Ifwe let J be the maximum expected log-likelihood objective, under another distribution π* ,for the
event associated with the observed labeling function values Y,
J(θ) = e(y*,Y*,Y*)〜∏* [logp(y,Y,Y)〜∏θ (Y = Y，)i，
then its Hessian can be calculated as
▽2J(θ) = e(y*,y*,γ*)〜∏* [Cov(γ,γ,γ)〜∏θ (O(YXY) | Y = Yli-Cov(YEY)〜∏θ(Φ(y,y,Y)).
Lemma D.4. [Lemma D.4 in (Ratner et al., 2016)] Suppose that we are looking at a WIS maximum
likelihood estimation problem and the objective function J(Θ) is strongly concave with concavity
parameter c > 0. If we run stochastic gradient descent using unbiased samples from a true
distribution πΘ* , then if we set step size as
η
ce2
彳
and run (using a fresh sample at each iteration) for T steps, where
T= ɪ log(2 kθ0-θ*k2
c2 e2	e
We can bound the expected parameter estimation error with
E∣∣<θ - θ*∣∣2 ≤ Me2,
(24)
where M is the dimension of θ.
Based on Lemma D.4, in order to obtain the optimization error with respect to the estimated θ
produced by Algorithm 1, we only need to show that the WIS object function J (θ)2 is strongly
concave. We prove this through the following lemma, which is a non-trivial extension of Lemma D.3
in (Ratner et al., 2016) given the fact that we have multiple latent variables and relatively complex
dependency structures with comparison to (Ratner et al., 2016):
2Note that, in the Eq. (2) of the main body of the paper, we are minimizing -J (Θ), which is equivalent to
maximizing J (Θ) as discussed here.
22
Published as a conference paper at ICLR 2022
Lemma D.5. [Extension of Lemma D.3 in (Ratner et al., 2016)] With conditions (20) and (21), the
WIS objective function J(Θ) is strongly concave with strong convexity c.
We then come to bound the generalization error of W produced by Algorithm 1, using the following
non-trivial extension of Lemma D.5 in (Ratner et al., 2016):
Lemma D.6. [Extension of Lemma D.5 in (Ratner et al., 2016)] Suppose that conditions (18)-(23)
hold. Let W be the learned parameters ofthe end model produced by Algorithm 1, and '(W *) be the
minimum of cross entropy loss function `. Then, we can bound the expected risk with
E ['(W) - '(W*)] ≤ X + 4cHe.
Finally, we conclude Lemmas (D.4), (D.5) and (D.6) as the following theorem, which is identical to
the Theorem 1 in the main body of the paper:
Theorem 4 (Extension of Theorem 2 in (Ratner et al., 2016)). Suppose that we run Algoirthm 1 on a
WIS specification to produce ΘΘ and W, and all conditions ofLemmas (D.5) and (D.6) are satisfied.
Then, for any e > 0, if we set the step size to be
and the input dataset D is large enough such that
I： log (—k2!,
then we can bound the expected parameter error and the expected risk as:
E∣∣ΘΘ - Θ*∣∣2 ≤ Me2, E ['(W) - '(W*)] ≤ χ + 4cHe.
D.4 Proofs of Lemmas
Lemma D.1. Let x1, x2 be two binary random variable. Then we have variance of product of x1
and x2 can be bounded as
Var [x1x2] ≤ Var [x1] + Var [x2] .
Proof. Joint distribution of x1 and x2 can be listed as the following table: (where p1 + p2 + p3 + p4 =
1)
x1 /x2	0	1
0	p1	p2
1	p3	p4
Then we have
Var [x1x2] = p4 - p42 = p4(p1 +p2 +p3),
while
Var [X1] + Var [X2] = (p2 +p4)(p1 +p3) + (p3 +p4)(p1 +p2) ≥ p4(p1 +p2 +p3).
The proof is completed.	□
Lemma D.2. Let Y be a random vector and |卜||§ be the spectral norm. Then we have
kCov(Y, Y)ks ≤ X Var(Yi).
i
23
Published as a conference paper at ICLR 2022
Proof. By definition of spectral norm, we have
max xTCov(Y, Y )x
kxk2≤1
Where x is a constant vector. And by Cauchy-Schwarz inequality,
xTCov(Y, Y)x = E xT(Y -E [Y])(Y -E [Y])Tx ≤ E kxk2 kY -E [Y]k2 .
Because x is a constant vector and kxk ≤ 1,
max E
kxk2≤1
kxk2kY-E[Y]k2
max kxk2 E
kxk2≤1
kY-E[Y]k2
max kxk2	Var(Yi)
kxk2≤1	i
X Var(Yi).
i
The proof is completed.
□
Lemma D.5. [Extension of Lemma D.3 in (Ratner et al., 2016)] With conditions (20) and (21), the
WIS objective function J(Θ) is strongly concave with strong convexity c.
Proof. By Lemma D.3, hessian matrix of J can be decomposed as follows:
V2J(θ) = EY*~∏Θ* [c0V(γ,Y,Y)~∏θ (φ(γ,γ,Y) IY = Y*)i -c0V(γ,γ,Y)~∏θ(φ(γ,γ,Y)).
Basically, to prove that J(Θ) is strongly concave with strong convexity c, we need to show for a real
number c > 0,
V2J(Θ)	cI.
We calculate each term separately: for the first term
A = EY *~∏θ*[cov(γ,γ,Y)~∏θ (φ(γ,Y,γ) I Y = Y*)],
since A is symmetric, for any real number c, A	cI, if and only if its spectral norm kAks ≤ c,
where kAks equals to the eigenvalue of A with largest absolute value.
Since by definition, vector function Φ(Y, Y, Y) can be represented as:
Φ(Y,Y,Y)
((φ 嬴 j(Y')) i∈[k]j∈[n],yj ∈N (yi,Yj A
(%,yj
Y j))j∈[n],yi∈Yj
(φya,%
(Y,Yj)	∙
"i∈[k]j∈[^]
(YMj
∖
/
24
Published as a conference paper at ICLR 2022
by Lemma D.2, we have A can be further bounded by
kn
A ≤	EY *
〜∏Θ*
XX X	Var(Y,Y,Y)~∏Θ WACyj,j(Y,Yj) ∣ Y
,i=i j=i yj∈N(yi,Yj)
+ EY *
〜∏Θ *
n
X X Var(Y,Y,Y)y (Cj(Yi,Yj) ∣ Y
j=i yi∈Yj
+ EY *
〜∏Θ *
+ EY *
〜∏Θ *
i=i j=i
=Ai + A2 + A3 + A4,
X Var(Y,Y,Y)5θ (%“yj (Yi,Yj) ∣ Y
i≤i,j≤k
/, ʌ
kk
XXVar(Y,Y,Y)〜∏Θ (%i,yj(Y, Yj) ∣ Y
where
Ai =EY
■*
〜∏Θ*
kn
XX X	Var(Y,Y,Y)~∏Θ WCyj,j(Y,Yj) ∣ Y
.i=1j=i yj ∈N(yi,Υj)
；
A2 =EY
■*
〜∏Θ*
n
X X Var(Y,Y,Y)5Θ (。篇(Y,Yj) ∣ Y
j=i yι∈Yj
A3 =EY
■*
〜∏Θ*
A4 =Ey：
■*
〜∏Θ*
E Var(Y*,Y" (%. (Yi,Yj) ∣ Y
Λ≤i,j≤k
kk
XX Var(Y,Y,Y)F (%,^j (Y,Yj) ∣ Y =
i=i j=i
;
;
We then bound the four terms respectively. As for Ai, for fixed Y*, we have
k n
ΣΣ Σ
i=i j=i yj∈N(yi,Yj)
kn
XX X
i=i j=i yj∈N(y%,Yj)
-	ʌ	八、
l ,j S j)1 Y = Y *)
Var(Y,Y,Y)〜∏Θ (IY=yi∧Yj = yj 1 Y = Y*)
k
X
i=i
k
X
i=i
k
≤ X niVar(Y,Y,Y)〜∏Θ 0Y=ya 1 Y = Y"),
i=i
where n is the number of ILFs whose label space contains label that is non-exclusive to label yi,i.e.,
ni
|{j ∈ [n]∣N(yi,Yj) = 0?|.
Therefore, we have
k
AI ≤ X niEY*〜∏Θ* Var(Y,Y,Y)〜∏Θ 0Y=ya ∣ Y = Y") ∙
i=i
25
Published as a conference paper at ICLR 2022
Similarly, for A2, We have
k
A2 ≤ X m'_ne* Var(y,γ①〜必(Yi | Y = Y*),
i=1
where m is the number of ILFs whose label space contains the label ¢.
As for A3, for fixed Y* and any ¢, y ∈ Y, we further separate the proof into subcases by 小仇％
which is simplified as t:
(1)	. t = to. In this case,
Var(y,Y,Y)K (%.(γi,γj) | γ = Y*)
=Var(γ,γ,γ)〜∏e (IYi=γj 1 Y = Y*)
=Var(y,Y,Y),e (YiYj | Y = Y*)
(2var(y,Y,Y)5e (Yi | y = Y*) + Var(Y,γ,γ)y (Yj | y = Y*),
where Eq. (*) is due to Lemma D.1.
(2)	. t = te. Similarly,
Var(Y,γ,Y)F (限小 (Yi,Yj) | y = Y*)
=Var(Y,Y,Y)〜πe (TYi=Yj=ι 1 y = y*)
=Var(Y,Y,Y)〜πe (1Yi=Yj=ι IY = Y*)
=Var(Y,y,Y)5e (yiYj | Y = y*)
≤Var(Y,Y,Y)〜∏Θ (YiIY = Y*) + Var(Y,Y,Y)〜∏Θ (yj | Y = Y*),
(3)	. t = tsg. In this case,
Var(Y,Y,Y)〜∏θ (%,^j(Yi，Yj) 1 Y = Y*)
=Var(Y,Y,Y)〜∏θ (-1Yi=ι,Yj=0 | Y = Y*)
=Var(Y,y,Y)5θ ((I- Yi)γj | y = Y*)
≤Var(y,Y,Y)5e (1 - Yi | γ = γ*) + Var(Y,γ,γ)y (γj | Y = γ*)
=Var(Y,γ,γ)y (γi | γ = Y*) + Var(Y*,Y" (γj | γ = Y*),
(4)	. t = tsd. Similar to (3).,
Var(Y,γ,Y)5e (4％ (γi,γj) | γ = Y*)
=Var(Y,Y,Y)〜∏Θ (-1Yi=0,Yj=1 | Y = Y*)
(
(1 -Yj)γi | γ = Y*)
≤Var(γ,γ,Y)y (1 - Yj | γ = Y*) + Var(Y*,Y" (YiIY = Y*)
=Var(Y,γ,γ)5e (γi | γ = Y*) + Var(Y,γ,γ)5e (γj | γ = Y*),
26
Published as a conference paper at ICLR 2022
Combining (1), (2), (3), and (4), We have
k
A3 ≤ X(k - I)EY*5e* Var(y*,Y)5e (Yi | Y = Y*),
i=1
AS for A4, by similar discussion of A3,
Α
k	k
A4 ≤ X kEY*5e* Var(Y,γ,γ)5θ (YiI Y = Y*) +X 如Y*5e* Var(Y,γ,γ)5θ (lγ=yJY = Y*).
i=1	i=1
Combining estimation of Ai, A2, A3, A4, and by condition (21) we have
MkS
≤A1 + A2 + A3 + A4
ʌ
k	k
≤Ey*~∏θ* ∑(ni + k^Varγ,Y(1 y="|Y = Y*) + £(m* + K - 1)Var-Y(Yi∣Y = Y*)
i=1	i=1
1
Γ k	^	2
≤Eyfθ* X(n + ^) VarY Y (Y∣Y = Y *) + f(m + K - 1)VarYY (Y i∣Y = Y *)
Li=1	i=i	一
1
K	2
+ k) + X(mi + K - 1))
i=1
∕2M ≤ c,
which further leads to
A Y cI.
For the second term B = COV(YY Y)〜∏f9 (Φ(Y, Y, Y)),
B = E(Y,Y ,Y)〜∏Θ [(Φ(Y, Y, Y) - E(Y,Y,Y)5Θ [Φ(Y,Y, Y)])2]
EY,y,Yf I φ(YzY)-
_______ ____________________________________________________ Z、
∑Y0 ,Y0,Y，Φ(Y0,Y0,Y0)exp
(θt φ(y0,Y0,Y 0)八2
∑Y0,Y0,Y，exp (ΘtΦ(Y0, Y0,

ʌ
2
Eγ,γ,γ〜πθ I I Vθ log 卜XP (θtΦ(Y,Y,Y))) - Vθ log I X exp (θτΦ(Y',Y',
Y 0,γ 0,Y0
E(Y, Y, Y)〜∏Θ
—,、
log ∏θ(Y, Y, Y)

2
where E(Y Y Y)〜∏f9 ](V8 log πθ (Y, Y, Y))	is the Fisher Information of θ. By the Cramer-RaO
bound and the condition (20),
表之 Cov(θ)之(DE(Y,Y)5θ](vθ log ∏θ(γ,γ))2]) 1,
which further leads to
B = E(γ,γ,γ)-∏θ ](Vθlog∏θ(Y,Y,Y)/]之 2cI.
The proof is completed by putting estimation of terms A and B together.
□
27
Published as a conference paper at ICLR 2022
Lemma D.6. [Extension of Lemma D.5 in (Ratner et al., 2016)] Suppose that conditions (18)-(23)
hold. Let W be the learned parameters ofthe end model produced by Algorithm 1, and '(W *) be the
minimum of cross entropy loss function `. Then, we can bound the expected risk with
E ['(W) - '(W*)] ≤ X + 4cHe.
Proof. We begin by rewriting objective of expected loss minimization problem using law of total
expectation as follows:
'(W)=E(X,Y)〜∏* [E(X,Y)^∏* [H(Y,σ(h(X,W)))∣X]]
=e(X0,Y0)〜π* [e(X,Y)〜π* [H(Y,σ(h(X,W)))|X = X0]]
=E(X0,YO)〜∏* [E(X,Y)5* [H(Y,σ(h(X0,W)))∣X = X0]]
and by our conditional independence assumption (condition (19)), we have
P(Y |X = X 0) = P(Y |Y(X) = Y(X 0)),
which further leads to
'(W) =E(χo,γo)〜∏* [E(x,y)〜∏* [H(Y,σ(h(X0,W)))IY(X) = Y(X0)口
=E(X0,y0)〜∏* [E(γ,Y)〜∏θ* [H(Y,σ(h(X0,W)))∣Y = Y(X0)ii
On the other hand, if We are minimizing the model with learned parameter ΘΘ, We will be actually
minimizing
'θ(W) = E(X0,Y0)〜∏* [E(Y,Y)〜∏θ [H(Y,σ(h(X0, W)))∣Y = Y(X0)口 ,
where for any X0, E(Y,Y)〜π6
[H(Y,σ(h(X 0,W))) ∣Y = Y(X 0)] can be further calculated as
E(y,Y)〜∏θ [h(Y σ(h(X0, W))) ∣ Y = Y(X0)]
k
X
log (σ(h(X0, W))1) P.〜∏θ (Y = yι |Y = Y(X0)).
l=1
ʌ ʌ
For simplification, we rewrite P(YY)〜∏&(Y = yι∣Y = Y(X0)) as follows with slight abuse of
notations:
P(Y,Y)〜∏θ(Y = yι∣Y = Y(X 0)) = P∏θ(yι∣Y(X 0)),
and similarly
E(X0,Y0)〜∏* = Eπ* ,
Let lX0 =4 arg minl log (σ(h(X0, W))l). The difference between the loss functions will be
l'θ (w ) - '(w )1 =	Eπ*	xxlog (σ(h(X0, W))1) (p∏θ* (yι∣Y(X0)) - P∏Θ (yι∣Y(X0))) J
=	Eπ*	hlog (σ(h(X0, W))1X0) (p∏θ* (yiχo ∣Y(X0)) - P∏Θ (yiχo |Y(X0)))]
+ Eπ*		X log (σ(h(X0,W))1) (p∏θ* (yι∣Y(X0)) - P∏Θ(yι∣Y(X0))) I l6=lX0
28
Published as a conference paper at ICLR 2022
Furthermore,
回[log (σ(h(xIW))iχ,) (P∏Θ* (y，x，|Y(X0)) - P∏Θ(yiχ,∣Y(X')))]
+ E∏* X log(σ(h(X 0,W ))ι) (Pg (y，|Y(X 0)) - P∏δ (y，|Y(X'))) Il
I=LXO	∖ I
=e∏* log Eh(XIW))iχo) I - X P∏θ*(yιIY(X0))+ X p∏θ (yι∣Y(x0)) I I
_	∖ l = lX0	j = lX0	J _|
+ E∏* X log(σ(h(X0,W))ι) (Pg (y，|Y(X0)) - Pπg (y，|Y(X0))) H
I=LXO	∖ l
=E∏* X (log(σ(h(X0,W))l)- log Eh(X0,W))iχo))(p∏θ* (yι|Y(X0)) - P∏δ(yι∖Y^(X')))
, = lXO
=E∏* X (h(X 0,W )1-h(X 0,W )iχ,)(p∏θ* (yi|Y(X0)). - P∏θ(yι |Y(X,))) IL (25)
J = lX0	_| l
Let
h(l1,l2) = h(XX,W)ι1 - h(X0,W)12.
By Eq. (22), We have for any l ∈ [k],
0 ≤ h(l, lχ0) ≤ 2H.
For any fixed X0, define gχo (Θ) as follows:
gχo(Θ)= X h(l,lχo)P∏θ(yi|Y(X0)),	(26)
1	= 1X0
based on which we have
I 'θ(W)-'(W) I ≤ I E∏* (gχo(Θ)-gχ,(Θ*))∣
By First Mean Value Theorem,
ʌ ʌ ʌ
gχo⑼-gχ9") = "gχo⑹，θ -㊀*)≤ I∣θ - θ*IIIN9χo⑹k.
We then bound NgX (ξ) element-wisely:
(1)	. Forany i ∈ [k], j ∈ Hyj ∈ N3, Yj), if i = M, Yj(X0) = j
bgχo ("	X Ujj	∂P∏ξ (yi|Y(X 0))
l F U" F
X
h(l,lχ,)P∏ξ(yiY(X 0))Py(yi|Y(X0))
1 = 1X0
=X h(l,lχo)P∏ξ(yip(X0))P∏ξ(yιp(X0))
1 = 1X0
≤2HP∏ξ(y∙dY(X0))(1- P∏ξ3Y(X0)))
=2HVar [1 y=∕Y(X0)].
29
Published as a conference paper at ICLR 2022
ʌ - ,	..	a
If i = lχ，，Yj (X0) = yj,
dgχ0 ⑹ 1 = ∂θACC - i = yi,^l,j i	ʌ X h(l,lχo) d⅛ACY≡ l=lx，	yi,yj j
=-£ h(l,lχo )P∏ξ (yi∖Y(X 0))Pπξ (yl∖Y(X 0))
l∈{i,lX0}
+ h(i,lχo) (p∏ξ(yi∖Y(X0)) - P∏ξ(yi∖Y(X Wi∖Y(X0))) ∣
≤max J X h(l,lχo)P∏ξ(yi∖Y(X0))P∏ξ(y，∖Y(X0)),
U∈{i,lχ, }
h(i,lχ" (Pπξ(yi∖Y(X0))- P∏ξ(yi∖Y(X,))Pπξ(yi∖Y(X0)))}
≤2HP∏ξ(yi∖Y(X0))(1- P∏ξ(yi∖Y(X0)))
=2HVar [1Y〜∖Y(X0)].
ʌ - ,	「	A
If Yj (X 0) = yj,
I "I= X h(l,lχo)d%婕(XO)) =o.
I∂θAcc.j .∣	J	∂θAcc.j .
i yi,yl ,j i	L=LXO	yi,yl ,j
(2). For j ∈ [n],yr ∈ Yj, if Yj(X0) = yr,
ʌ
∂gχ，(ξ)	X	∖∂P∏ξ(yι∖Y(X 0))
焉行 =L h^χ') —那行一
yr,j	l = lχ0	yr ,j
yι∖Y(X 0))P⅛(Yr = 1∖Y(X 0)))
Let
---	ʌ ..
fι(l) = P∏ξ(Y = yι ,Yr = 1∖Y(X 0))
f2(l) = P∏ξ(Y = yι ∖Y(X 0))P∏ξ(Yr = 1∖Y(X 0)),
and
B1 = {l ： fι(l) ≥ f2(l),l = lχ，},
B2 = {l ： fι(l) <f2(l),l = lχ，}.
30
Published as a conference paper at ICLR 2022
Therefore,
X h(l,lχo) (p∏ξ(Y = yl,Yr = 1|Y(X0)) - P∏ξ(Y = y，|Y(X0))P∏ξ(Yr = 1|Y(X')))
L=LXO
E h(I,lX0 )(f1(I)- f2 (I))
l = lχ0
X h(l, lχo)(fι(l) - f2(l)) + X h(l, lχ，)(fι(l) - f2(l))
l∈B1	l∈B2
≤ max2 fh(IlX，乂于I(D- f2(I))
一,l∈Bτ
)
max
X
ll∈B1
h(l,lχ,)(fι(l) - f2(l)), E h(l,lχo) (f2(l) - fι(l))
l∈B2
On the other hand,
E h(l,lχ0 NfI(D- f2(I))
l∈B1
l∈B1
.ʌ	.. . . — . ʌ ∖
P∏ξ(Y = yl∣Y(X 0))P∏ξ(Yr = 1∣Y(X')))
≤2H X (P∏KY = yl,Yr = 1∣Y(X0)) - Pπξ(Y = yl∣Y(X0))P∏ξ(Yr = 1∣Y(X0)))
l∈B1
=2H ①次(Y = yl, ∃l ∈ B1, Yr = 1∣Y(X0)) - Pπξ (Y = yl, ∃l ∈ B1∣Y(X0))P∏ξ(Yr = 1∣Y(X0)))
=2H (p∏ξ(Y = yl, ∃l ∈B1,Yr = 1∣Y(X0))P∏ξ(Yr = 0∣Y(X0))
-P∏ξ(Y = yl, ∃l ∈ B1, Yr = 0∣Y(X0))P∏ξ(Yr = 1∣Y(X')))
≤2H (p∏ξ(Yr = 1∣Y(X0))P∏ξ(Yr = 0∣Y(X')))
=2HVarIYr∣Y(X')].
Similarly, We have
X Ml,lχ,)(f2(l) - fι(l)) - X h(l,lχ,) (p∏ξ(Y = yι,Yr = 1∣Y(X0)) + P∏ξ(Y = yι∣Y(X0))P∏ξ(Yr = 1∣Y(X')))
l∈B1	l∈B2
≤2HVar [Yr∣Y(X')].
Conclusively, We have
¾lχ 0(ξ)
WCr
≤ 2HVarlYr∣Y(X')].
If Yj = yr, similar to (1), we have
¾lχ 0(ξ)
Wj
0.
31
Published as a conference paper at ICLR 2022
(3)	. For any ¢,% ∈ Y, by the definition of φ^,^, there exists (α,b) ∈ {0,1}2, such that
φ^也(a, b) = 0. Similar to (2), let
f3(l) = P∏ξ (Y = yι,Yi = a, Yj = b∖Y(X 0))
f4(i) = P∏ξ(Y = yι∖Y(X 0))P∏ξ(Yi = a, Yj = b∖Y(x 0))
and
B3 = {l : f3(l) ≥ f4(l),l = lχo},
B4 = {l : f3(l) <f4(l),l = lχo}
We have
dgχ0(ξ
dθ^j
max {
E h(l, lχo)(f3(l) - f4(l)), E h(l, lχ,)(f4(l) - f3(l))
l∈B3
l∈B4
≤2HVar Wia(Yi,Yj)∖Y(X0)]
≤}2H (Var IYi∖Y{X')] + VarlYj∖Yλ(X')]),
where inequality (*) comes from Lemma D.1.
(4)	. For any y ∈ Y, ^ ∈ Y, by the definition of φ晨^, there exists a ∈ {0,1}, y§ ∈ Y, s.t.,
φyi,^r (yj, a) = 0, We further divide the proof into two cases: φ∖.,^r (yi, a) = 0, and φ∖名品(yi, a)=
(4a). If φty, ^ (yi, a) = 0, we have ty .^r = tsg and consequently a = 1. Similar to (1-3)., we have
d9χ,⑹
E h(l,lχ，)
= LXO
ʌ
∂P∏ξ(yι∖Y(X 0))
∂θt~,
y2,"r
=)
k
X h(l,lχo)
l=1
ʌ
∂P∏ξ(yι ∖Y(X 0))
∂θt~,
y2,"r
l=i
yl∖Y(X 0))P∏ξ(Y = yi ,Yr = 1∖Y(X')))
)
-h(i,lχo)P∏ξ(Y = yi∖Y(X0))P∏ξ(Y = yi,Yr = 1∖Y(X0))∣,
where Eq. (•) is due to Let
.. . ---	.^	<..
f5(l) = P∏ξ(Y = yl ,yr = 1∖Y(X 0))
f6(l) = P∏ξ(Y = y ∖Y(X 0))P∏ξ(Y = yi,Y,r = 1∖Y(X 0))
and
B5 = {l : f5(l) ≥ f6(l), l = i},
B6 = {l : f5(l) <f6(l), l = i}
Then we have
dgχ,⑹
≤ maχ X	h(l,	lχ0)	(f5(I)-	f6(I)), X	h(I,lχ0) (f6(I)-	f5(I))	+ h(i, lXO)f6⑴.
l∈B5	l∈B6
32
Published as a conference paper at ICLR 2022
On one hand,
X MljX 0)(f5(l) - ∕β(l))
1∈B5
=X h(l, lx，) (p∏ξ(Y = yι,Yr = 1∖Y(X0)) - P∏ξ(Y = yl∖Y(X,))Pπξ(Y = %Y = 1∖Y(X0)))
l∈B5
≤ X 2H (p∏ξ(Y = yι, Yr = 1∖Y(X0)) - P∏ξ(Y = yι∖Y(X0))Pπξ (Y =统,Yr = 1∖Y(X0)))
l∈B5
=2H ①交(Y = yι, ∃l ∈ B5, Yr = 1∖Y(X0)) - Pπξ(Y = yι, ∃l ∈ B5∖Y(X,))Pπξ(Y =m,Yr = 1∖Y(X0)))
=2H (p∏ξ(Y = yι, ∃l ∈ B5, Yr = 1∖Y(X0))(1 - Pπξ (Y = yi,Yr = 1∖Y(X0)))
-P∏ξ(Y = yι, ∃l ∈ B5, Yr = 0∖Y(X0))P∏ξ(Y = yi,Yr = 1∖Y(X')))
≤2HP∏ξ(Y = yi, Yr = 1∖Y(X0))(1 - Pπξ (Y = yi, Yr = 1∖Y(X0)))
=2H Varnj%,讥(Y,Yr )∖ Y(X 0)]
≤2HVarnJIy=y」Y(X0)] + 2HVarnJYr∖Y(X0)].
On the other hand,
X h(l, lX0) (f6(l) - f5(l)) + h(i, lX0 )f6⑴
ι∈B6
=-X h(l,lχo) (p∏ξ(Y = yι,Yr = 1∖Y(X0)) + P∏ξ(Y = yι∖Y(X,))P∏e(Y = yi,Yr = 1∖Y(X0)))
ι∈B6
+ h(i, lχ 0)P∏ξ(Y = yi∖Y(X 0))P∏ξ(Y = yi, Yr = 1∖Y(X0))
≤2H (-P∏ξ(Y = yι, ∃l ∈ B6, Yr = 1∖Y(X0))(1 - Pπξ(Y = yi,Yr = 1∖Y(X0)))
-P∏ξ(Y = yι, ∃l ∈ B6, Yr = 0∖Y(X0))P∏ξ(Y = yi, Yr = 1∖Y(X0))
+ P∏ξ(Y = yi∖Y(X 0))P∏ξ(Y = yi, Yr = 1∖Y(X')))
≤2H (p∏ξ(Y = yι, ∃l ∈B6,Yr = 0∖Y(X,))Pπξ(Y = yi,Yτ' = 1∖Y(X0))
+ P∏ξ(Y = yi∖Y(X 0))P∏ξ(Y = yi,Yr = 1∖Y(X')))
≤2H (p∏ξ(Yr =0∖Y(X0))P∏ξ(Yr = 1∖Y(X0)) + P∏ξ(Y = yi∖Y(X,))P∏e(Y = yi,Yr = 1∖Y(X0)))
≤2HVarnJIy=y」Y(X0)] + 2HVarnJYr∖Y(X0)].
Therefore, in this case, we have
¾X0 (ξ)
≤ 2HVarnJIy=yi∖Y(X0)] + 2HVarnJYr∖Y(X0)].
(4b). If φty".,“(yi, a) = 0, similar to (4a)., We have
¾X0 (ξ)
-E h(l, lχo)Pnξ (Y = yι ∖Y(X 0))Pnξ (Y = yi, Yr = 1 ∖Y(X 0))
ι=i
+ "i,lχ,) (Pnξ(Y = yi,Yι = 1∖Y(X0)) - Pnξ(Y = yi∖Y(X0))Pne(Y = yi,Yr = 1∖Y(X0))}∣.
33
Published as a conference paper at ICLR 2022
¾lχdξ)
Since
h(i,lχo) (p∏ξ(Y = yi,Yr = 1|Y(X0)) - P∏ξ(Y = yi∣Y(X,))Pπξ(Y = yi,Yr = 1|Y(X0)))
=h(i, lχo)P∏ξ(Y = yi,Yr = 1∣Y(X0))P∏ξ(Y = yi∣Y(X0))
≥0,
We have
≤ max {h(i,∕χ,)P∏ξ(Y = yi,Yr = 1∣Y(X,))Pπξ(Y = yi∣Y(X0)),
X h(l, lx,)P∏ξ(Y = yι∣Y(X0))P∏ξ(Y = yi,Yr = 1∣Y(X0))
l=i
≤2HVarhIκ=""区')]∙
Combining (4a). and (4b)., we have that
≤ 2H (VarnjIy=∕Y(X,)] + VarnJYl∣Y(X1).
dgχ0(ξ)
Combining (1-4)., we then have
Wgx，⑹k2
k n	2
≤4H2 XX (∣N(yi, Yj)∣- 1) VarnJly=y」Y(X0)]	(27)
+ 4H 2	X	VarnJY r∣Y(X 0)] 2
j∈[n],yr∈Yj
+ 4H2 X (Var∏ξ [Yi∣Y(X0)] + VarnJYj∣Y(X0)])2
i,j∈[k]
+ 4H2 X	(VarnjI y=" ∣ Y(X 0)] + VarnjY l ∣ Y(X 0)]) 2
ʌ
i∈[k],j∈[k]
( k	^	∖
≤8H2 X(ni + ⅛)Varnξ(1 y=y[Y = Y*)2 + £(mi + K - 1)Var«(Yi∣Y = Y*)2 .
i=1	i=1
(28)
Therefore, by Eqs. (25), (26), and (28), and Assumption Eq. (21), we have
∣'(W) - 'θ (W )∣ = En*	X h(l, lχ,) (Pne* (Y = yi∣Y(X 0)) - Pnθ (Y = yi∣Y(X 0)))
l = lχ0
=En* [gx0 (θ* )- gx0 (θ)]
≤ En*INgx0⑹lll∣θ* - θIl
≤为θ*-创.
Now, we apply the assumption that we are able to solve the empirical problem, producing an estimate
W that satisfies
E 除(W)- 'θ(WΘ)] ≤ χ,
34
Published as a conference paper at ICLR 2022
where Wa is the true solution to
WΘ = argmwin 'θ(W ).
Therefore,
E ['(W) — '(W*)] = E h'θ(W) — 'Θ(WΘ) + 'Θ(WΘ) — 'Θ(W) + '(W) — '(W*)]
≤) X + E ['Θ(WΘ) — 'θ (W) + '(W) — '(W*)]
≤ χ + 4cH
≤ χ + 4cH
√MEkΘ - Θ*k + E h'θ(WΘ) — 'θ(W) + 'θ(W)- 'θ(W*)i
√M Ekθ—θ*k,
where Eq. (*) comes from condition (23).
With Eqs. (20) and (21), we have Eq. (24) by Lemma D.5, i.e.,
(E∣∣Θ — Θ*k)2 ≤ E∣∣Θ — Θ*k2 ≤ ε2M.
We can now bound this using the result of Lemma D.6, which results in
E ['(W) — '(W*)] ≤ χ + 4cHe.
The proof is completed.
□
E Examples and Illustrations
E.1 Label Graph and Label Hierarchy
Fig 5 shows the mapping between a label hierarchy and the corresponding label graph. Indeed, given
the order of labels, any label structure represented as a (directed acyclic graph) DAG can be converted
to exact one consistent label graph based on the four types of label relations.
<=>
-----Exclusive
Overlap
A Subsuming
A SUbsUmed
Figure 5: The illustration of mapping between a DAG of labels and a label graph.
E.2 An Example of Inconsistent Label Graph
Fig. 6	shows an example of an inconsistent label graph. We can see that the label graph is unrealistic
and ambiguous because “Husky” subsumes “Canidae”, but (1) “Canidae” subsumes “Dog” and
(2) “Dog” subsuems “Husky” combined imply that “Husky” should be subsumed by “Canidae”.
Also, from the example, we can see that label graph induced from cyclic label hierarchy must be
inconsistent.
35
Published as a conference paper at ICLR 2022
Figure 6: The illustration of inconsistent label graph.
〈=〉
Exclusive
Overlap
Subsuming
Subsumed

E.3 Enumeration of Inconsistent Triangle Label Graph
For a triangle label graph G, we list all inconsistent label relation structures. The consistency of
larger label graph with more labels can be verified by checking the consistency of every triangle
inside. One example proof of {Exclusive, Overlap, Subsuming} can be found in Lemma 1.
Table 5: Enumeration of Inconsistent Label Relation Triplets.
label relation Triplets		
tab	tbc	tac
Overlap	Subsumed	Subsuming
Overlap	Subsumed	Exclusive
Overlap	Subsuming	Subsumed
Overlap	Exclusive	Subsumed
Exclusive	Subsumed	Subsuming
Exclusive	Overlap	Subsuming
Exclusive	Subsuming	Subsuming
Exclusive	Subsuming	Subsumed
Exclusive	Subsuming	Overlap
Subsuming	Exclusive	Subsumed
Subsuming	Subsumed	Exclusive
Subsuming	Overlap	Subsumed
Subsuming	Overlap	Exclusive
Subsuming	Subsuming	Exclusive
Subsuming	Subsuming	Subsumed
Subsuming	Subsuming	Overlap
Subsumed	Overlap	Subsuming
Subsumed	Subsumed	Exclusive
Subsumed	Subsumed	Subsuming
Subsumed	Subsumed	Overlap
Subsumed	Exclusive	Subsuming
Subsumed	Exclusive	Subsumed
Subsumed	Exclusive	Overlap
E.4 An Example of Indistinguishable Label Graph
Fig. 7	shows an example label graph with indistinguishable label relation structure. Again, red
labels represent desired unseen labels, while gray labels are undesired and seen. We can see that
unseen label “Husky” and “Bulldog” have indistinguishable label relation structures because for all
seen labels, their label relations are equal. For example, seen label “Dog” subsumes both “Husky”
and “Bulldog”. In contrast, for “Husky” and “Bengal Cat”, seen label “Cat” subsumes the latter
but exclusive to the former, which indicates that “Husky” and “Bengal Cat” have distinguishable
label relation structure. Note that “Bengal Cat” and “Persian Cat” also have indistinguishable label
relation structure, but the former is unseen desired label while the latter is seen and can be predicted
by some ILF(s). We are only interested in the distinguishablity of a pair of unseen labels.
36
Published as a conference paper at ICLR 2022
In practice, users could "break the symmetry" by adding new ILFs with new labels. For example, if
we add an ILF that could predict “Arctic Animals”, then the new seen label “Arctic Animals” will be
added into label graph as shown in Fig. 8. We know that “Arctic Animals” subsumes “Husky” but
not “Bulldog”, so we break the indistinguishable label relation structure of “Husky” and “Bulldog”
successfully.
<=>
Exclusive
Overlap
Subsuming
SUbSUmed
Figure 7:	An example of an indistinguishable label relation structure (“Husky” and “Bulldog”).
〈=>
Figure 8:	An example of fixing an indistinguishable label relation structure (“Husky” and “Bulldog”)
by adding a new label (“Arctic Animals”).
F Experimental Details
F.1 Dataset
Large scale Text Classification Dataset3: LSHTC-3 (Partalas et al., 2015), a large scale hierarchical
text classification dataset, which consists of 456,886 documents and 36,504 categories organized
in a label hierarchy. We filter out the documents with multiple labels, and preserve categories with
more than 500 documents. We use a pre-trained sentence transformer (Reimers & Gurevych, 2019)
to obtain document embeddings for classification. We follow Zhang et al. (2021) to generate 5
keyword-based labeling functions for each seen label as ILFs.
Large scale Image Classification Dataset4: ILSVRC2012 (Russakovsky et al., 2015), a large scale
image classification dataset, which consists of 1.2M training images from 1000 object classes based
3http://lshtc.iit.demokritos.gr/
4http://image-net.org/challenges/LSVRC/2012/index#data
37
Published as a conference paper at ICLR 2022
on ImageNet. Following Deng et al. (2014) we use WordNet as the label hierarchy, and because all
the images are assigned to leave labels in WordNet, for each non-leave label, we aggregate images
belonging to its descendants as its data points (Deng et al., 2014). For weak supervision sources
creation, we follow Mazzetto et al. (2021b;a) to train 10 image classifiers as ILFs. We randomly
sampling 2 or 3 exclusive seen labels from the label graph as well as 500 images for each label to
train a ResNet-32 classifier.
F.2 Description of Applying DAP
To apply DAP, we use both label relations and ILFs to construct attributes for both unseen classes
and unlabeled data points. Then, we train the attribute classifiers, which in turn are used to predict
unseen labels on the test set as in Lampert et al. (2013). To construct attributes for unseen labels and
data points, we leverage the outputs of ILFs and label relations.
First, based on the label relations and basic logistic rules, we enumerate all the possible assignments
of seen labels given a data point. For example, if label A is subsumed by label B, then for a data
point, when it belongs to label A, it must also belong to B ; And if label A and B are exclusive, then
one data cannot belong to both at the same time. Let s ∈ S denote one possible label assignment and
S is the set of all possible s. Then we define the attribute as a vector of |S | dimension where each
dimension corresponds to one s.
Second, we define the attribute of unseen labels. For an unseen label A and a label assignment s, if A
is not exclusive to any label in s then we set the corresponding attribute as = 1 for label A, other
wise 0. The intuition is that, if A is not exclusive to labels in s, it’s likely that when a data belongs
to assignment s, it also belongs to label A. For each data point, we use the labels assigned by ILFs
to build their attributes. If a data belongs to assignment s then its corresponding attribute as = 1,
otherwise 0.
Then, we can train attribute classifier p(a|x) for each attribute based on data point attributes. During
inference, we use unseen label attribute as well as attribute classifier as in Lampert et al. (2013):
f (x) = arg max YI P^
(29)
F.3 Hyper-parameters
For the training of PGMs, We set the learning rate to be n where n is the number of training data. For
training logistic regression model, we use the default parameters in scikit-learn library. For training
ResNet model, we set batch size as 256 and use Adam optimizer with learning rate being 1e-3 and
weight decay being 5e-5.
F.4 Hardware and Implementation Details
All experiments ran on a machine with an Intel(R) Xeon(R) CPU E5-2678 v3 with a 512G memory
and a GeForce GTX 1080Ti-11GB GPU.
All the code was implemented in Python. We use the standard implementation of the logistic
regression model from Python scikit-learn library5 and the ResNet model from torchvision library6.
Our code will be released upon the acceptance.
F.5 Dataset Details of Real-world Applications
We list the tags we used in the real-world application (Sec. 7.3) and examples of label relations we
query from the existing product category taxonomy.
5https://scikit- learn.org/stable/modules/generated/sklearn.linear_model.
LogisticRegression.html
6https://pytorch.org/docs/stable/torchvision/models.html
38
Published as a conference paper at ICLR 2022
Table 6: The tags and examples of label relations of “Car Accessories” category.
new unseen tags:	“Performance Modifying Parts”, “Vehicle Tires & Tire Parts”, “Car Engines & Engine Parts”
existing tags:	“Car Modification Parts”, “Car Parts & Accessories” “Car & Truck Tires”, “Replacement Car Parts”, “Car & Truck Wheels”
label relation examples:	“Replacement Car Parts” subsumes “Car Engines & Engine Parts” “Car & Truck Tires” is subsumed by “Vehicle Tires & Tire Parts”
Table 7: The tags and examples of label relations of “Furniture Accessories” category.
new unseen tags:	“Clothing & Shoe Storage”, “Living Room Furniture”, “Beds & Headboards”
existing tags:	“Coffee Tables & End Tables”, “Entertainment & Media Centers” “Bedroom Furniture”, “Sofas & Chairs”, “Mattresses”
label relation examples:	“Bedroom Furniture” subsumes “Beds & Headboards” “Sofas & Chairs” is subsumed by “Living Room Furniture”
G	Additional Experiments
G. 1 Performance Drop When the Distinguishable Condition is Violated
To validate the effectiveness of the distinguishable condition, we drive another 100 WIS tasks from
LSHTC-3 dataset where each task has at least one pair of unseen labels sharing exactly the same
label relation structure. In Table 8, we report the performance drop on the averaged evaluation results
over the 100 WIS tasks with comparison to the numbers in Table 2. Although the two sets of WIS
tasks are different and therefore are not individually comparable, the averaged performance drop does
indicates that the violation of the distinguishable condition results in undesirable synthesized training
labels, which implicitly demonstrates the effectiveness of the distinguishable condition.
Table 8: Performance drop on averaged evaluation results over 100 WIS tasks derived from LSHTC-3
when the distinguishable condition is violated.
Method		Accuracy	F1-score
	LR-MV	-11.49	-13.83
Label Model	W-LR-MV	-11.51	-13.47
	WS-LG	-9.28	-8.63
	PLRM	-9.66	-9.63
	LR-MV	-16.14	-17.08
End Model	W-LR-MV	-15.27	-15.97
	WS-LG	-13.13	-13.78
	PLRM	-13.39	-14.09
39