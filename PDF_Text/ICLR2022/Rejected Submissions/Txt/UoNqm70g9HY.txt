Under review as a conference paper at ICLR 2022
Equivalent Distance Geometry Error for
Molecular Conformation Comparison
Anonymous authors
Paper under double-blind review
Ab stract
Straight-forward conformation generation models, which generate 3-D structures
directly from input molecular graphs, play an important role in various molecular
tasks with machine learning, such as 3D-QSAR and virtual screening in drug de-
sign. However, existing loss functions in these models either cost overmuch time
or fail to guarantee the equivalence during optimization, which means treating
different items unfairly, resulting in poor local geometry in generated conforma-
tion. So, we propose Equivalent Distance Geometry Error (EDGE) to calculate
the differential discrepancy between conformations where the essential factors of
three kinds in conformation geometry (i.e. bond lengths, bond angles and dihedral
angles) are equivalently optimized with certain weights. And in the improved ver-
sion of our method, the optimization features minimizing linear transformations
of atom-pair distances within 3-hop. Extensive experiments show that, compared
with existing loss functions, EDGE performs effectively and efficiently in two
tasks under the same backbones.
1	Introduction
Small organic molecules, conventionally a chemical or biomedical topic, are now being widely stud-
ied by artificial intelligence researchers. Based on prior natural science knowledge, machine learning
models aid in multiple tasks on molecules including 3-D Quantitative Structure-Activity Relation-
ship (QSAR) analysis, virtual screening for drug discovery, and protein-ligand binding analysis.
Before any real industrial applications, molecular conformation generation draws particular con-
cern. The task is also challenging as (1) conformation contains the 3-D geometry which can be
translated or rotated, making it complicated to compare the generated one with ground-truth; (2) the
number of molecules found in nature presents combination explosive growth, so the procedure of
generating conformations is supposed to be fast enough for applicability.
In the past few years, different machine learning models have been proposed to handle the molec-
ular conformation generation task. Generally, the molecules are featurized into token sequences
(e.g. SMILES (Weininger, 1988)) or 2-D molecular graphs 1 (Gilmer et al., 2017) to feed the neural
networks, while the way to obtain conformations is optional: (1) Straight-forward methods directly
generate the 3-D coordinates of atoms from the inputs; (2) Step-wise methods first predict distances
between atom pairs and then rebuild the conformations from the distances either via discrete al-
gorithms (e.g. EDG (Havel, 1998)) or bi-level (Xu et al., 2021). As the expense of avoiding the
troublesome comparison between conformations, step-wise methods usually adopt more complex
architectures and endure relatively expensive time and space costs. Therefore, based on its in-
nate advantage of high efficiency, Straight-forward methods require powerful assistance to perform
equally great as step-wise ones. And a well-designed loss function can be helpful.
In recent studies, the simplest way to compare the conformations is to represent the conforma-
tions with atom position matrices R(G) ∈ Rn×3 and calculate their Root-Mean-Squared Deviations
(RMSD). Since conformation is invariant to spatial permutations (e.g. translation and rotation), a
universal approach is to first find an optimal alignment. As an instance, Kabsch algorithm (Kabsch,
1976) provides a differentiable method to align two given conformations. We referred to the so-
calculated RMSD as Kabsch-RMSD. However, using Kabsch-RMSD as the loss of neural networks
1The atoms and bonds inside the molecule form the vertexes and edges respectively.
1
Under review as a conference paper at ICLR 2022
is neither efficient nor effective: it needs to calculate the rotation matrix for every single confor-
mation, which stifles batch processing and increases time cost; meanwhile, the rotation matrix is
vulnerable to misplaced atoms and poorly-predicted regions (Mariani et al., 2013), so the RMSD
between aligned and reference conformation cannot correctly reflect molecular similarity when in-
put conformations are less likely.
To further improve the applicability of loss function on molecular conformation comparing, Dis-
tance Geometry (DG) is proposed to encode a conformation into a vector of distances among the
atoms, where the comparison is applied. The main idea of DG is to indirectly optimize bond lengths
D, bond angles Φ and dihedral angles2 Ψ by optimizing the distances among 1-hop, 2-hop and more
distant neighbors respectively in the molecular graph. However, when balancing time and effects,
traditional distance geometry methods are faced with a dilemma: (1) If too many distant neighbors
in the graph are considered, the loss calculation will be time-consuming. (2) If only close atom-
pairs (e.g. 3-hop at most) are considered, the factors in the geometry will be treated unfairly. Based
on the theoretical and experimental demonstration in Appendix B.1, the gradient allocated on bond
angles Φ and dihedral angles Ψ will become much smaller than that on bond lengths D when op-
timizing atom-pair distances, resulting in contorted angles and poor local geometry. Therefore, the
equivalence in optimizing different factors should be stressed in the comparison.
To push the boundary of efficient and effective loss function for molecular conformation generation,
we propose Equivalent Distance Geometry Error (EDGE). Firstly, EDGE exploits the essential
factors inside the conformation geometry, including a series of bond lengths D, bond angles Φ and
dihedral angles Ψ. Then the factors are jointly optimized with certain weights to guarantee that
they are fairly treated. To avoid the high complexity of directly calculating the angles, we introduce
Taylor Expansion to our method to approximate the angles with linear transformations of atom-pair
distances within 3-hop. Extensive experiments prove that the improved version of EDGE performs
as fast as optimizing 1/2/3-hop atom-pair distances and achieves better performance than existing
popular loss functions on conformation comparison when applied to straight-forward backbones.
To conclude, our main contributions are threefold:
•	We propose a novel loss function, EDGE, for straight-forward models on molecular con-
formation generation, which optimizes the essential factors in the conformation geometry
equivalently, realizing high consistency of generation.
•	To avoid the high complexity and gradient explosion caused by direct calculation of angles,
we introduce Taylor Expansion and Multiplier Truncation which achieves efficient model
optimization with improved EDGE and guarantees its applicability.
•	We conduct comprehensive experiments on several recently proposed benchmarks, in-
eluding QM9(Wu et al., 2018), GEOM-QM9 and GEOM-DrUgs(Axekod & Gomez-
Bombarelli, 2020). The outstanding performance on different metrics shows that EDGE
is powerful on both definite conformation prediction and multiple conformation generation
tasks, compared with existing loss functions. Besides, EDGE’s efficiency is guaranteed via
theoretical analysis and empirical test.
2	Proposed Method
2.1	Preliminaries
Notations In the statements and equations below, we use italic letters for scalars and indices, bold
lower-case letters for (column) vectors, bold upper-case letters for matrices, calligraphic letters for
sets, and normal letters for annotations. Given a certain molecule, M = (V, E, n, m, Xv, Xe)
is the corresponding molecular graph. Here, V is the set of all n atoms, E ⊂ V × V is the set
of all m chemical bonds, Xv = (x1v, ..., xvn)> ∈ Rn×dv is the matrix of atomic features, and
Xe = (xe1, ..., xem)> ∈ Rm×de that of bond features. G is the geometry of its conformation and
R(G) is the matrix of atom positions. d(u, v; M) is the graph distance between atom u,v in M and
d(u, v ; G ) is their Euclidean distance in G . A conformation geometry G has three types of factors
D(G), Φ(G), Ψ(G), which refer to the set of bond length d, bond angle φ and dihedral angle ψ
2Dihedral angle is referred as torsion angle in some works.
2
Under review as a conference paper at ICLR 2022
Figure 1: Given a generated conformation and its reference, different factors in the geometry d, φ, ψ
are taken to calculate the Squared Errors, which are then added up with certain weights λd , λφ , λψ .
As improvement, Taylor Expansion can be introduced as an optional approximation of SE, guaran-
teeing the high efficiency of EDGE. See 2.3 for details.
respectively. For operators,㊉ is the operator of concatenations and ∣ ∙ k denotes the l2 norm of the
input vector.
Problem Definition We consider following straight-forward molecular conformation generation
process: the models input a molecular graph M and output a molecular conformation R(G). Our
task is to find an efficient and effective loss function to calculate the differential discrepancy be-
/	/	1	1 r∙	Γ*	∕∙cSf∙F	1	,・F・ F /	/・	・ /F	1 1
tween generated and reference conformation G , G , which can be utilized to optimize the models
backwardly.
2.2	Equivalence in Molecular Geometry
When applied to straight-forward backbones on molecular conformation generation, existing DG-
based loss functions such as Conn-k (Yang et al., 2021) can’t fairly distribute the gradient to differ-
ent factors D(G), Φ(G) and Ψ(G) in the conformation during optimization, resulting in contorted
geometry. Simply calculating the average error between the generated D(G), Φ(G), Ψ(G) and the
reference ones has the same deficiency, because the three types of factors are in different dimensions
and equivalence can hardly be guaranteed while training the model. To fairly treat all the factors, it is
necessary to jointly optimize them with certain weights which are determined by their corresponding
degrees of freedom and value distributions in the dataset.
Degree of Freedom Consider a 3-D molecular geometry G of a molecule with n atoms, it has
fG = 3n- 6 degree of freedom due to the existence of rotation and translation (Simm & Hernandez-
Lobato, 2020). It means that a geometry can be just recovered from a certain combination of bond
lengths, bond angles and dihedral angles with a total number 3n - 6. Note that three types of factors
occupy fD, fΦ, fΨ degrees of freedom out of fG respectively, and we have3:
fG =fD+fΦ+fΨ =3n-6	(1)
To completely perceive the local structure of molecular geometries, the number of bond lengths,
bond angles and dihedral angles sampled in the geometry (i.e. fD , fΦ , fΨ) may exceed their exact
degrees of freedom fD , fΦ , fΨ during optimization. So we need to balance them through a simple
proportion (e.g. fD /fD for bond lengths D).
Value Distribution When jointly optimizing bond lengths D, bond angles Φ and torsion angles
Ψ, which are in different dimensions, it can hardly achieve equivalence to manually give hyper-
parameters to balance the gradients. Therefore, we rescale D, Φ, Ψ with the reciprocals of their
deviations σD , σΦ , σΨ respectively to uniformly approximate a Gaussian distribution with σ = 1.
3The calculation of degrees of freedom for each kind of factors can be found in Appendix C.1.
3
Under review as a conference paper at ICLR 2022
2.3	Our Method: Equivalent Distance Geometry Error
We propose Equivalent Distance Geometry Error (EDGE) as a loss function for straight-forward
methods of molecular conformation generation. As illustrated in Fig.1, EDGE calculates the dis-
crepancy between generated conformation G and reference conformation G following4:
L(G, G)	= λD 工 (d - d) +	λΦ	工	(φ	-	φ)2+	λΨ	£ W- ψT
d∈D(G)	φ∈Φ(G)	ψ∈Ψ(G)
ʌ . ʌ . ʌ . ʌ .	ʌ . ʌ .
d∈D(G)	φ∈Φ(G)	ψ∈Ψ(G)
where λD =@ ɪ
fD σD
fφ I ∖	_ fψ I
λψ =
fΦ σΦ	fΨ σΨ
(2)
To be more efficient, we can encode a molecular conformation into a vector z :
ZD = [λDd|d ∈ D(G)] Zφ = [λφφ∣φ ∈ Φ(G)] zψ = [λψψ∣ψ ∈ Ψ(G)]	(3)
Z = zD ㊉ zφ ㊉ zψ
Then Eq.2 can be represented as the discrepancy between two encodings of conformation, which
achieves fast comparison among multiple conformations:
L(G, G) = kz - Zk2	(4)
Calculation of D For a conformation G, we first calculate the distance ma-
trix D :
Di,j = kR(G)i-R(G)jk2	(5)
where R(G)i ∈ R3 is the 3-D position of i-th atom in G. Then the value of
sampled bond lengths D can be found in D .
Calculation of Φ For a certain bond angle φ determined by three atoms in
G, a, b are the lengths of its two sides and c is the length of the side opposite
it, which is shown in Fig.2(a). As a, b, c can be found in D, the value of φ
can be calculated through the cosine theorem as
a2 + b2 - c2
φ = arccos-------------
2ab
(6)
Calculation of Ψ For a certain dihedral angle ψ determined by four
sequentially-connected atoms in G, a, b, c are the lengths of the sides in the
atom chain and d, e, f are 2/3-hop distances among the atoms, which is shown
in Fig.2(b). Following Euler’s formula in the tetrahedron, we have5:
.	∕4a2 b2 e2 — b212 — a2 r2 — e212 + r21112
ψ = arcsin V-------------403"------------------------ ⑺
Figure 2: φ and ψ
in the conformation
geometry.
2.4	Improvement
2.4.	1 Deficiency of Original EDGE
High Complexity Although obtaining the exact value of d, d in D(G), D(G) is straightforward,
calculating and optimizing the factors Φ(G) and Ψ(G) will bring high computational complexity
due to the existence of complicated operations like inverse trigonometric functions.
Gradient Explosion When φ → π or ψ → 0, π∕2, the derivative of inverse trigonometric func-
tions in Eq.6,7 reaches ∞. Even ifwe introduce Taylor Expansion to the calculation of each factor’s
error, which will be shown in 2.4.2, the same situation occurs when calculating the partial deriva-
tives. So, gradient explosion is also a considerable problem during the optimization with EDGE.
4The calculation of the weights for different datasets can be found in Appendix C.
5In Eq. 7, r1 = b2 + c2 - e2 , r2 = b2 - c2 + e2 , t1 = a2 + b2 - d2 , t2 = a2 + e2 - f2. And details of
the calculation of ψ are available in Appendix A.1.
4
Under review as a conference paper at ICLR 2022
2.4.2	Taylor Expansion
To solve the problem of high computational complexity and make calculation in Eq.2 efficient, we
utilize Taylor Expansion to approximate the errors of bond angles Φ and dihedral angles Ψ with a
linear transformation of atom-pair distances in D from Eq.5.
For each factor-pair φ and φ in Φ(G) and Φ(G), considering the bond lengths a, b,c in G which
generate φ in the way mentioned above, they have the corresponding bond lengths a, b, c in G . We
can compose the vectors u^ = (a, b, ^)> and U = (a, b, c)> with them respectively. Like Eq. 6, φ
can be taken as a function w.r.t U. So, we can apply multivariate Taylor expansion to φ - φ:
where
(8)
1-1 ∙	∙1	1	/'	Λ i'	♦ I	1	?	,ʃ, / C∖	1	,ʃ, / 3∖	.	. 1	.	ʌ
Similarly, for each factor-pair ψ and ψ in Ψ(G) and Ψ(G), We can get the vectors V =
(a, b, c, d, e, f)1 and v = (a, b, c, d, e,f) > Like Eq. 7, ψ can be taken as a function w.r.t v.
So we can apply multivariate Taylor expansion to ψ - ψ:
ψ - ψ = (dψψ∣v=v)>(v - V)
∂ψ ∂ψ ∂ψ ∂ψ ∂ψ ∂ψ ∂ψ >
Where v - v → 0 and IdV =(诙，而演，而，演，后
(9)
As the generated conformation G is changeable while reference conformation G is fixed during
training, the partial derivatives ∂φ |u=u, ∂ψ |v=v, which is invariant to G, can be obtained in data
processing6. Therefore, the discrepancy of bond angles and dihedral angles in Eq.2 can be replaced
with Eq.8,9, which are simply linear transformations of atom-pair distances. Besides, the atom-pairs
considered here is at most 3-hop connected, so the number of variables in linear transformation (i.e.
atom-pair distances) is in the same order of magnitude with atom count n (see Appendix B.2). So,
the problem of high complexity of EDGE is resolved by Taylor Expansion.
2.4.3	Multiplier Truncation
Taylor Expansion solves the problem of high computational complexity, but gradient explosion still
exists. Here, we apply Multiplier Truncation strategy to truncate the partial derivatives to finite
values. Instead of limiting the final values, the problematic multipliers hidden in the formulas are
found and then truncated to prevent gradient explosion, while the useful parts in the values are
mostly preserved.
For φ w.r.t. U, we have:
∂φ ∂φ ∂ cos φ 1 ∂ cos φ
∂U	∂ cos φ ∂U	sin φ ∂U
(10)
When φ → π, si1φ → ∞.AS stable values can alwaysbe acquiredby multiplier ¾φ, s⅛is the
cause of gradient explosion in Eq.10. Here, we truncate - -^j to [-10, -1] from (-∞, -1].
Similarly, for ψ w.r.t. v, we have:
∂ψ ∂ψ	∂ sin2 ψ	1	∂ sin2 ψ
∂v	∂ sin2 ψ ∂v 2 sin ψ cos ψ	∂v
(11)
When ψ → 0 or n/2, 2sinψcosψ → ∞, so we truncate 2 s® ψcosψ to [1,10] from [1, ∞). Moreover,
inside the multiplier d s∂V ψ, the value of a denominator 4b2c2 - (b2 + c2 - e2)2 will tend to 0 when
e = b + c (i.e. the bond angle between b, c is π), resulting in that the elements in the vector reaches
∞ and triggers explosion. To avoid this, we truncate 4b2c2 - (b2 +c2 - e2)2 to [10, ∞) from [0, ∞).
6Detailed formulas of the partial derivatives in Eq.8,9 are available in Appendix A.2.
5
Under review as a conference paper at ICLR 2022
The improved version of EDGE with Taylor Expansion and Multiplier Truncation resolves the pre-
vious deficiency and achieves time-friendly model training with equally powerful performance in
the experiment.
3 Experiment
3.1	Experiment Setup
3.1.1	Tasks
We evaluate our loss function on two molecular conformation tasks: definite conformation predic-
tion and multiple conformation generation.
Definite conformation prediction aims to predict the optimal conformation for each molecule.
Here, we use a popular dataset QM9 (Wu et al., 2018), which contains the conformations of about
133k molecules. These reference conformations are generated through Density Functional Theory
(DFT), making sure that they are in a relatively stable status. The backbone model where we apply
the loss functions is PhysNet (Yang et al., 2021), a learnable force field designed to optimize the
molecular conformations. To show the performance of the loss functions on various aspects, they
are evaluated on following metrics:
•	D RMSE, Φ RMSE and Ψ RMSE: the root-mean-squared error on the bond lengths, bond
angles and dihedral angles sampled from molecular graphs, respectively.
•	A-RMSD (Mansimov et al., 2019): the root-mean-squared derivation between reference
conformation C and generated conformation G after applying alignment function A7, i.e.
ʌ.	, . , , ʌ.. , ʌ..
A-RMSD(G, G) = RMSD(A(R(G), R(G)), R(G))	(12)
where A is the alignment function.
•	lDDT-Score (Mariani et al., 2013): Compute over all pairs of atoms in the reference struc-
ture at a distance closer than 15A, and the distances in generated conformations are Consid-
ered preserved if they are within a tolerance threshold compared to reference ones. lDDT-
Score is the average fraction of preserved distances over thresholds 0.5A, 1A, 2A and 4A,
i.e.
lDDT-Score(G, G) = 1 X	average	1(∣d(u, v; G) — d(u,v；G)| < r)
r∈{0.5,1,2,4} u,v∈V∧d(U,v;G)<15
(13)
Multiple conformation generation aims to generate realistic and diverse conformations for a
molecule. Here, We use the recent proposed GEOM-QM9 and GEOM-Drugs (Axelrod & GOmez-
Bombarelli, 2020), both of which contain multiple conformations for each molecule. Following the
settings from Xu et al. (2021), We sampled 50,000 molecule-conformation pairs as training set and
another 17813 pairs covering 150 molecules as test set from GEOM-QM9. As for GEOM-Drugs,
We sampled 50,000 molecule-conformation pairs as training set and another 9161 pairs covering
100 molecules as test set. The backbone models selected to handle conformation generation are
PhysNet and CVGAE (Mansimov et al., 2019), an auto-encoder designed for generating molecular
conformations. FolloWing metrics are used to evaluate the performance of loss functions:
•	COV-δ (Xu et al., 2021): the fraction of conformations in reference set Sr covered by at
least one conformation in generated set Sg Within a RMSD threshold δ after alignment, i.e.
COV(Sg, Sr) = -^∣{G ∈ Sr∣A-RMSD(G, G) < δ, ∃G ∈ Sg}∣	(14)
|Sr |
MAT (Xu et al., 2021): the average RMSD over conformations in reference set Sr, each of
Which is compared With the most similar conformation in generated set Sg after alignment,
i.e.
MAT(Sg,Sr)
ι⅛ X
Gesr
ʌ.
min A-RMSD(G, G)
(15)
7The alignment function is AlignMol from RDKit package v1.6.1.
6
Under review as a conference paper at ICLR 2022
•	Multi-lDDT-Score (Mariani et al., 2013): the average lDDT-Score between each confor-
mation in reference set Sr and the conformation in generated set Sg with highest lDDT-
Score compared to the former, i.e.
Multi-lDDT-Score(Sg, Sr) = —^―	max lDDT-Score(G, G)	(16)
|Sr |	G∈Sg
G∈Sr
3.1.2	Baselines
We compare EDGE with its variants and multiple loss functions for molecular conformation com-
parison as listed below:
•	Naive RMSD: root-mean-squared error of the atom positions, i.e. RMSD(R(G), R(G))
•	Kabsch RMSD (Li et al., 2021): root-mean-squared error of the atom positions after align-
ing the conformations using Kabsch algorithm, i.e. RMSD(Kabsch(R(G), R(G)), R(G))
•	lDDT-γ (Mariani et al., 2013): root-mean-squared error of atom-pair distances whose val-
ues are less than γ in reference conformation, i.e. RMSE	(d(u, v; G), d(u, v; G))
u,v∈V∧d(u,vg)<γ
•	Conn-k (Yang et al., 2021): root-mean-squared error of distances of k-hop connected atom-
pairs, i.e. RMSE ʌ	(d(u, v; G), d(u, v; G))
u,v∈V∧d(u,v;M)<k
•	EDGE-w/o f : an invariant of EDGE, where degree of freedom is not considered when
calculating hyper-parameters λD , λΦ , λΨ .
•	EDGE-w/o σ: an invariant of EDGE, where value distribution is not considered when
calculating hyper-parameters λD , λΦ , λΨ .
•	EDGE: our loss function.
To further reflect how the loss function improves the performance, we also consider following base-
lines which are simply conformation generation strategies rather than learning models:
•	RDKit: directly using the conformation generated by RDKit without further training.
•	Random Guess: sampling the atom positions from the standard Gaussian distribution and
constructing a conformation.
3.1.3	Details of Implementation
For PhysNet(RDKit initialized), we use RDKit (package version 1.6.1) to generate an initial confor-
mation and then refine it with a PhysNet Block. The number and duration of time-step are 5 and 0.2
respectively. The hyper-parameter setup inside PhysNet follows Yang et al. (2021).
For CVGAE, we follow the settings of a UFF-free version from Mansimov et al. (2019), to show
that EDGE can also perform better on generative backbones where derivative fine-tuning with force
field is not considered.
The value of hyper-parameters λD , λφ, λψ is calculated through sampling the degrees of freedom
and standard deviation of D, φ, ψ from the train set of datasets QM9, GEOM-QM9 and GEOM-
Drugs. The explicit process and the results of calculation can be found in Appendix C.2.
When optimizing the backbones, we set learning rate to 2e-6 for PhysNet and 5e-5 for CVGAE,
and learning rate decay is 0.95. We train all the models for 100 epochs on the train set.
3.2	Result
The result on three datasets and two backbones is listed in Tab.1, 2 and 3. More tables are presented
in Appendix C.3.
As for efficiency, EDGE can optimize the molecular conformations as efficiently as Naive RMSD
and Conn-3, and it’s much faster than distance geometry methods considering distant atom-pairs
7
Under review as a conference paper at ICLR 2022
Table 1: Definite Conformation Prediction on QM9 with backbone PhysNet(RDKit initialized).
Time refers to the seconds used to process around 106k molecules in a training epoch. ↑ means
“higher is better”.
Baseline	Time	Global Geometry		Local Geometry		
		A-RMSD	lDDT-Score(%)↑	D RMSE	Φ RMSE	Ψ RMSE
RDKit	-	0.750	83.3	0.084	0.088	0.354
Random Guess	-	1.420	38.3	0.709	0.825	0.526
Naive RMSD	439	1.151	42.0	0.452	0.702	0.476
Kabsch RMSD	3208	0.747	75.5	0.142	0.141	0.345
Conn-3	478	0.736	85.4	0.038	0.093	0.326
Conn-∞	1248	0.730	85.3	0.057	0.096	0.324
lDDT-5	1105	0.733	85.4	0.043	0.096	0.325
EDGE-w/o f	554	0.742	79.7	0.288	0.187	0.325
EDGE-w/o σ	553	0.759	78.5	0.352	0.253	0.339
EDGE	554	0.710	85.4	0.069	0.097	0.318
Table 2: Multiple Conformation Generation on GEOM-Drugs with backbone PhysNet(RDKit ini-
tialized). Time refers to the seconds used to process 50k molecules in a training epoch. ↑ means
“higher is better”. An NaN result occurs in Naive RMSD.
Baseline	Time	MAT	COV-0.5(%)↑	COV-1.25(%)↑	Multi-lDDT-Score(%)↑
RDKit	-	1.105	11.4	65.8	86.1
Random Guess	-	3.350	1.0	1.0	33.5
Naive RMSD	488	-	-	-	-
Kabsch RMSD	2412	1.172	9.9	62.2	76.6
Conn-3	528	1.098	10.3	66.1	86.2
EDGE	579	1.076	11.9	68.6	86.3
(Conn-∞ and lDDT-5) and traditional RMSD with a time-consuming alignment algorithm (Kabsch
RMSD). This is proved empirically in all three groups of experiments in the tables.
For Definite Conformation Prediction on QM9 (Tab.1), EDGE has the best performance on A-
RMSD and lDDT-Score, two universal metrics to compare the conformations from a global view.
To further demonstrate that EDGE outperforms the baselines through equivalently optimizing the
bond lengths D, bond angles Φ and dihedral angles Ψ, we evaluate their RMSE on the three fac-
tors. Compared to traditional DG-based methods (Conn-k and lDDT-γ), EDGE better retains the
dihedral angles, which is significant in preserving complicated local structures like atom chains (see
Sec.3.3). Moreover, EDGE’s variants (w/o f and w/o σ) break the balance on degrees of freedom or
Table 3: Multiple Conformation Generation on GEOM-QM9 with backbone CVGAE. Time refers
to the seconds used to process 50k molecules in a training epoch. ↑ means “higher is better”.
Baseline	Time	MAT	COV-0.5(%)↑	COV-1.25(%)↑	Multi-lDDT-Score(%)↑
Random Guess		0.945	21.2	62.9	34.3
Naive RMSD		 115	0.716	27.8	88.7	68.9
Kabsch RMSD	1254	0.670	28.7	95.8	72.6
Conn-3	169	0.641	39.4	91.8	79.9
EDGE	180	0.582	41.0	99.7	81.6
8
Under review as a conference paper at ICLR 2022
real
Graph RDKit Kabsch
Figure 3: Results of visualization with PhysNet on QM9.
value distribution and lose the equivalence on D, Φ, Ψ, so they obtain much worse results. In sum-
mary, EDGE treats D, Φ, Ψ equivalently, so it can avoid contorted local geometries and optimize the
conformation more effectively.
The result of Multiple Conformation Generation shows that EDGE can also assist optimization
in the generative conformation task and still has better performance compared to traditional Kabsch
RMSD and DG-based Conn-3. Moreover, EDGE is adaptive to multiple types of backbones, no
matter it’s generative (CVGAE) or derivative (PhysNet).
In Tab.1,2 where the conformations are fine-tuned from RDKit-initialized ones, Kabsch RMSD and
traditional DG-based methods may end up with results worse than RDKit in optimization. The main
cause is that they can’t measure the accurate discrepancy among the conformations, and the back-
bone falls into a solution which is optimal for the given loss function but suboptimal for universal
metrics e.g. A-RMSD. Contrastively, EDGE finds out the essential factors in the conformation
geometry and treats them equivalently when calculating the discrepancy, achieving a better perfor-
mance.
3.3	Visualization
We visualize the conformations generated by PhysNet under multiple loss functions on dataset QM9
and compare them with RDKit-initialized conformations and reference ones, as it shows in Fig.3.
Kabsch RMSD and Conn-3 retain appropriate bond lengths and bond angles while the atom chains
inside are severely contorted because dihedral angles are significant in preserving local geometries,
especially the atom chains in molecules (Winter et al., 2021). Contrastively, EDGE equivalently
optimizes the essential factors in conformation geometry and focuses more on the angles. Therefore,
PhysNet leveraged by EDGE produces conformations with better-structured atom chains as well as
fine atom rings and achieves better performance.
4 Conclusion and Future Work
We analyze the shortcomings of existing methods on measuring conformation discrepancy e.g. com-
paring the atom positions or atom-pair distances. Then we propose EDGE, which can find the essen-
tial factors in conformation geometry (i.e. bond lengths, bond angles and dihedral angles) and treat
them equivalently by balancing the degrees of freedom as well as standard deviations. Theoretical
analysis and extensive experiments demonstrate EDGE’s efficiency and effectiveness when being
applied to diverse backbone models. For future work, with the assistance of EDGE, the end-to-end
conformation generation models are prevented from being misled by time-consuming or ineffec-
tive optimization strategies, and thus more well-designed models can be proposed and improved to
handle various tasks on molecular conformation.
9
Under review as a conference paper at ICLR 2022
References
Simon Axelrod and Rafael Gomez-Bombarelli. Geom: Energy-annotated molecular conformations
for property prediction and molecular generation. CoRR, abs/2006.05531, 2020.
Justin Gilmer, Samuel S. Schoenholz, Patrick F. Riley, Oriol Vinyals, and George E. Dahl. Neural
message passing for quantum chemistry. In Proceedings of the 34th International Conference on
Machine Learning (ICML2017), pp. 1263-1272, 2017.
Timothy F Havel. Distance geometry: Theory, algorithms, and chemical applications. Encyclopedia
of Computational Chemistry, 120:723-742, 1998.
Wolfgang Kabsch. A solution of the best rotation to relate two sets of vectors. Acta Crystallograph-
ica A, 32:922-923, 1976.
Ziyao Li, Shuwen Yang, Guojie Song, and Lingsheng Cai. Conformation-guided molecular repre-
sentation with hamiltonian neural networks. In International Conference on Learning Represen-
tations, 2021.
Elman Mansimov, Omar Mahmood, Seokho Kang, and Kyunghyun Cho. Molecular geometry pre-
diction using a deep generative graph neural network. Scientific reports, 9(1):1-13, 2019.
Valerio Mariani, Marco Biasini, Alessandro Barbato, and Torsten Schwede. lddt: a local
superposition-free score for comparing protein structures and models using distance difference
tests. Bioinformatics, 29(21):2722-2728, 2013.
Gregor Simm and Jose Miguel Hernandez-Lobato. A generative model for molecular distance ge-
ometry. In Proceedings of the 37th International Conference on Machine Learning, volume 119
of Proceedings of Machine Learning Research, pp. 8949-8958, 2020.
David Weininger. Smiles, a chemical language and information system. 1. introduction to method-
ology and encoding rules. Journal of chemical information and computer sciences, 28(1):31-36,
1988.
Robin Winter, Frank Noe, and Djork-Arne Clevert. Auto-encoding molecular conformations. In
Machine Learning for Molecules Workshop at NeurIPS, 2021.
Zhenqin Wu, Bharath Ramsundar, Evan N Feinberg, Joseph Gomes, Caleb Geniesse, Aneesh S
Pappu, Karl Leswing, and Vijay Pande. Moleculenet: a benchmark for molecular machine learn-
ing. Chemical science, 9(2):513-530, 2018.
Minkai Xu, Shitong Luo, Yoshua Bengio, Jian Peng, and Jian Tang. Learning neural generative
dynamics for molecular conformation generation. In International Conference on Learning Rep-
resentations, 2021.
Shuwen Yang, Ziyao Li, Guojie Song, and Lingsheng Cai. Deep molecular representation learning
via fusing physical and chemical information. 2021.
A Details of EDGE
A.1 THE FORMULA OF ψ
For a certain dihedral angle ψ determined by four sequentially-connected atoms in G which is shown
in Fig.2(b), we want to calculate the value of it using a, b, c, d, e, f, which are sides’ lengths of the
tetrahedron generated by the four atoms. Supposing that α is the angle between b and c, the volume
of the tetrahedron V can be calculated following V
V = 1 Sh = 1 ∙ 1bc Sin α ∙ a Sin ψ = abc Sin ° Sin ψ	(17)
3	3 2	"6	v 7
10
Under review as a conference paper at ICLR 2022
Using Euler’s formula in the tetrahedron, V can also be calculated following
1
b2	b2+e2-c2	a2 + b2-d2	2
1	b2+e2-c2	/2	a、-f2
6	2	e	2
6 a2+b2-d2	a2 + e2-f2	〃2
2	2	a
(18)
Note that
sin α
pl - cos2 α = \卜-(b~^；	e )2
2bc
(19)
Combining Eq.17,18 and 19, we can get the formula of ψ:
ψ
.I
arcsin
4a2 b2 e2
—b2t2 — a2r2 — e2t2 + r2t1t2
4a2b2c2 — a2r2
(20)
where
r1 = b2 + c2 — e2 r2 = b2 — c2 + e2
t1 = a2 + b2 — d2 t2 = a2 + e2 — f2
A.2 Partial Derivatives in Taylor Expansion
A.2.1 φ
For each φ in Φ(G), considering the bond lengths a, b,cin G which generate φ following 2(a), we
can compose the vectors u = (a, b, c)> with them. Note that φ can be taken as a function w.r.t u:
φ= φ(u)
a2 + b2 — c2
arccos------------
2ab
(22)
To implement Taylor Expansion, we need to calculate
∂φ
∂u
∂b,
(23)
Following Eq.22, we can get the elements in Eq.23, which are the partial derivatives w.r.t. each
variable:
6匕6冷6φ
a a a a a a
—a2 + b2 — c2
2a2b Sin φ
a2 — b2 — c2
2ab2 Sin φ
c
ab Sin φ
(24)
A.2.2 ψ
For each ψ in Ψ(G), considering the bond lengths a, b, c, d, e, f in G which generate φ following
2(b), we can compose the vectors v = (a, b, c, d, e, f)> with them. Note that ψ can be also taken as
a function ψ(v) following Eq.20. To implement Taylor Expansion, we need to calculate
∂ψ ∂ψ ∂ψ ∂ψ ∂ψ ∂ψ ∂ψ >
∂v = (∂α,羽,瓦,∂d,汨,f)
(25)
11
Under review as a conference paper at ICLR 2022
FolloWing ψ(v), We can get the elements in Eq.25, Which are the partial derivatives W.r.t. each variable:	
∂ψ	a((4b2c2 — r2) sin2 ψ — sιe2 — s?b — s3c2 + 2a2c2)
∂α =	M
∂ψ	b(2r3a2 sin2 ψ — s1f2 —s2a2 — s3e2 + 2b2f2 )
∂b =	M
∂ψ	c(2r2 a2 sin2 ψ — 2r2a2 + t1t2)
—= ∂c	M	∕CG
∂ψ	d(—2tιe2 + r2t2)	(26)
∂d =	M
∂ψ	e(2r1a2 sin2 ψ — s1a2 — s2d2 — s3b2 + 2d2e2)
—= ∂e	M
∂ψ	f(—2t2b2 + rtι)
∂f =	M
Where	r1 = b2 + c2 — e2
	r2 = b2 — c2 + e2
	r3=—b2+c2+e2
	s1 =c2+d2 —f2
	s2 = c2 — d2 +f2	(27)
	s3 = —c2+d2+f2
	t1 = a2 + b2 — d2
	t2 =a2+e2 —f2
	M = a2 (r12 — 4b2c2) sin ψ cos ψ
B Proves
B.1 PROVE OF INEQUITABLE GRADIENTS OVER D, Φ, Ψ IN DISTANCE GEOMETRY
We first analyze the gradients allocated on bond lengths D and bond angles Φ when optimizing 2-
hop atom-pair distances. Suppose two bonds a, b with a bond angle φ, note that the third side of the
triangle is c, a 2-hop distance (see Fig.2(a)). We have:
c2 = a2 + b2 - 2ab cos φ	(28)
The partial derivatives of c on variables a, b ∈ D and φ ∈ Φ are:
∂c a - b cos φ ∂c b - a cos φ ∂c ab sin φ
——=------------ --=----------------- --=-------------
∂a	c	∂b	c	∂φ c
(29)
To further quantify the derivatives in Eq.29, we sample the distributions of D, Φ from QM9 dataset
(See more details in Appendix C.2). We found that bond lengths has a mean value of μD ≈ 1.452
and standard deviation σ0 ≈ 0.103, and bond angles has μφ ≈ 108。and σφ ≈ 22。. As σD is
relatively small compared to μD, We suppose that a = b = μD. Then the values of the derivatives
are only variant to the temporary φ, and we get:
∂c ∂c π - φ ∂c	π - φ
法=∂b=Cosk	∂φ="D sin-
(30)
Eq.30 is visualized in Fig.4. When optimizing the 2-hop distances, a large portion of gradient is
allocated to fine-tuning the bond lengths D rather than the bond angles Φ, especially for bigger bond
angles. Therefore, traditional loss functions based on distance geometry, Where the bond angles are
expected to be optimized by preserving 2-hop distances, didn’t treat D, Φ equivalently and Would
cause contorted local geometries.
12
Under review as a conference paper at ICLR 2022
20 0
5 0 0
405
.. .
11 0
əAIlPALɪəp IPlEPd
60°	10 8°	180 °
φ
Figure 4: Visualization of partial derivatives in Eq.30. Ticks with μD = 1.452 and μφ = 108° are
highlighted.
When optimizing 3-hop atom-pair distances, the inequity of leveraging D, Φ, Ψ is proved empiri-
cally from the result in Tab.1, as the DG-based loss functions (Conn-k and lDDT-γ) focus more on
bond lengths and less on dihedral angles.
B.2 Prove of Limited Atom-pair Number
For an atom in a common molecule, the number of neighbors is at most 6 (e.g. sulfur atom). There-
fore, an atom has at most 30 2-hop neighbors and 150 3-hop neighbors, which means that at most
186 atoms are 3-hop connected to it. For a molecule with n atoms, the number of 3-hop connected
atom-pairs will not exceed 2 X 186n = 93n.
Note that the number of 3-hop connected atom-pairs is γ times of atom number n. For molecules
in train set of GEOM-Drugs where the average atom number is around 44.2 (Xu et al., 2021), the
estimated value of γ is 4.6. This empirical result shows that optimizing the 1/2/3-hop atom-pair
distances is constant times more expensive compared to directly optimizing atom positions, and it
can be n times faster than considering all atom-pairs, as the constant γ = 4.6 is much smaller than
atom number n = 44.2.
C Implementation Details
C.1 Calculation of Degree of Freedom
Consider a 3-D conformation geometry G and the corresponding molecular graph M (with n atoms),
the degrees of freedom is fG = 3n - 6 due to translation and rotation. We can figure out the exact
number of degrees on three types of factors by:
•	Generate a spanning tree T for the molecular graph M, and fD = n - 1 is the number of
edges in T.
•	For every atom v in T, if the number of its neighbors N (v) are more than 1,
it provides 2|N (v)| - 3 degrees of freedom for fΦ8.	In brief, we have fΦ =
Pv∈V(T)∧∣N(v)∣>1 2|N(V)I- 3
•	Obviously, fΨ = fG - fD - fΦ
8For an atom v whose distances to its neighbors N(v) are given, it needs 2|N (v)| - 3 exact values of bond
angles (v serves as the axis) to determine their relative position in 3-D space, if |N (v)| > 1 (Havel, 1998).
13
Under review as a conference paper at ICLR 2022
Because there might be more than one possible spanning trees in a molecular graph, the output
fD, fΦ, fΨ is diverse. However, no matter how fD, fΦ, fΨ compose the total degrees of freedom fG,
it always embodies a set of 3n - 6 factors (including bond lengths, bond angles and dihedral angles)
which can determine the conformation geometry G. Therefore, the correctness of output fD , fΦ , fΨ
is insensitive to process of generating T.
C.2 CALCULATION OF HYPER-PARAMETERS λ
To capture the complete local geometry, we consider all possible bond length, bond angles and dihe-
2	2	2	1 . 1
fD, fΦ, fΨ may exceed the
dral angles when sampling them from conformation G, and their numbers
actual degrees of freedom fD,fφ,fψ. So We balance them with weights fD, fφ, fψ. The weights
fD fΦ fΨ
are calculated through sampling from a certain dataset, whose exact values are listed in Tab.4.
Table 4: The proportion of degrees of freedom over number of sampled factors on D, Φ, Ψ. To save
time, we only sampled 1/10 molecules in datasets GEOM-QM9 and GEOM-Drugs.
	QM9	GEOM-QM9	GEOM-Drugs
	 # of molecules	133885	5000	5000
Sum. of fD	830932	38959	119701
Sum. of fΦ	1030264	48274	153801
Sum. of fΨ	311779	14644	70601
Sum. of fd	1002205	46946	133582
Sum. of fφ	1570148	75635	209399
Sum. of fψ	1927138	94642	271308
.	O fD fD	0.829	0.830	0.896
. o fΦfΦ	0.656	0.638	0.734
. r> fΨfΨ	0.162	0.155	0.260
We also sampled the standard deviation of D, Φ, Ψ for all three datasets, as it shows in Tab.5.
Table 5: The standard deviation of sampled D, Φ, Ψ in each dataset.
I QM9		GEOM-QM9	GEOM-Drugs
σD	0.103	0.101	0.109
σφ	0.387	0.380	0.122
σψ	0.433	0.437	0.394
Then we calculate the hyper-parameters via Eq.2, and the result is listed in Tab.6.
Table 6: The hyper-parameters weighting D, Φ, Ψ for each dataset.
I QM9		GEOM-QM9	GEOM-Drugs
λD	8.063	7.689	8.394
λΦ	1.692	1.676	6.257
λΨ	0.378	0.347	0.681
C.3 More Results on Multiple Conformation Generation
See tables 7 and 8.
14
Under review as a conference paper at ICLR 2022
Table 7: Multiple Conformation Generation on GEOM-QM9 with backbone PhysNet. Time refers
to the seconds used to process 50k molecules in a training epoch. ↑ means “higher is better”.
Loss	Time	MAT	COV-0.5(%)↑	COV-1.25(%)↑	Multi-lDDT-Score(%)↑
RDKit	-	0.399	77.2	93.3	64.5
Random Guess	-	0.945	21.2	62.9	34.3
Naive RMSD	203	0.993	28.7	45.8	47.1
Kabsch RMSD	1880	0.596	29.1	93.3	56.9
Conn-3	232	0.458	69.1	93.3	62.1
EDGE	260	0.394	81.6	93.3	64.8
Table 8: Multiple Conformation Generation on GEOM-Drugs with backbone CVGAE. Time refers
to the seconds used to process 50k molecules in a training epoch. ↑ means “higher is better”.
Loss	Time	MAT	COV-0.5(%)↑	COV-1.25(%)↑	Multi-lDDT-Score(%)↑
Random Guess		L_	3.350	1.0	1.0	33.5
Naive RMSD	440	2.565	24	8.7	61.4
Kabsch RMSD	2201	2.520	1.7	8.2	61.6
Conn-3	469	2.540	1.6	8.0	61.6
EDGE	498	2.492	1.7	8.8	62.0
15