Under review as a conference paper at ICLR 2022
Logarithmic landscape and power-law escape
rate of SGD
Anonymous authors
Paper under double-blind review
Ab stract
Stochastic gradient descent (SGD) undergoes complicated multiplicative noise for
the mean-square loss. We use this property of the SGD noise to derive a stochastic
differential equation (SDE) with simpler additive noise by performing a random
time change. In the SDE, the loss gradient is replaced by the logarithmized loss
gradient. By using this formalism, we obtain the escape rate formula from a local
minimum, which is determined not by the loss barrier height ∆L = L(θs) -
L(θ*) between a minimum θ* and a saddle θs but by the Iogarithmized loss barrier
height ∆log L = log[L(θs)∕L(θ*)]. Our escape-rate formula strongly depends
on the typical magnitude h and the number n of the outlier eigenvalues of the
Hessian. This result explains an empirical fact that SGD prefers flat minima with
low effective dimensions, which gives an insight into implicit biases of SGD.
1	Introduction
Deep learning has achieved breakthroughs in various applications in artificial intelligence such as
image classification (Krizhevsky et al., 2012; LeCun et al., 2015), speech recognition (Hinton et al.,
2012), natural language processing (Collobert & Weston, 2008), and natural sciences (Iten et al.,
2020; Bapst et al., 2020; Seif et al., 2021). Such unparalleled success of deep learning hinges
crucially on stochastic gradient descent (SGD) or its variants as an efficient training algorithm.
Although the loss landscape is highly nonconvex, the SGD often succeeds in finding a global
minimum. It has been argued that the SGD noise plays a key role in escaping from local min-
ima (JaStrzebSki et al., 2017; WU et al., 2018; 2020; Zhu et al., 2019; Meng et al., 2020; Xie et al.,
2021; Liu et al., 2021). It has also been suggested that SGD has an implicit bias that is beneficial
for generalization. That is, SGD may help the network to find flat minima, which are considered to
imply good generalization (Keskar et al., 2017; Hoffer et al., 2017; Wu et al., 2018). How and why
does SGD help the network escape from bad local minima and find flat minima? These questions
have been addressed in several works, and it is now recognized that the SGD noise strength and
structure importantly affect the efficiency of escape from local minima. Our work follows this line
of research, and add new theoretical perspectives.
In physics and chemistry, escape from a local minimum of the (free) energy landscape due to thermal
noise at temperature T has been thoroughly discussed (Kramers, 1940; Langer, 1969). When the
(free) energy barrier is given by ∆E, the escape rate is proportional to c-δWT, which is known
as the Arrhenius law. By analogy, in machine learning, escape from a local minimum of the loss
function is considered to be determined by the loss barrier height ∆L = L(θs) - L(θ*), where L(θ)
denotes the loss function at the network parameters θ, θ* stands for a local minimum of L(θ), and
θs denotes a saddle point that separates θ* from other minima. If We assume that the SGD noise
is uniform and isotropic, which is often assumed in machine-learning literature (JaStrzebSki et al.,
2017), the escape rate is proportional to c-δDD, where D denotes the SGD noise strength.
In this paper, we show that inhomogeneity of the SGD noise strength brings about drastic modifi-
cation for the mean-square loss. It turns out that the escape rate is determined by the logarithmized
lossbarrierheight ∆log L = log L(θs)-log L(θ*) = log[L(θs)∕L(θ*)]. In other words, the escape
rate is determined by not the difference but the ratio of L(θs) and L(θ*). This result means that even
if the loss barrier height ∆L is the same, minima with smaller values of L(θ*) are more stable.
1
Under review as a conference paper at ICLR 2022
Moreover, given the fact that the eigenvalue spectrum of the Hessian at a minimum consists of a bulk
of almost zero eigenvalues and outliers (Sagun et al., 2017; Papyan, 2019), our escape-rate formula
implies that SGD prefers flat minima with a low effective dimension, where the effective dimension
is defined as the number of outliers (MacKay, 1992) and flatness is measured by a typical magnitude
of outlier eigenvalues (Keskar et al., 2017). The previous theories (Jastrzebski et al., 2017; WU et al.,
2018; Zhu et al., 2019; Meng et al., 2020; Xie et al., 2021; Liu et al., 2021) have also successfully
explained that SGD prefers flat minima, but not shown the preference of small effective dimensions.
The logarithmized loss naturally explains the latter, and sheds light on implicit biases of SGD.
Main contributions: We obtain the following main results:
•	We derive an equation for approximating the SGD noise in Eq. (6). Remarkably, the SGD
noise strength in the mean-square loss is shown to be proportional to the loss function,
which is experimentally verified in Sec. 5.2. A key ingredient in deriving Eq. (6) is the
decoupling approximation given in Eq. (7). This is a novel approximate method introduced
in our analysis, and hence we experimentally verify it in Sec. 5.1.
•	We derive a novel stochastic differential equation (SDE) in Eq. (14) via a random time
change introduced in Eq. (13). Although the original SDE (4) has a multiplicative noise,
the transformed SDE (14) has a simple additive noise with the gradient of the logarithmic
loss. This shows the convenience of the logarithmic loss landscape for understanding SGD.
•	We derive a novel form of SGD escape rate from a local minimum in Eq. (16). Remarkably,
the escape rate depends on the ratio between L(θ*) and L(θs). In Sec. 5.3, We experimen-
tally test the validity of this result for linear regressions.
•	Our escape rate crucially depends on the flatness and the effective dimension, which shows
that SGD has implicit biases towards flat minima with low effective dimension. We also
show in Eq. (18) that a local minimum with an effective dimension n greater than a certain
critical value nc becomes unstable.
Related works: The role of the SGD noise structure has been discussed in some previous
works (Zhu et al., 2019; Xie et al., 2021; Liu et al., 2021; Meng et al., 2020; Wojtowytsch, 2021). It
was pointed out that the anisotropic nature of the SGD noise is important: the SGD noise covariance
matrix is aligned with the Hessian of the loss function, which is beneficial for escape from sharp
minima (Zhu et al., 2019; Xie et al., 2021; Liu et al., 2021). These previous works, however, do
not take the inhomogeneity of the SGD noise strength into account, and consequently, escape rates
derived there depend exponentially on the loss barrier height, which differs from our formula.
Compared with the anisotropy of the SGD noise, the inhomogeneity of the SGD noise strength has
been less explored. In (Meng et al., 2020; Wojtowytsch, 2021), the SGD dynamics under a state-
dependent noise is discussed. However, in these previous works, the connection between the noise
strength and the loss function was not theoretically established, and the logarithmized loss landscape
was not discussed. The instability due to large effective dimensions was also not shown. Another
recent work (Pesme et al., 2021) observed that the noise is proportional to the loss for specific simple
models. In our paper, such a result is derived for more generic models. GUrbUzbalaban et al. (2θ2l)
showed that SGD will converge to a heavy-tailed stationary distribution due to a multiplicative nature
of the SGD noise in a simple linear regression problem. Our paper strengthens this result: we argue
that such a heavy-tailed distribution generically appears for the mean-square loss.
2	Background
2.1	Setup
We consider supervised learning. Let D = {(χ(μ),y(μ>) : μ = 1, 2,..., N} be the training dataset,
where χ(μ) ∈ Rd denotes a data vector and y(μ) ∈ R be its label. The network output for a given
input x is denoted by f(θ, x) ∈ R, where θ ∈ RP stands for a set of trainable parameters with P
being the number of trainable parameters (Extension to the multi-dimensional label and output is
straightforward). In this work, we focus on the mean-square loss
1N	2	1N
L(θ) = 2N X f (θ,χ5) - y叫=:N X'"(θ).	(1)
2
Under review as a conference paper at ICLR 2022
The training proceeds through optimization of L(θ). In most machine-learning applications, the
optimization is done via SGD or its variants. In SGD, the parameter θk+1 at the time step k + 1 is
determined by
θk+ι = θk - NLBk(θk), LBk(θ) = 2B X '"(θ),	⑵
μ∈Bk
where η > 0 is the learning rate, Bk ⊂ {1, 2, . . . , N} with |Bk| =B is a mini-batch used at the kth
time step, and LBk denotes the mini-batch loss. Since the training dataset D is randomly divided
into mini-batches, the dynamics defined by Eq. (2) is stochastic. When B = N , the full training
data samples are used for every iteration. In this case, the dynamics is deterministic and called
gradient descent (GD). SGD is interpreted as GD with stochastic noise. By introducing the SGD
noise ξk = -[VLBk (θk) - VL(θk)], Eq. (2) is rewritten as
θk+ι = θk - ηVL(θk) + ηξk.	(3)
Obviously, hξki = 0, where the brackets denote the average over possible choices of mini-batches.
The noise covariance matrix is defined as Σ(θk) := hξkξkTi. The covariance structure of the SGD
noise is important in analyzing the SGD dynamics, which will be discussed in Sec. 3.1.
2.2	Stochastic differential equation for SGD
When the parameter update for each iteration is small, which is typically the case when the learning
rate η is small enough, we can consider the continuous-time approximation (Li et al., 2017; Smith
& Le, 2018). By introducing a continuous time variable t ∈ R and regarding η as an infinitesimal
time step dt, we have a SDE
dθt = -VL(θt)dt + PηXθ∕ ∙ dWt,	(4)
where dWt 〜N(0, IPdt) with In being the n-by-n identity matrix, and the multiplicative noise
y∕η∑(θt) ∙ dWt is interpreted as Ito since the noise ξk in Eq. (3) depends on θk but not on θk+ι.
Throughout this work, we consider the continuous-time approximation (4) with Gaussian noise.
In machine learning, the gradient Langevin dynamics (GLD) is also considered, in which the
isotropic and uniform Gaussian noise is injected into the GD as
dθt = -VL(θt )dt + √2DdWt,	(5)
where D > 0 corresponds to the noise strength (it is also called the diffusion coefficient) (Sato
& Nakagawa, 2014; Zhang et al., 2017b; Zhu et al., 2019). The stationary probability distribution
Pgld(Θ) of θ for GLD is given by the Gibbs distribution Pgld(Θ) 8 e-L(")/D. We will see in
Sec. 4 that the SGD noise structure, which is characterized by Σ(θ), drastically alters the stationary
distribution and the escape rate from a local minimum.
3	Theoretical formulation
3.1	Structure of the SGD noise covariance
The SGD noise covariance matrix Σ(θ) significantly affects the dynamics (JaStrzebSki et al., 2017;
Smith & Le, 2018; Zhu et al., 2019; Ziyin et al., 2021). In this section, under some approxima-
tions, we derive the following expression of Σ(θ) for the mean-square loss within the the basin of
attractions (or the “valley”) of a local minimum θ*:
Σ(θ) ≈ 2L≡H(θ*),	(6)
NB
where H(θ) = V2L(θ) is the Hessian. It should be noted that VL(θ*) = 0 and H(θ*) is
positive semidefinite at any local minima θ*. We give a derivation below and the list of the
approximations and their justifications in Appendix A. In particular, the decoupling approxima-
tion is a new tool and plays a key role in the derivation. It states that the quantities 'μ and
cf")(θ) := Vf (θ, Xw))Vf (θ, Xw))T are uncorrelated, which implies
N	NN	N
、, 0 Zμ> (A∖	〜I X λ β	I I X λ f^∕M 1 —	T( a、	∖、「3(4	(r7∖
NZ^μCf ⑼	≈ NZ^'μ ∙ ∖^lCcf =L(H)NrCf 叫.	⑺
μ=1	∖	μ=1 )	∖ μ=1	)	μ=1
3
Under review as a conference paper at ICLR 2022
This approximation is promising for large networks in which Vf looks a random vector. In Sec. 5.1,
we experimentally verify the decoupling approximation for the entire training dynamics.
Our formula (6) possesses two important properties. First, the noise is aligned with the Hessian,
which has been well known and pointed out in the literature (JaStrzebSki et al., 2017; ZhU et al.,
2019; Xie et al., 2021; Liu et al., 2021). If the loss landscape has flat directions, which correspond
to the directions of the Hessian eigenvectors belonging to vanishingly small eigenvalues, the SGD
noise does not work along those directions. Consequently, SGD dynamics is frozen along those
flat directions, which effectively reduces the dimension of the parameter space explored by SGD
dynamics. This plays an important role in the escape efficiency. Indeed, we will see that the escape
rate crucially depends on the effective dimension of a given local minimum.
Second, the noise is proportional to the loss function, which is indeed experimentally confirmed
in Sec. 5.2. This property has not been pointed out and not been taken into account in previous
studies (Jastrzebski et al., 2017; Zhu et al., 2019; Xie et al., 2021; Liu et al., 2021) and therefore
gives new insights into the SGD dynamics. Indeed, this property allows us to formulate the Langevin
equation on the logarithmized loss landscape with simple additive noise as discussed in Sec. 3.2.
This new formalism yields the power-law escape rate, i.e. Eqs. (15) and (16), and the importance of
the effective dimension of local minima for their stability.
Derivation of Eq. (6): We start from an analytic expression of Σ(θ), which reads
w=B N-B G X v'μv'T -VLVLT) ` B G X v'μv'τ -VLVLT),(8)
where B《N is assumed in the second equality. The derivation of Eq. (8) is found in JaStrzebSki
et al. (2017); Smith & Le (2018). Usually, the gradient noise variance dominates the square of the
gradient noise mean, and hence the term VLVLT in Eq. (8) is negligible.
For the mean-square loss, we have V'μ = [f (θ, χ(μ)) 一 y(μ)]Vf (θ, χ(μ)), and hence
2 N	2 N	2L(θ) N
Σ(θ) ≈ 酢 ∑'μVf (θ,x(μ))Vf (θ,x(μ))τ = — X'μCfμ)(θ) ≈ -Lθ) X Cf")(θ), (9)
BN	BN	NB
μ=1	μ=1	μ=1
where the decoupling approximation (7) is used in the last equality. Equation (9) is directly related
to the Hessian of the loss function near a (local or global) minimum. The Hessian is written as
1N	1N
H(θ) = V2L(θ) = N X Cfμ)(θ) + N X f(θ,χ⑷)-y叫 V1 2f (θ,x(μ)).	(10)
It is shown by Papyan (2018) that the last term of Eq. (10) does not contribute to outliers (i.e. large
eigenvalues) of the Hessian. Dynamics near a local minimum is governed by outliers, and hence we
can ignore this term. At θ = θ*,we therefore obtain
1N
H(θ*) ≈ nn ECf")(θ*).	(11)
μ=1
Let us assume cf*)(θ) ≈ cfμ)(θ*) for θ within the valley of a local minimum θ*. We then obtain
the desired expression (6) by substituting it into Eq. (9).
3.2 Logarithmized loss landscape
Let us consider the Ito SDE (4) with the SGD noise covariance (6) near a local minimum θ*, which
is written as
dθt
-VL(θt)dt + J2η臀H(θ*) ∙ dWt.
Let us consider a stochastic time t(τ) for τ ≥ 0 as
τ
Z t(τ) dt0 L(θt0),
0
(12)
(13)
4
Under review as a conference paper at ICLR 2022
and perform a random time change from t to T (0ksendal, 1998). Correspondingly, We introduce
.i -I-V τ∙	ττ τ 7-	* Γ / zʌ τ i ∖ j-ι ∙	τ	r∕zi∖τ,	ι	ιττ r	/ r / 八~∖^ ιττ r T
the Wiener process dWτ 〜N(0, Ipdτ). Since dτ = L(θt)dt, we have dWτ = √L(θt) ∙ dWt. In
.	Γ∙ .t	.	P⅛	Zi 1 ■	∕<C∖*	1
terms of the notation θτ = θt, Eq. (12) is expressed as
dθτ = --Λ- VL(θτ)dτ + {21Hθ*) dWT = - [vlog L(θτ)i dτ + {21Hθ*) dWT. (14)
We should note that at a global minimum with L(θ) = 0, which is realized in an overparameterized
regime (Zhang et al., 2017a), the random time change through Eq. (13) is ill-defined since τ is
frozen at a finite value once the model reaches a global minimum. We can overcome this difficulty
by adding an infinitesimal constant > 0 to the loss, which makes the loss function positive without
changing the finite-time dynamics like the escape from a local minimum θ* with L(θ*) > 0.
In this way, the Langevin equation on the loss landscape L(θ) with multiplicative noise is trans-
formed to that on the logarithmic loss landscape U(θ) = log L(θ) with simpler additive noise.
This formulation indicates the importance of considering the logarithmized loss landscape U(θ) =
log L(θ). In the following, we use Eq. (14) to discuss the escape efficiency from local minima.
4 Escape rate from local minima
Let us consider a local minimum θ* and its basin of attraction Aθ* , which is the set of all the
starting points θo such that θt tends to θ* as t → ∞ if there is no noise. In order to escape from
the basin of θ*, θt must go through a saddle θs with the help of noise. The escape time is defined
as τ = inf{t > 0 : θt ∈ Aθ* , θo = θ*}. The escape rate K is then defined as the inverse of the
mean escape time: κ = hτi-1. Our idea for evaluating the escape rate is applying the Kramers
formula (Kramers, 1940) or its high-dimensional generalization (Langer, 1969; Bovier et al., 2004;
Berglund, 2013) to Eq. (14). It should be noted that the Kramers formula is applicable only for
additive noise, and hence it cannot be used for the original SDE (4) with multiplicative noise.
First, we present main results [Eqs. (15), (16), and (17)], and give their derivations later. For P = 1
(i.e. the single-variable case θ ∈ R), the escape rate through a saddle θs is given by
2+舟
κ = ɪ ph*∣hs∣
2π
^L(θs)^
/(θ)
(15)
where h = H(θ*). This is a variant of the Kramers formula (Kramers, 1940), which is accurate
when κ is small. We can derive Eq. (15) from Eq. (14) without any further approximations.
For θ ∈ RP with P > 1, the analysis is more involved and needs some assumptions and approx-
imations, which are listed in Appendix A. We assume that the eigenvalue spectrum of the Hessian
H(θ*) at the local minimum θ* consists of bulk of almost zero eigenvalues and outliers, which is
indeed empirically correct (Sagun et al., 2017; Papyan, 2019). We denote by h and n a typical
magnitude of outlier eigenvalues (i.e. the flatness) and the number of outlier eigenvalues (i.e. the ef-
fective dimension), respectively. As we discussed in Sec. 3.1, the SGD dynamics is frozen along flat
directions. Therefore SGD dynamics around the local minimum θ* is restricted to the n-dimensional
manifold spanned by the outlier eigenvectors v1,v2,... ,vn ∈ RP of H (θ*). Now we parameterize
θ by using n parameters zι, z2,..., Zn ∈ R as θ = θ* + PZι z%vi∙ The Hessian restricted to this
outlier subspace is then written as H(θ) := V∣L(θ) ∈ Rn×n.
We then obtain the following escape rate formula for P > 1:
∣he∣ / det H(θ*) [L(θsf∣ Y舟+1-2)
K = In y | det H(θs)∣ [l(θ*)]	,
where hes is the negative eigenvalue of H(θs) corresponding to the escape direction.1 Again, Eq. (16)
is valid when K is small enough. It should be noted that Eq. (16) is reduced to Eq. (15) when n = 1.
ʌ
ʌ
1
rτ^∕∕l*∖	s rτ^∕∕ιs∖
If eigenvalues of H(θ ) and those of H(θs) coincide with each other except for the es-
ʌ
ʌ
cape direction e, det H(θ ) / det H (θ )
(1∕2π)pPhΞi≡[L(θs)∕L(θ*)]-( ηBB*+1-n
h*/h holds, and Eq. (16) is simplified as K
5
Under review as a conference paper at ICLR 2022
For any P, the quasi-stationary distribution PSs(θ) within the valley of a local minimum θ*, which
can be identified as the stationary distribution restricted to the valley (Bianchi & Gaudilliere, 2016),
is written as
Pss(θ) Y L(θ)-φ,	Φ =1 + ~B.	(17)
ηh
Remarkably, it depends on L(θ) polynomially rather than exponentially as in the standard
GLD (JaStrzebSki et al., 2017; Sato & Nakagawa, 2014; Zhang et al., 20l7b). This polynomial
dependence on L(θ) is a key feature leading to the escape rate formula.
From Eq. (16) We can obtain some implications. The factor [L(θs * *)∕L(θ*)]-(得+1-n2) increases
with h and n, which indicates that sharp minima (i.e. minima with large h*) or minima with large
n are unstable. This fact explains why SGD finds flat minima with a low effective dimension n.
Equation (16) also implies that the effective dimension of any stable minima must satisfy
n<nc :=2 (ηBT+1).	(18)
The instability due to a large effective dimension is a new insight naturally explained by the picture
of the logarithmized loss landscape. It arises from the ratio of the determinants of the logarithmized-
loss Hessian: det NyU(θ*)∕∣ det V2U(θs)∣ = [det HH(θ*)∕∣ det HH(θs)∣] ∙ [L(θs)∕L(θ*)]n/2.
Derivation of Eq. (16) and Eq. (17): Now we give a derivation of Eqs. (16) and (17). Equation (15)
is straightforwardly obtained by putting P = 1 in the derivation below (some approximations are
introduced below, but all of them are not necessary for P = 1).
As we already noted, SGD dynamics is restricted to the n-dimensional outlier subspace. First, we
assume that the anisotropy of the SGD noise within this n-dimensional space is not relevant, and
approximate the SGD noise in Eq. (14) as an isotropic one:，2nH(θτ)∕BdW ≈ ∖∕2ηh*/BdWT,
where hT ∈ R+ characterizes the magnitude of the Hessian outliers. This assumption is justified
when the loss landscape is isotropic within the n-dimensional subspace near the minimum. Even
if the Hessian at the minimum is not isotropic, this approximation is justified when the directions
of the Hessian eigenvectors do not change within the valley. In the latter case, the escape path is a
straight line along the direction of a Hessian eigenvector ve, where e ∈ {1, 2, . . . , n} identifies the
escape direction, and hT corresponds to the Hessian eigenvalue at the minimum along the escape
direction, i.e. hT = heT. See Appendix C for the details.
Under this approximation, Eq. (14) becomes dzτ = -VzUdτ + √2Td1Wτ, where T = ηhτ/B. Its
quasi-stationary distribution Pss(θ) within the valley including the local minimum θ = θT (i.e. z =
0) is then given by a Gibbs distribution with respect to U(θ): Pss(θ) y e-U(θ"T y L(θ)-B∕(ηh*).
This is the distribution function of θτ for a fixed τ . However, what we want is the quasi-stationary
distribution of θt for a fixed t. In Appendix B, by using Eq. (13), we show that the two distributions
are related with each other as PSs(θ) y L(θ)-1PSs(θ). We thus obtain Eq. (17).
The escape rate under the Langevin equation with isotropic additive noise is evaluated by using
celebrated Kramers formula (Kramers, 1940) or its high-dimensional generalization (Langer, 1969;
Bovier et al., 2004; Berglund, 2013). According to it, the escape rate κτ per unit τ is given by
K =蚓S detv2U(θ*) e-∆u∕τ	(19)
L 2π V |detV2U(θs)∣e ,	(19)
where use is the negative eigenvalue of Vz2 U(θs) corresponding to the escape direction, ∆U =
U (θs) - U(θT) is called the potential barrier, and ∆U∕T is assumed to be large enough. What we
really want is the escape rate per unit time t. It is a reasonable assumption that θt stays close to
θT for most times before escape, and hence τ is approximately given by τ ' L(θT)t. The escape
rate κ per unit t is then given by κ = L(θT)κτ. By combining it with Eq. (19), and substituting
U(θ) = log L(θ), we finally obtain Eq. (16).
5	Experiments
Our key theoretical observation is that the SGD noise strength is proportional to the loss function,
which is obtained as a result of the decoupling approximation. This property leads us to the Langevin
6
Under review as a conference paper at ICLR 2022
Figure 1: Comparison of the eigenvalue distributions of the left-hand side (exact expression) and the right-
hand side (decoupled one) of Eq. (12) in the main text. They agree with each other except for very small
eigenvalues during the entire training dynamics.
Figure 2: Training dynamics of the loss and the SGD noise strength N . In the figure, we multiplied N by a
numerical factor to emphasize that N is actually proportional to the loss in a later stage of the training. (Left)
Fully-connected network trained by the Fashion-MNIST dataset. (Middle) Convolutional network trained by
the CIFAR-10 dataset. (Right) the loss vs N in the training of the convolutional network. The dashed line is a
straight line of slope 1, which implies N(X L(θ).
equation (14) with the logarithmized loss gradient and an additive noise through a random time
change (13). Equation (14) implies the stationary distribution (17) and the escape rate (16).
In Sec. 5.1, we show that the decoupling approximation is valid during entire training dynamics.
In Sec. 5.2, we measure the SGD noise strength and confirm that it is indeed proportional to the
loss function near a minimum. In Sec. 5.3, we experimentally test the validity of Eq. (17) for the
stationary distribution and Eq. (16) for the escape rate. We will see that numerical results for a linear
regression and for a non-linear neural network agree with our theoretical results.
5.1	Experimental verification of the decoupling approximation
Let Us compare the eigenvalue distribution of the exact matrix (1/N) P「i '(μ)cfμ) with that of
the decoupled one L(θ) ∙ (1/N) PN=I Cfμ with Cf) = Vf (θ, χ(μ))Vf (θ, χ(μ) )T. We consider a
binary classification problem using the first 104 samples of the MNIST dataset such that we classify
each image into even (its label is y = +1) or odd number (its label is y = -1). The network has two
hidden layers, each of which has 100 units and the ReLU activation, followed by the output layer of
a single unit with no activation. Starting from the Glorot initialization, the training is performed via
SGD with the mean-square loss, where we fix η = 0.01 and B = 100.
Figure 1 shows histograms of their eigenvalues at different stages of the training: (a) at initialization,
(b) after 50 epochs, and (c) after 500 epochs. We see that the exact matrix and the approximate
one have statistically similar eigenvalue distributions except for very small eigenvalues during the
training dynamics. This means that the decoupling approximation always holds during training.
5.2	Measurements of the SGD noise strength
As a measure of the SGD noise strength, let us consider the norm of the noise vector ξ given by
hξTξi = TrΣ ≈ N/B, where N := (1/N) PN=I V'TV'μ — VLTVL. Here We present experi-
mental results for two architectures and datasets. First, we consider training of the Fashion-MNIST
dataset by using a fully connected neural network with three hidden layers, each of which has 2 × 103
units and the ReLU activation, followed by the output layer of 10 units with no activation (classifica-
7
Under review as a conference paper at ICLR 2022
(a) Exponent φ in Pss (θ)
100000
10000
00011
100 10 1 0.
euəuodXə
(b) tp for the linear regression
1000
100 10
əluɪəaessedJCraUE
(c) tp for the neural network
100
10 1
əluɪəaessedJCraUE
Figure 3: (a) Exponent φ for the stationary distribution PSs(θ) (X L(θ)-φ for d = 1 in the linear regression.
Dashed lines show the theoretical prediction φ = 1 + B∕(ηh*). (b) Log-log plot of the mean first-passage
time tp VS C = L(θs)∕L(θ*) for B = 1 and η = 0.1 in the linear regression. Dashed lines show the theoretical
prediction, tp X KT X cφ-d/2. (c) Log-log plot of tp VS C for B = 10 and various η in the neural network.
Dashed lines show the theoretical prediction, tp X κ-1 X CB/(nh*)+1-n/2 with h = 95.6 and n = 9.
tion labels are giVen in the one-hot representation). Second, we consider training of the CIFAR-10
dataset by using a conVolutional neural network. Following Keskar et al. (2017), let us denote a
stack of n conVolutional layers of a filters and a kernel size of b × c with the stride length of d by
n × [a, b, c, d]. We use the configuration: 3 × [64, 3, 3, 1], 3 × [128, 3, 3, 1], 3 × [256, 3, 3, 1], where
a MaxPool(2) is applied after each stack. To all layers, the ReLU actiVation is applied. Finally, an
output layer consists of 10 units with no actiVation.
Starting from the Glorot initialization, the network is trained by SGD of the mini-batch size B = 100
and η = 0.1 for the mean-square loss. During the training, we measure the training loss and the noise
strength N for every epoch. Numerical results are given in Fig. 2. We see that roughly Nb L at a
later stage of the training, which agrees with our theoretical prediction.
Although N is not proportional to L at an early stage of training, it does not mean that Eq. (9) is
invalid there. Since the decoupling approximation is valid for the entire training dynamics, Eq. (9)
always holds. The reason why the SGD noise strength does not decrease with the loss function in the
early-stage dynamics is thatN ≈ 2L(θ) X (1/N) P>ι Vf (θ, χ(μ))τVf (θ,χ(μ)),butthe quantity
(1/N) PN=I Vf(θ, X(N))TVf(θ, χ(μ)) also changes during training.
Although Eq. (9) is derived for the mean-square loss, the relation N b L(θ) holds in more general
loss functions; see Appendix D for general argument and experiments on the cross entropy loss.
5.3	Experimental test of stationary distribution and escape rate formula
We experimentally verify our theoretical predictions. Below, we first present numerical results for a
simple linear regression problem, and then for a nonlinear model, i.e., a neural network.
Let us start from the following linear regression problem: each entry of χ(μ) ∈ Rd and its la-
bel y(μ) ∈ R are i.i.d. Gaussian random variables of zero mean and unit variance. We fo-
cus on the case of d	N. The output for an input x is given by f(θ, x) = θTx, where
θ ∈ Rd is the trainable network parameter. We optimize θ via SGD. The mean-square loss
L(θ) = (1/2N) pμN=ι (θχ(μ) - y(μ)) is quadratic and has a unique minimum at θ ≈ 0.
First, we test Eq. (17), i.e. the stationary distribution, for d = 1 and N = 105. We sampled the
value of θk at every 100 iterations (k = j × 100, j = 1, 2, . . . , 104) and made a histogram. We then
fit the histogram to the form Pss(θ) b L(θ)-φ and determine the exponent φ. Our theory predicts
φ = 1 + B∕(nh*). Numerical results for the exponent φ are presented in Fig. 3 (a) against B for
three fixed learning rates η. In the same figure, theoretical values of φ are plotted in dashed lines.
The agreement between theory and experiment is fairly well. For a large learning rate η = 1, the
exponent slightly deviates from its theoretical value. This is due to the effect ofa finite learning rate
(recall that η is assumed to be small in deriving the continuous-time stochastic differential equation).
Next, we test our formula on the escape rate, Eq. (16). Although the mean-square loss is quadratic
and no barrier crossing occurs, we can measure the first passage time, which imitates the escape
time for a non-convex loss landscape. Let us fix a threshold value of the loss function. The first
8
Under review as a conference paper at ICLR 2022
passage time tp is defined as the shortest time at which the loss exceeds the threshold value. Here,
time t is identified as ηk, where k denotes the number of iterations in discrete SGD (2). We identify
the threshold value as L(θs), i.e., the loss at the saddle in the escape problem. It is expected that tp
is similar to the escape time and proportional to κ-1.
The Hessian H = (1/N) PjN=ι χ(μ)χ(μ)τ has d nonzero eigenvalues, all of which are close to unity.
We can therefore identify h = 1 and n = d. The mean first passage time over 100 independent runs
is measured for varying threshold values which are specified by C = L(θs)∕L(θ*) > 1. Experimen-
tal results for N = 104 are presented in Fig. 3 (b). Dashed straight lines have slope B/(ηh*) + 1 -
n∕2. Experiments show that the first passage time behaves as tp b [L(θs)∕L(θ^)^∖B/(ηhf')+1-n/2,
which agrees with our theoretical evaluation of κ-1 [see Eq. (16)]. We conclude that the escape rate
crucially depends on the effective dimension n, which is not explained by the previous results (Zhu
et al., 2019; Xie et al., 2021; Liu et al., 2021; Meng et al., 2020).
Our escape-rate formula (16) is also verified in a non-linear model. As in Sec. 5.1, we consider the
binary classification problem using the first 104 samples of MNINST dataset such that we classify
each image into even or odd. The network has one hidden layer with 10 units activated by ReLU,
followed by the output layer of a single unit with no activation. We always use the mean-square
loss. Starting from thee Glorot initialization, the network is pre-trained via SGD with η = 0.01
and B = 100 for 105 iterations. We find that after pre-training, the loss becomes almost stationary
around at L(θ) ≈ 0.035. We regard that the pre-trained network is near a local minimum. We then
further train the pre-trained network via SGD with a new choice of η and B (here we fix B = 10),
and measure the first passage time tp . The mean first-passage time over 100 independent runs is
measured for varying threshold values which are specified by C = L(θs)∕L(θ*) > 1. Experimental
results are presented in Fig. 3 (c). We see the power-law behavior, which is consistent with our
theory.
To further verify our theoretical formula (16), we also compare the power-law exponent for the mean
first-passage time with our theoretical prediction B∕(ηh*) + 1 - n∕2. Here, h and n are estimated
by the Hessian eigenvalues. In Appendix E, we present a numerical result for eigenvalues of the
approximate Hessian given by the right-hand side of Eq. (11). By identifying the largest eigenvalue
of the Hessian as h*, We have h ≈ 95.6. On the other hand, it is difficult to precisely determine
the effective dimension n, but it seems reasonable to estimate n 〜10. It turns out that theory and
experiment agree with each other by choosing n = 9. Dashed lines in Fig. 3 (c) correspond to our
theoretical prediction κ-1 H CB/(nh )+1-n/2 With h = 95.6 and n = 9. This excellent agreement
shows that our theoretical formula (16) is also valid in non-linear models.
6 Conclusion
In this work, we have investigated SGD dynamics via a Langevin approach. With several approx-
imations listed in Appendix A, we have derived Eq. (6), which shows that the SGD noise strength
is proportional to the loss function. This SGD noise covariance structure yields the stochastic dif-
ferential equation (14) with additive noise near a minimum via a random time change (13). The
original multiplicative noise is reduced to simpler additive noise, but instead the gradient of the loss
function is replaced by that of the logarithmized loss function U(θ) = log L(θ). This stochastic
differential equation has a quasi-stationary distribution that decays polynomially with L(θ) near a
minimum (17), not exponentially as in the usual Gibbs distribution. This new formalism yields the
power-law escape rate formula (16) whose exponent depends on η, B, h*, and n.
Our escape-rate formula explains an empirical fact that SGD favors flat minima with low effective
dimensions. The effective dimension ofa minimum must satisfy Eq. (18) for its stability. This result
as well as the formulation of SGD dynamics using the logarithmized loss landscape should help
understand more deeply the SGD dynamics and its implicit biases in machine learning problems.
Although the present work focuses on the Gaussian noise, the non-Gaussianity can also play an
important role. For example, SimSekIi et al. (2019) approximated SGD as a Levy-driven SDE,
which explains why SGD finds wide minima. It would be an interesting future problem to take the
non-Gaussian effect into account.
9
Under review as a conference paper at ICLR 2022
References
Victor Bapst, Thomas Keck, A Grabska-Barwinska, Craig Donner, Ekin Dogus Cubuk, Samuel S
Schoenholz, Annette Obika, Alexander WR Nelson, Trevor Back, Demis Hassabis, and Pushmeet
Kohli. Unveiling the predictive power of static structure in glassy systems. Nature Physics, 16
(4):448—454, 2020.
Nils Berglund. Kramers’ Law: Validity , Derivations and Generalisations. Markov Processes and
RelatedFields,19:459490, 2013.
Alessandra Bianchi and Alexandre Gaudilliere. MetaStable states, quasi-stationary distributions and
soft measures. Stochastic Processes and their Applications, 126:1622-1680, 2016.
Anton Bovier, Michael Eckhoff, VeroniqUe Gayrard, and Markus Klein. Metastability in reversible
diffusion processes I. Sharp asymptotics for capacities and exit times. Journal of the European
Mathematical Society, 6:399-424, 2004.
Ronan Collobert and Jason Weston. A unified architecture for natural language processing: Deep
neural networks with multitask learning. In International Conference on Machine Learning, 2008.
Mert Gurbuzbalaban, Umut Simyekli, and LingjiOng Zhu. The Heavy-Tail Phenomenon in SGD. In
International Conference on Machine Learning, 2021.
Geoffrey Hinton, Li Deng, Dong Yu, George E Dahl, Abdel-rahman Mohamed, Navdeep Jaitly,
Andrew Senior, Vincent Vanhoucke, Patrick Nguyen, Tara N Sainath, and Others. Deep neural
networks for acoustic modeling in speech recognition: The shared views of four research groups.
IEEE Signal processing magazine, 29(6):82-97, 2012.
Elad Hoffer, Itay Hubara, and Daniel Soudry. Train longer, generalize better: closing the generaliza-
tion gap in large batch training of neural networks. In Advances in Neural Information Processing
Systems, 2017.
Raban Iten, Tony Metger, Henrik Wilming, Lldia Del Rio, and Renato Renner. Discovering Physical
Concepts with Neural Networks. Physical Review Letters, 124(1):10508, 2020.
StaniSIaW Jastrzebski, Zachary Kenton, Devansh Arpit, Nicolas Ballas, Asja Fischer, Yoshua Ben-
gio, and Amos Storkey. Three Factors Influencing Minima in SGD. arXiv:1711.04623, 2017.
Nitish Shirish Keskar, Jorge Nocedal, Ping Tak Peter Tang, Dheevatsa Mudigere, and Mikhail
Smelyanskiy. On large-batch training for deep learning: Generalization gap and sharp minima.
In International Conference on Learning Representations, 2017.
Hendrik Anthony Kramers. Brownian motion in a field of force and the diffusion model of chemical
reactions. Physica, 7(4):284-304, 1940.
Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton. Imagenet classification with deep convo-
lutional neural networks. In Advances in Neural Information Processing Systems, pp. 1097-1105,
2012.
James S. Langer. Statistical theory of the decay of metastable states. Annals of Physics, 54(2):
258-275, 1969.
Yann LeCun, Yoshua Bengio, and Geoffrey Hinton. Deep learning. Nature, 521(7553):436-444,
2015.
Qianxiao Li, Cheng Tai, and E. Weinan. Stochastic modified equations and adaptive stochastic
gradient algorithms. In International Conference on Machine Learning, 2017.
Kangqiao Liu, Liu Ziyin, and Masahito Ueda. Noise and Fluctuation of Finite Learning Rate
Stochastic Gradient Descent. In International Conference on Machine Learning, 2021.
Djc MacKay. Bayesian model comparison and backprop nets. In Advances in Neural Information
Processing Systems, 1992.
10
Under review as a conference paper at ICLR 2022
Qi Meng, Shiqi Gong, Wei Chen, Zhi Ming Ma, and Tie Yan Liu. Dynamic of Stochastic Gradient
Descent with State-Dependent Noise. arXiv:2006.13719, 2020.
Bemt 0ksendal. Stochastic differential equations: an introduction with applications. Springer,
Berlin, 1998.
Vardan Papyan. The Full Spectrum of Deepnet Hessians at Scale: Dynamics with SGD Training
and Sample Size. arXiv:1811.07062, 2018.
Vardan Papyan. Measurements of three-level hierarchical structure in the outliers in the spectrum of
deepnet hessians. In International Conference on Machine Learning, 2019.
Scott Pesme, Loucas Pillaud-Vivien, and Nicolas Flammarion. Implicit Bias of SGD for Diagonal
Linear Networks: a Provable Benefit of Stochasticity. arXiv:2106.09524, 2021.
Levent Sagun, UtkU Evci, V. UgUr GUney, Yann Dauphin, and Leon Bottou. Empirical analysis of
the hessian of over-parametrized neural networks. arXiv:1706.04454, 2017.
Issei Sato and Hiroshi Nakagawa. Approximation analysis of stochastic gradient langevin dynam-
ics by using fokker-planck equation and ito process. In International Conference on Machine
Learning, 2014.
Alireza Seif, Mohammad Hafezi, and Christopher Jarzynski. Machine learning the thermodynamic
arrow of time. Nature Physics,17:105-113, 2021.
Umut Simyekli, Levent Sagun, and Mert Giirbiizbalaban. A tail-index analysis of stochastic gradient
noise in deep neural networks. In International Conference on Machine Learning, 2019.
Samuel L. Smith and Quoc V. Le. A Bayesian perspective on generalization and stochastic gradient
descent. In International Conference on Learning Representations, 2018.
Stephan Wojtowytsch. Stochastic gradient descent with noise of machine learning type. Part II:
Continuous time analysis. arXiv:2106.02588, 2021.
Jingfeng Wu, Wenqing Hu, Haoyi Xiong, Jun Huan, Vladimir Braverman, and Zhanxing Zhu. On
the Noisy Gradient Descent that Generalizes as SGD. In International Conference on Machine
Learning, 2020.
Lei Wu, Chao Ma, and E. Weinan. How SGD selects the global minima in over-parameterized learn-
ing: A dynamical stability perspective. In Advances in Neural Information Processing Systems,
2018.
Zeke Xie, Issei Sato, and Masashi Sugiyama. A Diffusion Theory For Deep Learning Dynamics:
Stochastic Gradient Descent Exponentially Favors Flat Minima. In International Conference on
Learning Representations, 2021.
Chiyuan Zhang, Samy Bengio, Moritz Hardt, Benjamin Recht, and Oriol Vinyals. Understanding
Deep Learning Requires Rethinking of Generalization. In International Conference on Learning
Representations, 2017a.
Yuchen Zhang, Percy Liang, and Moses Charikar. A hitting time analysis of stochastic gradient
Langevin dynamics. In Proceedings of Machine Learning Research, 2017b.
Zhanxing Zhu, Jingfeng Wu, Bing Yu, Lei Wu, and Jinwen Ma. The anisotropic noise in stochas-
tic gradient descent: Its behavior of escaping from sharp minima and regularization effects. In
International Conference on Machine Learning, 2019.
Liu Ziyin, Kangqiao Liu, Takashi Mori, and Masahito Ueda. On Minibatch Noise: Discrete-Time
SGD, Overparametrization, and Bayes. arXiv:2102.05375, 2021.
11
Under review as a conference paper at ICLR 2022
A	List of approximations and their justifications
In Sec. 3.1, we made several approximations to derive the result (6). For clarity, we list the approxi-
mations made and their justifications below.
•	In Eq. (8), we make the approximation of B << N, which simplifies the expression but is
not essential. The main conclusion is not affected by this approximation.
•	We ignore VLVLT in Eq.(8), which is justified near a local minimum.
•	In Eq. (9), we make the decoupling approximation (7), which is one of the key heuristic
approximations in our work. This approximation is verified experimentally in Sec. 5.1.
•	We ignore the last term of Eq. (10), which is a common approximation (Sagun et al., 2017).
This approximation is justified ifwe are only interested in the outliers of the Hessian eigen-
values. Indeed, outliers of the Hessian eigenvalues, which play dominant roles in escape
from local minima, are known to be attributable to the first term of the right-hand side of
Eq. (10) (Papyan, 2018).
•	In Eq. (11), We assume that the matrix (1/N) PjN=ι Vf (θ,χW))Vf (θ, x(μ))T does not
change so much in a valley with a given local minimum. This approximation is indirectly
verified in Fig. 2 (the proportionality between the loss and the noise strength implies this
matrix is actually constant).
In deriving the escape rate for multi-variable cases in Sec. 4, we further make the following assump-
tions and approximations:
•	First of all, we discard a bulk of near-zero eigenvalues of the Hessian and restricted learning
dynamics within the subspace spanned by the outlier eigenvectors. This approximation
is justified because the SGD dynamics is almost frozen along flat directions of the loss
landscape.
•	We approximate the SGD noise as an isotropic one within the n-dimensional outlier sub-
space. This approximation is justified either when the loss landscape in the outlier subspace
is isotropic near the minimum or when the directions of the Hessian eigenvectors do not
change within the valley.
•	At the last part of the derivation, we approximate T ≈ L(θ*)t, which is justified because
the model stays near a local minimum until it escapes from that minimum.
B S tationary distribution
Since θτ obeys a simple Langevin equation
dθτ = -U 0(θτ) + √2Td1WT,	(20)
the stationary distribution of 石T is given by the Gibbs distribution Rs(θ) H e~u(')/T. On the other
hand, what we want is the stationary distribution PSs(θ) of θt, where θt =石T with T = RtdtO L®).
In this section, we show the relation between the two distributions: Pss(θ) H L(θ)-1Pss(θ).
We express the stationary distributions in terms of the long-time average of the delta function:
1s	1s
PSs(θ) = lim —	dt δ(θt — θ), PsS (θ) = lim —	dτδ(θτ — θ).	(21)
s→∞ s 0	s→∞ s 0
By using the relation T = R0t dt0 L(θt0), we have dT = L(θt)dt. For a sufficiently large t, we also
obtain T 〜tL, where L := lims→∞(1∕s) f^ dt0 L(θto) denotes the long-time average of L(θt). By
12
Under review as a conference paper at ICLR 2022
using them, Pss (θ) is rewritten as
Pss (θ) ≈ lim 1
s→∞ s
广「
1	L fsL	〜
L(θ) Shm= Sl J0 dτδ(θτ - θ)
L二，八
丽 Pss(θ).
(22)
-«-»τ . 1	1 .	. 1	1 ♦ 1 -I	I /八\	丁/八、——1 I / 八\
We thus obtain the desired relation, Pss(θ) α L(θ) 1Pss(θ).
C Justification of the isotropic-noise approximation within the
n-DIMENSIONAL SUBSPACE
We now show that the isotropic-noise approximation is valid when the directions of the eigen-
vectors of the Hessian do not change within the valley of a given local minimum. In this case,
∂2U∕∂zi∂zj = 0 for any i = j, where the Hessian at the minimum is given by H(θ*) ≈
pn=ι h；ViVT (hi is an eigenvalue and Vi is the corresponding eigenvector of H(θ*)) and the dis-
placement vector Z ∈ Rn is defined by θ = θ* + Pn=ι zivi. The stochastic differential equation
dz = -VzUdT + y∕2ιηH(θ;)∕BdWτ is then equivalent to the following Fokker-Planck equation
for the distribution function P(z, τ) of z at τ:
dp(z,τ) = XX ∖_d_ (∂Upʌ + 强∂LP
∂τ =乙［∂zi Idzi J + Bdzi
(23)
Let us assume that the direction of eth eigenvector Ve corresponds to the escape direction. We denote
by z⊥ ∈ Rn-1 the displacement perpendicular to the escape direction, and write z = (ze, z⊥). At
the saddle zs, VzU(zs) = 0, hse < 0 and his > 0 for all i 6= e, where {his} is the set of eigenvectors
of the Hessian at zs .
Under the above setting, we derive the escape rate formula following Kramers (1940). The steady
current J ∈ Rn is aligned to the escape direction, and hence Je 6= 0 and J⊥ = 0. Let us denote by
P； the total probability within the valley of a given minimum θ* and by J the total current flowing
to outside of the valley through the saddle θs = θ* + zs. It is assumed that J is small and P； is
almost stationary. The escape rate κτ is then given by
κτ =	.	(24)
P；
The escape rate κ per unit time is given by
J
K = L(θ*)κτ = L(θ*) J.	(25)
We now evaluate P； and J. To evaluate P；, it is necessary to know about the stationary distribution
near the minimum θ*. Near the minimum θ* (i.e. small z),
and
U(θ)=logL(θ) ≈ U(θ*) +
(θ - θ*)tH(θ*)(θ - θ*)
2L(θ*)
U (θ*) +
zτ H (θ*)z
2L(θ*)
dU
dzi
1n
折 ΣHij Zj,
(26)
(27)
where H； = H(θ*). By substituting it into the Fokker-Planck equation (23), We obtain
dP(z,T) = X 2 X H* (j + 上三 ∖ P
dτ =乙 dzi 乙 ij kL(θ*) + BdzJ
i=1	j =1
(28)
13
Under review as a conference paper at ICLR 2022
Figure 4: Schematic illustration of the escape from a potential barrier.
Iffor all j
(Lj) + Blj) Pss(Z) = 0,
Pss(Z) is a stationary distribution near the minimum θ*. Indeed,
Pss(Z) = P(θ*)e-2ηL(θ*) Pn=1 z2
(29)
(30)
satisfies this condition. It should be noted that the stationary distribution is independent of the
Hessian eigenvalues {h*}. By using Eq. (30), P * is evaluated as
P * ≈ J dz1dz2 .. . dznPss(z) = P (θ*)
-2ηL(θ*) ]n/2
-B
(31)
Next, let us evaluate J . The probability current J along the escape direction e is given by
Je
"P
∂Ze
ηhe l P
B ∂Ze .
(32)
At the saddle, the current vector J⊥ perpendicular to the escape direction is zero, and hence the
probability distribution near the saddle with Ze = Zes and Z⊥ 6= 0 is also evaluated in a similar way
as in Eq. (30):
___B 2
P(Ze = ze,z⊥) ≈ P (Ze = z∣,z⊥ = 0)e-2ηL(θs) z⊥.	(33)
By substituting it into Eq. (32), we obtain
B2
Je(Ze,Z⊥) = JPathe 2nL(θs) ⊥ ,	(34)
where the current along the escape path (Z⊥ = 0) is denoted by Jpath := J(Zes, Z⊥ = 0). The total
current through the saddle is then evaluated as
J
dZ⊥ Je(Zee , Z⊥ )
JPath
-2πηL(θe) InT)/2
-B-
(35)
When the distribution function is almost stationary, Eq. (23) yields lJe(Ze, Z⊥ = 0)/lZe ≈ 0, and
hence the current along the escape path is approximately constant Je(Ze, Z⊥ = 0) ≈ JPath. Since
Je(Ze, Z⊥ = 0) is given by Eq. (32) by putting Z⊥ = 0, we have
J _ ∂U P ηh* ∂P
Path = - ∂Zez⊥=0	-万 ∂Ze
(36)
B* U .
By multiplying e ηhe*	in both sides and integrating over Ze from 0 to Zec, where Zec defined as
U(θ* + Zecve) = U(θ*) (see Fig. 4), we obtain
c
JPath / e dZe eη⅛U = ηheen⅛U(θ*)P(θ*),	(37)
0B
14
Under review as a conference paper at ICLR 2022
where it is assumed that the probability at zec is small and negligible, P (ze = zec, z⊥ = 0) ≈ 0. By
using the saddle-point method, the integral in the left-hand side of Eq. (37) is evaluated as
c
Z e	B u ∞
d	dze e ηh≡ ≈ J	dze exp
hs
U (θs ) + 2L(⅜(Ze -Ze)2
(2πη箧	Y/2 e建u(θs)
1B∣hS∣L(θs)J
(38)
By substituting this result in Eq. (37), we obtain
Jpath = (^hs)1/2 e-彘δuP(θ*),
(39)
where ∆U = U(θs) - U(θ*). The total current J in Eq. (35) is then expressed as
PhW|he| (2πηL(θS)) / e-福δuP(θ*)
2πL(θs)1	BJ	( ).
(40)
By using Eqs. (31) and (40), the escape rate κ in Eq. (25) is evaluated as
J
K = L(θ*) J
，砧 hel
2π
(41)
J
Since ∆U = log[L(θs)∕L(θ*)], We finally obtain
κ
，砧 hel
2π
^L(θs)^
L(θ*)-
(42)
which is exactly identical to the escape rate formula derived in the main text using the isotropic-noise
approximation with h = he.
In this way, the isotropic-noise approximation is justified even when the loss landscape is not
isotropic near the minimum. We have assumed that the directions of the eigenvectors of the Hessian
do not change within the valley of a given local minimum. Under this assumption, the Fokker-Planck
equation along the escape path is decoupled from the perpendicular directions z⊥ . Moreover, we
have seen that the stationary distribution near a minimum is independent of the Hessian eigenvalues.
These properties explain the reason why the isotropic-noise approximation is justified in this case.
D	Other loss functions
In our paper, we mainly focus on the mean-square loss, for which we can analytically derive the
relation between the loss L(θ) and the SGD noise covariance Σ(θ). An important observation is that
the SGD noise strength N is proportional to the loss, i.e., N 8 L(θ) (see Sec. 5.2 of the main text
for the definition of N).
Here, we argue that the relation N α L(θ) also holds in more general situations. During the
training, the value of 'μ will fluctuate from sample to sample. At a certain time step of SGD, let
us suppose that N - M samples in the training dataset are already classified correctly and hence
'μ 〜0, whereas the other M samples are not and hence 'μ 〜1. The loss function is then given
by L(θ) = (1/N) PN=I 'μ 〜M/N. When 'μ is small, ▽'* will also be small. Therefore,
for N — M samples with 'μ 〜0, ▽'* 〜0 also holds. The other M samples will have non-
small gradients: ∣∣V'μk2 〜g, where g > 0 is a certain positive constant. We thus estimate N as
N ≈ (1/N) PN=I V'TV'μ 〜gM/N 〜gL(θ). In this way, N H L(θ) will hold, irrespective of
the loss function.
However, we emphasize that this is a crude argument. In particular, the above argument will not
hold near a global minimum because all the samples are correctly classified there, which implies
that 'μ is small for all μ, in contrast to the above argument relying on the existence of M wrongly
classified samples with 'μ 〜 1 and ∣V'μ∣2 〜g.
15
Under review as a conference paper at ICLR 2022
(a)
(b)
U&UB,QS S-Oe Q0ω
W6uα,-IttS-Oe Q0ω
Figure 5: Training dynamics of the loss function and the SGD noise strength N for (a) a fully
connected network trained by the Fashion-MNIST dataset and (b) a convolutional network trained
by the CIFAR-10 dataset. In the figure, we multiplied N by a numerical factor to emphasize that
N is actually proportional to the loss in an intermediate stage of the training. Loss vs N for (c) a
fully connected network trained by the Fashion-MNIST and (d) a convolutional network trained by
CIFAR-10. Dashed lines in (C) and (d) are straight lines of slope 1, which imply N α L(θ).
We now experimentally test the relation N α L(θ) for the cross-entropy loss. We consider the
same architectures and datasets in Sec. 5.2 of the main text: a fully connected neural network
trained by Fashion-MNIST and a convolutional neural network trained by CIFAR-10 (see Sec. 5.2
for the detail). We fix B = 100 in both cases, and η = 0.1 for the fully connected network and
η = 0.05 for the convolutional network. Experimental results are presented in Fig. 5. We find that
the relation Nb L(θ) seems to hold true at an intermediate stage of the training dynamics, although
the proportionality is less clear compared with Fig. 2 in the main text for the mean-square loss.
We also find that for sufficiently small values of the loss, N b L(θ)2 [see Fig. 5 (c) and (d)], whose
implications should merit further investigation in future studies.
E Hessian eigenvalues for a neural network in Sec. 5.3
We present numerical results on Hessian eigenvalues in a pre-trained neural network studied in
Sec. 5.3. Instead of the exact Hessian, we consider an approximate Hessian given on the right-hand
side of Eq. (11), i.e.,
1N
H(θ*) ≈ nn E Vf(0，x(μ))Vf(θ, x(μ))T	(43)
Eigenvalues {hi} are arranged in descending order as hi ≥ h/ ≥ ∙∙∙ ≥ hp (in our model P =
7861).
A histogram of the Hessian eigenvalues is presented in Fig. 6 (a). We see that most eigenvalues are
close to zero, which corresponds to the bulk, but there are some large eigenvalues, which correspond
to the outliers. The largest eigenvalue is λι = 95.6, which is identified as h* in our theoretical
formula (16).
16
Under review as a conference paper at ICLR 2022
(a)
(b)
Figure 6: Hessian eigenvalues for a pre-trained neural network studied in Sec. 5.3. (a) The histogram
of the Hessian eigenvalues. Most eigenvalues are close to zero, but there are some large eigenvalues,
which correspond to outliers.
Another important quantity is the effective dimension n corresnding to the number of outliers. Since
the outliers and the bulk are not sharply separated, it is difficult to precisely determine n. In Fig. 6
(b), We plot hi up to i = 30. From this figure, it seems reasonable to estimate n 〜10.
As a heuristic method of determining n, we can consider the following identification: first we define
the weight Pi for ith eigenmode as Pi = hi/ Pp=1 hj. We then determine n as
n
-1
(44)
which gives n = 12.7 in our case.
In Sec. 5.3, our formula (16) with n = 9 explains numerical results on the first-passage time.
17