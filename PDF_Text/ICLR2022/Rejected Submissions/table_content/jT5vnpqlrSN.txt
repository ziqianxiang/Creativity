Table 1: NotationSNotation	DescriptionG	the input graphV, E	the node/edge set of Gvi	the i-th node in GX, Z	the node attributes/representations of Gxi, zi	the attribute/representation of viW	the edge weights of GN(v)	in-neighborhoods of node v in GA	the anchor node setSuccessors(G, S)	successors of any node in source node set S ⊆ V[a||b]	concat vector a and b3	Preliminaries3.1	NotationsA graph can be represented as G = (V, E), where V = {vι, ∙∙∙ ,vn} is the node set and E ={hvi, vj i|vi, vj ∈ V} iS the edge Set. NodeS are augmented with the feature matrix X, which iSeither input attributes if available or placeholders. Edges may augmented with the optional weightsW. In-neighborhoods of node v are represented as N (v). Notations are summarized in table 1.
Table 2: Results on synthetic datasets. Bold font highlights the best results.
Table 3: Results on the position-aware real-world datasets, measured in test ROC AUC (in %)for link prediction (-lp) and node pair classification (-npc) task, and in test accuracy (in %) fornode classification (-nc) task. N highlights the improvement over the strong baseline DE, Bold fonthighlights top-3 results, * highlights the best results.
Table 4: Details of synthetic position-aware datasets.
Table 5: Details of position-aware real-world datasets.
Table 6: Full results on the position-aware real-world datasets, measured in test ROC AUC (in %)for link prediction (-lp) and node pair classification (-npc) task, and in test accuracy (in %) fornode classification (-nc) task. N highlights the improvement over the strong baseline DE, Bold fonthighlights top-5 results, * highlights the best results.
Table 7: Highlights for key aspects of the results on real-world datasets (Table 6). Average improve-ment of the aspects on every datasets are noted (in %), references of comparisons are noted with theline number in table 6._______________________________________________________________variants		references	email -npc	europe -nc	usa -nc	ce -link	ns -link	pb -link1	MPNN w/ final distances	5→4	99.4	96.8	187.3	83.0	80.2	90.22	MPNN w/ all distances	6→4	99.6	140.2	183.7	75.4	76.4	90.83	{A}-position-aware	7―4,11—4	1.1	1.7	3.3	8.0	60.4	28.64	A-position-aware	15→4,19→4	99.6	114.4	165.1	79.5	75.8	90.45	GIR (w/o distance assigning)	11→7,19—15	-0.9	2.2	3.8	2.6	3.5	-1.56	GIR (w/ distance assigning)	13→9,14→10, 21→17,22→18	-0.0	0.7	5.0	0.0	1.8	0.07	w/ final distances	17—15,21—19	-0.0	-4.5	11.1	1.7	3.1	0.08	w/ all distances	18→15,22→19	0.0	11.7	8.4	-2.0	1.4	0.39	A-position-aware over distance assigning	17→5,18→6, 21→5,22→6	0.0	1.7	1.9	0.0	0.8	0.1setting, settings of using explicit distance assigningare considered separately. The implicit encodingstrategy, while has the capability of learning distances, due to the hardness of learning, assigningdistance information explicitly would still be helpful. We note the improvement of explicit distanceassigning over A-position-aware GIRs in table 7, 7-8. And the results show that the strategies forA-position-aware GIR would still be helpful with distance assigned (Table 7, 9).
