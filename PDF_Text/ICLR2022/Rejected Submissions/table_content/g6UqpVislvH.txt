Table 1: Test PSNRs (dB) for spherical panorama regression. We show averages and standarddeviations (in parenthesis, referring to last digit) over three runs. for no encoding, axis-aligned(Mildenhall et al., 2020), Gaussian (Tancik et al., 2020), and our spherical harmonics encoding.
Table 2: Estimating the pose distribution of symmetric objects on SYMSOL I. DBN refers to “DeepBingham Networks” Deng et al. (2020), IPDF shows the original results from Murphy et al. (2021),and IPDF* is our modified version. Our model significantly outperforms the baseline in both metrics.
Table 3: NeRF with spherical encoding on the Blender dataset. “NeRF*” inserts the direction at the6th layer instead of the 8th. Our method using spherical harmonics for encoding shows small butstatistically significant improvements over the baselines. We report PSNRs in dB, with the standarddeviations of the last digits shown within parenthesis.
Table 4: Rendering spherical light fields. Axis-aligned refers to the Euclidean positional encodingfrom Mildenhall et al. (2020) and our method uses product of spherical harmonics.
Table 5: Sensitivity analysis of the maximum frequency L and Gaussian scale σ on the “SphericalText” dataset. Encoding size is fixed to 2M = 512. The baseline models are highly sensitive to thehyperparameter values. We include our spherical harmonics encoding as reference; for 'maχ = 22the encoding size is slightly lower than 2M, for 'max = 23 it is slightly higher.
Table 6: Average accuracy on reconstructing the “Spherical Text” dataset, when random factors areapplied to the positional encoding vector, breaking the constant norm and rotation-invariant innerproducts properties. The performance drops consistently for max degrees above 12.
