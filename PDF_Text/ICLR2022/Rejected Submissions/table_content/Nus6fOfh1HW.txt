Table 2: Effective targeted attacks by Nettack: ra-tios of edge additions, deletions and heterophilous at-tacks (i.e., attacks increasing heterophily). We considertwo heterophily definitions, one based on ground-truthclass labels (Label), and the other on predicted class la-bels by GCN on clean datasets (Pred.). All attacks aredirect perturbations on edges incident to the targets.
Table 3: Benchmark study: mean accuracy against poison attacks (accuracy on clean datasets inparanthesis). Accuracy is reported on target nodes for Nettack, and on full test splits for Metattack.
Table 4: Accumulated certifications (AC), average certifiable radii (尸。and Fd) and accuracy ofGNNs with randomized smoothing enabled (i.e., f (φ(s))) on the test splits of the clean datasets,with a ramdomization scheme φ allowing both addition and deletion (i.e., p+ = 0.001, p- = 0.4).
Table 5: Major symbols and definitions.
Table 6: Performance comparison between variants of GNNGuard and GCN-SVD: mean accuracy± stdev over multiple sets of experiments.
Table 7: Detailed classification accuracy (and standard deviation) of each method for the targetnodes attacked by Nettack, calculated across different sets of perturbation.
Table 8: Detailed classification accuracy (and standard deviation) for the unlabeled nodes of eachmethod attacked by Metattack with budget as 20% of the total number of edges of each graph,calculated across different sets of perturbation.
Table 9: Accumulated certifications (AC), average certifiable radii (尸。and Fd) and accuracy ofGNNs with randomized smoothing enabled (i.e., f (φ(s))) on all nodes of the clean datasets, with aramdomization scheme φ allowing addition only (i.e., p+ = 0.001, p- = 0) or deletion only (i.e.,p+ = 0, p- = 0.4). For each statistic, we report the mean and stdev across 3 runs. Best results arehighlighted in blue per dataset, and in gray per model group. For results with randomization schemeallowing both addition and deletion, see Table 4.
Table 10: Runtime (in seconds) of 200 training iterations on Cora. See App. D for the implementa-tion used for each method.
