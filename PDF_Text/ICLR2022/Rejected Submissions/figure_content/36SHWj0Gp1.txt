Figure 1: Assembly code blocks compiled from the same source code sk_table_cmp from OpenSSLwith different options. The box on the top shows the source code. From left to right: GCC with O0optimization level; GCC with O3 optimization level; Clang with O0 optimization; and Clang with O0optimization and obfuscation.
Figure 2: GenTAL’s model architecture for training. Given the assembly instructions and theirsubwords, it first masks certain assembly instructions with a probability. The masked sequencesare fed into token embedding and position embedding, in which the results are aggregated to forminstruction embeddings. The Transformer then encodes the instructions, where we extract the firstcls hidden layer output and use it to reconstruct the mask instructions, following a skip-gram styleprediction design.
Figure 3: Performance on unseen obfuscated code over training epochs. GenTAL’s error bars are alsoshown.
