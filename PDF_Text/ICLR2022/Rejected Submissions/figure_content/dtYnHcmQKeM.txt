Figure 1: PINO: combine operator learning and PINN optimization.
Figure 2: The accuracy-complexity trade-off on PINO, PINN, and the pseudo-spectral solver.
Figure 3: Darcy inverse problemBased on the solution operators learned in the above operator-learning section, we continue to dotest-time optimization. The results are shown in Figure and Table 3. Overall, PINO outperformsPINN by 20x smaller error and 25x speedup. Using pre-trained model make PINO converge faster.
Figure 4: PINO on Kolmogorov flow (left) and Lid-cavity flow (right)A Implementation detailsIn this section, we list the detailed experiment setups and parameter searching for each experimentin Section 4. Without specification, we use Fourier neural operator backbone with width = 64,mode = 8, L = 4 and GeLU activation. The numerical experiments are performed on Nvidia V100GPUs.
Figure 5: Plot of test relative L2 error versus update step for the Kolmogorov flow with Re500, T=1s.
Figure 6: Plot of test relative L2 error versus runtime step for the Kolmogorov flow with Re500,T=0.5s. top: 64 × 64, bottom: 128 × 128. Averaged over 20 instances.
Figure 7: Fourier Continuation by padding zeros. The x-axis is spatial dimension; the y-axis is thetemporal dimension. FNO extends the output smoothly on the padded domain.
