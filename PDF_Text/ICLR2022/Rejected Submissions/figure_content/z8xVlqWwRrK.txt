Figure 1: (a) This image shows one noisy event interaction filter acting on an input with c channels.
Figure 2: The network architecture of the environment model used to train EVaDE-SimPLe agents.
Figure 3: Learning curves of EVaDE-SimPLe agents, SimPLe(30) agents and agents which only addone of the EVaDE layers.
Figure 4:	Learning curves of EVaDE-SimPLe agents, SimPLe(30) agents and agents which only addone of the EVaDE layers with error bars of 1 standard error.
Figure 5:	This figure shows an output feature map(channel) that captures interactions between twoinput feature maps when passed through the noisy event weighting layer. Here, the interactionbetween the blue diver and the green enemy is captured in (d).
Figure 6:	This figure shows the same output feature map of the noisy event interaction layer as shownin Figure 5, but when there is no interaction between the blue and green objects. The blue and greenobjects in (a) are separated by some distance, and thus the interaction is not shown in (d).
Figure 7: This figure shows an output feature map (channel) that up-weights the corresponding inputfeature map when passed through the noisy event weighting layer.
Figure 8:	This figure shows an output feature map (channel) that down-weights the correspondinginput feature map when passed through the noisy event weighting layer.
Figure 9:	This figure shows the function of the noisy translation layer. The output feature maptranslates the input pixels to its top, bottom, left and right to different degreesIn Figure 9, we show the input and output feature maps of a game state from Krull, before and afterpassing it through a noisy event translation layer. The input feature map seems to capture differentobjects from the input image. The translation effect in output feature map can be seen clearly asevery light pixel in the input seems to have lightened up the pixels to its top, bottom, left and right todifferent degrees.
