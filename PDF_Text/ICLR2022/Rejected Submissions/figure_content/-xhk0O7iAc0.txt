Figure 1: (a) and (b): examples of inductive relation prediction. (c)-(f): illustrations for cycle spaceand cycle basis. (c): A sample graph with three nontrivial cycles, zr , zb and zg (highlighted withred, blue and green colors). Any two of the three will form a cycle basis. (d): Mod-2 addition ofcycles. (e): the boundary matrix ∂ of the graph in (c). Any cycle z satisfies ∂z = 0. (f): the cycleincidence matrix of the graph in (c). We show all three columns corresponding to all three nontrivialcycles (zr , zb and zg). In our algorithm, we only pick the columns corresponding to a chosen cyclebasis, e.g., the first two columns when the chosen basis is {zr , zb}.
Figure 2: Architecture of CBGNN. For the input KG shown in (a), we first select the red root nodesusing a clustering algorithm and obtain the corresponding SPT cycle bases in (b). Then for everySPT cycle basis. we construct a new graph in (c) where nodes represent cycles in the basis and edgesindicate a strong interaction between the two corresponding cycles. The initial node feature vectorsare extracted from corresponding cycles using BR-LSTM. With a GCN + MLP, we can learn theconfidence value for the nodes (cycles) in (d). And we can compute the confidence value of a giventriplet as the max confidence value of cycles passing it. Finally, we use the weighted sum of tripletconfidence from different SPT cycle bases as the final triplet confidence.
Figure 3: An example of BR-LSTM construction for Figure 1 (b).
Figure 4: The influence of k on WN18RR v1, v2, and FB15k-237 v1, v2.
Figure 5: Histogram of shortness on different datasetsAs shown in Figure 5, the cycle bases selected by the clustering algorithm generally contain smallcycles compared with the randomly selected cycle bases or the single cycle basis. We can find that inTable 4, CBGNN outperforms CBGNN-Random on most datasets. Another interesting observationis that in Figure 5 (d), the randomly selected cycle bases perform comparably with the cycle basesgenerated using the clustering algorithm in terms of shortness on NELL-995 v1. Recall that inTable 4, the performance of CBGNN-Random slightly beat CBGNN on NELL-995 v1. The aboveobservations show the correlation between the shortness of cycle bases and their performance.
