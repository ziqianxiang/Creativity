Figure 1: Our proposed two server FL system. Hospitals compute local models wi , and secret sharethem among the two servers. Servers securely compute the dimension-wise median and end up withthe global model. Each hospital receives the global model from S0, and repeats the cycle.
Figure 3: Single-threaded median computation over 1000 dimensions.
Figure 4: Training loss convergence behaviour for 3 clients FL system using different server-sidemethods.
Figure 2: Results of training loss convergence on 3 benign parties.
Figure 5: Training loss convergence behaviour for 3 clients FL system using different server-sidemethods.
Figure 6: Training loss convergence behaviour for 3 clients FLmethods.
Figure 7:	Ideal functionality for 2-party comparisons: givenhx〉，〈y〉computehx 〉 y).
Figure 8:	Ideal functionality for 2-party equality: given hx〉, hy〉 compute hx = y〉.
Figure 9:	Ideal functionality for solving the Millionaire,s problemFB2AParties - P0 , Pi•	∀b ∈ {0,1}, Pb sends〈x〉B to FB2、.
Figure 10:	Ideal functionality for converting boolean to arithmetic shares1 (Rathee et al., 2020) provides protocols for FM山 and FLa directly. The protocol for FM山 works bybreaking up the ` bits of inputs into a balanced binary tree and computing at each level the answer of bothcomparison and equality checks of the inputs corresponding to that subtree. Hence, while not stated directly inthe protocol in (Rathee et al., 2020), a protocol for FMiU)eq can be easily obtained from the protocol for FM山.Inaddition, the public implementation of CrypTFlow2 (cry, 2021), contains functions which allow us to computethe same without tweaking anything underlying.
Figure 11:	Ideal functionality checking if two parties hold the same valueAlgorithm 4 ' bit signed comparison protocol, ∏C°mp.
Figure 12: Relationship between number of clients and 1. total server-side computation time afterreceiving all client updates, 2. bucketed median computation time.
Figure 13: Variable parameter values for bucket range tested on a three client FL system and CNN-Mnist model.
