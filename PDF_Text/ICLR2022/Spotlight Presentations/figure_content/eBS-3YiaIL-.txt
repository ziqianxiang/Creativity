Figure 1: Results for estimating 1d (left) and 16d (right) Gaussians, plotting mint∈[T]∣∣τ* - τt∣∣2(y-axis) against the number of updates T (x-axis). In both cases, when using NCE, normalizedgradient descent (“NCE, NGD", yellow) largely outperforms gradient descent (“NCE, GD”, red).
Figure 2: Results on MNIST, plotting loss value (y-axis, log scale) against update steps (x-axis).
Figure 3: The gray-shaded area is the region where equation D.7 is satisfied. The orange dot marksτ*, which is enclosed in the green-shaded area. Moreover, the red-shaded area centered at τ* Corre-sponds the width-0.1R annulus A, within which the gradient is exponentially small.
Figure 4: An illustration of the flat landscape caused by the “density chasm" NCE loss quicklyflattens out for 1d and 2d Gaussian mean estimation.
Figure 5: Results for estimating 1d (left) and 16d (right) Gaussians, plotting mint∈[T] ∣∣τ* - Tt ∣∣2 (y-axis) against the number of updates T (x-axis). Normalized gradient descent (NGD) significantlyoutperforms vanilla gradient descent (GD) for both NCE and eNCE . In addition, eNCE decaysfaster than NCE when optimized with NGD. The results are averaged over 5 runs, with shaded areasshowing the standard deviation.
Figure 6: Results on MNIST, plotting loss value (y-axis, log scale) against the number of updatesteps (x-axis). The left plot shows NCE optimized by GD (black) and NGD (yellow), and the rightshows eNCE optimized by GD (black) and NGD (blue). The setup is the same as that for Figure 2except that we now let training run 4 times longer. NGD outperforms GD in both cases, consistentwith the results in Figure 2.
Figure 7: MNIST samples from 4000 sampling steps37Published as a conference paper at ICLR 2022ΞHQ□HBB3333333HE3Ea目QQHHH目目目国O□目HQBE30Dbbqqsd回QBQBOEIaB国B@QQQHQ因QΞBHQD目ŋsŋ目HBQ目HΞ□ 国国囱团口画通 Q ŋ Q El B B □H 国白目四国国图 Q O Q□ŋ ŋ BQ	阳四冏@@囱血	Q	B	Q	□	Q	B	ElS	Ξ Ξ	Ξ	Ξ Ξ	Ξ	Ξ	ŋ	B	H	Q	ŋ	El	HB	国圆团圆国囱烟	Q	B	Q	B	El	Q	□Q	Ξ Ξ	Ξ	Ξ Q	Ξ	Ξ	D	B	□	B	Q	□	B
Figure 8: MNIST samples from 10000 sampling stepsFigure 9: Results for estimating 1d Gaussian with NCE (left) or eNCE (right), using GD (gray),NGD (yellow for NCE, blue for eNCE ), or RMSprop (green). The effectiveness of RMSpropseems to depend on the task: RMSprop performs the best for NCE, but falls short than NGD foreNCE.
Figure 9: Results for estimating 1d Gaussian with NCE (left) or eNCE (right), using GD (gray),NGD (yellow for NCE, blue for eNCE ), or RMSprop (green). The effectiveness of RMSpropseems to depend on the task: RMSprop performs the best for NCE, but falls short than NGD foreNCE.
