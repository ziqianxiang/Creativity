Table 1: Computation complexity of ViT. The input N × Dch goes through three linear transfor-mation layers with Dch × Dattn to generate Query (Q), Key (K), and Value (V ) matrices of sizeN × Dattn . N is transitive, while Dch is not.
Table 2: Results of different ViTs on ImageNet-1K. We compare the proposed HFSP with ex-isting ViT pruning methods under comparable FLOPs and the number of parameters. Note that“*” refers to our reproduced results to obtain models with similar FLOPs for comparison. Base-line/160/192/288/384/512/768 indicates the embedding dimensions.
Table 3: Detail analysis on Pooling-based ViTwith HFSP.
Table 4: Evaluation results on Samsung GalaxyS20 with Snapdragon 865 processor.
Table 5: Evaluation results on Xilinx ZCU102FPGA board.
Table 6: Sub-method effectiveness evaluation on DeiT-S.
