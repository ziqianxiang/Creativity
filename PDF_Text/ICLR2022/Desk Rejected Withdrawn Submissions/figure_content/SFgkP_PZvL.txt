Figure 1: Illustration of the discrete adjoint method using forward Euler. For simplicity, the statevariable is assumed to be scalar, and the function f is assumed to be a scalar function.
Figure 2: Training and testing performance of SqueezeNext on CIFAR10 using Euler and fourth-order Runge-Kutta (RK4) schemes with one time step. The inaccuracy in the gradient calculated viacontinuous adjoint causes a significant gap in performance between discrete adjoint and continuousadjoint when using the Euler scheme, while the performance is consistent when using RK4.
Figure 3:	GPU memory and wall-clock time usage of different implementations as functions of thenumber of time steps (Nt ) using RK4 scheme. PNODE is the only discrete adjoint method that doesnot exceed the memory capacity with Nt = 12. Both NODE naive and ANODE fail for Nt â‰¥ 12.
Figure 4:	Train and test loss with explicit/implicit ODE solvers as functions of number of iterations.
