Figure 1: Example hypergraph and the corresponding star expansionmethods that use a variety of techniques ranging from random walks [Perozzi et al. (2014); Tanget al. (2015); Grover & Leskovec (2016)] to matrix factorization [Qiu et al. (2018)] and graph neuralnetworks [Hamilton et al. (2018); Xu et al. (2019)]. Graph embedding techniques can be extended tohypergraphs in two ways but neither of them is satisfactory.
Figure 2: Multi-level embedding. Top left: original hypergraph. Top right: contracting nodes of ahypergraph to create a coarser hypergraph. Bottom left: initial coarse embedding. Bottom right:iterative refinement of node embeddings.
Figure 3: Performance on Friendster5	ConclusionWe describe NetVec, a multi-level hypergraph embedding framework, which can process hypergraphswith millions of nodes and hyperedges in just a few minutes, producing high-quality embeddingsfor node classification and hyperedge prediction. Our experimental results show that it significantlyoutperforms multi-level graph embedding approaches such as MILE and GraphZoom in both accuracyand running time (some of these approaches fail for the large datasets in our studies). We alsoshowed that our refinement algorithm can be used on its own to improve the quality of embeddingsfor hypergraphs by up to 23%. Even though NetVec is an unsupervised method, it outperformssupervised hyperedge prediction methods such as Hyper-SAGNN. In future work, we want to extendNetVec to multi-relation hypergraphs.
