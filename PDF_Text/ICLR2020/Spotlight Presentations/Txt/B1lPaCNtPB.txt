Published as a conference paper at ICLR 2020
Real or Not Real, that is the Question
Yuanbo Xiangli* 1； Yubin Deng1； Bo Dai1； Chen Change Loy2, Dahua Lin1
The Chinese University of Hong Kong	Nanyang Technological University
{xy019,dy015,bdai,dhlin}@ie.cuhk.edu.hk	ccloy@ntu.edu.sg
Ab stract
While generative adversarial networks (GAN) have been widely adopted in var-
ious topics, in this paper we generalize the standard GAN to a new perspective
by treating realness as a random variable that can be estimated from multiple
angles. In this generalized framework, referred to as RealnessGAN1, the dis-
criminator outputs a distribution as the measure of realness. While RealnessGAN
shares similar theoretical guarantees with the standard GAN, it provides more in-
sights on adversarial learning. Compared to multiple baselines, RealnessGAN
provides stronger guidance for the generator, achieving improvements on both
synthetic and real-world datasets. Moreover, it enables the basic DCGAN (Rad-
ford et al., 2015) architecture to generate realistic images at 1024*1024 resolution
when trained from scratch.
1 Introduction
The development of generative adversarial network (GAN) (Goodfellow et al., 2014; Radford et al.,
2015; Arjovsky et al., 2017) is one of the most important topics in machine learning since its first
appearance in (Goodfellow et al., 2014). It learns a discriminator along with the target generator in
an adversarial manner, where the discriminator distinguishes generated samples from real ones. Due
to its flexibility when dealing with high dimensional data, GAN has obtained remarkable progresses
on realistic image generation (Brock et al., 2019).
In the standard formulation (Goodfellow et al., 2014), the realness of an input sample is estimated
by the discriminator using a single scalar. However, for high dimensional data such as images,
we naturally perceive them from more than one angles and deduce whether it is life-like based on
multiple criteria. As shown in Fig.1, when a portrait is given, one might focus on its facial structure,
skin tint, hair texture and even details like iris and teeth if allowed, each of which indicates a different
aspect of realness. Based on this observation, the single scalar could be viewed as an abstract or a
summarization of multiple measures, which together reflect the overall realness of an image. Such a
concise measurement may convey insufficient information to guide the generator, potentially leading
to well-known issues such as mode-collapse and gradient vanishing.
In this paper, we propose to generalize the standard framework (Goodfellow et al., 2014) by treating
realness as a random variable, represented as a distribution rather than a single scalar. We refer to
* Equal contribution.
1Code will be available at https://github.com/kam1107/RealnessGAN
(a)
Figure 1: The perception of realness depends on various aspects. (a) Human-perceived flawless.
(b) Potentially reduced realness due to: inharmonious facial structure/components, unnatural back-
ground, abnormal style combination and texture distortion.
1
Published as a conference paper at ICLR 2020
such a generalization as RealnessGAN. The learning process of RealnessGAN abide by the stan-
dard setting, but in a distributional form. While the standard GAN can be viewed as a special case
of RealnessGAN, RealnessGAN and the standard GAN share similar theoretical guarantees. i.e. Re-
alnessGAN converges to a Nash-equilibrium where the generator and the discriminator reach their
optimalities. Moreover, by expanding the scalar realness score into a distributional one, the dis-
criminator D naturally provides stronger guidance to the generator G where G needs to match not
only the overall realness (as in the standard GAN), but the underlying realness distribution as well.
Consequently, RealnessGAN facilitates G to better approximate the data manifold while generat-
ing decent samples. As shown in the experiments, based on a rather simple DCGAN architecture,
RealnessGAN could successfully learn from scratch to generate realistic images at 1024*1024 res-
olution.
2 RealnessGAN
2.1	Generative Adversarial Networks
Generative adversarial network jointly learns a generator G and a discriminator D, where G attempts
to generate samples that are indistinguishable from the real ones, and D classifies generated and real
samples. In the original work of (Goodfellow et al., 2014), the learning process of D and G follows
a minimax game with value function V (G, D):
mGnmDx V(G,D) = Ex〜pd**[logD(x)] + Ez〜pz[log(1 - D(G(Z)))],	(1)
=Ex〜pdata[log(D(x) - 0)] + Ex〜Pg [log(1 - D(x))],	⑵
where the approximated data distribution pg is defined by a prior pz on input latent variables and
G. As proved by Goodfellow et al. (2014), under such a learning objective, the optimal D satisfies
DG (x)
Pdata (x)
Pdata (x)+Pg(x)
for a fixed G. Fixing D at its optimal, the optimal G satisfies pg
pdata.
The theoretical guarantees provide strong supports for GAN’s success in many applications (Rad-
ford et al., 2015; Yu et al., 2017; Zhu et al., 2017; Dai et al., 2017), and inspired multiple variants
(Arjovsky et al., 2017; Mao et al., 2017; Zhao et al., 2017; Berthelot et al., 2017) to improve the
original design. Nevertheless, a single scalar is constantly adopted as the measure of realness, while
the concept of realness is essentially a random variable covering multiple factors, e.g. texture and
overall configuration in the case of images. In this work, we intend to follow this observation,
encouraging the discriminator D to learn a realness distribution.
2.2	A Distributional View on Realness
We start by substituting the scalar output of a discriminator D with a distribution prealness, so that for
an input sample x, D(X) = {preainess(x, u); U ∈ Ω}, where Ω is the set of outcomes of Preainess. Each
outcome u can be viewed as a potential realness measure, estimated via some criteria. While 0 and
1 in equation 2 are used as two virtuai ground-truth scaiars that respectiveiy represent the reainess
of reai and fake images, we aiso need two virtuai ground-truth distributions to stand for the reainess
distributions of reai and fake images. We refer to these two distributions as A1 (reai) and A0 (fake),
which are also defined on Ω. As in the standard GAN where 0 and 1 can be replaced with other
scaiars such as -1 and 1, there are various choices for A1 and A0. Factors iead to a good pair ofA1
and A0 will be discussed later. Accordingly, the difference between two scalars is replaced with the
Kullback-Leibler (KL) divergence. The minimax game between a generator G and a distributional
discriminator D thus becomes
max min V (G,D) = Ex 〜?4心[DKL(AIkD(x))]+ Ex 〜pg [Dkl(Ao∣∣D(x))].	(3)
An immediate observation is that if we let prealness be a discrete distribution with two outcomes
{u0, u1}, and set A0(u0) = A1(u1) = 1 and A0(u1) = A1(u0) = 0, the updated objective in equa-
tion 3 can be explicitly converted to the original objective in equation 2, suggesting RealnessGAN
is a generalized version of the original GAN.
Following this observation, we then extend the theoretical analysis in Goodfellow et al. (2014) to
the case of RealnessGAN. Similar to Goodfellow et al. (2014), our analysis concerns the space of
2
Published as a conference paper at ICLR 2020
probability density functions, where D and G are assumed to have infinite capacities. We start from
finding the optimal realness discriminator D for any given generator G.
Theorem 1.	When G is fixed, for any outcome u and input sample x, the optimal discriminator D
satisfies
N( A _ Al(u)pdata(x) + Aθ(u)Pg (x)
G(x,u)=	pZM+pgx
Proof. Given a fixed G, the objective of D is:
min V(G,D) = Eχ-pdata[DκL(AιkD(x))] + Eχ~pg [Dkl(∕o∣∣D(x))],
(4)
(5)
pdata(x) A1(u)log
DAX⅜du+pg(X) / A0(U) log DAX⅞ du)
dx,
(6)
= -	(pdata(x)h(A1) +pg(x)h(A0)) dx
x
-	(pdata(x)A1(u) +pg(x)A0(u)) log D(x, u)dudx,
xu
(7)
where h(A1) and h(A0) are their entropies. Marking the first term in equation 7 as C1 since it is
irrelevant to D, the objective thus is equivalent to:
mDn V G D) T(Pdata(X)+pg(X)) / pdata(Xpe((X)+pg (X)A0(U) logD(x，u)dudx+C1，
(8)
where px (U)
we then have
Pdata(X)Al(u)+Pg(x)Aθ(u)
Pdata(X)+Pg(x)
is a distribution defined on Ω. Let C2 = pdata(X) + pg(x),
minV(G,D)
C1 +	C2
X
pX(U) log D(X, U)dU + h(pX) - h(pX) dx,
(9)
C1 +	C2DKL(pXkD(X))dx +	C2h(pX)dx.
(10)
Observing equation 10, one can see that for any valid X, when DKL(pX kD(X)) achieves its mini-
mum, D obtains its optimal D?, leading to D?(x) = px, which concludes the proof.	口
Next, we move on to the conditions for G to reach its optimal when D = DG? .
Theorem 2.	When D = DG, and there exists an outcome U ∈ Ω such that A1(u) = Ao(U), the
maximum of V(G, DG? ) is achieved if and only ifpg = pdata.
Proof. When pg = pdata, DG? (X, U) =
V?(G,DG?) =	A1 (U) log
u
AI(U)+Ao(u)
2
2A1(U)
, we have:
A1 (U) + A0 (U)
+ A0(U)Iog A1 (UA+(AO(U) du∙	(11)
Subtracting V?(G, DG? ) from V(G, DG? ) gives:
V0(G,DG?)=V(G,DG?)-V?(G,DG?)
=ZZ (Pdata(X)A1(u) + pg (X)A0(U)) log (*(，2P (:7,1(2+ A0(U)) dudx,
X u	2(pdata(X)A1(U) +pg(X)A0(U))
(12)
-2 Xu
pdata(X)A1(U) +pg(X)A0(U)
log
Pdata(X)AI (u)+Pg (x)A0(u)
(Pdata (x)+Pg (X))(Al(u)+A0(u))
dUdx,
(13)
-2DKL (
pdataA1 + pgA0 k (pdata + pg)(A1 + A0)
).
(14)
2
2
4
2
4
3
Published as a conference paper at ICLR 2020
Since V?(G, DG? ) is a constant with respect to G, maximizing V (G, DG? ) is equivalent to maximiz-
ing V 0(G, DG? ). The optimal V0(G, DG? ) is achieved if and only if the KL divergence reaches its
minimum, where:
PdataAI + Pg A0 = (Pdata + Pg )(AI + AO)
2	=	4
(Pdata - Pg)(A1 - A0) = 0,
(15)
(16)
for any valid x and u. Hence, as long as there exists a valid u that A1 (u) 6= A0(u), we have
Pdata = Pg for any valid x.	□
2.3	Discussion
The theoretical analysis gives us more insights on RealnessGAN.
Number of outcomes: according to equation 16, each U ∈ Ω with Ao(u) = Aι(u) may work as a
constraint, pushing Pg towardsPdata. In the case of discrete distributions, along with the increment of
the number of outcomes, the constraints imposed on G accordingly become more rigorous and can
cost G more effort to learn. This is due to the fact that having more outcomes suggests a more fine-
grained shape of the realness distribution for G to match. In Sec.4, we verified that it is beneficial to
update G an increasing number of times before D’s update as the number of outcomes grows.
Effectiveness of anchors: view equation 16 as a cost function to minimize, when Pdata 6= Pg , for
some u ∈ Ω, the larger the difference between Aι(u) and Ao(u) is, the stronger the constraint on G
becomes. Intuitively, RealnessGAN can be more efficiently trained if we choose A0 and A1 to be
adequately different.
Objective of G: according to equation 3, the best way to fool D is to increase the KL divergence
between D(x) and the anchor distribution A0 of fake samples, rather than decreasing the KL diver-
gence between D(x) and the anchor distribution A1 of real samples. It’s worth noting that these two
objectives are equivalent in the original work (Goodfellow et al., 2014). An intuitive explanation is
that, in the distributional view of realness, realness distributions of real samples are not necessarily
identical. It is possible that each of them corresponds to a distinct one. While A1 only serves as an
anchor, it is ineffective to drag all generated samples towards the same target.
Flexibility of RealnessGAN: as a generalization of the standard framework, it is straightforward to
integrate RealnessGAN with different GAN architectures, such as progressive GANs (Karras et al.,
2018; 2019) and conditional GANs (Zhu et al., 2017; Ledig et al., 2017). Moreover, one may also
combine the perspective of RealnessGAN with other reformulations of the standard GAN, such as
replacing the KL divergence in equation 3 with the Earth Mover’s Distance.
2.4	Implementation
In our implementation, the realness distribution Prealness is characterized as a discrete distribution
over N outcomes Ω = {uo, uι,..., UN-ι}. Given an input sample x, the discriminator D returns N
probabilities on these outcomes, following:
eψi(x)
PreaIness(x, Ui) = P ,呼§(X),	(17)
where ψ = (ψ0, ψ1, ..., ψN-1) are the parameters of D. Similarly, A1 and A0 are discrete distri-
butions defined on Ω.
As shown in the theoretical analysis, the ideal objective for G is maximizing the KL divergence
between D(x) of generated samples and A0:
(Gobjectivei)	min -Ez 〜Pz [Dkl (AokD(G(z))].	(18)
However, as the discriminator D is not always at its optimal, especially in the early stage, directly
applying this objective in practice could only lead to a generator with limited generative power. Con-
sequently, a regularizer is needed to improve G. There are several choices for the regularizer, such
as the relativistic term introduced in (Jolicoeur-Martineau, 2019) that minimizes the KL divergence
4
Published as a conference paper at ICLR 2020
between D(x) of generated samples and random real samples, or the term that minimizes the KL
divergence between A1 and D(x) of generated samples, each of which leads to a different objective:
(Gobjective2)	min	Ex〜pda%z〜pz [Dkl(D(x)∣∣D(G(z))] - Ez〜?工[Dkl(A°∣∣D(G(z))], (19)
(Gobjective3)	min	Ez〜pz [Dkl(Ai∣∣D(G(n))] - Ez〜pz [Dkl(Ao∣∣D(G(n))].	(20)
In Sec.4, these objectives are compared. And the objective in equation 19 is adopted as the default
choice.
Feature resampling. In practice, especially in the context of images, we are learning from a limited
number of discrete samples coming from a continuous data manifold. We may encounter issues
caused by insufficient data coverage during the training process. Inspired by conditioning augmen-
tation mentioned in (Zhang et al., 2016), we introduce a resampling technique performed on the
realness output to augment data variance. Given a mini-batch {x0, ..., xM-1} of size M, a Gaus-
sian distributionN(μi, σ/ is fitted on {ψi(xo), ψi(xι),..., ψi(xM-ι)}, which are logits computed
by D on i-th outcome. We then resample M new logits {ψ0(xo),…,ψ0(XM-ι); ψi 〜N(μi, σi)}
for i-th outcome and use them succeedingly.
The randomness introduced by resampling benefits the training of RealnessGAN in two aspects.
First of all, it augments data by probing instances around the limited training samples, leading to
more robust models. Secondly, the resampling approach implicitly demands instances of ψi(x)
to be homologous throughout the mini-batch, such that each outcome reflects realness consistently
across samples. We empirically found the learning curve of RealnessGAN is more stable if feature
resampling is utilized, especially in the latter stage, where models are prone to overfit.
3	Related Work
Generative adversarial network (GAN) was first proposed in (Goodfellow et al., 2014), which jointly
learns a discriminator D and a generator G in an adversarial manner. Due to its outstanding learning
ability, GANs have been adopted in various generative tasks (Radford et al., 2015; Yu et al., 2017;
Zhu et al., 2017), among which Deep Convolutional GAN (DCGAN) (Radford et al., 2015) has
shown promising results in image generation.
Although remarkable progress has been made. GAN is known to suffer from gradient diminish-
ing and mode collapse. Variants of GAN have been proposed targeting these issues. Specifically,
Wasserstein GAN (WGAN) Arjovsky et al. (2017) replaces JS-divergence with Earth-Mover’s Dis-
tance, and Least-Square GAN (LSGAN) (Mao et al., 2017) transforms the objective of G to Pearson
divergence. Energy-based GAN (EBGAN) (Zhao et al., 2017) and Boundary Equilibrium GAN (BE-
GAN) (Berthelot et al., 2017) employ a pre-trained auto-encoder as the discriminator, learning to
distinguish between real and generated samples via reconstruction. Besides adjusting the objective
of GAN, alternative approaches include more sophisticated architectures and training paradigms.
Generally, ProgressiveGAN (Karras et al., 2018) and StyleGAN (Karras et al., 2019) propose a pro-
gressive paradigm, which starts from a shallow model focusing on a low resolution, and gradually
grows into a deeper model to incorporate more details as resolution grows. On the other hand,
COCO-GAN (Lin et al., 2019) tackles high resolution image generation in a divide-and-conquer
strategy. It learns to produce decent patches at corresponding sub-regions, and splices the patches to
produce a higher resolution image.
It’s worth noting that many works on generative adversarial networks have discussed ‘distributions’
(Goodfellow et al., 2014; Radford et al., 2015; Arjovsky et al., 2017), which usually refers to the
underlying distribution of samples. Some of the existing works aim to improve the original objec-
tive using different metrics to measure the divergence between the learned distribution pg and the
real distribution pdata. Nevertheless, a single scalar is constantly adopted to represent the concept of
realness. In this paper, we propose a complementary modification that models realness as a random
variable follows the distribution prealness. In the future work, we may study the combination of real-
ness discriminator and other GAN variants to enhance the effectiveness and stability of adversarial
learning.
5
Published as a conference paper at ICLR 2020
Figure 2: Left: real data sampled from the mixture of 9 Gaussian distributions. Right: samples
generated by Std-GAN, WGAN-GP, LSGAN, HingeGAN and RealnessGAN.
4	Experiments
In this section we study RealnessGAN from multiple aspects. Specifically, 1) we firstly focus on
RealnessGAN’s mode coverage ability on a synthetic dataset. 2) Then we evaluate RealnessGAN on
CIFAR10 (32*32) (Krizhevsky, 2009) and CelebA (256*256) (Liu et al., 2015) datasets qualitatively
and quantitatively. 3) Finally we explore RealnessGAN on high-resolution image generation task,
which is known to be challenging for unconditional non-progressive architectures. Surprisingly, on
the FFHQ dataset (Karras et al., 2019), RealnessGAN managed to generate images at the 1024*1024
resolution based on a non-progressive architecture. We compare RealnessGAN to other popular
objectives in generative adversarial learning, including the standard GAN (Std-GAN) (Radford et al.,
2015), WGAN-GP (Arjovsky et al., 2017), HingeGAN (Zhao et al., 2017) and LSGAN (Mao et al.,
2017).
For experiments on synthetic dataset, we use a generator with four fully-connected hidden layers,
each of which has 400 units, followed by batch normalization and ReLU activation. The discrimina-
tor has three fully-connected hidden layers, with 200 units each layer. LinearMaxout with 5 maxout
pieces are adopted and no batch normalization is used in the discriminator. The latent input z is a
32-dimensional vector sampled from a Gaussian distribution N (0, I). All models are trained using
Adam (Kingma & Ba, 2015) for 500 iterations.
On real-world datasets, the network architecture is identical to the DCGAN architecture in Radford
et al. (2015), with the prior pz(z) a 128-dimensional Gaussian distribution N(0, I). Models are
trained using Adam (Kingma & Ba, 2015) for 520k iterations. To guarantee training stability, we
adopt settings that are proved to be effective for baseline methods. Batch normalization (Ioffe &
Szegedy, 2015) is used in G, and spectral normalization (Miyato et al., 2018) is used in D. For
WGAN-GP we use lr = 1e - 4, β1 = 0.5, β2 = 0.9, updating D for 5 times per G’s update
(Gulrajani et al., 2017); for the remaining models, we use lr = 2e - 4, β1 = 0.5, β2 = 0.999,
updating D for one time per G's update (Radford et al., 2015). Frechet Inception Distance (FID)
(Heusel et al., 2017) and Sliced Wasserstein Distance (SWD) (Karras et al., 2018) are reported as the
evaluation metrics. Unless otherwise stated, A1 and A0 are chosen to resemble the shapes of two
normal distributions with a positive skewness and a negative skewness, respectively. In particular,
the number of outcomes are empirically set to 51 for CelebA and FFHQ datasets, and 3 for CIFAR10
dataset.
4.1	Synthetic Dataset
Since pdata is usually intractable on real datasets, we use a toy dataset to compare the learned dis-
tribution pg and the data distribution pdata. The toy dataset consists of 100, 000 2D points sampled
from a mixture of 9 isotropic Gaussian distributions whose means are arranged in a 3 by 3 grid, with
variances equal to 0.05. As shown in Fig.2, the data distribution pdata contains 9 welly separated
modes, making it a difficult task despite its low-dimensional nature.
To evaluate pg, we draw 10, 000 samples and measure their quality and diversity. As suggested
in (Dumoulin et al., 2016), We regard a sample as of high quality if it is within 4σ from the μ
of its nearest Gaussian. When a Gaussian is assigned with more than 100 high quality samples,
we consider this mode of pdata is recovered in pg . Fig.2 visualizes the sampled points of different
methods, where LSGAN and HingeGAN suffer from significant mode collapse, recovering only a
single mode. Points sampled by WGAN-GP are overly disperse, and only 0.03% of them are of high
quality. While Std-GAN recovers 4 modes in pdata with 32.4% high quality samples, 8 modes are
recovered by RealnessGAN with 60.2% high quality samples. The average σs of these high quality
samples in Std-GAN and RealnessGAN are respectively 0.083 and 0.043. The results suggest that
treating realness as a random variable rather than a single scalar leads to a more strict discriminator
6
Published as a conference paper at ICLR 2020
NUmber of OUtComeS
out=2, Giter=I
out=5, Giter=I
out=10, Giter=I
out=20, Giter=I
out = 30, Gitcr = I
out=40, Giter=I
∏
k_G=1,
k_D=1
Converge
Lf
M H 'F
口口
out=5, Giter=3
⅛outcomes
Figure 3: First row: the results of RealnessGAN when fixing kg = k0 = 1 and increasing the
number of outcomes. Second row: the results of RealnessGAN when kG is properly increased.
Bottom curves: under the settings of second row, the ratio of high quality samples and the number
of recovered modes.
that criticizes generated samples from various aspects, which provides more informative guidance.
Consequently, pg learned by RealnessGAN is more diverse and compact.
We further study the effect of adjusting the number of outcomes in the realness distribution prealness
on this dataset. To start with, we fix kG and kD tobe 1, which are the number of updates for G and D
in one iteration, and adjust the number of outcomes of prealness, A0 and A1. As shown in the first row
of Fig.3, it can be observed that in general G recovers less modes as the number of outcomes grows,
which is a direct result of D becoming increasingly rigorous and imposing more constraints on G.
An intuitive solution is to increase kG such that G is able to catch up with current D. The second
row of Fig.3 demonstrates the converged cases achieved with suitable kGs, suggesting RealnessGAN
is effective when sufficient learning capacity is granted to G. The ratio of high quality samples rHQ
and the number of recovered modes nmode in these cases are plotted in Fig.3. The two curves imply
that besides kG, rHQ and nmode are all positively related to the number of outcomes, validating that
measuring realness from more aspects leads to a better generator.
4.2	Real-world Datasets
As GAN has shown promising results when modeling complex data such as natural images, we
evaluate RealnessGAN on real-world datasets, namely CIFAR10, CelebA and FFHQ, which re-
spectively contains images at 32*32, 256*256 and 1024*1024 resolutions. The training curves of
baseline methods and RealnessGAN on CelebA and CIFAR10 are shown in Fig.4. The qualitative
results measured in FID and SWD are listed in Tab.1. We report the minimum, the maximum, the
mean and the standard deviation computed along the training process. On both datasets, compared
to baselines, RealnessGAN obtains better scores in both metrics. Meantime, the learning process of
RealnessGAN is smoother and steadier (see SD in Tab.1 and curves in Fig.4). Samples of generated
images on both datasets are included in Fig.8.
On FFHQ, we push the resolution of generated images to 1024*1024, which is known tobe challeng-
ing especially for a non-progressive architecture. As shown in Fig.8, despite building on a relatively
simple DCGAN architecture, RealnessGAN is able to produce realistic samples from scratch at such
a high resolution. Quantitatively, RealnessGAN obtains an FID score of 17.18. For reference, our
7
Published as a conference paper at ICLR 2020
(a) FID on CelebA
(b) SWD on CelebA
Figure 4: Training curves of different methods in terms of FID and SWD on both CelebA and
CIFAR10, where the raise of curves in the later stage indicate mode collapse. Best viewed in color.
Table 1: Minimum (min), maximum (max), mean and standard deviation (SD) of FID and SWD on
CelebA and CIFAR10, calculated at 20k, 30k, ... iterations. The best indicators in baseline methods
are underlined.
	Method	FID J				SWD (×103) J			
		Min	Max	Mean	SD	Min	Max	Mean	SD
	Std-GAN	27.02	70.43	34.85	9.40	14.81	68.06	30.58	15.39
	WGAN-GP	70.28	104.60	81.15	8.27	17.85	30.56	22.09	2.93
CelebA	LSGAN	30.76	57.97	34.99	5.15	16.72	23.99	20.39	2.25
	HingeGAN	25.57	75.03	33.89	1061	14.91	54.30	28.86	10.34
	RealnessGAN	23.51	81.3	30.82	7.61	12.72	31.39	17.11	3.59
	Std-GAN	38.56	88.68	47.46	15.96	28.76	57.71	37.55	7.02
	WGAN-GP	41.86	79.25	46.96	5.57	28.17	36.04	30.98	1.78
CIFAR10	LSGAN	42.01	75.06	48.41	772	31.99	40.46	34.75	234
	HingeGAN	42.40	117.49	57.30	20.69	32.18	61.74	41.85	7.31
	RealnessGAN	34.59	102.98	42.30	11.84	22.80	53.38	26.98	5.47
re-implemented StyleGAN (Karras et al., 2019) trained under a similar setting receives an FID score
of 16.12. These results strongly support the effectiveness of RealnessGAN, as StyleGAN is one of
the most advanced GAN architectures so far.
4.3	Ablation Study
The implementation of RealnessGAN offers several choices that also worth digging into. On syn-
thetic dataset, we explored the relationship between the number of outcomes and G’s update fre-
quency. On real-world dataset, apart from evaluating RealnessGAN as a whole, we also studied the
affect of feature resampling, different settings of Ao and Ai and choices of G's objective.
Table 2: Minimum (min), maximum (max),
mean and standard deviation (SD) of FID on
CelebA using different anchor distributions,
calculated at 20k, 30k, ... iterations.
DKL(A1kA0)	Min	Max	Mean	SD
1.66	31.01	96.11	40.75	11.83
5.11	26.22	87.98	36.11	9.83
7.81	25.98	85.51	36.30	10.04
11.05	23.51	81.30	30.82	7.61
Figure 5: Training FID curves of Realness-
GAN with and without feature re-sampling.
8
Published as a conference paper at ICLR 2020
Figure 6: Samples generated by RealnessGAN trained with the ideal objective (equation 18). Top-
row: samples when DKL(A1 kA0) = 11.05. Bottom-row: samples when DKL(A1 kA0) = 33.88.
Table 3: FID scores of G on CIFAR10, trained
with different objectives.
G Objective	FID
Objective1 (equation 18)	36.73
Objective2 (equation 19)	34.59
Objective3 (equation 20)	36.21
DCGAN	38.56
WGAN-GP	41.86
LSGAN	42.01
HingeGAN	42.40
Figure 7: Training curves of RealnessGAN
on CelebA using objective2 (equation 19)
and objective3 (equation 20).
Feature Resampling. Fig.5 shows the training curves of RealnessGAN with and without feature
resampling. It can be noticed that despite the results are similar, feature resampling stabilizes the
training process especially in the latter stage.
Effectiveness of Anchors. Tab.2 reports the results of varying the KL divergence between anchor
distributions A0 and A1 . The FID score indicates that, as the KL divergence between A0 and A1
increases, RealnessGAN tends to perform better, which verifies our discussion in Sec.2.3 that a
larger difference between anchor distributions imposes stronger constraints on G. To further testify,
two different pairs of anchors with similar KL divergences (11.95 and 11.67) are exploited and they
yield comparable FID scores (23.98 and 24.22).
Objective of G. As mentioned in Sec.2.3, theoretically, the objective of G is
maxG Ex〜pg [Dkl(Ao∣∣D(x))]. However, in practice, since D is not always optimal, We
need either a pair of A0 and A1 that are drastically different, or an additional constraint to aid
this objective. Fig.6 shows that, with the ideal objective alone, when the KL divergence between
A0 and A1 is sufficiently large, on CelebA we could obtain a generator with limited generative
power. On the other hand, by applying constraints as discussed in Sec.2.4, G can learn to produce
more realistic samples as demonstrated in Fig.8. Similar results are observed on CIFAR10, where
RealnessGAN obtains comparable FID scores with and without constraints, as shown in Tab.3.
Fig.7 also provides the training curves of RealnessGAN on CelebA using these two alternative
objectives.
5	Conclusion
In this paper, we extend the view of realness in generative adversarial networks under a distributional
perspective. In our proposed extension, RealnessGAN, we represent the concept of realness as a
realness distribution rather than a single scalar. so that the corresponding discriminator estimates
realness from multiple angles, providing more informative guidance to the generator. We prove
RealnessGAN has theoretical guarantees on the optimality of the generator and the discriminator.
On both synthetic and real-world datasets, RealnessGAN also demonstrates the ability of effectively
and steadily capturing the underlying data distribution.
9
Published as a conference paper at ICLR 2020
Figure 8: Images sampled from RealnessGAN, respectively trained on CIFAR10 (top), CelebA (mid-
dle) and FFHQ (bottom).
Acknowledgement We thank Zhizhong Li for helpful discussion on the theoretical analysis. This
work is partially supported by the Collaborative Research Grant of ”Large-scale Multi-modality
Analytics” from SenseTime (CUHK Agreement No. TS1712093), the General Research Funds
(GRF) of Hong Kong (No. 14209217 and No. 14205719), Singapore MOE AcRF Tier 1, NTU
SUG, and NTU NAP.
10
Published as a conference paper at ICLR 2020
References
Martin Arjovsky, SoUmith Chintala, and Leon Bottou. Wasserstein gan. arXiv preprint
arXiv:1701.07875, 2017.
David Berthelot, Thomas Schumm, and Luke Metz. Began: Boundary equilibrium generative ad-
versarial networks. arXiv preprint arXiv:1703.10717, 2017.
Andrew Brock, Jeff Donahue, and Karen Simonyan. Large scale gan training for high fidelity natural
image synthesis. In ICLR, 2019.
Bo Dai, Sanja Fidler, Raquel Urtasun, and Dahua Lin. Towards diverse and natural image descrip-
tions via a conditional gan. In Proceedings of the IEEE International Conference on Computer
Vision,pp. 2970-2979, 2017.
Vincent Dumoulin, IshmaeI Belghazi, Ben Poole, Alex Lamb, Martin Arjovsky, Olivier Mastropi-
etro, and Aaron C. Courville. Adversarially learned inference. ArXiv, abs/1606.00704, 2016.
Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair,
Aaron Courville, and Yoshua Bengio. Generative adversarial nets. In NIPS, pp. 2672-2680,
2014.
Ishaan Gulrajani, Faruk Ahmed, Martin Arjovsky, Vincent Dumoulin, and Aaron Courville. Im-
proved training of wasserstein gans. In Proceedings of the 31st International Conference on
Neural Information Processing Systems, NIPS’17, pp. 5769-5779, USA, 2017. Curran Asso-
ciates Inc. ISBN 978-1-5108-6096-4. URL http://dl.acm.org/citation.cfm?id=
3295222.3295327.
Martin Heusel, Hubert Ramsauer, Thomas Unterthiner, Bernhard Nessler, and Sepp Hochreiter.
Gans trained by a two time-scale update rule converge to a local nash equilibrium. In Advances
in Neural Information Processing Systems, pp. 6626-6637, 2017.
Sergey Ioffe and Christian Szegedy. Batch normalization: Accelerating deep network training by
reducing internal covariate shift. In Proceedings of the 32Nd International Conference on Inter-
national Conference on Machine Learning - Volume 37, ICML’15, pp. 448-456. JMLR.org, 2015.
URL http://dl.acm.org/citation.cfm?id=3045118.3045167.
Alexia Jolicoeur-Martineau. The relativistic discriminator: a key element missing from standard
gan. In ICLR, 2019.
Tero Karras, Timo Aila, Samuli Laine, and Jaakko Lehtinen. Progressive growing of GANs for im-
proved quality, stability, and variation. In International Conference on Learning Representations,
2018. URL https://openreview.net/forum?id=Hk99zCeAb.
Tero Karras, Samuli Laine, and Timo Aila. A style-based generator architecture for generative
adversarial networks. In The IEEE Conference on Computer Vision and Pattern Recognition
(CVPR), June 2019.
Diederik P. Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In Yoshua
Bengio and Yann LeCun (eds.), 3rd International Conference on Learning Representations, ICLR
2015, San Diego, CA, USA, May 7-9, 2015, Conference Track Proceedings, 2015. URL http:
//arxiv.org/abs/1412.6980.
Alex Krizhevsky. Learning multiple layers of features from tiny images. Technical report, 2009.
Christian Ledig, Lucas Theis, Ferenc Huszar, Jose Caballero, Andrew Cunningham, Alejandro
Acosta, Andrew Aitken, Alykhan Tejani, Johannes Totz, Zehan Wang, and Wenzhe Shi. Photo-
realistic single image super-resolution using a generative adversarial network. In 2017 IEEE
Conference on Computer Vision and Pattern Recognition (CVPR), pp. 105-114, July 2017. doi:
10.1109/CVPR.2017.19.
Chieh Hubert Lin, Chia-Che Chang, Yu-Sheng Chen, Da-Cheng Juan, Wei Wei, and Hwann-Tzong
Chen. COCO-GAN: Conditional coordinate generative adversarial network, 2019. URL https:
//openreview.net/forum?id=r14Aas09Y7.
11
Published as a conference paper at ICLR 2020
Ziwei Liu, Ping Luo, Xiaogang Wang, and Xiaoou Tang. Deep learning face attributes in the wild.
In Proceedings of International Conference on Computer Vision (ICCV), December 2015.
Xudong Mao, Qing Li, Haoran Xie, Raymond YK Lau, Zhen Wang, and Stephen Paul Smolley.
Least squares generative adversarial networks. In ICCV, 2017.
Takeru Miyato, Toshiki Kataoka, Masanori Koyama, and Yuichi Yoshida. Spectral normalization
for generative adversarial networks. In International Conference on Learning Representations,
2018. URL https://openreview.net/forum?id=B1QRgziT-.
Alec Radford, Luke Metz, and Soumith Chintala. Unsupervised representation learning with deep
convolutional generative adversarial networks. arXiv preprint arXiv:1511.06434, 2015.
Lantao Yu, Weinan Zhang, Jun Wang, and Yong Yu. Seqgan: Sequence generative adversarial nets
with policy gradient. In AAAI, 2017.
Han Zhang, Tao Xu, Hongsheng Li, Shaoting Zhang, Xiaolei Huang, Xiaogang Wang, and Dim-
itris N. Metaxas. Stackgan: Text to photo-realistic image synthesis with stacked generative ad-
Versarial networks. 2017 IEEE International Conference on Computer Vision (ICCV), pp. 5908-
5916, 2016.
Junbo Zhao, Michael Mathieu, and Yann LeCun. Energy-based generative adversarial network. In
ICLR, 2017.
Jun-Yan Zhu, Taesung Park, Phillip Isola, and Alexei A Efros. Unpaired image-to-image translation
using cycle-consistent adversarial networks. In ICCV, 2017.
12