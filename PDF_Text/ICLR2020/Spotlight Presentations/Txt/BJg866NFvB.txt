Published as a conference paper at ICLR 2020
Estimating counterfactual treatment
OUTCOMES OVER TIME THROUGH ADVERSARIALLY
BALANCED REPRESENTATIONS
Ioana Bica
Department of Engineering Science
University of Oxford, Oxford, UK
The Alan Turing Institute, London, UK
ioana.bica@eng.ox.ac.uk
Ahmed M. Alaa
Department of Electrical Engineering
University of California, Los Angeles, USA
ahmedmalaa@ucla.edu
James Jordon
Department of Engineering Science
University of Oxford, Oxford, UK
james.jordon@wolfson.ox.ac.uk
Mihaela van der Schaar
University of Cambridge, Cambridge, UK
University of California, Los Angeles, USA
The Alan Turing Institute, London, UK
mv472@cam.ac.uk
Ab stract
Identifying when to give treatments to patients and how to select among multiple
treatments over time are important medical problems with a few existing solutions.
In this paper, we introduce the Counterfactual Recurrent Network (CRN), a novel
sequence-to-sequence model that leverages the increasingly available patient ob-
servational data to estimate treatment effects over time and answer such medical
questions. To handle the bias from time-varying confounders, covariates affect-
ing the treatment assignment policy in the observational data, CRN uses domain
adversarial training to build balancing representations of the patient history. At
each timestep, CRN constructs a treatment invariant representation which removes
the association between patient history and treatment assignments and thus can
be reliably used for making counterfactual predictions. On a simulated model of
tumour growth, with varying degree of time-dependent confounding, we show how
our model achieves lower error in estimating counterfactuals and in choosing the
correct treatment and timing of treatment than current state-of-the-art methods.
1	Introduction
As clinical decision-makers are often faced with the problem of choosing between treatment alterna-
tives for patients, reliably estimating their effects is paramount. While clinical trials represent the gold
standard for causal inference, they are expensive, have a few patients and narrow inclusion criteria
(Booth & Tannock, 2014). Leveraging the increasingly available observational data about patients,
such as electronic health records, represents a more viable alternative for estimating treatment effects.
A large number of methods have been proposed for performing causal inference using observational
data in the static setting (Johansson et al., 2016; Shalit et al., 2017; Alaa & van der Schaar, 2017;
Li & Fu, 2017; Yoon et al., 2018; Alaa & van der Schaar, 2018; Yao et al., 2018) and only a few
methods address the longitudinal setting (Xu et al., 2016; Roy et al., 2016; Soleimani et al., 2017;
Schulam & Saria, 2017; Lim et al., 2018). However, estimating the effects of treatments over time
poses unique opportunities such as understanding how diseases evolve under different treatment
plans, how individual patients respond to medication over time, but also which are optimal timings
for assigning treatments, thus providing new tools to improve clinical decision support systems.
The biggest challenge when estimating the effects of time-dependent treatments from observational
data involves correctly handling the time-dependent confounders: patient covariates that are affected
by past treatments which then influence future treatments and outcomes (Platt et al., 2009). For
instance, consider that treatment A is given when a certain patient covariate (e.g. white blood cell
1
Published as a conference paper at ICLR 2020
ωumI0A mouini
(a) Decide treatment plan
O Chemotherapy
Q Radiotherapy
ωumI0A mouini
(b) Decide optimal time of treatment
Patient history Ht3)
ωtunIOA moiunɪ
Counterfactual
outcomes
Best
outcome
Past
Current
time t
Predictions
Time
(c) Decide when to stop treatment
Figure 1: Applicability of CRN in cancer treatment planning. We illustrate 3 patients with different
covariate and treatment histories Ht. For a current time t, CRN can predict counterfactual trajectories
(the coloured dashed branches) for planned treatments in the future. Through the counterfactual
predictions, we can decide which treatment plan results in the best patient outcome (in this case, the
lowest tumour volume). This way, CRN can be used to perform all of the following: choose optimal
treatments (a), find timing when treatment is most effective (b) decide when to stop treatment (c).
count) has been outside of normal range values for several consecutive timesteps. Suppose also that
this patient covariate was itself affected by the past administration of treatment B. If these patients
are more likely to die, without adjusting for the time-dependent confounding (e.g. the changes in
the white blood cell count over time), we will incorrectly conclude that treatment A is harmful to
patients. Moreover, estimating the effect of a different sequence of treatments on the patient outcome
would require not only adjusting for the bias at the current step (in treatment A), but also for the bias
introduced by the previous application of treatment B.
Existing methods for causal inference in the static setting cannot be applied in this longitudinal setting
since they are designed to handle the cross-sectional set-up, where the treatment and outcome depend
only on a static value of the patient covariates. If we consider again the above example, these methods
would not be able to model how the changes in patient covariates over time affect the assignment
of treatments and they would also not be able to estimate the effect of a sequence of treatments on
the patient outcome (e.g. sequential application of treatment A followed by treatment B). Different
models that can handle these temporal dependencies in the observational data and varying-length
patient histories are needed for estimating treatment effects over time.
Time-dependent confounders are present in observational data because doctors follow policies: the
history of the patients’ covariates and the patients’ response to past treatments are used to decide
future treatments (Mansournia et al., 2012). The direct use of supervised learning methods will be
biased by the treatment policies present in the observational data and will not be able to correctly
estimate counterfactuals for different treatment assignment policies.
Standard methods for adjusting for time-varying confounding and estimating the effects of time-
varying exposures are based on ideas from epidemiology. The most widely used among these are
Marginal Structural Models (MSMs) (Robins et al., 2000; Mansournia et al., 2012) which use the
inverse probability of treatment weighting (IPTW) to adjust for the time-dependent confounding
bias. Through IPTW, MSMs create a pseudo-population where the probability of treatment does not
depend on the time-varying confounders. However, MSMs are not robust to model misspecification
in computing the IPTWs. MSMs can also give high-variance estimates due to extreme weights;
computing the IPTW involves dividing by probability of assigning a treatment conditional on patient
history which can be numerically unstable if the probability is small.
We introduce the Counterfactual Recurrent Network (CRN), a novel sequence-to-sequence archi-
tecture for estimating treatment effects over time. CRN leverages recent advances in representation
learning (Bengio et al., 2012) and domain adversarial training (Ganin et al., 2016) to overcome the
problems of existing methods for causal inference over time. Our main contributions are as follows.
Treatment invariant representations over time. CRN constructs treatment invariant represen-
tations at each timestep in order to break the association between patient history and treatment
assignment and thus removes the bias from time-dependent confounders. For this, CRN uses domain
adversarial training (Ganin et al., 2016; Li et al., 2018; Sebag et al., 2019) to trade-off between build-
2
Published as a conference paper at ICLR 2020
ing this balancing representation and predicting patient outcomes. We show that these representations
remove the bias from time-varying confounders and can be reliably used for estimating counterfactual
outcomes. This represents the first work that introduces ideas from domain adaptation to the area of
estimating treatment effects over time. In addition, by building balancing representations, we propose
a novel way of removing the bias introduced by time-varying confounders.
Counterfactual estimation of future outcomes. To estimate counterfactual outcomes for treatment
plans (and not just single treatments), we integrate the domain adversarial training procedure as part
of a sequence-to-sequence architecture. CRN consists of an encoder network which builds treatment
invariant representations of the patient history that are used to initialize the decoder. The decoder
network estimates outcomes under an intended sequence of future treatments, while also updating the
balanced representation. By performing counterfactual estimation of future treatment outcomes, CRN
can be used to answer critical medical questions such as deciding when to give treatments to patients,
when to start and stop treatment regimes, and also how to select from multiple treatments over time.
We illustrate in Figure 1 the applicability of our method in choosing optimal cancer treatments.
In our experiments, we evaluate CRN in a realistic set-up using a model of tumour growth (Geng
et al., 2017). We show that CRN achieves better performance in predicting counterfactual outcomes,
but also in choosing the right treatment and timing of treatment than current state-of-the-art methods.
2	Related work
We focus on methods for estimating treatment effects over time and for building balancing represen-
tations for causal inference. A more in-depth review of related work is in Appendix A.
Treatment effects over time. Standard methods for estimating the effects of time-varying exposures
were first developed in the epidemiology literature and include the g-computation formula, Structural
Nested Models and Marginal Structural Models (MSMs) (Robins, 1986; 1994; Robins et al., 2000;
Robins & Herndn, 2008). Originally, these methods have used predictors performing logistic/linear
regression which makes them unsuitable for handling complex time-dependencies (Hemdn et al.,
2001; Mansournia et al., 2012; Mortimer et al., 2005). To address these limitations, methods that
use Bayesian non-parametrics or recurrent neural networks as part of these frameworks have been
proposed. (Xu et al., 2016; Roy et al., 2016; Lim et al., 2018).
To begin with, Xu et al. (2016) use Gaussian processes to model discrete patient outcomes as
a generalized mixed-effects model and uses the g-computation method to handle time-varying
confounders. Soleimani et al. (2017) extend the approach in Xu et al. (2016) to the continuous
time-setting and model treatment responses using linear time-invariant dynamical systems. Roy et al.
(2016) use Dirichlet and Gaussian processes to model the observational data and estimate the IPTW
in Marginal Structural Models. Schulam & Saria (2017) build upon work from Lok et al. (2008);
Arjas & Parner (2004) and use marked point processes and Gaussian processes to learn causal effects
in continuous-time data. These Bayesian non-parametric methods make strong assumptions about
model structure and consequently cannot handle well heterogeneous treatment effects arising from
baseline variables (Soleimani et al., 2017; Schulam & Saria, 2017) and multiple treatment outcomes
(Xu et al., 2016; Schulam & Saria, 2017).
The work most related to ours is the one of Lim et al. (2018) which improves on the standard MSMs
by using recurrent neural networks to estimate the inverse probability of treatment weights (IPTWs).
Lim et al. (2018) introduces Recurrent Marginal Structural Networks (RMSNs) which also use a
sequence-to-sequence deep learning architecture to forecast treatment responses in a similar fashion
to our model. However, RMSNs require training additional RNNs to estimate the propensity weights
and does not overcome the fundamental problems with IPTWs, such as the high-variance of the
weights. Conversely, CRN takes advantage of the recent advances in machine learning, in particular,
representation learning to propose a novel way of handling time-varying confounders.
Balancing representations for treatment effect estimation. Balancing the distribution of control
and treated groups has been used for counterfactual estimation in the static setting. The methods
proposed in the static setting for balancing representations are based on using discrepancy measures
in the representation space between treated and untreated patients, which do not generalize to multiple
treatments (Johansson et al., 2016; Shalit et al., 2017; Li & Fu, 2017; Yao et al., 2018). Moreover,
due to the sequential assignment of treatments in the longitudinal setting, and due to the change of
3
Published as a conference paper at ICLR 2020
patient covariates over time according to previous treatments, the methods for the static setting are
not directly applicable to the time-varying setting (Herndn et al., 2000; Mansournia et al., 2012).
3	Problem formulation
Consider an observational dataset D = {{x(i), a(i), y(+ι}T=i) ∪{v(i)}}N=ι consisting of information
about N independent patients. For each patient (i), we observe time-dependent covariates Xt(i) ∈ Xt,
treatment received A(ti) ∈ {A1, . . . AK} = Aand outcomes Yt(+i)1 ∈ Yt+1 for T(i) discrete timesteps.
The patient can also have baseline covariates V(i) ∈ V such as gender and genetic information. Note
that the outcome Yt(+i)1 will be part of the observed covariates Xt(+i)1. For simplicity, the patient
superscript (i) will be omitted unless explicitly needed.
We adopt the potential outcomes framework proposed by (Neyman, 1923; Rubin, 1978) and ex-
tended by (Robins & Herndn, 2008) to account for time-varying treatments. Let Y [a] be the
potential outcomes, either factual or counterfactual, for each possible course of treatment a. Let
Ht = (Xt, At-ι, V) represent the history of the patient covariates Xt = (Xi,..., Xt), treatment
assignments At = (Ai,..., At) and static features V. We want to estimate:
E(Yt+τ [a(t, t + T - I)UHt),	(1)
where a(t, t + T 一 1) = [at,... at+τ-i] represents a possible sequence of treatments from timestep t
just until before the potential outcome Yt+τ is observed. We make the standard assumptions (Robins
et al., 2000; Lim et al., 2018) needed to identify the treatment effects: consistency, positivity and no
hidden confounders (sequential strong ignorability). See Appendix B for more more details.
4	Counterfactual Recurrent Network
The observational data can be used to train a supervised learning model to forecast: E(Yt+τ |
A(t, t + τ - 1) = a(t, t + τ 一 1), Ht)∙ However, without adjusting for the bias introduced by time-
varying confounders, this model cannot be reliably used for making causal predictions (Robins et al.,
2000; Robins & Herndn, 2008; Schulam & Saria, 2017). The Counterfactual Recurrent Network
(CRN) removes this bias through domain adversarial training and estimates the counterfactual
outcomes E(Yt+τ[a(t, t + T - 1)]∣fit), for any intended future treatment assignment a(t,t + T 一 1).
Balancing representations. The history Ht = (Xt, At-ι, V) of the patient contains the time-
varying confounders Xt which bias the treatment assignment At ∈ {Ai,... AK} in the observational
dataset. Inverse probability of treatment weighting, as performed by MSMs, creates a pseudo-
population where the probability of treatment At does not depend on the time-varying confounders
(Robins et al., 2000). In this paper, we propose instead building a representation of the history Ht
that is not predictive of the treatment At . This way, we remove the association between history,
containing the time-varying confounders Xt, and current treatment At. Robins (1999) shows that
in this case, the estimation of counterfactual treatment outcomes is unbiased. See Appendix C for
details and for an example of a causal graph with time-dependent confounders.
Let Φ be the representation function that maps the patient history Ht to a representation space R.
To obtain unbiased treatment effects, Φ needs to construct treatment invariant representations such
that P(Φ(Ht) | At = Ai)= … =P(Φ(Ht) | At = AK). To achieve this and to estimate
counterfactual outcomes under a planned sequence of treatments, we integrate the domain adversarial
training framework proposed by Ganin et al. (2016) and extended by Sebag et al. (2019) to the
multi-domain learning setting, into a sequence-to-sequence architecture. In our case, the different
treatments at each timestep are considered the different domains. Note that the novelty here comes
from the use of domain adversarial training to handle the bias from the time-dependent confounders,
rather than the use of sequence-to-sequence models, which have already been applied to forecast
treatment responses (Lim et al., 2018). Figure 2 illustrates our model architecture.
Encoder. The encoder network uses an RNN, with LSTM unit (Hochreiter & Schmidhuber, 1997),
to process the history of treatments At-ι, covariates Xt and baseline features V to build a treatment
invariant representation Φ(Ht), but also to predict one-step-ahead outcomes Yt+i. To achieve this,
the encoder network aims to maximize the loss of the treatment classifier Ga and minimize the loss
4
Published as a conference paper at ICLR 2020
Encoder for building the balancing representation
Decoder for sequence prediction of treatments effects
—
Figure 2: CRN architecture. Encoder builds representation Φ(Ht) that maximizes loss of treatment
classifier Ga and minimizes loss of outcome predictor Gy. Φ(Ht) is used to initialize the decoder,
which continues to update it to predict counterfactual outcomes of a sequence of future treatments.
—
of the outcome predictor network Gy. This way, the balanced representation Φ(Ht) is not predictive
of the assigned treatment At, but is discriminative enough to estimate the outcome Yt+1. To train
this model using gradient descent, we use the Gradient Reversal Layer (Ganin et al., 2016).
Decoder. The decoder network uses the balanced representation computed by the encoder to initialize
the state of an RNN that predicts the counterfactual outcomes for a sequence of future treatments. Dur-
ing training, the decoder uses as input the outcomes from the observational data (Yt+1 , . . . Yt+τ -1),
the static patient features V and the intended sequence of treatments a(t, t + T - 1). The decoder
is trained in a similar way to the encoder to update the balanced representation and to estimate the
outcomes. During testing, we do not have access to ground-truth outcomes; thus, the outcomes
ʌ ʌ
predicted by the decoder (Yt+1, . . . Yt+τ -1) are auto-regressively used instead as inputs. By running
the decoder with different treatment settings, and by auto-regressively feeding back the outcomes,
we can determine when to start and end different treatments, which is the optimal time to give the
treatment and which treatments to give over time to obtain the best patient outcomes.
—
The representation Φ(Ht) is built by applying a fully connected layer, with Exponential Linear
Unit (ELU) activation to the output of the LSTM. The treatment classifier Ga and the predictor
network Gy consist of a hidden layer each, also with ELU activation. The output layer of Ga uses
softmax activation, while the output layer of Gy uses linear activation for continuous predictions. For
categorical outcomes, softmax activation can be used. We follow an approach similar to Lim et al.
(2018) and we split the encoder and decoder training into separate steps. See Appendix E for details.
The encoder and decoder networks use variational dropout (Gal & Ghahramani, 2016) such that the
CRN can also give uncertainty intervals for the treatment outcomes. This is particularity important in
the estimation of treatment effects, since the model predictions should only be used when they have
high confidence. Our model can also be modified to allow for irregular samplings of observations by
using a PhasedLSTM (Neil et al., 2016).
5	Adversarially balanced representation over time
At each timestep t, let the K different possible treatments At ∈ {A1, . . . AK} represent our domains.
As described in Section 4, to remove the bias from time-dependent confounders, we build a represen-
tation of history Ht that is invariant across treatments: P(Φ(Ht) | A1) = ∙ ∙ ∙ = P(Φ(Ht) | AK).
—
This requirement can be enforced by minimizing the distance in the distribution of Φ(Ht) between
any two pairs of treatments. Kifer et al. (2004); Ben-David et al. (2007), propose measuring the
disparity between distributions based on their separability by a discriminatively-trained classifier.
Let the symmetric hypothesis class H consist of the set of symmetric multiclass classifiers, such as
neural network architectures. The H-divergence between all pairs of two distributions is defined in
terms of the capacity of the hypothesis class H to discriminate between examples from the multiple
distributions. Empirically, minimizing the H-divergence involves building a representation where
examples from the multiple domains are as indistinguishable as possible (Ben-David et al., 2007; Li
et al., 2018; Sebag et al., 2019). Ganin et al. (2016) use this idea to propose an adversarial framework
5
Published as a conference paper at ICLR 2020
for domain adaptation involving building a representation which achieves maximum error on a
domain classifier and minimum error on an outcome predictor. Similarly, in our case, we use domain
adversarial training to build a representation of the patient history Φ(HHt) that is both invariant to the
treatment given at timestep t, At and that achieves low error in estimating the outcome Yt+ι.
Let Ga(Φ(Ht); θa) be the treatment classifier with param-
eters θa and let Gξ(Φ(HHt); 9。) be the output correspond-
ing to treatment Aj. Let Gy (Φ(HHt); θy) be the predictor
network with parameters θy. The representation func-
tion Φ is parameterized by the parameters θr in the RNN:
Φ(Ht； θr). Figure 3 shows the adversarial training proce-
dure used.
For timestep t and patient (i), let Lia(θr, θa) be the treat-
ment (domain) loss and let L(y (θr, θy) the outcome loss,
defined as follows:
K
L(ia (θr ,θa) = - X I{a(i)=aj}lθg(Gα(Φ(H t； Or )； θa))
j = 1 t 3
(2)
Ltiy(θr,θy) = kY(+ι - (Gy(Φ(Ht；θ),θy))k2∙	(3)
If the outcome is binary, the cross-entropy loss can be
used instead for Lt,y. To build treatment invariant repre-
sentations and to also estimate patient outcomes, we aim
to maximize treatment loss and minimize outcome loss.
Thus, the overall loss Lt(,iy) at timestep t is given by:
Forward propagation Backpropagation
Figure 3: Training procedure for build-
ing balancing representation.
N
Lt(i)(θr,θy,θa)=XLt(,iy)(θr,θy)-λLt(,ia)(θr,θa),
i=1
(4)
where the hyperparameter λ controls this trade-off between domain discrimination and outcome
prediction. We use the standard procedure for training domain adversarial networks from Ganin
et al. (2016) and we start off with an initial value for λ and use an exponentially increasing schedule
during training. To train the model using backpropagation, we use the Gradient Reversal Layer (GRL)
(Ganin et al., 2016). For more details about the training procedure, see Appendix E.
By using the objective Lf)(θr,θy, θa), we reach the saddle point (θr,θy, θa) that achieves the
equilibrium between domain discrimination and outcome estimation.
(θr,θy ) = arg min Lt (θr ,θy ,θa )
θr,θy
θa
(5)
The result stated in Theorem 1 proves that the treatment (domain) loss part of our objective (from
equation 2) aims to remove the time-dependent confounding bias.
Theorem 1. Let t ∈ {1, 2,... }. For each j = 1,…，K, let Pj denote the distribution of Ht
conditional on At = Aj and let Pjφ denote the distribution of Φ(Ht) conditional on At = Aj. Let
Gja denote the output of Ga corresponding to treatment Aj. Then the minimax game defined by
KK
minmGaxXEHt〜P7 [log(Ga®(Ht)； θa))]	SubbecttO XGa,(φ(Ht)) = 1	⑹
a j=1	j=1
has a global minimum which is attained if and only if P1Φ = P2Φ = ∙∙∙ = PKΦ, i.e. when the learned
representations are invariant across all treatments.
Proof. This result is a restatement of the one in Li et al. (2018). For details, see the Appendix D. □
6
Published as a conference paper at ICLR 2020
A good representation allows us to obtain a low error in estimating counterfactuals for all treatments,
while at the same time to minimize the H-divergence between induced marginal distributions of all
the domains. We use an algorithm that directly minimizes a combination of the H-divergence and
the empirical training margin.
6 Experiments
In real datasets, counterfactual outcomes and the degree of time-dependent confounding are not
known (Schulam & Saria, 2017; Lim et al., 2018). To validate the CRN1, we evaluate it on a
Pharmacokinetic-Pharmacodynamic model of tumour growth (Geng et al., 2017), which uses a state-
of-the-art bio-mathematical model to simulate the combined effects of chemotherapy and radiotherapy
in lung cancer patients. The same model was used by Lim et al. (2018) to evaluate RMSNs.
Model of tumour growth The volume of tumour t days after diagnosis is modelled as follows:
V (t + I)= (1 + Plog( V (t) )- βcC⑴一(αr d⑴+ βrd⑴2) + ∣{t_} )V ⑴	(7)
'----{----' Chemotherapy	Radiotherapy	Noise
Tumor growth
where K, ρ, βc, αr, βr, et are sampled as described in Geng et al. (2017). To incorporate heterogeneity
in patient responses, the prior means for βc and αr are adjusted to create patient subgroups, which
are used as baseline features. The chemotherapy concentration C(t) and radiotherapy dose d(t)
are modelled as described in Appendix F. Time-varying confounding is introduced by modelling
chemotherapy and radiotherapy assignment as Bernoulli random variables, with probabilities pc and
Pr depending on the tumour diameter: pc(t) = σ(DY^(D(t) - δj) andPr (t)= σ( Dmax (S
δr)) where D(t) is the average diameter over the last 15 days, Dmax = 13cm, σ(∙) is the sigmoid
and δc = δr = Dmax/2. The amount of time-dependent confounding is controlled through γc , γr ;
the higher γ? is, the more important the history is in assigning treatments. At each timestep, there
are four treatment options: no treatment, chemotherapy, radiotherapy, combined chemotherapy and
radiotherapy. For details about data simulation, see Appendix F.
Benchmarks We used the following benchmarks for performance comparison: Marginal Structural
Models (MSMs) (Robins et al., 2000), which use logistic regression for estimating the IPTWs and
linear regression for prediction (see Appendix G for details). We also compare against the Recurrent
Marginal Structural Networks (RMSNs) Lim et al. (2018), which is the current state-of-the-art model
in estimating treatment responses. RMSNs use RNNs to estimate the IPTWs and the patient outcomes
(details in Appendix H). To show that standard supervised learning models do not handle the time-
varying confounders we compare against an RNN and a linear regression model, which receive
as input treatments and covariates to predict the outcome (see Appendix I for details). Our model
architecture follows the description in Sections 4 and 5, with full training details and hyperparameter
optimization in Appendix J. To show the importance of adversarial training, we also benchmark
against CRN (λ = 0) a model with the same architecture, but with λ = 0, i.e our model architecture
without adversarial training.
6.1	Evaluate models on counterfactual predictions
Previous methods focused on evaluating the error only for factual outcomes (observed patient
outcomes) (Lim et al., 2018). However, to build decision support systems, we need to evaluate
how well the models estimate the counterfactual outcomes, i.e patient outcomes under alternative
treatment options. The parameters γc and γr control the treatment assignment policy, i.e. the degree
of time-dependent confounding present in the data. We evaluate the benchmarks under different
degrees of time-dependent confounding by setting γ = γc = γr. For each γ we simulate a 10000
patients for training, 1000 for validation (hyperparameter tuning) and 1000 for out-of-sample testing.
For the patients in the test set, for each time t, we also simulate counterfactuals Yt+1, represented by
tumour volume V(t + 1), under all possible treatment options.
1The implementation of the model can be found at https://bitbucket.org/mvdschaar/
mlforhealthlabpub/src/master/alg/counterfactual_recurrent_network/ and at
https://github.com/ioanabica/Counterfactual-Recurrent-Network.
7
Published as a conference paper at ICLR 2020
5%
LU
∞4%
Ω≤
得3%
Z
12%
O
N1%
Linear	一一 RNN
MSM	-*- CRN (λ = 0)
No time dependent
confounding
RMSN
CRN	,k'
∕∙" /1"
,/, *士∙)ii
,ʃ K二一一一
SS 仁公二-，.	J
一-一二一/' Large time-dependent
confounding
0123456789	10
Degree of time-dependend Confunding Y
(a) One-step ahead prediction
5%
4%
3%
2%
1%
Degree of time-dependend ConfUnding Y
(b) Five-step ahead prediction
工事在言三冬W
Figure 4:	Results for prediction of patient counterfactuals.
Figure 4 (a) shows the normalized root mean squared error (RMSE) for one-step ahead estimation of
counterfactuals with varying degree of time-dependent confounding γ. The RMSE is normalized
by the maximum tumour volume: Vmax = 1150cm3. The linear and MSM models provide a
baseline for performance as they achieve the highest RMSE. While the use of IPTW in MSMs helps
when γ increases, using linear modelling has severe limitations. When there is no time-dependent
confounding, the machine learning methods achieve similar performance, close to 0.6% RMSE. As
the bias in the dataset increases, the harder it becomes for the RNN and the CRN (λ = 0) to generalize
to estimate outcomes of treatments not matching the training policy. When γ = 10, CRN improves
by 48.1% on the same model architecture without domain adversarial training CRN (λ = 0).
Our proposed model achieves the lowest RMSE across all values of γ. Compared to RMSNs, CRN
improves by 〜17% when γ > 6. To highlight the gains of our method even for smaller Y, Figure 4
(b) shows the RMSE for five-step ahead prediction (with counterfactuals generated as described in
Section 6.2 and Appendix L). RMSNs also use a decoder for sequence prediction. However, RMSNs
require training additional RNNs to estimate the IPTW, which are used to weight each sample during
the decoder training. For τ -step ahead prediction, IPTW involves multiplying τ weights which can
result in high variance. The results in Figure 4 (b) show the problems with using IPTW to handle the
time-dependent confounding bias. See Appendix K for more results on multi-step ahead prediction.
Balancing representation: To evaluate whether the CRN has indeed learnt treatment invariant
represenations, for γ = 5, we illustrate in Figure 5 the T-SNE embeddings of the balancing rep-
resentations Φ(Ht) built by the CRN encoder for test patients. We color each point by the treat-
ment At ∈ {no treatment, chemotherapy, radiotherapy, combined chemotherapy and radiotherapy}
received at timestep t to highlight the invariance of Φ(HHt) across the different treatments. In Figure
5(b), We show Φ(Ht) only for chemotherapy and radiotherapy for better understanding.
Treatments
No treatment
Chemotherapy
Radiotherapy
Chemo + Radio
Figure 5:	TSNE embedding of the balancing representation Φ(HHt) learnt by the CRN encoder at
different timesteps t. Notice that Φ(Ht) is not predictive of the treatment At given at timestep t.
6.2 Evaluate recommending the right treatment and timing of treatment
Evaluating the models just in terms of the RMSE on counterfactual estimation is also not enough for
assessing their reliability when used as part of decision support systems. In this section we assess
how well the models can select the correct treatment and timing of treatment for several forecasting
horizons τ. We generate test sets consisting of 1000 patients where for each horizon τ and for each
time t in a patient’s trajectory, there are τ options for giving chemotherapy at one oft, . . . t + τ - 1
and τ options for giving radiotherapy at one of t, . . . t + τ - 1. At the rest of the future timesteps, no
treatment is applied. These 2τ treatment plans are assessed in terms of the tumour volume outcome
Yt+τ. We select the treatment (chemotherapy or radiotherapy) that achieves lowest Yt+τ, and within
the correct treatment the timing with lowest Yt+τ . We also compute the normalized RMSE for
8
Published as a conference paper at ICLR 2020
Table 1:		Results for recommending the correct treatment and timing of treatment.								
			Yc	= 5, γr	5		Yc	= 5, Yr =	0		Yc	= 0, Yr =	5
ɪɪ	T	CRN	RMSN	MSM	CRN	RMSN	MSM	CRN	RMSN	MSM
Normalized	3	2.43%	3.16%	6.75%	1.08%	1.35%	3.68%	1.54%	1.59%	3.23%
RMSE	4	2.83%	3.95%	7.65%	1.21%	1.81%	3.84%	1.81%	2.25%	3.52%
	5	3.18%	4.37%	7.95%	1.33%	2.13%	3.91%	2.03%	2.71%	3.63%
	6	3.51%	5.61%	8.19%	1.42%	2.41%	3.97%	2.23%	2.73%	3.71%
	7	3.93%	6.21%	8.52%	1.53%	2.43%	4.04%	2.43%	2.88%	3.79%
Treatment	3	83.1%	75.3%	73.9%	83.2%	78.6%	77.1%	92.9%	87.3%	74.9%
Accuracy	4	82.5%	74.1%	68.5%	81.3%	77.7%	73.9%	85.7%	83.8%	74.1%
	5	73.5%	72.7%	63.2%	78.3%	77.2%	72.3%	83.8%	82.1%	72.8%
	6	69.4%	66.7%	62.7%	79.5%	76.3%	71.8%	78.6%	69.7%	64.5%
	7	71.2%	68.8%	62.4%	72.7%	71.8%	71.6%	71.9%	69.3%	61.2%
Treatment	3	79.6%	78.1%	67.6%	80.5%	76.8%	77.5%	79.8%	75.7%	60.6%
Timing	4	73.9%	70.3%	63.1%	79.0%	77.2%	73.4%	75.4%	71.4%	58.2%
Accuracy	5	69.8%	68.6%	62.4%	78.3%	73.3%	63.6%	66.9%	31.3%	29.5%
	6	66.9%	66.2%	62.6%	73.5%	72.1%	63.9%	65.8%	24.2%	15.5%
	7	64.5%	63.6%	62.2%	70.6%	57.4%	44.2%	63.9%	25.6%	12.5%
predicting Yt+τ. See Appendix L for more details about the test set. The models are evaluated for 3
settings of γc and γr .
Table 1 shows the results for this evaluation set-up. The treatment accuracy denotes the percentage
of patients for which the correct treatment was selected, while the treatment timing accuracy is the
percentage for which the correct timing was selected. Note that when γc = 0 and γr = 5, RMSN
and MSM select the wrong treatment timing for projection horizons τ > 4. CRN performs similarly
among the different policies present in the observational data and achieve the lowest RMSE and
highest accuracy in selecting the correct treatment and timing of treatment.
In Appendix M we also show the applicability of the CRN in more complex medical scenarios
involving real data. We provide experimental results based on the Medical Information Mart for
Intensive Care (MIMIC III) database (Johnson et al., 2016) consisting of electronic health records
from patients in the ICU.
7 Conclusion
Despite its wide applicability, the problem of causal inference for time-dependent treatments has been
relatively less studied compared to problem of causal inference in the static setting. Both new methods
and theory are necessary to be able to harness the full potential of observational data for learning
individualized effects of complex treatment scenarios. Further work in this direction is needed for
proposing alternative methods for handling time-dependent confounders, for modelling combinations
of treatments assigned over time or for estimating the individualized effects of time-dependent
treatments with associated dosage.
In this paper, we introduced the Counterfactual Recurrent Network (CRN), a model that estimates
individualized effects of treatments over time using a novel way of handling the bias from time-
dependent confounders through adversarial training. Using a model of tumour growth, we validated
CRN in realistic medical scenarios and we showed improvements over existing state-of-the-art
methods. We also showed the applicability of the CRN a real dataset consiting of patient electronic
health records. The counterfactual predictions of CRN have the potential to be used as part of
clinical decision support systems to address relevant medical challenges involving selecting the best
treatments for patients over time, identify optimal treatment timings but also when the treatment is no
longer needed. In future work, we will aim to build better balancing representations and to provide
theoretical guarantees for the expected error on the counterfactuals.
9
Published as a conference paper at ICLR 2020
Acknowledgments
We would like to thank the reviewers for their valuable feedback. The research presented in this paper
was supported by The Alan Turing Institute, under the EPSRC grant EP/N510129/1 and by the US
Office of Naval Research (ONR).
References
Alberto Abadie and Guido W Imbens. Matching on the estimated propensity score. Econometrica,
84(2):781-807, 2016.
Ahmed Alaa and Mihaela van der Schaar. Limits of estimating heterogeneous treatment effects:
Guidelines for practical algorithm design. In International Conference on Machine Learning, pp.
129-138, 2018.
Ahmed M Alaa and Mihaela van der Schaar. Bayesian inference of individualized treatment effects
using multi-task gaussian processes. In Advances in Neural Information Processing Systems, pp.
3424-3432, 2017.
Muhammad Ali, Humaira Naureen, Muhammad Haseeb Tariq, Muhammad Junaid Farrukh, Abubakar
Usman, Shahana Khattak, and Hina Ahsan. Rational use of antibiotics in an intensive care unit:
a retrospective study of the impact on clinical outcomes and mortality rate. Infection and Drug
Resistance, 12:493, 2019.
Elja Arjas and Jan Parner. Causal reasoning from longitudinal data. Scandinavian Journal of Statistics,
31(2):171-187, 2004.
Onur Atan, William R Zame, and Mihaela van der Schaar. Learning optimal policies from observa-
tional data. International Conference on Machine Learning CausalML workshop, 2018.
Peter C Austin. An introduction to propensity score methods for reducing the effects of confounding
in observational studies. Multivariate behavioral research, 46(3):399-424, 2011.
Helmut Bartsch, Heike Dally, Odilia Popanda, Angela Risch, and Peter Schmezer. Genetic risk
profiles for cancer susceptibility and therapy response. In Cancer Prevention, pp. 19-36. Springer,
2007.
Shai Ben-David, John Blitzer, Koby Crammer, and Fernando Pereira. Analysis of representations for
domain adaptation. In Advances in neural information processing systems, pp. 137-144, 2007.
Y Bengio, A Courville, and P Vincent. Representation learning: a review and new perspectives. arxiv.
org. 2012.
CM Booth and IF Tannock. Randomised controlled trials and population-based observational research:
partners in the evolution of medical evidence. British journal of cancer, 110(3):551, 2014.
Liesbet De Bus, Bram Gadeyne, Johan Steen, Jerina Boelens, Geert Claeys, Dominique Benoit, Jan
De Waele, Johan Decruyenaere, and Pieter Depuydt. A complete and multifaceted overview of
antibiotic use and infection diagnosis in the intensive care unit: results from a prospective four-year
registration. Critical Care, 22(1):241, 2018.
Shayan Doroudi, Philip S Thomas, and Emma Brunskill. Importance sampling for fair policy
selection. Grantee Submission, 2017.
Yarin Gal and Zoubin Ghahramani. A theoretically grounded application of dropout in recurrent
neural networks. In Advances in neural information processing systems, pp. 1019-1027, 2016.
Yaroslav Ganin, Evgeniya Ustinova, Hana Ajakan, Pascal Germain, Hugo Larochelle, Frangois
Laviolette, Mario Marchand, and Victor Lempitsky. Domain-adversarial training of neural networks.
The Journal of Machine Learning Research, 17(1):2096-2030, 2016.
Changran Geng, Harald Paganetti, and Clemens Grassberger. Prediction of treatment response
for combined chemo-and radiation therapy for non-small cell lung cancer patients using a bio-
mathematical model. Scientific reports, 7(1):13542, 2017.
10
Published as a conference paper at ICLR 2020
Zhaohan Guo, Philip S Thomas, and Emma Brunskill. Using options and covariance testing for long
horizon off-policy policy evaluation. In Advances in Neural Information Processing Systems, pp.
2492-2501, 2017.
Assaf Hallak, Frangois Schnitzler, Timothy Mann, and Shie Mannor. Off-policy model-based
learning under unknown factored dynamics. In International Conference on Machine Learning,
pp. 711-719, 2015.
Miguel A Herndn, Babette Brumback, and James M Robins. Marginal structural models to estimate
the joint causal effect of nonrandomized treatments. Journal of the American Statistical Association,
96(454):440-448, 2001.
Miguel Angel Herndn, Babette Brumback, and James M Robins. Marginal structural models to
estimate the causal effect of zidovudine on the survival of hiv-positive men. Epidemiology, pp.
561-570, 2000.
Sepp Hochreiter and Jurgen Schmidhuber. Long short-term memory. Neural computation, 9(8):
1735-1780, 1997.
William Hoiles and Mihaela Van Der Schaar. A non-parametric learning method for confidently
estimating patient’s clinical state and dynamics. In Advances in Neural Information Processing
Systems, pp. 2020-2028, 2016.
Chanelle J Howe, Stephen R Cole, Shruti H Mehta, and Gregory D Kirk. Estimating the effects
of multiple time-varying exposures using joint marginal structural models: alcohol consumption,
injection drug use, and hiv acquisition. Epidemiology (Cambridge, Mass.), 23(4):574, 2012.
Kosuke Imai and Marc Ratkovic. Covariate balancing propensity score. Journal of the Royal
Statistical Society: Series B (Statistical Methodology), 76(1):243-263, 2014.
Kosuke Imai and David A Van Dyk. Causal inference with general treatment regimes: Generalizing
the propensity score. Journal of the American Statistical Association, 99(467):854-866, 2004.
Nan Jiang and Lihong Li. Doubly robust off-policy value evaluation for reinforcement learning.
arXiv preprint arXiv:1511.03722, 2015.
Fredrik Johansson, Uri Shalit, and David Sontag. Learning representations for counterfactual
inference. In International conference on machine learning, pp. 3020-3029, 2016.
Alistair EW Johnson, Tom J Pollard, Lu Shen, H Lehman Li-wei, Mengling Feng, Mohammad
Ghassemi, Benjamin Moody, Peter Szolovits, Leo Anthony Celi, and Roger G Mark. Mimic-iii, a
freely accessible critical care database. Scientific data, 3:160035, 2016.
Daniel Kifer, Shai Ben-David, and Johannes Gehrke. Detecting change in data streams. In Proceedings
of the Thirtieth international conference on Very large data bases-Volume 30, pp. 180-191. VLDB
Endowment, 2004.
Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. arXiv preprint
arXiv:1412.6980, 2014.
Sheng Li and Yun Fu. Matching on balanced nonlinear representations for treatment effects estimation.
In Advances in Neural Information Processing Systems, pp. 929-939, 2017.
Ya Li, Xinmei Tian, Mingming Gong, Yajing Liu, Tongliang Liu, Kun Zhang, and Dacheng Tao.
Deep domain generalization via conditional invariant adversarial networks. In Proceedings of the
European Conference on Computer Vision (ECCV), pp. 624-639, 2018.
Bryan Lim, Ahmed Alaa, and Mihaela van der Schaar. Forecasting treatment responses over time
using recurrent marginal structural networks. In Advances in Neural Information Processing
Systems, pp. 7493-7503, 2018.
Judith J Lok et al. Statistical modeling of causal effects in continuous time. The Annals of Statistics,
36(3):1464-1507, 2008.
11
Published as a conference paper at ICLR 2020
Mohammad Ali Mansournia, Goodarz Danaei, Mohammad Hossein Forouzanfar, Mahmood Mah-
moodi, Mohsen Jamali, Nasrin Mansournia, and Kazem Mohammad. Effect of physical activity
on functional performance and knee pain in patients with osteoarthritis: analysis with marginal
structural models. Epidemiology, pp. 631-640, 2012.
Mohammad Ali Mansournia, Mahyar Etminan, Goodarz Danaei, Jay S Kaufman, and Gary Collins.
Handling time varying confounding in observational research. bmj, 359:j4587, 2017.
Kathleen M Mortimer, Romain Neugebauer, Mark Van Der Laan, and Ira B Tager. An application of
model-fitting procedures for marginal structural models. American Journal of Epidemiology, 162
(4):382-388, 2005.
Daniel Neil, Michael Pfeiffer, and Shih-Chii Liu. Phased lstm: Accelerating recurrent network
training for long or event-based sequences. In Advances in Neural Information Processing Systems,
pp. 3882-3890, 2016.
Jersey Neyman. Sur les applications de la th6orie des PrObabiliteS aux experiences agricoles: Essai
des principes. Roczniki Nauk Rolniczych, 10:1-51, 1923.
Cosmin Paduraru, Doina Precup, Joelle Pineau, and Gheorghe COmanici. An empirical analysis
of off-policy learning in discrete mdps. In European Workshop on Reinforcement Learning, pp.
89-102, 2013.
Judea Pearl et al. Causal inference in statistics: An overview. Statistics surveys, 3:96-146, 2009.
Robert W Platt, Enrique F Schisterman, and Stephen R Cole. Time-modified confounding. American
journal of epidemiology, 170(6):687-694, 2009.
Doina Precup. Eligibility traces for off-policy policy evaluation. Computer Science Department
Faculty Publication Series, pp. 80, 2000.
James Robins. A new approach to causal inference in mortality studies with a sustained exposure
period—application to control of the healthy worker survivor effect. Mathematical modelling, 7
(9-12):1393-1512, 1986.
James M Robins. Correcting for non-compliance in randomized trials using structural nested mean
models. Communications in Statistics-Theory and methods, 23(8):2379-2412, 1994.
James M Robins. Association, causation, and marginal structural models. Synthese, 121(1):151-179,
1999.
James M Robins and Miguel A Herndn. Estimation of the causal effects of time-varying exposures.
In Longitudinal data analysis, pp. 547-593. Chapman and Hall/CRC, 2008.
James M Robins, Miguel Angel Hernan, and Babette Brumback. Marginal structural models and
causal inference in epidemiology, 2000.
Jason Roy, Kirsten J Lum, and Michael J Daniels. A bayesian nonparametric approach to marginal
structural models for point treatments and a continuous or survival outcome. Biostatistics, 18(1):
32-47, 2016.
Donald B Rubin. Bayesian inference for causal effects: The role of randomization. The Annals of
statistics, pp. 34-58, 1978.
Enrique F Schisterman, Stephen R Cole, and Robert W Platt. Overadjustment bias and unnecessary
adjustment in epidemiologic studies. Epidemiology (Cambridge, Mass.), 20(4):488, 2009.
Peter Schulam and Suchi Saria. Reliable decision support using counterfactual models. In Advances
in Neural Information Processing Systems, pp. 1697-1708, 2017.
Alice Schoenauer Sebag, Louise Heinrich, Marc Schoenauer, Michele Sebag, Lani Wu, and Steven
Altschuler. Multi-domain adversarial learning. In ICLR’19-Seventh annual International Confer-
ence on Learning Representations, 2019.
12
Published as a conference paper at ICLR 2020
Uri Shalit, Fredrik D Johansson, and David Sontag. Estimating individual treatment effect: general-
ization bounds and algorithms. In Proceedings of the 34th International Conference on Machine
Learning-Volume 70,pp. 3076-3085. JMLR. org, 2017.
Hossein Soleimani, Adarsh Subbaswamy, and Suchi Saria. Treatment-response models for coun-
terfactual reasoning with continuous-time, continuous-valued interventions. arXiv preprint
arXiv:1704.02038, 2017.
Adith Swaminathan and Thorsten Joachims. Batch learning from logged bandit feedback through
counterfactual risk minimization. Journal of Machine Learning Research, 16(1):1731-1755,
2015a.
Adith Swaminathan and Thorsten Joachims. The self-normalized estimator for counterfactual learning.
In advances in neural information processing systems, pp. 3231-3239, 2015b.
Philip S Thomas, Georgios Theocharous, and Mohammad Ghavamzadeh. High-confidence off-policy
evaluation. In Twenty-Ninth AAAI Conference on Artificial Intelligence, 2015.
U Waheed, P Williams, S Brett, G Baldock, and N Soni. White cell count and intensive care unit
outcome. Anaesthesia, 58(2):180-182, 2003.
Yanbo Xu, Yanxun Xu, and Suchi Saria. A bayesian nonparametric approach for estimating individu-
alized treatment-response curves. In Machine Learning for Healthcare Conference, pp. 282-300,
2016.
Liuyi Yao, Sheng Li, Yaliang Li, Mengdi Huai, Jing Gao, and Aidong Zhang. Representation learning
for treatment effect estimation from observational data. In Advances in Neural Information
Processing Systems, pp. 2633-2643, 2018.
Jinsung Yoon, James Jordon, and Mihaela van der Schaar. Ganite: Estimation of individualized
treatment effects using generative adversarial nets. International Conference on Learning Repre-
sentations (ICLR), 2018.
13
Published as a conference paper at ICLR 2020
Appendix
A	Extended related work
Causal inference in the static setting: A large number of methods have been proposed to learn
treatment effects from observational data in the static setting. In this case, it is needed to adjust for
the selection bias; bias caused by the fact that, in the observational dataset, the treatment assignments
depend on the patient features. Several ways of handling the selection bias involve using propensity
matching (Austin, 2011; Imai & Ratkovic, 2014; Abadie & Imbens, 2016), building representations
where treated and un-treated populations had similar distributions (Johansson et al., 2016; Shalit et al.,
2017; Li & Fu, 2017; Yao et al., 2018) or performing propensity-aware hyperparameter tuning (Alaa
& van der Schaar, 2017; 2018). However, these methods for the static setting cannot be extended
directly to time-varying treatments (Herndn et al., 2000; Schisterman et al., 2009).
Learning optimal policies: A related problem to ours involves learning the optimal treatment
policies from logged data (Swaminathan & Joachims, 2015a;b; Atan et al., 2018). That is, learning
the treatment option that would give the best reward. Note the difference to the causal inference
setting considered in this paper, where the aim is to learn the counterfactual patient outcomes under
all possible treatment options. Learning all of the counterfactual outcomes is a harder problem and
can also be used for finding the optimal treatment.
A method for learning optimal policies, proposed by Atan et al. (2018) uses domain adversarial
training to build a representation that is invariant to the following two domains: observational data
and simulated randomized clinical trial data, where the treatments have equal probabilities. Atan
et al. (2018) only considers the static setting and aims to choose the optimal treatment instead of
estimating all of the counterfactual outcomes. In our paper the aim is to eliminate the bias from
the time-dependent confounders and reliably estimate all of the potential outcomes; thus, at each
timestep t we build a representation that is invariant to the treatment.
Off-policy evaluation in reinforcement learning: In reinforcement learning, a similar problem to
ours is off-policy evaluation, which uses retrospective observational data, also known as logged bandit
feedback (Hoiles & Van Der Schaar, 2016; PadUrarU et al., 2013; DoroUdi et al., 2017). In this case,
the retrospective observational data consists of sequences of states, actions and rewards which were
generated by an agent operating Under an Unknown policy. The off-policy evalUation methods aim to
Use this data to estimate the expected reward of a target policy. These methods Use algorithms based
on importance sampling (PrecUp, 2000; Thomas et al., 2015; GUo et al., 2017), action-valUe fUnction
approximation (model based) (Hallak et al., 2015) or doUbly robUst combination of both approaches
(Jiang & Li, 2015). Nevertheless, these methods focUs on obtaining average rewards of policies,
while in oUr case the aim is to estimate individUalized patient oUtcomes for fUtUre treatments.
B Assumptions
The standard assUmptions needed for identifying the treatment effects are (Robins & Herndn, 2008;
Lim et al., 2018; SchUlam & Saria, 2017):
Assumption 1: Consistency. If At = at for a given patient, then the potential oUtcome for treatment
at is the same as the observed (factUal) oUtcome: Yt+1 [at] = Yt+1.
Assumption 2: Positivity (Overlap) (Imai & Van Dyk, 2004): If P(At-ι = at-ι, Xt = Xt) = 0
then P(At = at | At-i = at-ι, Xt = Xt) > 0 for all a^
Assumption 3: Sequentialstrongignorability. Yt+ι[at] -LL At | At-ι, Xt, ∀at ∈ A, ∀t.
AssUmption 2 means that, for each timestep, each treatment has non-zero probability of being
assigned. AssUmption 3 means that there are no hidden confoUnders, that is, all of covariates affecting
both the treatment assignment and the oUtcomes are present in the the observational dataset. Note that
while assUmption 3 is standard across all methods for estimating treatment effects, it is not testable in
practice (Robins et al., 2000; Pearl et al., 2009).
14
Published as a conference paper at ICLR 2020
C Time-dependent Confounding
Figure 6 illustrates the causal graphs for a time-varying exposures with 2-steps (Robins et al., 2000).
In Figure 6 (a), the covariate X is a time-dependent confounder because it affects the treatment
assignments and at the same time, its value is changed by past treatments (Mansournia et al., 2017),
as illustrated by the red arrows. Thus, the treatment probabilities at each time t depend on the history
of covariate X and past treatments. Note that Uo and Ui are hidden variables which only affect
the covariates, i.e. they do not have arrows into the treatments. Thus, the no hidden confounders
assumption (Assumption 3) is satisfied.
Figure 6 (a) and (b) illustrate the two cases when there is no bias from time-dependent confounding.
In Figure 6 (a) the treatment probabilities are independent, while in Figure 6 (b) they depend on past
treatments.
(a) Bias from time-dependent confounders.
(a) Option 1 for removing bias from time-dependent
confounders.
(a) Option 2 for removing bias from time-dependent
confounders.
Figure 6:	Causal graphs for 2-step time-varying exposures (Robins et al., 2000). Xo, Xi are patient
covariates, Ao, Ai are treatments, Uo, Ui are unobserved variable and Y2 is the outcome.
Marginal Structural Models Robins et al. (2000). To remove the association between time-
dependent confounders and time-varying treatments, Marginal Structural Models propose using
inverse probability of treatment weighting (IPTW). Without loss of generality, consider the use of
MSMs with univariate treatments, baseline variables and outcomes. The outcome after t timesteps
is parametrized as follows: E[Yt+i | ai,... at, V] = g(ai,... an, V; θ), where g(∙) is usually a
linear function with parameters θ. To remove the bias from the time-dependent confounders present
in the observational dataset, in the regression model g(∙) MSMs weights each patients using either
stabilized weights:
SW(t) = Y , f (A! | Al-i)--	(8)
= f(A“ X ι, A1, V)
or unstabilized weights:
t1
W⑴=Y /(A，| XA — V),	⑼
where f (∙) represents the conditional probability mass function for discrete treatments.
15
Published as a conference paper at ICLR 2020
Inverse probability of treatment weighting (IPTW) creates a pseudo-population where each member
consists of themselves and W - 1 (or SW - 1) copies added though weighting. In this pseudo-
population, Robins Robins (1999) shows that Xt does not predict treatment At, thus removing the
bias from time-dependent confounders.
When using unstabilized weights W, the causal graph in the pseudo-population is the one in Figure 6
(a) where P (At | X t, A t-ι,V) = P (At). On the other hand, when using stabilized weights SW,
causal graph in the pseudo-population is the one in Figure 6 (b) where P(At | Xt, At-ι,V)=
P (At | A t-ι).
Counterfactual Recurrent Networks. Instead of using IPTW, we proposed building a representation
of Xt, At-ι,V that is not predictive of treatment At. At timestep t, we have k different possible
treatments At ∈ {A1, . . . AK}. We build a representation of the history and covariates and treatments
that has the same distribution across the different possible treatments: P(Φ(Xt, At-ι, V) | At =
Ai) = .…=P(Φ(Xt, At-ι, V) | At = AK). By breaking the association between past exposure
and current treatments At , we satisfy the causal graph in Figure 6 (a) and thus we remove the bias
from time-dependent confounders.
16
Published as a conference paper at ICLR 2020
D Proof of Theorem 1
We first prove the following proposition.
Proposition 1. Forfixed Φ, let x0 = Φ(ht). Then the optimal prediction probabilities of Ga are
given by
Gj *"琛⑹
a	∑K=1 Pφ(x0)
Proof. For fixed Φ, the optimal prediction probabilities are given by
K
Ga = arg max	log(Gja(XO))PjΦ(XO)dXO
Ga j=1 x0
K
subject to	Gja(x0) = 1 .
j=1
(11)
Maximising the value function pointwise and applying Lagrange multiplies, we get
Ga=argmaχ X Iog(Ga(XO))Pjφ (XO)+入(X Ga(XO)- 1).
Setting the derivative (w.r.t. Gξ*(χ0)) to 0 and solving for Gξ*(χ0) We get
Ga*(χ0)
(10)
(12)
(13)
	
where λ can now be solved for using the constraint to be λ = - PiK=1 PiΦ(XO). This gives the
result.	□
Proof. (of Theorem 1) By substituting the expression from Proposition 1 into the minimax game
defined in Eq. 6, the objective for Φ becomes
K min X Eχ0 〜Pφ [log 1 j=1	H )i.	(14)
We then note that X EYh log (∑j⅛) )i + K log K	=X (EYh log (PP⅛⅞ )i +log K (15) =X Eχ0~Pφ h log (工 ς5 (PΦ(xo) ) i (16) j = 1	K K i=i=i. Pi (X 〃 =XKL(Pf (x0) K XPiφ(x0))	(17) j=1	i=1 =K ∙ JSD(Pf,...,PK)	(18)
where KL(∙∣∣∙) is the Kullback-Leibler divergence and JSD(∙,…,∙) is the multi-distribution Jensen-
Shannon Divergence (Li et al., 2018). Since Klog K is a constant and the multi-distribution JSD is
non-negative and 0 if and only if all distributions are equal, we have that Pf = ... = PK.	□
17
Published as a conference paper at ICLR 2020
E Training procedure for CRN
Let D
n{xt(i),a(ti),yt(+i)1}tT=(i1)∪{v(i)}oiN=1
be an observational dataset consisting of information
about N independent patients that we use to train CRN. The encoder and decoder networks part of
CRN are trained into two separate steps.
To begin with, the encoder is trained to built treatment invariant representations of the patient history
and to perform one-step ahead prediction. After the encoder is optimized, we use it to compute the
balancing representation br(ti) for each timestep in the trajectory of patient (i). To train the decoder,
we modify the training dataset as follows. For each patient (i), we split their trajectory into shorter
sequences of the τmax timesteps of the form:
brl(i) ∪ {yl(+i)t,al(+i)t,yl(+i)t+1}tτ=m1ax ∪ v(i) ,	(19)
for l = 1, . . . T (i) - τmax. Thus, each patients contributes with T (i) - τmax examples in the dataset
for training the decoder. The different sequences obtained for all patents are randomly grouped into
minibatches and used for training.
The pseudocode in Algorithm 1 shows the training procedure used for the encoder and decoder
networks part of CRN. The model was implemented in TensorFlow and trained on an NVIDIA Tesla
K80 GPU. The Adam optimizer (Kingma & Ba, 2014) was used for training and both the encoder
and the decoder are trained for 100 epochs.
18
Published as a conference paper at ICLR 2020
Algorithm 1 Pseudo-code for training CRN
Input: Training data: D = n{xt(i), at(i), yt(+i)1}tT=(i1) ∪ v(i) oi=1
(1) Encoder optimization: parameters θE,r , θE,a , θE,y.
Learning rate: μ
for p = 1, . . . , max epochs do
λp =----------2--------- - 1
P 1 + exp(-10 ∙ P)
for Batch B = n{xt(i), a(ti), yt(+i)1}tT=(i0) ∪ v(i) oi=1 in epoch do
Compute LE,a(θE,r,θE,a) = |B| Pi∈B PT(I)L (R (θE,r ,θE,a)
Compute LE,y (θE,r, θE,y ) = |B| Pi∈B Pt=I Lt,y (θE,r , θE,y )
A-A	, ∂ ∂LE,y (θE,r ,θE,y )	∂LE,a(θE,r,θE,a)∖
θE,r — θE,r - μ I ------∂θEr--------λP-------∂θE,r-----)
d	j_ d	dLE,y (θE,r,θE,y )
θE,y J θE,y - μ	∂θE,y
∂	^E	l ∂LE,a(θE,r ,θE,a)
θE,a J θE,a - μ------WEa--------
end for
end for
(2)	Compute the encoder balanced representation and use it to initialize the decoder hidden
state.
for i = 1, ..., N do
for t = 1, . . . , T (i) do
br(i) = encoder(x(i), a(i)1, v(i); Θe,t)
end for
end for
(3)	Split dataset in sequences of τmax timesteps:
nbrl(i)∪{yl(+i)t,al(+i)t,yl(+i)t+1}tτ=m1ax∪v(i)oT(i)-τmaxN
l=1	i=1
(4)	Optimize decoder: parameters θD,r , θD,a , θD,y
Learning rate: μ
for p = 1, . . . , max epochs do
λp =----------2----------- - 1
P 1 + exp(-10 ∙ p)
|B|
for Batch B = brl( ) ∪ {yl(+)t, al(+)t, yl(+)t+1}tτ=m0ax ∪ {v(i)} i=1 in epoch do
Compute LD,a(θD,r ,θD,a ) = |B| Pi∈B PTmax L；］a (θD,r ,θD,a)
Compute LD,y (θD,r, θD,y ) = |B| Pi∈B Ptmax Lt,y (θD,r , θD,y )
d . D	t d dLD,y (θD,r,θD,y )	X dLD,a(θD,r ,θD,a)∖
θD,r J θD,r	-	μ I ∂θD^	λP	∂θD^	)
θ ʃ θ	..dLD,y (θD,r ,θD,y)
θD,y J θD,y	-	μ ∂θ^
∂	^ ∂	l ∂LD,a(θD,r,θD,a )
θD,a J θD,a - μ------MDa---------
end for
end for
Output: Trained CRN encoder (parameters θE,r, θE,a, θE,y) and trained CRN decoder (parameters
θD,r , θD,a , θD,y . )
19
Published as a conference paper at ICLR 2020
F Pharmacokinetic-Pharmacodynamic Model of tumour growth
To evaluate the CRN on counterfactual estimation, we need access to the data generation mechanism
to build a test set that consists of patient outcomes under all possible treatment options. For this
purpose, we use the state-of-the-art pharmacokinetic-pharmacodynamic (PK-PD) model of tumour
growth proposed by Geng et al. (2017) and also used by Lim et al. (2018) for evaluating RMSMs.
The PK-PD model characterizes patients suffering from non-small cell lung cancer and models the
evolution of their tumour under the combined effects of chemotherapy and radiotherapy. In addition,
the model includes different distributions of tumour sizes based on the cancer stage at diagnosis.
Model of tumour growth The volume of tumour t days after diagnosis is modelled as follows:
V(t + I)= (1+ PlOg(TjTTTT)- βcC⑴-(αrd⑴+ βrd⑴2) + ɛt ^V⑴
∖	V (t)	'{}	×---------{z--------} |{^}7	(20)
|----{-----} Chemotherapy	Radiotherapy	NOise
TumOr grOwth
where the parameters K, ρ, βc , αr , βr are sampled from the prior distributions described in (Geng
et al., 2017) and et 〜N(0,0.012) is a noise term that accounts for randomness in the tumour growth.
To incorporate heterogeneity among patient responses, due to, for instance, gender or genetic factors
Bartsch et al. (2007), the prior means for βc and αr are adjusted to create three patient subgroups
S(i) ∈ {1, 2, 3} as described in Lim et al. (2018). This way, we incorporate in the model of tumour
growth specific characteristics that affect the patient’s individualized response to treatments. Thus,
the prior mean μβc of βc and the prior mean μar of a『are augmented as follows.
0 ziʌ	ʃ 1.1μβc, if S⑴=3
“βc(" = [μβc, otherwise
0	= ∫1.1μαr, ifS⑺=1
〃ar "	μ μαr, otherwise
(21)
where μβc and μar are the mean parameters from Geng et al. (2017) and μ^c (i) and μ∖r ⑴ are the
parameters used in the data simulation. The patient subgroup S(i) ∈ {1, 2, 3} is used as baseline
features.
The chemotherapy drug concentration follows an exponential decay with half life of 1 day:
∙-v
C(t) = C(t) + C(t - 1)/2,	(22)
where C(t) = 5.0mg∕m3 of Vinblastine if chemotherapy is given at time t. d(t) = 2.0Gy fractions
of radiotherapy if the radiotherapy treatment is applied at timestep t.
Time-varying confounding is introduced by modelling chemotherapy and radiotherapy assignment as
Bernoulli random variables, with probabilities pc and pr depending on the tumour diameter:
Pc(t) = σ DJc1-(D(t) - δc)[	Pr(t) = σ(yγ^(D(t) - δr)) ,	(23)
Dmax	Dmax
where D(t) is the average tumour diameter over the last 15 days, DmaX = 13cm is the maximum
tumour diameter and σ(∙) is the sigmoid activation function. The parameters δc and δr are set to
δc = δr = DmaX/2 such that there is 0.5 probability of receiving treatment when tumour is half of
its maximum size. γc, γr control the amount of time-dependent confounding; the higher γ? is, the
more important the history of tumour diameter is in assigning treatments. Thus, at each timestep,
there are four treatment options options: no treatment (A1), chemotherpy (A2), radiotherapy (A3),
combined chemotherapy and radiotherapy (A4).
Since the work most relevant to ours is the one of Lim et al. (2018) we used the same data simulation
and same settings for γ = γc = γr as in their case. When γ = 0, there is no time-dependent
confounding and the treatments are randomly assigned. By increasing γ we increase the influence of
the volume size history (encoded in D(t)) on the treatment probability. For example, assume D(t)=
3Dmax. From equation (7), the probability of chemotherapy in this case is pc(t) = σ( DYc (D(t)-
Dmax)) = σ(0.25γc), where σ(∙) is the sigmoid function. When Y = 1, pc(t) = 0.56, when Y = 5,
pc(t) = 0.77 and when γ = 10, pc(t) = 0.92 in this example. γ can be increased further to increase
the bias. However, the values used in the experiments evaluate the model on a wide range of settings
for the time-dependent confounding bias.
20
Published as a conference paper at ICLR 2020
G Marginal S tructural Models
Marginal Structural Models (Robins et al., 2000; Herngn et al., 2001) have been widely used in
epidemiology and as part of follow up studies. In our case, we would like to estimate the effects of a
sequence of treatments in the future given the current patient history:
E(Yt+τ | A(t, t + T - 1)= a(t, t + T - 1), Ht) = g(τ, a(t, t + T - 1), Ht),	(24)
where g is a generic function and a(t, t + T - 1) = [at,... at+丁-ι] represents a possible sequence of
treatments from timestep t just until before the potential outcome Yt+τ is observed. After removing
the bias form time-dependent confounders, E(Yt+τ | A(t,t + T - 1) = a(t,t + T - 1), Ht)=
E(Yt+τ [a(t,t + t - 1)].
Note that for implementing MSMs, we encode the treatments at timestep t in the model of tumour
growth as At = [At,c, At,d] to indicate the binary application of chemotherapy and radiotherapy.
In order to remove the time-dependent confounding bias and estimate future outcomes, we use the
stabilized weights of MSMs to weight each patient in the dataset:
SW(t, T)
Y+τ	f(An | An-l)
n=t f (An | An-1, Xn, V)
t+τ
Y
n=t
Πk∈{c,d} f(An,k | AnT)
Qk∈{c,d} f (An,k | An-1,Xn, V)
(25)
where f (∙) represents the conditional probability mass function for discrete treatments.
We adopt the implementation in (Herngn et al., 2001; Howe et al., 2012; Lim et al., 2018) for MSMs
and use logistic regression for estimating the propensity weights as follows:
k	t-1
f(At,k I At-i) = σ(Xωk(X At,j))	(26)
j =1	i=1
t-1
f (At,k IH t) = σ( X φk(X At,k)+ wιχt + w2X_1 + w3V)	(27)
k∈{c,d}	i=1
where ω?, φ? and w? are regression coefficients, k ∈ {c, d} indicates the chemotherapy or radiother-
apy treatments and σ(∙) is the sigmoid function.
For predicting the outcome, the following regression model is used, where each individual patient is
weighted by its propensity score:
t+τ -1
g(τ,a(t,t + T - 1), Ht) = X Bk( X An,k) + liχt + l2χt-l + l3V	(28)
k∈{c,d}	n=t
where β? and l? are regression coefficients.
MSMs do not require hyperparameter tuning so we use the patients from both the train and validation
sets for training.
H Recurrent Marginal Structural Networks
MSMs are very sensitive to model mis-specification in computing the propensity weights and
estimating the outcomes. Recurrent Marginal Structural Models (RMSNs) (Lim et al., 2018) overcome
this problem by using recurrent neural networks to estimate the propensity scores and to build the
outcome model. RNNs are more robust to changes in the treatment assignment policy. RMSNs were
implemented as descried in Lim et al. (2018)2.
For implementing RMSNs, we also encode the treatments at timestep t in the model of tumour
growth as At = [At,c, At,d] to indicate the binary application of chemotherapy and radiotherapy.
The propensity weights are estimated using recurrent neural networks as follows:
f(At,k ∣ A t-i)= RNNSWn (A t-ι)	f(At,k ∣ X t, A 1) = RNNSWd (A t-ι,X t, V)	(29)
2We used the publicly available implementation from https://github.com/sjblim/rmsn_nips_
2018.
21
Published as a conference paper at ICLR 2020
For predicting one-step-ahed outcome, R-MSNs use an encoder network:
g(1, a(t, t), Ht)= RNNE(at, At-1,又t, V),	(30)
where in the loss function, each patient is weighted by their stabilized IPTW.
For estimating the treatment responses for a sequence of treatments in the future, RMSNs use a
decoder network:
g(τ, a(t, t + T - 1), H t) = RNNd (at,..., at+τ-i, A t-1, X t, V).	(31)
See Lim et al. (2018) for more details about the R-MSNs model architecture and training procedure
of the propensity weights, encoder and decoder networks. Tables 2 and 3 show the hyperparameter
search ranges used to optimize this model for evaluation in our paper. The hyperparameters were
selected in the same way as proposed by Lim et al. (2018), based on the error on the factual outcomes
in the validation dataset. All of the models are trained using Adam optimizer for 100 epochs.
Table 2: Hyperparameter search range for propensity networks and encoder (same as in Lim et al.
(2018)). C is the size of the input.
HyPerParameter	Search range
Iterations of Hyperparameter Search	50
Learning rate	0.01, 0.005, 0.001
Minibatch size	64, 128, 256
RNN state size	0.5C, 1C, 2C, 3C, 4C
Dropout rate	0.1, 0.2, 0.3, 0.4, 0.5
Max Gradient Norm	0.5, 1.0, 2.0
Table 3: Hyperparameter search range for decoder (same as in Lim et al. (2018)). C is the input size.
Hyperparameter	Search range
Iterations of Hyperparameter Search	20
Learning rate	0.01, 0.001, 0.0001
Minibatch size	256, 512, 1024
RNN state size	1C, 2C, 4C, 8C, 16C
Dropout Rate	0.1, 0.2, 0.3, 0.4, 0.5
Max Gradient Norm	0.5, 1.0, 2.0, 4.0
I	Baseline RNN and linear model
For the baseline linear model, we fit the same regression model used for Marginal Structural Networks,
but without using the IPTW. The baseline RNN uses an LSTM unit and, at each timestep, receives as
input the current treatment, the patient covariates and the patient static features to perform one-step-
ahead prediction. To have a model of similar capacity to the CRN (similar number of parameters),
we add a fully connected layer on top of the output of the LSTM unit in order to obtain the outcomes.
Table 4 shows the hyperparameter search range used to optimize this model. The hyperparameters
were selecting according to the error on the factual outcomes in the validation set. We train the
baseline RNN using the Adam optimizer for 100 epochs.
22
Published as a conference paper at ICLR 2020
Table 4: Hyperparameter search range for baseline RNN model. C is the size of the input.
HyPerParameter	Search range
Iterations of Hyperparameter Search	50
Learning rate	0.01, 0.001, 0.0001
Minibatch size	64, 128, 256
RNN hidden units	0.5C, 1C, 2C, 3C, 4C
FC hidden units	0.5C, 1C, 2C, 3C, 4C
RNN dropout probability	0.1, 0.2, 0.3, 0.4, 0.5
J Hyperparameter optimization for CRN
As described in Appendix C, the dataset for training the decoder are used by splitting the sequences
of the patients in the training set. This creates a larger dataset for training (where each patient
(i) contributes T (i) - τmax times to the dataset) which requires a different hyperparameter search
range. Moreover, the balancing representations computed by the encoder are used to initialize the
state of the RNN for the decoder. Thus, the decoder RNN size is equal to the size of the balancing
representation size of the encoder. Table 5 shows the hyperparameter search ranges for the encoder
and decoder networks in CRN. We selected hyperparameters based on the error of the model on the
factual outcomes in the validation dataset. All models are trained for 100 epochs.
In addition, Tables 6 and 7 illustrate the optimal hyperparameters chosen.
Table 5: Hyperparameter search range for CRN encoder. C is the size of the input and R is the size of
the balancing representation.
Hyperparameter	Search range encoder	Search range decoder
Iterations of Hyperparameter Search	50	30
Learning rate	0.01, 0.001, 0.0001	0.01, 0.001, 0.0001
Minibatch size	64, 128, 256	256, 512, 1024
RNN hidden units	0.5C, 1C, 2C, 3C, 4C	Balancing representation size of encoder
Balancing representation size	0.5C, 1C, 2C, 3C, 4C	0.5C, 1C, 2C, 3C, 4C
FC hidden units	0.5R, 1R, 2R, 3R, 4R	0.5R, 1R, 2R, 3R, 4R
RNN dropout probability	0.1, 0.2, 0.3, 0.4, 0.5	0.1, 0.2, 0.3, 0.4, 0.5
23
Published as a conference paper at ICLR 2020
Table 6: Optimal hyperparameters for the CRN encoder when different degrees of time-dependent
confounding are applied in the model of tumour growth. The parameters γc and γr measure the
degree of time-dependent confounding applied. When γc and γr are set to the same value, we denote
this with γ? .
	γ? = 0	γ? = 1	γ? =2		Y? = 3	Y? = 4	Y? = 5
Learning rate	0.001	0.1	0.001		0.01	0.01	0.001
Minibatch size	64	64	64		128	64	128
RNN hidden units	12	18	24		18	24	24
Balancing representation size	18	18	12		18	6	12
FC hidden units	18	18	36		54	24	48
RNN dropout probability	0.1	0.1	0.1		0.2	0.2	0.1
	γ? = 6	γ? = 7	Y =8		Y? = 9	Y? = 10	
Learning rate	0.001	0.001	o.o1 ^^		0.001	0.01	
Minibatch size	64	64	128		128	128	
RNN hidden units	24	18	12		24	24	
Balancing representation size	12	18	24		18	12	
FC hidden units	48	72	12		36	12	
RNN dropout probability	0.1	0.2	0.1		0.1	0.1	
	γc = 0,	r=5	Yc =5, Yr =	0			
Learning rate	0.01		0.001				
Minibatch size	128		64				
RNN hidden units	12		12				
Balancing representation size	18		24				
FC hidden units	36		96				
RNN dropout probability	0.1		0.1				
Table 7: Optimal hyperparameters for the CRN decoder when different degrees of time-dependent
confounding are applied in the model of tumour growth. The parameters γc and γr measure the
degree of time-dependent confounding applied. When γc and γr are set to the same value, we denote
this with γ?
	Y? 二 1	Y? = 2	Y? = 3	Y? = 4	Y? = 5
Learning rate	0.001	0.001	0.001	0.001	0.001
Minibatch size	1024	1024	512	1024	1024
RNN hidden units	18	12	18	6	12
Balancing representation size	18	18	6	18	3
FC hidden units	18	36	18	72	6
RNN dropout probability	0.1	0.2	0.3	0.1	0.1
	Yc = 0, Yr = 5	Yc = 5, Yr = 0			
Learning rate	0.01	0.001			
Minibatch size	512	1024			
RNN hidden units	18	24			
Balancing representation size	18	12			
FC hidden units	36	24			
RNN dropout probability	0.1	0.03			
24
Published as a conference paper at ICLR 2020
K Full results for counterfactual prediction
K. 1 Multi-step ahead prediction of counterfactuals
Figure 7 shows the normalized RMSE for multiple step-ahead prediction of counterfactuals. The
RMSE is normalized by the maximum tumour volume: Vmax = 1150cm3. The counterfactuals in this
case are generated as described in Section 6.3 and Appendix I. We notice that performance gains of
CRN compared to RMSN increase with the number of future timesteps for which the counterfactuals
are estimated.
1	2	3	4	5
Degree of time-dependend ConfUnding Y
(a) Two-step ahead prediction
1	2	3	4	5
Degree of time-dependend ConfUnding Y
(b) Three-step ahead prediction
1	2	3	4	5
Degree of time-dependend ConfUnding Y
(c) Four-step ahead prediction
5%
3%2%
山s≡κP3z=eE-IoN
%
1	2	3	4	5
Degree of time-dependend ConfUnding Y
(d) Five-step ahead prediction
% % % % % %
6 5 4 3 2 1
山SWH P3z=eE-IoN
1	2	3	4	5
Degree of time-dependend ConfUnding Y
(e) Six-step ahead prediction
Figure 7: Results for prediction of patient counterfactuals for multiple steps ahead.
25
Published as a conference paper at ICLR 2020
K.2 Detailed results for the counterfactual predictions
Tables 8 and 9 show detailed results for the counterfactual predictions.
Table 8: Normalized RMSE for one-step-ahead prediction of counterfactuals. The parameter γ
measures the degree of time-dependent confounding applied.
	γ=0	γ=1	Y = 2	γ=3	γ=4	γ=5
Linear (no IPTW)	0.99%	1.08%	1.36%	1.68%	2.11%	2.77%
MSM	0.99%	1.08%	1.34%	1.63%	2.02%	2.61%
RNN	0.70%	0.70%	0.84%	1.05%	1.24%	1.69%
CRN (λ = 0)	0.66%	0.77%	0.92%	0.95%	1.24%	1.54%
RMSN	0.60%	0.61%	0.72%	0.81%	0.94%	1.23%
CRN	0.56%	0.57%	0.62%	0.67%	0.87%	1.20%
	γ=6	γ=7	γ 二 8	γ=9	γ=10	
Linear (no IPTW)	3.55%	4.15%	4.80%	5.09%	5.22%	
MSM	3.30%	3.79%	4.30%	4.47%	4.47%	
RNN	2.03%	2.52%	2.88%	3.79%	4.01%	
CRN (λ = 0)	1.98%	2.42%	2.73%	3.17%	3.57%	
RMSN	1.70%	2.18%	2.37%	2.77%	2.83%	
CRN	1.48%	1.56%	2.05%	2.36%	2.41%	
Table 9: Normalized RMSE for τ-step-ahead prediction of counterfactuals. The parameter γ measures
the degree of time-dependent confounding applied.
	γ=1	Y = 2	Y=3	Y=4	Y=5
τ = 2 RMSN	0.90%	1.15%	1.53%	2.14%	2.91%
CRN	0.84%	0.96%	1.21%	1.46%	2.45%
τ = 3 RMSN	0.97%	1.36%	1.87%	2.44%	3.47%
CRN	0.86%	0.96%	1.47%	1.51%	2.84%
τ = 4 RMSN	1.24%	1.79%	2.60%	3.33%	3.88%
CRN	0.91%	1.08%	1.74%	1.76%	2.82%
τ = 5 RMSN	1.51%	2.13%	3.06%	4.07%	4.58%
CRN	0.85%	1.10%	1.73%	2.00%	3.43%
τ = 6 RMSN	2.10%	2.89%	3.06%	4.16%	6.32%
CRN	1.16%	1.52%	2.29%	2.66%	4.91%
26
Published as a conference paper at ICLR 2020
L Test set generation for evaluating timing of treatment
In order to evaluate how well the models select the correct treatment and timing of treatment we
simulate counterfactual outcomes as follows. We generate 1000 test samples using the model of
tumour growth described in Section 6. Let HHt be the current history of the patient and let T be a
future time horizon. For each timestep in the future, we have 4 treatment options at: no treatment
(A0), chemotherapy (A1), radiotherapy (A2), chemotherapy and radiotherapy. (A3).
Using the model of tumour growth where the outcome Yt+τ is given by the volume of the tumour,
we generate the following 2τ counterfactuals:
Chemotherapy application
Yt+τ Yt+τ	| at | at	A1 , at+1 A0 , at+1	A0, . A1 , .	. . at+τ -1 . . at+τ -1	=Ao, Ht =Ao, Ht	(32) (33)
... Yt+τ	| at	A0 , at+1	A0, .	. . at+τ -1	= Aι,H t	(34)
Radiotherapy application						
Yt+τ	| at	A2 , at+1	A0, .	. . at+τ -1	=Ao, H t	(35)
Yt+τ	| at	A0 , at+1	A2, .	. . at+τ -1	=Ao, Ht	(36)
... Yt+τ	| at	A0 , at+1	A0, .	. . at+τ -1	=A2, Ht	(37)
We perform this for each patient in the test set and at each time t in the history. For instance, for a
patient with 50 timesteps in the model of tumour growth and for time horizon τ = 3, we generate
2 ∙ 3 ∙ 50 = 300 counterfactuals.
Using the true generated couterfactual data, we select the treatment that has the lowest Yt+τ among
the τ options generated for each treatment. Then, we select the time of applying treatment (among
t, t+1, . . . t+τ- 1) that resulted in the lowest Yt+τ. For each model, we generate the counterfactuals
under the same treatment plans and patient histories. Then, we perform the selection of treatment and
timing of treatment in the same way and we compare these with the true ones. Note that in order to
account for numerical instability (two outcomes Yt+τ having very similar values), we consider two
outcomes the same if they are within = 0.001 of each other.
27
Published as a conference paper at ICLR 2020
M	Results on factual prediction on MIMIC III
Using the Medical Information Mart for Intensive Care (MIMIC III) (Johnson et al., 2016) database
consisting of electronic health records from patients in the ICU, we also show how the CRN can
be used on a real medical dataset. From MIMIC III we extracted the patients on antibiotics, with
trajectories up to 30 timesteps, thus obtaining a dataset with 3487 patients. For each patient, we
extracted 25 patient covariates including lab tests and vital signs measured over time, as well as static
patient features such as age and gender.
We used a binary treatment at each timestep indicating whether the patient was administered antibi-
otics or not. Note that for the longitudinal covariates we used aggregate value for each day since the
ICU admission. The reason for this is because antibiotic treatment is decided daily for the patient.
We split the dataset into 2826/313/348 patients for training, validation and testing respectively. We
performed hyperparameter optimization on the validation patient set, using the search ranges in Table
5 and we again selected hyperparameters based on the error on the factual outcomes.
We estimate the individualized effect of antibiotics assigned over time on the patient’s white blood
cell count. A high white blood cell count is associated with severe illness and poor outcome for ICU
patients (Waheed et al., 2003). Antibiotic administration in the ICU aims to reduce the white blood
cell count. However, the effectiveness of the antibiotics treatment in reducing the white blood cell
count is highly dependent on the time they are administered with respect to the history of the patient
covariates. In this context we again have time-dependent confounders: the patient features change
over time and are affected by the previous administration of antibiotics. Moreover, the history of
the patient features also determines antibiotics administration and affects future patient outcomes
(De Bus et al., 2018; Ali et al., 2019).
In Table 10 we report the root mean squared error for factual prediction of the patients’ white blood
cell count for multiple prediction horizons τ . Note that for this dataset we do not have access to
counterfactual data, which is why we report error on factual predictions.
Table 10: RMSE for τ -step-ahead prediction of factual outcomes on MIMIC III.
T=1 T=2 T=3 T=4
RMSN^^2.84	387	4~46	4~79~
CRN	2.68	3.54	4.07	4.67
We notice that CRN also achieves better performance than RMSN in estimating factual outcomes in a
real-world dataset containing electronic health records. In this context, where couterfactual data is
not available, domain expert knowledge is required to validate the model’s counterfactual predictions
under other antibiotic treatment alternatives. This further medical validation is outside the scope of
this paper.
28