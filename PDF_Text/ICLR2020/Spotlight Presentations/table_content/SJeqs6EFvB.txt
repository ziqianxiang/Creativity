Table 1: Statistic of OneDiff dataset. See appendix for more information of other dataset.
Table 2: Evaluation of model on the OneDiff dataset: accuracy (%).
Table 3:	REP_TYPE accuracies with location+op.			Table 5: Overall OneDiff accuracy with location.								Bug Type	Amount	TAJS	HOPPITY	Value	GGNN-Rep	GGNN-RNN	Hoppity	Undefined Property Functional Bug	11	0^^ 0		1 3Top-1	63.8%	60.3%	69.1%	Refactoring	12	0		1Top-3	67.6%	63.6%	73.4%	Total	30^^	0^^	5	Table 4:	REP_VAL accuracies with location+op.			Table 6: Comparison with TAJS.				GGNN: Allamanis et al. (2018), uses Gated Graph Neural Networks (GGNN) for two specific bugrepair tasks: VARMISUSE, in which the model learns to select the correct variable that should beused at a given location, and VARNAMING, in which the model predicts a variable name based onits usage. We adapt these tasks to compare with Hoppity on the REP_TYPE and REP_VAL tasks.
Table 4:	REP_VAL accuracies with location+op.			Table 6: Comparison with TAJS.				GGNN: Allamanis et al. (2018), uses Gated Graph Neural Networks (GGNN) for two specific bugrepair tasks: VARMISUSE, in which the model learns to select the correct variable that should beused at a given location, and VARNAMING, in which the model predicts a variable name based onits usage. We adapt these tasks to compare with Hoppity on the REP_TYPE and REP_VAL tasks.
Table 7: Evaluation of models on each dataset. The Random model is evaluated on the OneDiffdataset and is shown for comparison.
Table 8: Results on true/false predictions.
Table 9: Accuracy vs beam sizes.
Table 10: Data collection statistics.
Table 11: Ablation study with different graph embedding parameterizations and different number oflayers. Full end-to-end repair accuracy as well as the accuracies for each primitives are reported. Allthe numbers are for top-1 prediction.
