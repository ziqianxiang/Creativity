Table 1: Comparison of our proposed method, CompGCN with other Graph Convolutional meth-ods. Here, K denotes the number of layers in the model, d is the embedding dimension, B rep-resents the number of bases and |R| indicates the total number of relations in the graph. Overall,CompGCN is most comprehensive and is more parameter efficient than methods which encoderelation and direction information.
Table 2: Reduction of COMPGCN to several existing Graph Convolutional methods. Here, αrk is arelation specific scalar, Wrk denotes a separate weight for each relation, and Wdkir(r) is as defined inEquation 3. Please refer to Proposition 4.1 for more details.
Table 3: Link prediction performance of COMPGCN and several recent models on FB15k-237 and WN18RRdatasets. The results of all the baseline methods are taken directly from the previous papers (’-’ indicatesmissing values). We find that COMPGCN outperforms all the existing methods on 4 out of 5 metrics onFB15k-237 and 3 out of 5 metrics on WN18RR. Please refer to Section 6.1 for more details.
Table 4: Performance on link prediction task evaluated on FB15k-237 dataset. X + M (Y) denotes thatmethod M is used for obtaining entity (and relation) embeddings with X as the scoring function. In the caseof COMPGCN, Y denotes the composition operator used. B indicates the number of relational basis vectorsused. Overall, We find that COMPGCN outperforms all the existing methods across different scoring functions.
Table 5: Performance comparison on node classification (Left) and graph classification (Right) tasks. * and findicate that results are directly taken from Schlichtkrull et al. (2017) and Xu et al. (2019) respectively. overall,we find that CompGCN either outperforms or performs comparably compared to the existing methods. Pleaserefer to Section 6.4 for more details.
Table 6: Results on link prediction by relation category on FB15k-237 dataset. Following Wang et al.
Table 7: The details of the datasets used for node classification, link prediction, and graph classifi-cation tasks. Please refer to Section 5.1 for more details.
Table 8: Details of hyperparameters used for link prediction task. Please refer to Section A.3 formore details.
