Table 1: Time spent on each stage of CLN2INV Pipeline.
Table 2: Results and summary statistics for performance evaluation.
Table 3: Invalid problems from Code2Inv datasetProblem	Counterexample starting state	26	x, n	= 0, 027	x, n	= 0, 031	x, n	= 0, 032	x, n	= 0, 061	c, n	= 0, 162	c, n	= 0, 172	c, y =	0, 12875	c, y =	0, 128106	a, m, k	=0,1,0H Polynomial InvariantsHere We provide results and an example of the higher order polynomial problems; more precisely,the poWer summation problems in the form U = Ptk=0 td for a given degree d. We found thatCLN2INV Was able to learn invariants for programs Which computes the sum of consecutive in-tegers, Which has 10 monomial terms and a maximum degree of 2. Since CLN2INV simply usesthe polynomial kernel the number of terms quickly become unWieldy. We observe that CLN2INVstruggles beginning With sum of squares, Which has 20 monomial terms up to degree 3. Table 4summarizes these results.
Table 4: Results on power summation polynomial problems.
