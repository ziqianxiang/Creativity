Table 1: Reconstruction results. We report the number of candidates and compatible architectures.
Table 2: The 9 candidate blocks identified from the Flush+Reload trace.		eter combinations in advance. The attacker is able to perform this offline by taking advantageof cloud infrastructure: that the hardware and software stacks composing the cloud are consis-tent. In the MalConv reconstruction, we profile the timing of the convolution and linear op-erations. For the convolutions, we consider input/output channels {1, 2, 4, 8, 16, 32, 128, 256},kernels {1,3,5,7,11, 100, 200, 500, 1k, 10k}, and strides {1, 2, 5, 10, 100, 200, 500, 1k, 10k}. Forthe linear layers, we use input {4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048} and output dimensions{1, 10, 16, 20, 32, 40, 100, 128, 256, 512, 1k, 1024, 2048}.
Table 3: Monitored lines of code in PyTorch and TensorFlow.		exploitable vulnerabilities exist independent of the specific deep learning framework a victim isusing.
