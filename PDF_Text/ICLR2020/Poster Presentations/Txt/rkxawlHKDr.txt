End to End Trainable Active Contours via
Differentiable Rendering
Shir Gur & Tal Shaharabany
School of Computer Science, Tel Aviv University
Lior Wolf
Facebook AI Research and Tel Aviv University
Ab stract
We present an image segmentation method that iteratively evolves a polygon. At
each iteration, the vertices of the polygon are displaced based on the local value
of a 2D shift map that is inferred from the input image via an encoder-decoder
architecture. The main training loss that is used is the difference between the
polygon shape and the ground truth segmentation mask. The network employs a
neural renderer to create the polygon from its vertices, making the process fully
differentiable. We demonstrate that our method outperforms the state of the art
segmentation networks and deep active contour solutions in a variety of bench-
marks, including medical imaging and aerial images. Our code is available at
https://github.com/shirgur/ACDRNet.
1	Introduction
The importance of automatic segmentation methods is growing rapidly in a variety of fields, such as
medicine, autonomous driving and satellite image analysis, to name but a few. In addition, with the
advent of deep semantic segmentation networks, there is a growing interest in the segmentation of
common objects with applications in augmented reality and seamless video editing.
Since the current semantic segmentation methods often capture the objects well, except for occa-
sional inaccuracies along some of the boundaries, fitting a curve to the image boundaries seems to
be an intuitive solution. Active contours, is a set of techniques that given an initial contour (which
can be provided by an existing semantic segmentation solution) grow iteratively to fit an image
boundary. Active contour may also be appropriate in cases, such as medical imaging, where the
training dataset is too limited to support the usage of a high-capacity segmentation network.
Despite their potential, the classical active contours fall behind the latest semantic segmentation
solutions with respect to accuracy. The recent learning-based active contour approaches were not
yet demonstrated to outperform semantic segmentation methods across both medical datasets and
real world images, despite having success in specific settings.
In this work, we propose to evolve an active contour based on a 2-channel displacement field (cor-
responding to 2D image coordinates) that is inferred directly and only once from the input image.
This is, perhaps, the simplest approach, since unlike the active contour solutions in literature, it does
not involve and balance multiple forces, and the displacement is given explicitly. Moreover, the
architecture of the method is that of a straightforward encoder-decoder with two decoding networks.
The loss is also direct, and involves the comparison of two mostly binary images.
The tool that facilitates this explicit and direct approach is a neural mesh renderer. It allows for
the propagation of the intuitive loss, back to the displacement of the polygon vertices. While such
renderers have been discovered multiple times in the past, and were demonstrated to be powerful
solutions in multiple reconstruction problems, this is the first time, as far as we can ascertain that
this tool is used for image segmentation.
1
Our empirical results demonstrate state of the art performance in a wide variety of benchmarks,
showing a clear advantage over classical active contour methods, deep active contour methods, and
modern semantic segmentation methods.
2	Related Work
Neural Renderers A neural mesh renderer is a fully differential mapping from a mesh to an
image. While rendering the 3D or 2D shape given vertices, faces, and face colors is straightforward,
the process involves sampling on a grid, which is non-differentiable. One obtains differentiable
rendering, by sampling in a smooth (blurred) manner (Kato et al., 2018) or by approximating the
gradient based on image derivatives, as in (Loper & Black, 2014). Such renderers allow one to
Backpropagate the error from the obtained image back to the vertices of the mesh.
In this work we employ the mesh renderer of Kato et al. (2018). Perhaps the earliest mesh renderer
was presented by Smelyansky et al. (2002). Recent non-mesh differential renders include the point
cloud renderer of Insafutdinov & Dosovitskiy (2018) and the view-based renderer of Eslami et al.
(2018). Gkioxari et al. (2019) use a differentiable sampler to turn a 3D mesh to a point cloud and
solve the task of simultaneously segmenting a 2D image object, while performing a 3D reconstruc-
tion of that object. This is a different image segmentation task, which unlike our setting requires a
training set of 3D models and matching 2D views.
Active contours Snakes were first introduced by Kass et al. (1988), and were applied in a variety
of fields, such as lane tracking (Wang et al., 2004), medicine (Yushkevich et al., 2006) and image
segmentation (Michailovich et al., 2007). Active contours evolve by minimizing an energy function
and moving the contour across the energy surface until it halts. Properties, such as curvature and
area of the contour, guide the shape of the contour, and terms based on the image gradients or various
alternatives attract contours to edges. Most active contour methods rely on an initial contour, which
often requires a user intervention.
Variants of this method have been proposed, such as using a balloon force to encourage the con-
tour to expand and help with bad initialization, e.g.contours located far from objects (Kichenassamy
et al., 1995; Cohen, 1991). Kichenassamy et al. (1995) employ gradient flows, modifying the shrink-
ing term by a function tailored to the specific attracting features. Caselles et al. (1997) presented
the Geodesic Active Contour (GAC), where contours deform according to an intrinsic geometric
measure of the image, induced by image features, such as borders. Other methods have replaced the
use of edge attraction by the minimization of the energy functional, which can be seen as a minimal
partition problem (Chan & Vese, 2001; Marquez-Neila et al., 2014).
The use of learning base models coupled with active contours was presented by Rupprecht et al.
(2016), who learn to predict the displacement vector of each point on the evolving contour, which
would bring it towards the closest point on the boundary of the object of interest. This learned
network relies on a local patch that is extracted per each contour vertex. This patch moves with the
vertex as the contour evolves gradually. Our method, in contrast, predicts the displacement field for
all image locations at once. This displacement field is static and it is the contour which evolves. In
our method, learning is not based on a supervision in the form of the displacement to the nearest
ground truth contour but on the difference of the obtained polygon from the ground truth shape.
A level-set approach for active contours has also gained popularity in the deep learning field. Work
such as (Wang et al., 2019; Hu et al., 2017; Kim et al., 2019) use the energy function as part of the
loss in supervised models. Though fully differentiable, the level-sets do not enjoy the simplicity of
polygons and their ability to fit straight structures and corners that frequently appear in man-made
objects (as well as in many natural structures). The use of polygon base snakes in neural networks,
as a fully differentiable module, was presented by Marcos et al. (2018); Cheng et al. (2019) in the
context of building segmentation.
Building segmentation and recent active contour solutions Semi-automatic methods for urban
structure segmentation, using polygon fitting, have been proposed by Wang et al. (2006); Sun et al.
(2014). Wang et al. (2016); Kaiser et al. (2017) closed the gap for full automation, overcoming the
unique challenges in building segmentation. Marcos et al. (2018) argued that the geometric prop-
erties, which define buildings and urban structures, are not preserved in conventional deep learning
semantic segmentation methods. Specifically, sharp corners and straight walls, are only loosely
2
learned. In addition, a pixel-wise model does not capture the typical closed-polygon structure of the
buildings. Considering these limitations, Marcos et al. (2018) presented the Deep Structured Active
Contours (DSAC) approach, in order to learn a polygon representation instead of the segmentation
mask. The polygon representation of Active Contour Models (ACMs) is well-suited for building
boundaries, which are typically relatively simple polygons. ACMs are usually modeled to attract to
edges of the reference map, mainly the raw image, and penalize over curvature regions. The DSAC
method learns the energy surface, to which the active contour attracts. During training, DSAC in-
tegrates gradient propagation from the ACM, through a dedicated structured-prediction loss that
minimizes the Intersection-Over-Union.
Cheng et al. (2019), extended the DSAC approach, presenting the Deep Active Ray Network (DAR-
Net), based on a polar representation of active contours, also known as active rays models of Denzler
& Niemann (1999). To handle the complexity of rays geometry, Cheng et al. (2019) reparametrize
the rays and compute L1 distance between the ground truth polygon, represented as rays and the pre-
dicted rays. Furthermore, in order to handle the non-convex shapes inherit in the structures, Cheng
et al. (2019) presented the Multiple Sets of Active Rays framework, which is based on the deep
watershed transform by Bai & Urtasun (2017).
Concurrently to our work, Hatamizadeh et al. (2019) presented DCAC, a Deep Convolutional Active
Contours method which extends DSAC, and performs instance segmentation in aerial images using
a differential renderer.
Castrejon et al. (2017) and AcUna et al. (2018) presented a polygonal approach for objects segmen-
tation. Given an image patch, the methods use a recurrent neural network to predict the ground
trUth polygon. AcUna et al. (2018) additionally made Use of graph convolUtion networks and a re-
inforcement learning approach. Ling et al. (2019), introdUced the CUrve-GCN, an interactive or
fUlly-aUtomated method for polygon segmentation, learning an embedding space for points, and Us-
ing Graph ConvolUtion neUral networks to estimate the amoUnt of displacement for each point. Ling
et al. (2019) also presented the Use of differentiable rendering process, Using the non-differentiable
OpenGL renderer, and the method of Loper & Black (2014) for compUting the first order Tylor
approximation of the derivatives. CUrve-GCN sUpports both polygon and spline learning, bUt also
added sUpervision by learning an explicit location for each point, and edge maps.
Both DSAC and DARNet enjoy the benefit of a polygon-based representation. However, this is
done Using elaborate and sophisticated schemes. CUrve-GCN on the other hand, benefits from the
Use of differentiable rendering, bUt sUffers from a time consUming mechanism that restricts it to
apply it only in the fine-tUning stage. OUr method is considerably simpler dUe to the Use of a fast
differentiable renderer, and a 2-D displacement field in the scale of the inpUt. It Uses only groUnd
trUth masks as sUpervision, and two additional loss terms that are based on time-tested pUlling forces
from the classical active contoUr literatUre: the Balloon and CUrvatUre terms.
3	Method
OUr trained network inclUdes an encoder E and decoder D. In addition, a differential renderer R is
Used, as well as a triangUlation procedUre L. In this work we Use the DelaUnay triangUlation.
Let S be the set of all training images. Given an image I ∈ Rc×h×w, an initial polygon contoUr P0 is
prodUced by an oracle A, and the faces of this shape are retrieved from a triangUlation procedUre L,
which retUrns a list F of mesh faces, each a triplet of polygon vertex indices. In many benchmarks
in which the task is to segment given a Region of Interest (ROI) extracted by a detector or marked by
a User, the oracle simply retUrns a fixed circle in the middle of the ROI. Fig. 3 illUstrates the initial
contoUr generation process.
The contoUr evolves for T iterations, from P0 to P1 and so on Until the final shape given by PT. It
is represented by a list of k vertices Pt = [pt1, pt2, . . . ,ptk], where each vertex is a two dimensional
coordinate. This evolUtion follows a dUal-channel displacement field:
J = D1(E(I)) ∈ Rc×h×w.	(1)
For every vertex j = 1..k, the Update follows the following rUle:
ptj = ptj-1 + J(ptj-1)	(2)
3
T - iterations
Gradients
Figure 1: Illustration of our method. The input image I is encoded using network E and decoded
back by the decoder D to provide a 2D displacement field J. The vertices of the polygon at time t-1
are updated by the displacement values specified by J, creating the polygon of the next time step.
During training, a neural renderer reconstructs the polygon shape, based on the polygon vertices and
the output of triangulation process. A loss is provided by comparing the reconstructed shape with
the ground truth segmentation mask.
Forward
Update
Figure 2: Illustration of the (a) encoder and
(b) decoder blocks.
Figure 3: Illustration of the initial contour
generation process.
where J (Pj1) isa2D vector, and the operation J (∙) denotes the sampling operation of displacement
field J, using bi-linear interpolation at the coordinates of ptj-1 .
Coordinates which fall outside the boundaries of the image are then truncated (the following uses
square brackets to refer to indexed vector elements):
ptj [1] = min(h, max(0, ptj [1])), ptj [2] = min(w, max(0, ptj [2]))	(3)
The neural renderer, given the vertices and the faces returns the polygon shape as a mask, where all
pixels inside the faces F are ones, and zero otherwise:
Mt = R(Pt,F) ∈ Rh×w	(4)
where Mt is the output segmentation at iteration t. This mask is mostly binary, except for the
boundaries where interpolation occurs. Because the used renderer works in 3D space, we project all
points to 3D by setting their z axis to 1, and use orthogonal projection.
This segmentation mask Mt is compared to the ground truth mask M at each iteration, and accu-
mulated over T iterations to obtain the segmentation loss:
T
LSEG = X kMt - M k2	⑸
where ∣∣ ∙ k2 is the MSE loss applied to all mask values.
The curve evolution in classic active contour models is influenced by two additional forces: a bal-
looning force and a curvature minimizing force. In our feed forward network, these are manifested
as training losses. The Balloon term LB, maximizes the polygon area, causing it to expand:
LB = 7-^— X(I- Mt(X))	⑹
h×w
x
4
Algorithm 1 Active contour training of networks E, D. Shown for a batch size of one.
Require: {Ii }in=1 : Input images, {Mi} : Matching ground truth segmentation masks, A : Initial
guess oracle, R : differential renderer, L : a triangulation procedure, k : number of vertices, T :
number of iterations, λ1 , λ2 : a weighting parameter.
1:
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12:
Initialize networks E , D
for multiple epochs do
for i = 1.n do
P0 = [p0 ,p2,..,pk ] — A(Ii)
F — L(P 0)
J J D(E(I))
for t = 1.T do
. Initialize the polygon using the oracle
. Triangulation to obtain the mesh faces
Let Pt = [pt1,pt2, .., ptk]
for j = 1.k do
ptj J ptj-1 + J(ptj-1)
Mt = R(P t,F)
LJL + kMt- M k2 + λι h⅛
. Set the vertices of polygon Pt
. The polygon shape as an image
P(1 - Mt(x)) + λ21 P lpj-1 - 2pj + pj + 1∣2
xj
13:	Backpropagate the loss L and update E, D
where h and W are the segmentation height and width, and X denotes a single pixel in Mt. Second,
the Curvature term LK minimizes the curvature of the polygon, resulting in a more smooth form:
LK = k X ||pj-1 - 2pj + pj + 1 ||2	⑺
j
where the L2 norm is computed on 2D coordinate vectors.
The complete training loss is therefore:
L=LSEG+λ1LB+λ2LK,	(8)
for some weighting parameter λ1 and λ2. It is applied after each evolution of the contour (and not
just on the final contour). See Alg. 1 for a listing of the process.
3.1	Architecture and training
We employ an Encoder-Decoder architecture with U-Net skip connections (Cicek et al., 2016),
which link layers of matching sizes between the encoder sub-network and the decoder sub-network,
as can be seen in Fig. 1. The encoder part, as can be seen in Fig. 2(a), is built from blocks which are
mirror-like versions of the relative decoder blocks, as can be seen in Fig. 2(b), connected by a skip
connection.
An encoder block consists of (i) three sub-blocks of convolution layer followed by dropout with
probability of 0.2, (ii) ReLU, (iii) batch normalization and (iv) max-pooling, to down-sample the
input feature map.
A decoder block consists of (i) batch normalization, (ii) ReLU, (iii) bi-linear interpolation, which up-
samples the input feature map to the size of the skip connection, (iv) concatenation of the input skip
connection and the output of the previous step, (v) three sub-blocks of convolution layer, followed
by dropout with probability of 0.2. For the last decoder block, we omit the dropout layer, and up-
sample to the input image size using bi-linear interpolation. To get the pixel-wise probabilities, we
employ the Sigmoid (logistic) activation.
For the initial contour, unlike DARNet (Cheng et al., 2019) which multiple initializations, we simply
use a fixed circle centered at the middle of the input image, with a diameter of 16 pixels, across all
datasets.
For training the segmentation networks, we use the ADAM optimizer Kingma & Ba (2014) with
a learning rate 0.001, batch size varies depending of input image size, for 64 × 64 we use 100,
128 X 128 WeUSe 50. We set λι = 10-2 and λ? = 5 ∙ 10-1.
5
(a)
(b)	(c)	(d)	(e)	(f)
Figure 4: Qualitative results of DARNet (Cheng et al., 2019) and our method. Columns (a)-(c)
show results from the Vaihingen dataset (Rottensteiner et al.), and (d)-(f) show results from the Bing
huts (Marcos et al., 2018) dataset. (b) and (e) - DARNet (Cheng et al., 2019), (c) and (f) - Ours.
Blue - Initial contour. Yellow - Final contour. Green - GT Mask.
Table 1: Quantitative results on the two buldings datasets of Vaihingen (Rottensteiner et al.) and
Bing (Marcos et al., 2018). f denotes the use of DSAC as backbone, and 去 denotes the use of
DARNet as backbone.
Method	Vaihingen				Bing			
	F1-Score	mIoU	WCov	BoundF	F1-Score	mIoU	WCov	BoundF
FCNt	-	81.09	81.48	64.6	-	69.88	73.36	30.39
FCN	-	87.27	86.89	76.84	-	74.54	77.55	37.77
DSACt	-	71.10	70.76	36.44	-	38.74	44.61	37.16
DSACt	-	60.37	61.12	24.34	-	57.23	63.09	15.98
DARNet^	93.65	88.24	88.16	75.91	85.21	75.29	77.07	38.08
Ours	95.62	91.74	89.03	79.19	91.04	84.73	82.23	58.29
4	Experiments
For evaluation, we use the common segmentation metrics of F1-score and Intersection-over-Union
(IoU). Additionally, for the buildings segmentation datasets, we use the Weighted Coverage (WCov)
and Boundary F-score (BoundF), which is the averaged F1-score over thresholds from 1 to 5 pixels
around the ground truth, as described by Cheng et al. (2019).
4.1	Building S egmentation
We consider two publicly available datasets in order to evaluate our method, the Vaihingen (Rotten-
steiner et al.) dataset, which contains buildings from a German city, and the Bing Huts dataset (Mar-
cos et al., 2018), which contains huts from a village in Tanzania. A third dataset named TorontoCity,
proposed by Marcos et al. (2018); Cheng et al. (2019) is not yet publicly available. The Vaihingen
dataset consists of 168 buildings extracted from ISPRS Rottensteiner et al.. All images contain
centered buildings with a very dense environment, including other structures, streets, trees and cars,
which makes the task more challenging. The dataset is divided into 100 buildings for training, and
the remaining 68 for testing. The image’s size is 512 × 512 × 3, which is relatively high. We experi-
ment with different resizing factors during training. The Bing Huts dataset consists of 606 images,
6
Figure 5: Qualitative results on the mammographic and cardiac datasets. Top - INBreast (Moreira
et al., 2012), Middle - DDSM-BCRP (Heath et al., 1998), Bottom - SCD (Radau et al., 2009). Blue
- Initial contour. Yellow - Final contour. Green - GT Mask.
Table 2: Quantitative results on the two mammo- graphic datasets of INBreast (Moreira et al., 2012) and DDSM-BCRP (Heath et al., 1998). Reported results are the F1-Score.			Table 3: Results on the cardiac MR Left Ventricle segmentation dataset of SCD (Radau et al., 2009), F1-Score on the entire test set.	
Method	INBreast	DDSM-BCRP	Method	F1-Score
Ball & Bruce (2007)	90.90	90.00	Queiros et al. (2014)	0.90
Zhu et al. (2018)	90.97	91.30	Liu et al. (2016)	0.92
Li et al. (2018)	93.66	91.14	Avendi et al. (2016)	0.94
Singh et al. (2020)	92.11	-	Ngo et al. (2017)	0.88
Ours	94.28	92.32	Ours	0.95
335 images for train and 271 images for test. The images suffer from low spatial resolution and have
the size of 64 × 64, in contrast to the Vaihingen dataset.
We compare our method to the relevant previous works, following the evaluation process, as de-
scribed in Cheng et al. (2019), using the published test/val/train splits. The evaluated polygons
are scaled, according to the original code of Cheng et al. (2019). For both datasets, we augment
the training data (of the networks) by re-scaling in factors of [0.75, 1, 1.25, 1.5], and rotating by
[0, 15, 45, 60, 90, 135, 180, 210, 240, 270] degrees.
As can be seen in Tab. 1 our method significantly outperforms the baseline methods on both building
datasets. Fig. 4 compares the results of our method with the leading method by Cheng et al. (2019).
4.2	Medical Imaging
We evaluate our method using two common mammographic mass segmentation datasets, the IN-
Breast (Moreira et al., 2012), DDSM-BCRP (Heath et al., 1998), and a cardiac MR left ventricle
segmentation datasets, the SCD (Radau et al., 2009). For the mammographic dataset, we follow
previous work and use the expert ROIs, which were manually extracted, and the same train/test split
as Zhu et al. (2018); Li et al. (2018). INBreast dataset consists of 116 accurately annotated masses,
with mass size ranging from 15mm2 to 3689mm2. The dataset is divided into into 58 images for
train and 58 images for test, as done in previous work. DDSM-BCRP dataset consists of 174 an-
notated masses, provided by radiologists. The dataset is divided into into 78 images for train and
5788 images for test, as done in previous work. SCD dataset The Sunnybrook Cardiac Data (SCD),
7
(bike)
(bus)	(motorcycle) (person) (truck)
Figure 6: Sample results from the Cityscapes dataset.
Model	Bicycle	Bus	Person Train Truck Motorcycle			Car Rider Mean
Polygon-RNN++ (With BS)	63.06	81.38	72.41	64.28 78.90	62.01	79.08 69.95 71.38
PSP-DeepLab	67.18	83.81	72.62	68.76 80.48	65.94	80.45 70.00 73.66
Polygon-GCN (With PS)	66.55	85.01	72.94	60.99 79.78	63.87	81.09 71.00 72.66
Spline-GCN (With PS)	67.36	85.43	73.72	64.40 80.22	64.86	81.88 71.73 73.70
Ours	68.08	83.02	75.04	74.53 79.55	66.53	81.92 72.03 75.09
Table 4: Cityscapes dataset. Quantitative results reported in mean IoU. BS indicates that the model
uses beam search, PS indicates that the model train with explicit points supervision.
the MICCAI 2009 Cardiac MR Left Ventricle Segmentation Challenge data, consist of 45 cine-MRI
images from a mix of patients and pathologies. The dataset is split into three groups of 15, resulting
in about 260 2D-images each, and report results for the endocardial segmentation.
Tab. 2 and 3 show that our method outperforms all baseline methods on the three medical imaging
benchmarks. Sample results for our method are shown in Fig. 5.
4.3	Street View Images
Following Ling et al. (2019), we employ the Cityscapes dataset (Cordts et al., 2016) to evaluate
our model in the task of segmenting street images. The dataset consists of 5000 images, and the
experiments employ the train/val/test split of Castrejon et al. (2017). Results are evaluated using the
mean IoU metric.
The Cityscapes dataset, unlike the other datasets, contains single objects with multiple contours.
Similarly to Curve-GCN (Ling et al., 2019), we first train our model on to segment single contours,
given the patch that contains that contour. Then, after the validation error stops decreasing, we train
the final network to segment all contours from the patch that contains the entire object. Note that the
network outputs a single output contour for the entire instance. We follow the same augmentation
process as presented for the buildings datasets, using an input resolution of 64 × 64.
We compare our method with previous work on semantic segmentation, including PSP-
DeepLab (Chen et al., 2017), and the polygon segmentation methods Polygon-RNN++ (Acuna et al.,
2018) and Curve-GCN (Ling et al., 2019).
As can be seen in from Tab. 4, our model outperforms and all other methods in six out of eight
categories, and achieves the highest average performance across classes by a sizable margin that
is bigger than the differences between the previous contributions (the previous methods achieve
average IoU of 71.38-73.70, We achieve 75.09) . Unlike Curve-Net (Ling et al., 2019), We do not
use additional supervision in the form of explicit point location and edge maps. Sample results can
be seen in Fig. 6.
4.4	Model Sensitivity
To evaluate the sensitivity of our method to the key parameters, We varied the number of nodes in the
polygon and the number of iterations. Both parameters are knoWn to effect active contour models.
Number of Vertices We experimented With different number of vertices, from simple to complex
polygons - [4, 8, 16, 32, 64, 128]. In Fig. 8 - top roW, We report the Dice and mIoU on all datasets,
8
Input image 4-vertices
8-vertices
16-vertices
32-vertices
64-vertices
Bing
---Ours Fl-S∞re
Ours mloU
IOO
95
Figure 7: Varying number of vertices. Yellow - Our method. Green - DARNet (Cheng et al., 2019)
100
INBreast
----Ours Fl-Score
Ours mloU
2	3
# of Iterations
95
Figure 8: Top - different number of vertices, and Bottom - different number of iterations. Results
for DARNet (Cheng et al., 2019) are available for the buildings datasets.
including results on DARNet (Cheng et al., 2019) on their evaluation datasets. As can be seen, seg-
menting with simple polygons yields lower performance, while as the number of vertices increases
the performance quickly saturated at about 32 vertices. A clear gap in performance is visible be-
tween our method and DARNet (Cheng et al., 2019), especially with low number of vertices. Fig. 7
illustrates that gap on the two buildings datasets.
Number of Iterations As can be seen from Fig. 8(Bottom), the effect of the iterations number
is show to be moderate, although a mean increase is seen over all datasets, saturating at about 3
iterations. It is also visible that our model, trained only by a single iteration, has learned to produce
a displacement map that manipulate the initial circle close to optimal.
Training Image Resolution All of our models are trained at the resolution of 64 × 64 pixels.
We have experimented with different input resolutions on the Vaihingen dataset. As can be seen
in Tab. 5, there is a steep degradation in performance below 64, which we attribute to the lack of
details. When doubling the resolution to 128 × 128, the performance slightly degrades, however,
that model could improve with further training epochs.
Ablation Study In Tab. 6 we show the effect of different loss combinations on our model perfor-
mance on the Vaihingen benchmark. The compound loss L is better than its derivatives. Each the
ballooning loss improves performance over not using auxiliary losses at all, while the curvature loss
by itself does not. We note that even without the auxiliary losses, with a single straightforward loss
term, our method outperforms the state of the art.
9
Table 5: Evaluation of different image resolutions during training on the Vaihingen dataset.
Resolution	16	32	64	128
F1-Score	13.11	54.86	95.62	95.13
mIoU	7.13	39.50	91.74	90.85
Table 6: Evaluation of different loss combinations on the Vaihingen dataset.
Loss combination	LSEG	LSEG + LK	LSEG + LB	L
F1-Score	94.94	94.80	95.13	95.62
mIoU	90.31	90.20	90.82	91.74
5	Conclusions
Active contour methods that are based on a global neural network inference hold the promise of
improving semantic segmentation by means of an accurate edge placement. We present a novel
method, which could be the most straightforward active contour model imaginable. The method
employs a recent differential renderer, without making any modifications to it, and simple MSE loss
terms. The elegance of the model does not come at the expense of performance, and it achieves
state of the art results on a wide variety of benchmarks, where in each benchmark, it outperforms
the relevant deep learning baselines, as well as all classical methods.
Acknowledgment
This project has received funding from the European Research Council (ERC) under the European
Unions Horizon 2020 research and innovation programme (grant ERC CoG 725974). The contribu-
tion of the first author is part of a Ph.D. thesis research conducted at Tel Aviv University.
References
David Acuna, Huan Ling, Amlan Kar, and Sanja Fidler. Efficient interactive annotation of segmen-
tation datasets with polygon-rnn++. 2018.
MR Avendi, Arash Kheradvar, and Hamid Jafarkhani. A combined deep-learning and deformable-
model approach to fully automatic segmentation of the left ventricle in cardiac mri. Medical
image analysis, 30:108-119, 2016.
Min Bai and Raquel Urtasun. Deep watershed transform for instance segmentation. In Proceedings
of the IEEE Conference on Computer Vision and Pattern Recognition, pp. 5221-5229, 2017.
John E Ball and Lori Mann Bruce. Digital mammographic computer aided diagnosis (cad) using
adaptive level set segmentation. In 2007 29th Annual International Conference of the IEEE En-
gineering in Medicine and Biology Society, pp. 4973-4978. IEEE, 2007.
Vicent Caselles, Ron Kimmel, and Guillermo Sapiro. Geodesic active contours. International
journal of computer vision, 22(1):61-79, 1997.
Lluis Castrejon, Kaustav Kundu, Raquel Urtasun, and Sanja Fidler. Annotating object instances
with a polygon-rnn. In CVPR, 2017.
Lluis Castrejon, Kaustav Kundu, Raquel Urtasun, and Sanja Fidler. Annotating object instances
with a polygon-rnn. In Proceedings of the IEEE Conference on Computer Vision and Pattern
Recognition, pp. 5230-5238, 2017.
Tony F Chan and Luminita A Vese. Active contours without edges. IEEE Transactions on image
processing, 10(2):266-277, 2001.
10
Liang-Chieh Chen, George Papandreou, Iasonas Kokkinos, Kevin Murphy, and Alan L Yuille.
Deeplab: Semantic image segmentation with deep convolutional nets, atrous convolution, and
fully connected crfs. IEEE transactions on pattern analysis and machine intelligence, 40(4):
834-848, 2017.
Dominic Cheng, Renjie Liao, Sanja Fidler, and Raquel Urtasun. DARNet: Deep active ray network
for building segmentation. In Proceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, pp. 7431-7439, 2019.
Ozgun Cicek, Ahmed Abdulkadir, Soeren S Lienkamp, Thomas Brox, and Olaf Ronneberger. 3d U-
net: learning dense volumetric segmentation from sparse annotation. In International conference
on medical image computing and computer-assisted intervention, pp. 424-432. Springer, 2016.
Laurent D Cohen. On active contour models and balloons. CVGIP: Image understanding, 53(2):
211-218, 1991.
Marius Cordts, Mohamed Omran, Sebastian Ramos, Timo Rehfeld, Markus Enzweiler, Rodrigo
Benenson, Uwe Franke, Stefan Roth, and Bernt Schiele. The cityscapes dataset for semantic urban
scene understanding. In Proceedings of the IEEE conference on computer vision and pattern
recognition, pp. 3213-3223, 2016.
Joachim Denzler and Heinrich Niemann. Active rays: Polar-transformed active contours for real-
time contour tracking. Real-Time Imaging, 5(3):203-213, 1999.
S. M. Ali Eslami, Danilo Jimenez Rezende, Frederic Besse, Fabio Viola, Ari S. Morcos, Marta
Garnelo, Avraham Ruderman, Andrei A. Rusu, Ivo Danihelka, Karol Gregor, David P. Reichert,
Lars Buesing, Theophane Weber, Oriol Vinyals, Dan Rosenbaum, Neil Rabinowitz, Helen King,
Chloe Hillier, Matt Botvinick, Daan Wierstra, Koray Kavukcuoglu, and Demis Hassabis. Neural
scene representation and rendering. Science, 360(6394):1204-1210, 2018.
Georgia Gkioxari, Jitendra Malik, and Justin Johnson. Mesh r-cnn. In International Conference on
Computer Vision (ICCV), 2019.
Ali Hatamizadeh, Debleena Sengupta, and Demetri Terzopoulos. End-to-end deep convolutional
active contours for image segmentation. arXiv preprint arXiv:1909.13359, September 2019.
Michael Heath, Kevin Bowyer, Daniel Kopans, P Kegelmeyer, Richard Moore, Kyong Chang, and
S Munishkumaran. Current status of the digital database for screening mammography. In Digital
mammography, pp. 457-460. Springer, 1998.
Ping Hu et al. Deep level sets for salient object detection. In CVPR, 2017.
Eldar Insafutdinov and Alexey Dosovitskiy. Unsupervised learning of shape and pose with differ-
entiable point clouds. In Advances in Neural Information Processing Systems, pp. 2802-2812,
2018.
Pascal Kaiser, Jan Dirk Wegner, Aurelien Lucchi, Martin Jaggi, Thomas Hofmann, and Konrad
Schindler. Learning aerial image segmentation from online maps. IEEE Transactions on Geo-
science and Remote Sensing, 55(11):6054-6068, 2017.
Michael Kass, Andrew Witkin, and Demetri Terzopoulos. Snakes: Active contour models. Interna-
tional journal of computer vision, 1(4):321-331, 1988.
Hiroharu Kato, Yoshitaka Ushiku, and Tatsuya Harada. Neural 3d mesh renderer. In Proceedings of
the IEEE Conference on Computer Vision and Pattern Recognition, pp. 3907-3916, 2018.
Satyanad Kichenassamy, Arun Kumar, Peter Olver, Allen Tannenbaum, and Anthony Yezzi. Gradi-
ent flows and geometric active contour models. In Proceedings of IEEE International Conference
on Computer Vision, pp. 810-815. IEEE, 1995.
Youngeun Kim et al. CNN-based semantic segmentation using level set loss. In WACV, 2019.
Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. arXiv preprint
arXiv:1412.6980, 2014.
11
Heyi Li, Dongdong Chen, William H Nailon, Mike E Davies, and David Laurenson. Improved
breast mass segmentation in mammograms with conditional residual u-net. In Image Analysis for
Moving Organ, Breast, and Thoracic Images, pp. 81-89. Springer, 2018.
Huan Ling, Jun Gao, Amlan Kar, Wenzheng Chen, and Sanja Fidler. Fast interactive object anno-
tation with curve-gcn. In Proceedings of the IEEE Conference on Computer Vision and Pattern
Recognition, pp. 5257-5266, 2019.
Yu Liu, Gabriella Captur, James C Moon, Shuxu Guo, Xiaoping Yang, Shaoxiang Zhang, and Chun-
ming Li. Distance regularized two level sets for segmentation of left and right ventricles from
cine-mri. Magnetic resonance imaging, 34(5):699-706, 2016.
Matthew M Loper and Michael J Black. Opendr: An approximate differentiable renderer. In Euro-
pean Conference on Computer Vision, pp. 154-169. Springer, 2014.
Diego Marcos, Devis Tuia, Benjamin Kellenberger, Lisa Zhang, Min Bai, Renjie Liao, and Raquel
Urtasun. Learning deep structured active contours end-to-end. In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition, pp. 8877-8885, 2018.
Pablo Marquez-Neila, Luis Baumela, and Luis Alvarez. A morphological approach to curvature-
based evolution of curves and surfaces. IEEE Transactions on Pattern Analysis and Machine
Intelligence, 36(1):2-17, 2014.
Oleg Michailovich, Yogesh Rathi, and Allen Tannenbaum. Image segmentation using active con-
tours driven by the bhattacharyya gradient flow. IEEE Transactions on Image Processing, 16(11):
2787-2801, 2007.
Ines C Moreira, Igor AmaraLInes Domingues, Antonio Cardoso, Maria Joao Cardoso, and Jaime S
Cardoso. Inbreast: toward a full-field digital mammographic database. Academic radiology, 19
(2):236-248, 2012.
Tuan Anh Ngo, Zhi Lu, and Gustavo Carneiro. Combining deep learning and level set for the
automated segmentation of the left ventricle of the heart from cardiac cine magnetic resonance.
Medical image analysis, 35:159-171, 2017.
Sandro Queiros, Daniel Barbosa, Brecht Heyde, Pedro Morais, Joao L Vilaca, Denis FriboUlet,
Olivier Bernard, and Jan D’hooge. Fast automatic myocardial segmentation in 4d cine cmr
datasets. Medical image analysis, 18(7):1115-1131, 2014.
P Radau, Y Lu, K Connelly, G Paul, A Dick, and G Wright. Evaluation framework for algorithms
segmenting short axis cardiac mri. The MIDAS Journal-Cardiac MR Left Ventricle Segmentation
Challenge, 49, 2009.
Franz Rottensteiner, Gunho Sohn, Jaewook Jung, Markus Gerke, Caroline Baillard, SebaStien
Benitez, and U Breitkopf. International society for photogrammetry and remote sensing,
2d semantic labeling contest. http://www2.isprs.org/commissions/comm3/wg4/semantic-
labeling.html.	URL http://www2.isprs.org/commissions/comm3/wg4/
semantic-labeling.html.
Christian Rupprecht, Elizabeth Huaroc, Maximilian Baust, and Nassir Navab. Deep active contours.
arXiv preprint arXiv:1607.05074, 2016.
Vivek Kumar Singh, Hatem A Rashwan, Santiago Romani, Farhan Akram, Nidhi Pandey,
Md Mostafa Kamal Sarker, Adel Saleh, Meritxell Arenas, Miguel Arquez, Domenec Puig, et al.
Breast tumor segmentation and shape classification in mammograms using generative adversarial
and convolutional neural network. Expert Systems with Applications, 139:112855, 2020.
Vadim N Smelyansky, Robin D Morris, Frank O Kuehnel, David A Maluf, and Peter Cheeseman.
Dramatic improvements to feature based stereo. In European Conference on Computer Vision,
pp. 247-261. Springer, 2002.
Xiaolu Sun, C Mario Christoudias, and Pascal Fua. Free-shape polygonal object localization. In
European Conference on Computer Vision, pp. 317-332. Springer, 2014.
12
Oliver Wang, Suresh K Lodha, and David P Helmbold. A bayesian approach to building footprint
extraction from aerial lidar data. In Third International Symposium on 3D Data Processing,
VisuaUzation, and Transmission (3DPVT06),pp. 192-199. IEEE, 2006.
Shenlong Wang, Min Bai, Gellert Mattyus, Hang Chu, Wenjie Luo, Bin Yang, Justin Liang, Joel
Cheverie, Sanja Fidler, and Raquel Urtasun. Torontocity: Seeing the world with a million eyes.
arXiv preprint arXiv:1612.00423, 2016.
Yue Wang, Eam Khwang Teoh, and Dinggang Shen. Lane detection and tracking using b-snake.
Image and Vision computing, 22(4):269-280, 2004.
Zian Wang, David Acuna, Huan Ling, Amlan Kar, and Sanja Fidler. Object instance annotation with
deep extreme level set evolution. In Proceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, pp. 7500-7508, 2019.
Paul A Yushkevich, Joseph Piven, Heather Cody Hazlett, Rachel Gimpel Smith, Sean Ho, James C
Gee, and Guido Gerig. User-guided 3d active contour segmentation of anatomical structures:
significantly improved efficiency and reliability. Neuroimage, 31(3):1116-1128, 2006.
Wentao Zhu, Xiang Xiang, Trac D Tran, Gregory D Hager, and Xiaohui Xie. Adversarial deep
structured nets for mass segmentation from mammograms. In 2018 IEEE 15th International
Symposium on Biomedical Imaging (ISBI 2018), pp. 847-850. IEEE, 2018.
13