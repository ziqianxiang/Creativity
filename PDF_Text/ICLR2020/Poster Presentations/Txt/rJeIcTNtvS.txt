Published as a conference paper at ICLR 2020
Low-Resource Knowledge-Grounded
Dialogue Generation
Xueliang Zhao1,2, Wei Wu3, Chongyang Tao1, Can Xu3, Dongyan Zhao1,2, Rui Yan1,2,4*
1	Wangxuan Institute of Computer Technology, Peking University, Beijing, China
2	Center for Data Science, AAIS, Peking University, Beijing, China
3	Microsoft Corporation, Beijing, China
4	Beijing Academy of Artificial Intelligence (BAAI), Beijing, China
{xl.zhao,chongyangtao,zhaody,ruiyan}@pku.edu.cn
{wuwei,caxu}@microsoft.com
Ab stract
Responding with knowledge has been recognized as an important capability for an
intelligent conversational agent. Yet knowledge-grounded dialogues, as training
data for learning such a response generation model, are difficult to obtain. Mo-
tivated by the challenge in practice, we consider knowledge-grounded dialogue
generation under a natural assumption that only limited training examples are avail-
able. In such a low-resource setting, we devise a disentangled response decoder in
order to isolate parameters that depend on knowledge-grounded dialogues from the
entire generation model. By this means, the major part of the model can be learned
from a large number of ungrounded dialogues and unstructured documents, while
the remaining small parameters can be well fitted using the limited training exam-
ples. Evaluation results on two benchmarks indicate that with only 1/8 training
data, our model can achieve the state-of-the-art performance and generalize well
on out-of-domain knowledge.
1	Introduction
Open domain dialogue systems, due to the applications on social chatbots such as Microsoft XiaoIce
(Shum et al., 2018) and virtual assistants such as Amazon Alexa (Ram et al., 2018), have drawn
increasing attention from the research community of natural language processing and artificial
intelligence. Thanks to the advances in neural sequence modeling (Vaswani et al., 2017; Sutskever
et al., 2014) and machine learning techniques (Li et al., 2017; 2016), such systems now are able to
reply with plausible responses regarding to conversation history, and thus allow an agent to have a
natural conversation with humans. On the other hand, when people attempt to dive into a specific
topic, they may clearly realize the gap between the conversation with a state-of-the-art system and the
conversation with humans, as the system is only able to awkwardly catch up with the conversation,
owing to the lack of knowledge of the subject.
We consider grounding open domain dialogue generation with knowledge which is assumed to be
unstructured documents. While documents are abundant on the Web, it is difficult to obtain large
scale dialogues that are naturally grounded on the documents for learning of a neural generation
model. To overcome the challenge, some recent work (Zhou et al., 2018b; Dinan et al., 2019) resorts
to crowd-sourcing and builds benchmarks with the source of Wikipedia. On the one hand, the datasets
pave the way to the recent research on knowledge-grounded response generation/selection (Zhao
et al., 2019; Lian et al., 2019; Li et al., 2019); on the other hand, we argue that there still a long
way to go for application of the existing models in real scenarios, since (1) the models, especially
those achieve state-of-the-art performance via sophisticated neural architectures, just overfit to the
small training data (e.g.,〜18k dialogues). An evidence is that when they are applied to documents
out of the domain of the training data, their performance drops dramatically, as will be seen in our
experiments; and (2) it is difficult to collect enough training data for a new domain or a new language,
as human effort is expensive.
* Corresponding author: Rui Yan (ruiyan@pku.edu.cn).
1
Published as a conference paper at ICLR 2020
As a step towards application of knowledge-grounded dialogue generation in real-world systems, we
explore how to learn a model with as few knowledge-grounded dialogues as possible, yet the model
achieves state-of-the-art performance and generalizes well on out-of-domain documents. The key
idea is to make parameters that rely on knowledge-grounded dialogues small and independent by
disentangling the response decoder, and thus we can learn the major part of the generation model
from ungrounded dialogues and plain text that are much easier to acquire. Specifically, the encoder of
the generation model consists of two independent components with one for encoding the context and
the other for representing the knowledge. The decoder is decomposed into conditionally independent
components including a language model, a context processor, and a knowledge processor, and
the three components are coordinated by a decoding manager that dynamically determines which
component is activated for response prediction. The language model predicts the next word of a
response based on the prior sub-sequence, and the context processor ensures coherence of the dialogue
by attending over the conversation history. Both components, along with the context encoder, are
independent with the extra knowledge, and thus can be pre-trained using the ungrounded dialogues.
The knowledge encoder has nothing to do with dialogues, and thus can be pre-trained with the plain
text. The knowledge processor is responsible for grounding response generation on the document.
This part, together with the decoding manager, depends on the knowledge-grounded dialogues, but
the parameters are small in size, and estimation of these parameters just requires a few training
examples depending on specific domains or tasks. By fixing the pre-trained parameters, we can adapt
the model to a new domain with only a little cost.
We pre-train the language model, the context processor, and the context encoder with a clean version
of Reddit data (Dziri et al., 2018), pre-train the knowledge encoder using a Wikipedia dump available
on ParlAI, and compare our model with baselines that hold state-of-the-art performance on two
benchmarks including the Wizard of Wikipedia (Wizard) (Dinan et al., 2019) and CMU Document
Grounded Conversations (CMUDoG) (Zhou et al., 2018b). Evaluation results indicate that (1) to
achieve the state-of-the-art performance, our model only needs 1/8 training data (〜2.3k dialogues on
Wizard and 〜0.4k dialogues on CMU-DoG); (2) on Wizard, the model significantly outperforms the
baseline models on out-of-domain documents even though the baselines have leveraged all training
data, while our model is only learned with 1/16 training data; and (3) the model performs comparably
well on in-domain and out-of-domain documents in a low-resource setting.
Contributions in this work are three-fold: (1) exploration of knowledge-grounded dialogue generation
under a low-resource setting; (2) proposal of pre-training the knowledge-grounded dialogue generation
model with a disentangled decoder using ungrounded dialogues and documents; and (3) empirical
verification of the effectiveness of the model on two benchmarks.
2	Approach
We elaborate our approach to learning a response generation model with knowledge-grounded
dialogues, ungrounded dialogues, and plain text.
2.1	Problem Formalization
Suppose that we have a dataset DS = {(UiS, DiS, riS)}in=1, where ∀i ∈ {1, . . . , n}, DiS is a document
that serves as the background of the dialogue (UiS, riS), UiS = (uiS,1, . . . uiS,n ) is the context of the
dialogue with uiS,j the j-th utterance, and riS is the response regarding to UiS and DiS. In addition
to DS, we further assume that there are DP = {DiP }iN=1 and DC = {(UjC, rjC)}jM=1 with DiP a
document and (UjC, rjC) a context-response pair, ∀i ∈ {1, . . . N} and ∀j ∈ {1, . . . , M}. N n
and M n. The goal is to learn a generation model P (r|U, D; θ) (θ denotes the parameters of the
model) with D = {DS ∪ DP ∪ DC}. Thus, given a new document D with the associated dialogue
context U, one can generate a response r following P (r|U, D; θ).
Our idea is inspired by the observation on the nature of open domain dialogues: despite the fact
that a dialogue is based on a document D, words and utterances in the dialogue are not always
related to D (e.g., a reply just echoing the previous turn), even for the turns from the interlocutor
who has access to D, as demonstrated by the examples in (Dinan et al., 2019; Zhou et al., 2018b).
Therefore, we postulate that formation of a response could be decomposed into three uncorrelated
actions: (1) selecting a word according to what has generated to make the sentence linguistically
valid (corresponding to a language model); (2) selecting a word according to the context to make the
2
Published as a conference paper at ICLR 2020
Knowledge Encoder
Embedding Layer
P(w∕U, D, WLl)
Vocabulary
Distribution
Decoding
Manager
<START>
-1ReSponSe Decoder
s
;Λl
HIlH
Figure
1: Architecture of the generation model.
dialogue coherent (corresponding to a context processor); and (3) selecting a word according to the
extra knowledge to ground the dialogue (corresponding to a knowledge processor). The three actions
can be independently learned, which becomes the key to aiding the small DS with the large DP and
DC.
2.2 Generation Model
Figure 1 illustrates the architecture of the model. The model is made up of a context encoder, a
knowledge encoder, a decoder, and a decoding manager. The major difference lies in the decoding
phase which simulates the aforementioned actions by decomposing the decoder into a language
model, a context processor, and a knowledge processor. The three components are independent
conditioned on the hidden states of the decoder, and are coordinated by the manager.
2.2. 1 Encoders
Given a dialogue context U = (u1, . . . , ul), the context encoder concatenates {ui}li=1 as
(w1u , . . . , wiu , . . . , wlu ) with wiu the i-th word in the sequence, and then exploits a recurrent neural
network with gated recurrent units (GRUs) (Chung et al., 2014) to transform the word sequence into
a sequence of hidden vectors given by
h1u,...,hiu,...,hluu =GRUθe(e1u,...,eiu,...,eluu),	(1)
where eiu is the embedding of wiu initialized with GloVe (Pennington et al., 2014). {hiu}liu=1 serve as
the input of the context processor in decoding.
In the meanwhile, given a document D = (d1 , . . . , di , . . . , dm) with di the i-th sentence, the
knowledge encoder represents di as a sequence of hidden vectors through a bidirectional GRU (Cho
et al., 2014):
hid,1,...,hid,j,...,hid,ld =BiGRUθk(eid,1,...,eid,j,...,eid,ld),	(2)
where eid,j is the embedding of the j-th word in di initialized using GloVe. {hid,j}ii==1m,j,j==1ld are fed to
the knowledge processor to ground response prediction on D.
Different from Transformer Memory Network (Dinan et al., 2019), our model does not perform
knowledge selection in the encoding phase (e.g., via attention over {hid,j}ii==1m,j,j==1ld), but leaves it to
the decoding phase. This could remove the dependency between context encoding and knowledge
encoding, and facilitate us to estimate θe and θk with DP and DC respectively.
2.2.2	Disentangled Decoder
The decoder maintains a hidden sequence {st}ltr=1. Let etr-1 be the embedding of the word predicted
at step t - 1, then st is defined by
st = GRUθd(etr-1,st-1),	(3)
where s0 = hlu . Based on {st}ltr=1, the three components are defined as follows:
3
Published as a conference paper at ICLR 2020
Language Model. The language model predicts a word based on st . For words that do not need
the context and the document (e.g., function words), employing the language model may enhance
decoding speed without loss of accuracy. Formally, the generation probability is defined by
P(wtr|w1r:t-1) =MLPθl(st).	(4)
Context Processor. The context processor predicts a word by attending over {hiu}liu=1. The word
could be either fetched from the vocabulary or copied from the context U . Let ctu be the context
vector at step t, then ctu can be formulated as
ctu =Xlu αt,ihiu,	(5)
i=1
where αt,i = exp(et,i)/ Pi exp(et,i) denotes the attention distribution and et,i = gθs (st, hiu) =
v>tanh(Whhiu + Wsst + b). The generation probability is defined by
P (wtr |U, w1r:t-1) = pgenPvocab(wtr|U,w1r:t-1) + (1 -pgen) X αt,i.	(6)
i:wiu=wtr
In Equation (6), the first term models the correspondence between a context and a response, and is for-
mulated as Pvocab(wtr|U, w1r:t-1) = MLPθv ([st; ctu]). The second term models the copy mechanism,
and pgen = MLPθg ([ctu; st; etr-1]) ∈ [0, 1] a trade-off between the two terms.
Knowledge Processor. The knowledge processor goes through the document D by a hierarchical
attention mechanism, and predicts a word in a similar way as Equation (6). Formally, let {βts,i}im=1 and
{βtw,i,j}ii==1m,j,j==1ld be the sentence-level attention distribution and the word-level attention distributions
respectively at step t, then ∀i ∈ {1, . . . , m} and ∀j ∈ {1, . . . , ld}, βts,i and βtw,i,j are calculated by
βs,i = exP(gθs0 (st, h d))/ZS； βWi,j = exP(gθs0 (st, hd,j ))/ZW ,	⑺
where Zs and Zw are normalization factors, and hd represents the average pooling of {hd,j}jd=ι. A
knowledge vector ctd that is analogous to ctu is then defined by
Cd = xm=1 βs,ih d.	(8)
Finally, the generation probability is formulated as
P (wtr|D, w1r:t-1) = p0genPvocab(wtr|D, w1r:t-1) + (1 - p0gen)	X	βt,i,j,	(9)
i,j:wid,j =wtr
where βt,i,j = βS,i ∙ βwi,j, WdjiS the j-th word of di, Pvocab (w[ |D, w%-J = MLPθv, ([st； cd]), and
p0gen = MLPθg0 ([ctd; st; etr-1]) acts as a trade-off between the common term and the copy term.
2.2.3	Decoding Manager
The three components are controlled by the decoding manager with one picked up at each step of
response prediction. Then, the probability to predict word wtr can be formulated as
P (wt ∖U,D,wlt-i) = [P(w"wJι); P (wt ∖U,w∖t-i); P (wt ∣D,wlt-i)] ∙ ∏t.	(10)
In training, to handle the discrete and undifferentiable process, we employ the Gumbel trick (Jang
et al., 2016) and define πt as
∏t = gumbel.softmax(f∏(st-ι),τ) ∈ R3×1,	(11)
where f∏(∙) = MLPθπ (∙), gumbel.softmax(∙) denotes the Gumbel-Softmax function (Jang et al.,
2016), and τ is the temperature (hyperparameter). πt approaches to a one-hot vector when τ → 0.
We start from a high temperature and gradually reduce it. In test, we discretize πt as a one-hot vector
according to the distribution in Equation (11).
4
Published as a conference paper at ICLR 2020
2.3 Learning Details
Let us denote {θol, θoc, θod} as the parameters of word embedding in response prediction correspond-
ing to the language model, the context processor, and the knowledge processor respectively. For
simplicity, we let θoc = θod = θo. Then {θe; θd; θs; θv; θg; θo} (including parameters of the context
encoder, parameters of the hidden states of the decoder, and parameters of the context processor) are
estimated with maximum likelihood estimation (MLE) on DC = {(UjC, rjC)}jM=1.
To estimate θl (i.e., parameters of the language model) and θol , we construct a corpus DLM =
{ujLM}jM=01 with ujLM a response or an utterance from a context in DC, and then learn the parameters
with MLE on DLM with θd fixed.
Inspired by Peters et al. (2018), we estimate θk (i.e., parameters of the knowledge encoder) using a
bidirectional language model by minimizing the following loss function on DP :
1 N ld
' =-N £( E(IOg P(WtIwLt-I) +log P(WtIwt+1:ld ))).	(12)
i=1 t=1
The remaining parameters {θs0; θv0; θg0; θπ} (i.e., parameters of the knowledge processor and param-
eters of the decoding manager) are learned with MLE on DS with all other parameters fixed. Note
that parameters of word embedding in the encoders are supposed to be included in θe and θk .
Remarks. We focus on document-grounded dialogue generation in this work, but the approach
proposed actually provides a recipe for a general solution to low-resource knowledge-grounded
dialogue generation in which the knowledge could be a structured knowledge base, images, or videos.
To do that, one only needs to modify the knowledge encoder and the knowledge processor to make
them compatible with the specific type of knowledge, and pre-train the knowledge encoder, if possible,
on single-modal knowledge data.
3	Experiments
We test the proposed model on Wizard of Wikipedia (Wizard) published in Dinan et al. (2019) and
CMU Document Grounded Conversations (CMU-DoG) published in ZhoU et al.(2018b).
3.1	Datasets and Evaluation Metrics
Both Wizard and CMU_DoG consist of open domain dialogues grounded on Wiki articles, and
the dialogues are collected from crowd-workers on Amazon Mechanical Turk. In Wizard, the
articles cover a Wide range of topics (totally 1, 365) such as boWling, Gouda cheese, and Arnold
SchWarzenegger, etc. Each conversation happens betWeen a Wizard Who has access to knoWledge
about a specific topic and an apprentice Who is just eager to learn from the Wizard about the topic. On
average, each Wizard turn is associated With 60.8 sentences retrieved from the Wiki articles and each
sentence contains 30.7 Words. The data is split as a training set, a validation set, and a test set by the
data oWner. The test set is split into tWo subsets: Test Seen and Test Unseen. Test Seen contains neW
dialogues With topics appearing in the training set, While topics in Test Unseen never appear in the
training set and the validation set, and thus the data alloW us to examine the generalization ability of
models. The task is to generate a response for each Wizard turn based on the dialogue history and the
retrieved knoWledge. As pre-processing, for each Wizard turn in the training/validation/test sets, the
latest 128 Words in the dialogue history are kept as a context. The pre-processing strictly folloWs the
procedure in Dinan et al. (2019), and is conducted With the code published on ParlAI1.
Different from Wizard, CMU-DOG focuses on movie domain (although covering various genres). In
addition to Wizard & apprentice, the data also contain dialogues betWeen tWo Workers Who knoW the
document and try to discuss the content in depth. Each document consists of 4 sections and these
sections are shoWn to the Workers one by one every 3 turns (the first section lasts 6 turns due to initial
greetings). On average, each section contains 8.22 sentences and 27.86 Words per sentence. The data
has been divided into a training set, a validation set, and a test set by the data oWner. The task is
1 https://github.com/facebookresearch/ParlAI/blob/master/projects/wizard_of_wikipedia
5
Published as a conference paper at ICLR 2020
^''^∑z3Z^Metrics Models^^^^^^	PPL	F1	BLEU-I	BLEU-2	BLEU-3	BLEU-4	Average	Extrema	Greedy
TMN (Dinan et al., 2019)	66.5	15.9	0.184-	0.073-	0.033-	0.017-	0.844	0.427-	0.658
ITDD (Li et al., 2019)	17.8	16.2	0.158	0.071	0.040	0.025	0.841	0.425	0.654
FULL DATA	23.0	18.0	0.218-	0.115-	0.075-	0.055-	0.835^^	0.434-	0.658
1/2 DATA	25.3	17.5	0.217	0.113	0.073	0.053	0.833	0.431	0.657
1/4 DATA	29.2	16.9	0.212	0.105	0.064	0.044	0.833	0.429	0.658
1/8 DATA	33.5	16.3	0.206	0.098	0.059	0.039	0.832	0.425	0.658
1/16 DATA	38.6	15.7	0.197	0.091	0.052	0.033	0.834	0.428	0.655
Table 1: Evaluation results on Test Seen of Wizard.
to generate a response for each turn from a worker who has access to the document based on the
dialogue history and the associated section as knowledge. Similar to Wizard, the latest 128 words in
the dialogue history are kept as a context. More details of the datasets can be found in Appendix A.
We choose Reddit Conversation Corpus2 cleaned by Dziri et al. (2018) as DC. The data contain
15, 120, 136 context-response pairs for training and 830, 777 context-response pairs for validation.
On average, each context consists of 3.5 utterances. We use the Wikipedia dump published on
ParlAI3 as DP . The training set and the validation set contain 5, 233, 799 articles and 52, 867 articles
respectively with the first paragraph kept for learning. Articles that appear in Wizard and CMU-DoG
are removed beforehand. For both Wizard and CMU_DoG, the vocabulary is made up of top 60,000
most frequent words appearing in DS ∪ DP ∪ DC with other words regarded as hunki.
Following the common practice in evaluating open domain dialogue generation, we choose perplex-
ity (PPL) of the ground-truth response, BLEU (Papineni et al., 2002), and BOW Embedding (Liu
et al., 2016) as metrics. Besides, we also follow Dinan et al. (2019) and employ unigram F1
as a metric. BLEU and Embedding-based metrics are computed with an NLG evaluation open
source available at https://github.com/Maluuba/nlg-eval, and unigram F1 is calcu-
lated with the code published at https://github.com/facebookresearch/ParlAI/
blob/master/parlai/core/metrics.py. Besides quantitative evaluation, we also recruit
human annotators to do qualitative analysis on response quality, which is presented in Appendix C.
3.2	Baselines
The following models are selected as baselines:
Transformer Memory Network (TMN). The model proposed by Dinan et al. (2019) along with the
release of the Wizard data. It is built upon a transformer architecture with an external memory hosting
the knowledge. We implement the model using the code shared at https://github.com/
facebookresearch/ParlAI/blob/master/projects/wizard_of_wikipedia.
Incremental Transformer with Deliberation Decoder (ITDD). A transformer-based model pub-
lished very recently on ACL’19 (Li et al., 2019). The encoder incrementally represents multi-turn
dialogues and knowledge, and the decoder conducts response decoding in two passes similar to
the deliberation network in machine translation. We implement the model using the code shared at
https://github.com/lizekang/ITDD.
Note that to make the comparison fair, we employ the end-to-end version of TMN without the
knowledge regularization in learning. After all, one can include ground-truth signals on knowledge
selection in both our model and TMN, and improve the two in the same way, although such signals
are not available in most scenarios (e.g., in CMU-DoG).
3.3	Evaluation Results
To simulate a low-resource scenario, we start from using the full training data as DS, and gradually
reduce the number of training examples by halving the training set. Note that baseline models are
learned with the full training sets. Table 1 and Table 2 report evaluation results on Test Seen and Test
Unseen of Wizard respectively, and Table 3 reports evaluation results on CMUDoG. Through pre-
training 95% parameters with the ungrounded dialogues and the plain text and fixing the parameters
afterwards, our model holds the state-of-the-art performance in terms of most metrics on all test sets
even when the training sets have been cut to 1/8, and has stable performance on Test Unseen with
2,,,	，，,，，，	，	，，..，…™
https://github.com/nouhadziri/THRED
3
https://github.com/facebookresearch/ParlAI/tree/master/parlai/tasks/wikipedia
6
Published as a conference paper at ICLR 2020
MetriCS MOdels^^^^^^	PPL	F1	BLEU-1	BLEU-2	BLEU-3	BLEU-4	Average	Extrema	Greedy
TMN (Dinan et al., 2019)	103.6	14.3	0.168-	0.057-	0.022-	0.009-	0.839^^	0.408-	0.645
ITDD (Li et al., 2019)	44.8	11.4	0.134	0.047	0.021	0.011	0.826	0.364	0.624
FULL DATA	25.6	16.5	0.207-	0.101 -	0.062-	0.043-	0.828^^	0.422-	0.628
1/2 DATA	27.7	16.7	0.208	0.103	0.064	0.045	0.827	0.421	0.647
1/4 DATA	32.4	16.2	0.205	0.098	0.060	0.041	0.828	0.423	0.650
1/8 DATA	35.8	16.0	0.201	0.093	0.054	0.035	0.831	0.419	0.653
1/16 DATA	41.0	15.3	0.191	0.087	0.050	0.032	0.832	0.424	0.652
Table 2: Evaluation results on Test Unseen of Wizard.
^~^^∑Z3~Metrics Models^^^^^^	PPL	F1	BLEU-1	BLEU-2	BLEU-3	BLEU-4	Average	Extrema	Greedy
TMN (Dinan et al., 2019)	75.2	9.9	0.115-	0.040-	0.016-	0.007-	0.789^^	0.399-	0.615
ITDD (Li et al., 2019)	26.0	10.4	0.095	0.036	0.017	0.009	0.748	0.390	0.587
FULL DATA	54.4	10.7	0.150-	0.057-	0.025-	0.012-	0.809^^	0.413-	0.633
1/2 DATA	57.0	10.4	0.142	0.052	0.022	0.010	0.808	0.414	0.635
1/4 DATA	61.7	10.5	0.131	0.046	0.019	0.009	0.781	0.402	0.613
1/8 DATA	67.6	10.2	0.121	0.044	0.019	0.009	0.787	0.407	0.622
Table 3: Evaluation results on CMU-DoG.
(a)
Figure 2: Performance of variants of the proposed model on Wizard. (a) Comparison of parameter
fine-tuning and parameter fixing on Test Seen. (b) Comparison of parameter fine-tuning and parameter
fixing on Test Unseen. (c) Results of pre-training ablation on Test Seen. (d) Results of pre-training
ablation on Test Unseen.
respect to different training sizes. Particularly, the model achieves more significant improvement over
the baselines on Test Unseen, and when the training set shrinks, the performance gap on Test Seen and
Test Unseen becomes marginal. The results show a good generalization ability of the proposed model
on out-of-domain knowledge. ITDD achieves low PPL on both Test Seen and CMUDoG, which
may stem from overfitting by the two-pass decoder. As an evidence, the model is just comparable
with TMN on most metrics except PPL on Test Seen and CMU_DoG, and is worse than our model on
Test Unseen even in terms of PPL.
3.4 Discussions
In addition to the performance of the model under low-resource settings, we are also curious about
Q1: what if we fine-tune the pre-trained parameters, rather than fixing them, with the training data of
the knowledge-grounded dialogues, given that pre-training → fine-tuning has become the fashion in
NLP research and engineering? Q2: can we somehow leverage the ungrounded dialogues and the
plain text in learning of TMN, and in this case, will there be any change in the comparison with our
model? and Q3: what is the impact of pre-training to different components of the proposed model?
Answer to Q1: Figure 2(a) and Figure 2(b) compare our models with fine-tuned parameters and fixed
parameters on Test Seen and Test Unseen respectively. Basically, when there are enough training
data (e.g., > 1/2), fine-tuning can further improve the model on both in-domain and out-of-domain
knowledge. On the other hand, when the training size is small, which is the assumption of the paper,
fine-tuning may cause overfitting and lead to performance drop on the test sets. Test Unseen is more
vulnerable than Test Seen, and the smaller the training size is, the bigger the gap is between the model
with fixed parameters and the model with fine-tuned parameters. Therefore, in a low-resource setting
(e.g., less than 5k training dialogues), it is better to fix the pre-trained parameters and only estimate
the remaining 5% parameters with the training data.
Answer to Q2: Normally, it is not trivial to learn an entangled architecture like TMN with ungrounded
dialogues and plain text. However, to make the comparison even more fair, we first pre-train a
transformer-based encoder-decoder with the Reddit data. The encoder is fixed and used for TMN, and
7
Published as a conference paper at ICLR 2020
80
60
& 40
20
0 ..........................   _
FULL 1/2	1/4	1/8 1/16
Training Data
Our model (seen)
1^] Our model (unseen)
I=g INN (seen)
R~τι TMN (unseen)
IS] Our model (seen)
Our model (unseen)
≡l TMN (seen)
κ~~∣ TMN (unseen)
20.0
17.5-
JH 150
12.5-
10.0-
FULL 1/2	1/4	1/8 1/16
Training Data
0.30
Our model (seen)
∣^≈ι Our model (unseen)
I a TMN (seen)
TMN (unseen)
1/2	1/4	1/8 1/16
Training Data

(a) PPL	(b) F1	(C) BLEU-I
Figure 3: Comparison with pre-trained TMN on Wizard.
the parameters of the deCoder is used to initialize the parameters of the deCoder of TMN. Then, we pre-
train the doCument representation in TMN with the Wikipedia dump. Finally, the knowledge attention
in enCoding and the deCoder are learned (fine-tuned) with the training data of knowledge-grounded
dialogues, as knowledge and dialogue Contexts are entangled in the two modules. Figure 3 Compares
the pre-trained TMN with our model. Even though we have tried our best to make TMN use DC
and DP, it is still muCh worse than our model. The results indiCate the importanCe of disentangling
to leveraging ungrounded dialogues and plain text for low-resourCe knowledeg-grounded dialogue
generation.
Answer to Q3: Figure 2(C) and Figure 2(d) show the results of ablation study in terms of pre-training.
-lm means that θl and θol are estimated using DS together with {θs0 ; θv0 ; θg0 ; θπ}. Similarly, -context
and -knowledge mean that pre-training is removed from {θe ; θd; θs ; θv ; θg ; θo} and θk respeCtively.
We Can ConClude that (1) pre-training is CruCial to low-resourCe knowledge-grounded dialogue
generation, sinCe removing any Component from pre-training Causes performanCe drop when training
data is small; and (2) in terms of impaCt to performanCe, lm>context>knowledge on Test Seen, while
knowledge>lm>context on Test Unseen.
4	Related Work
ResearCh on end-to-end open domain dialogue generation is enCouraged by the suCCess of neural
sequenCe-to-sequenCe models on maChine translation (Sutskever et al., 2014). On top of the basiC
arChiteCture (Shang et al., 2015; Vinyals & Le, 2015), various extensions have been made to taCkle the
safe response problem (Li et al., 2015; Xing et al., 2017; Zhao et al., 2017; Song et al., 2018; Tao et al.,
2018; Qiu et al., 2019); to model dialogue history for multi-turn Conversation (Serban et al., 2016;
2017); and to learn with advanCed maChine learning teChniques (Li et al., 2016; 2017). Very reCently,
grounding response generation on a speCifiC type of knowledge, suCh as triples from a knowledge
base (Zhou et al., 2018a), doCuments (Ghazvininejad et al., 2018; Zhao et al., 2019), personas (Zhang
et al., 2018), and images (Mostafazadeh et al., 2017), has emerged as a new fashion in the researCh of
open domain dialogue systems. This work aligns with the trend by Considering doCument-grounded
dialogue generation. Our model is built upon state-of-the-art neural generation teChniques suCh as
attention (Bahdanau et al., 2015; Yang et al., 2016) and Copying (See et al., 2017; Raghu et al., 2019;
Yavuz et al., 2019), but is unique in that Components are pre-trained from various sourCes, thanks to
the disentangled design. Thus, rather than testing new arChiteCtures on the benChmarks, our main
Contribution lies in investigation of knowledge-grounded dialogue generation under a low-resourCe
setting with pre-training teChniques, whiCh roots in the requirement from praCtiCe.
The idea of “disentangling response deCoding” is inspired by the similar researCh in representation
learning that aims to seek a representation axis aligning with the generative faCtors of data (Bengio
et al., 2013). State-of-the-art models are built within the framework of variational auto-enCoding
(Kingma & Welling, 2013) either under an unsupervised assumption (Higgins et al., 2017; Kim &
Mnih, 2018; Chen et al., 2016; 2018) or aided by a few labels (Narayanaswamy et al., 2017; LoCatello
et al., 2019). In this work, we borrow the ConCept of “disentangling”, but apply it to the struCture of
the deCoder of a response generation model. The result is a few independent Components that allow
asynChronous parameter estimation. The work is also enCouraged by the reCent breakthrough on
pre-training for NLP tasks (Peters et al., 2018; Devlin et al., 2018; Yang et al., 2019; Liu et al., 2019;
Song et al., 2019). We take advantage of disentanglement, and employ pre-training teChniques to
taCkle the low-resourCe Challenge in the task of knowledge-grounded dialogue generation.
8
Published as a conference paper at ICLR 2020
5	Conclusions
We study knowledge-grounded dialogue generation under a low-resource setting. To overcome
the challenge from insufficient training data, we propose decomposing the response decoder into
independent components in which most parameters do not rely on the training data any more and can
be estimated from large scale ungrounded dialogues and unstructured documents. Evaluation results
on two benchmarks indicate that our model achieves the state-of-the-art performance with only 1/8
training data, and exhibits a good generalization ability on out-of-domain knowledge.
Acknowledgments
We would like to thank the reviewers for their constructive comments. This work was supported
by the National Key Research and Development Program of China (No. 2017YFC0804001), the
National Science Foundation of China (NSFC No. 61876196 and NSFC No. 61672058). Rui Yan
was sponsored as the young fellow of Beijing Academy of Artificial Intelligence (BAAI). Rui Yan is
the corresponding author.
References
Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Bengio. Neural machine translation by jointly
learning to align and translate. In ICLR, 2015.
Yoshua Bengio, Aaron Courville, and Pascal Vincent. Representation learning: A review and new
perspectives. IEEE transactions on pattern analysis and machine intelligence, 35(8):1798-1828,
2013.
Tian Qi Chen, Xuechen Li, Roger B Grosse, and David K Duvenaud. Isolating sources of disentan-
glement in variational autoencoders. In Advances in Neural Information Processing Systems, pp.
2610-2620, 2018.
Xi Chen, Yan Duan, Rein Houthooft, John Schulman, Ilya Sutskever, and Pieter Abbeel. Infogan:
Interpretable representation learning by information maximizing generative adversarial nets. In
Advances in neural information processing systems, pp. 2172-2180, 2016.
Kyunghyun Cho, Bart Van Merrienboer, Caglar Gulcehre, Dzmitry Bahdanau, Fethi Bougares, Holger
Schwenk, and Yoshua Bengio. Learning phrase representations using rnn encoder-decoder for
statistical machine translation. arXiv preprint arXiv:1406.1078, 2014.
Junyoung Chung, Caglar Gulcehre, KyungHyun Cho, and Yoshua Bengio. Empirical evaluation of
gated recurrent neural networks on sequence modeling. arXiv preprint arXiv:1412.3555, 2014.
Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. Bert: Pre-training of deep
bidirectional transformers for language understanding. arXiv preprint arXiv:1810.04805, 2018.
Emily Dinan, Stephen Roller, Kurt Shuster, Angela Fan, Michael Auli, and Jason Weston. Wizard of
wikipedia: Knowledge-powered conversational agents. In ICLR, 2019.
Nouha Dziri, Ehsan Kamalloo, Kory W Mathewson, and Osmar Zaiane. Augmenting neural response
generation with context-aware topical attention. arXiv preprint arXiv:1811.01063, 2018.
Joseph L Fleiss. Measuring nominal scale agreement among many raters. Psychological bulletin, 76
(5):378, 1971.
Marjan Ghazvininejad, Chris Brockett, Ming-Wei Chang, Bill Dolan, Jianfeng Gao, Wen-tau Yih,
and Michel Galley. A knowledge-grounded neural conversation model. In AAAI, 2018.
Irina Higgins, Loic Matthey, Arka Pal, Christopher Burgess, Xavier Glorot, Matthew Botvinick,
Shakir Mohamed, and Alexander Lerchner. beta-vae: Learning basic visual concepts with a
constrained variational framework. ICLR, 2(5):6, 2017.
Eric Jang, Shixiang Gu, and Ben Poole. Categorical reparameterization with gumbel-softmax. arXiv
preprint arXiv:1611.01144, 2016.
9
Published as a conference paper at ICLR 2020
Hyunjik Kim and Andriy Mnih. Disentangling by factorising. In International Conference on
Machine Learning, pp. 2654-2663, 2018.
Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In ICLR, 2015.
Diederik P Kingma and Max Welling. Auto-encoding variational bayes. arXiv preprint
arXiv:1312.6114, 2013.
Jiwei Li, Michel Galley, Chris Brockett, Jianfeng Gao, and Bill Dolan. A diversity-promoting
objective function for neural conversation models. NAACL, pp. 110-119, 2015.
Jiwei Li, Will Monroe, Alan Ritter, Dan Jurafsky, Michel Galley, and Jianfeng Gao. Deep reinforce-
ment learning for dialogue generation. In EMNLP, pp. 1192-1202, 2016.
JiWei Li, Will Monroe, Tianlin Shi, Sebastien Jean, Alan Ritter, and Dan Jurafsky. Adversarial
learning for neural dialogue generation. In EMNLP, pp. 2157-2169, 2017.
Zekang Li, Cheng Niu, Fandong Meng, Yang Feng, Qian Li, and Jie Zhou. Incremental transformer
With deliberation decoder for document grounded conversations. In Proceedings of the 57th Annual
Meeting of the Association for Computational Linguistics, pp. 12-21, 2019.
Rongzhong Lian, Min Xie, Fan Wang, Jinhua Peng, and Hua Wu. Learning to select knoWledge for
response generation in dialog systems. arXiv preprint arXiv:1902.04911, 2019.
Chia-Wei Liu, Ryan LoWe, Iulian Serban, Mike NoseWorthy, Laurent Charlin, and Joelle Pineau.
HoW not to evaluate your dialogue system: An empirical study of unsupervised evaluation metrics
for dialogue response generation. In Proceedings of the 2016 Conference on Empirical Methods in
Natural Language Processing, pp. 2122-2132, 2016.
Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike
LeWis, Luke Zettlemoyer, and Veselin Stoyanov. Roberta: A robustly optimized bert pretraining
approach. arXiv preprint arXiv:1907.11692, 2019.
Francesco Locatello, Michael Tschannen, Stefan Bauer, Gunnar Ratsch, Bernhard Scholkopf,
and Olivier Bachem. Disentangling factors of variation using feW labels. arXiv preprint
arXiv:1905.01258, 2019.
Nasrin Mostafazadeh, Chris Brockett, Bill Dolan, Michel Galley, Jianfeng Gao, Georgios Spithourakis,
and Lucy VanderWende. Image-grounded conversations: Multimodal context for natural question
and response generation. In Proceedings of the Eighth International Joint Conference on Natural
Language Processing (Volume 1: Long Papers), pp. 462-472, 2017.
Siddharth NarayanasWamy, T Brooks Paige, Jan-Willem Van de Meent, Alban Desmaison, Noah
Goodman, Pushmeet Kohli, Frank Wood, and Philip Torr. Learning disentangled representations
With semi-supervised deep generative models. In Advances in Neural Information Processing
Systems, pp. 5925-5935, 2017.
Kishore Papineni, Salim Roukos, Todd Ward, and Wei-Jing Zhu. Bleu: a method for automatic
evaluation of machine translation. In Proceedings of the 40th annual meeting on association for
computational linguistics, pp. 311-318. Association for Computational Linguistics, 2002.
Jeffrey Pennington, Richard Socher, and Christopher Manning. Glove: Global vectors for Word
representation. In EMNLP, pp. 1532-1543, 2014.
MattheW E Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, and
Luke Zettlemoyer. Deep contextualized Word representations. In NAACL, pp. 2227-2237, 2018.
Lisong Qiu, Juntao Li, Wei Bi, Dongyan Zhao, and Rui Yan. Are training samples correlated?
learning to generate dialogue responses With multiple references. In Proceedings of the 57th
Annual Meeting of the Association for Computational Linguistics, pp. 3826-3835, Florence,
Italy, July 2019. Association for Computational Linguistics. doi: 10.18653/v1/P19-1372. URL
https://www.aclweb.org/anthology/P19-1372.
10
Published as a conference paper at ICLR 2020
Dinesh Raghu, Nikhil Gupta, et al. Disentangling language and knowledge in task-oriented dialogs.
In Proceedings of the 2019 Conference of the North American Chapter of the Association for
Computational Linguistics: Human Language Technologies, Volume 1 (Long and Short Papers),
pp.1239-1255, 2019.
Ashwin Ram, Rohit Prasad, Chandra Khatri, Anu Venkatesh, Raefer Gabriel, Qing Liu, Jeff Nunn,
Behnam Hedayatnia, Ming Cheng, Ashish Nagar, et al. Conversational ai: The science behind the
alexa prize. arXiv preprint arXiv:1801.03604, 2018.
Abigail See, Peter J Liu, and Christopher D Manning. Get to the point: Summarization with
pointer-generator networks. In Proceedings of the 55th Annual Meeting of the Association for
Computational Linguistics (Volume 1: Long Papers), pp. 1073-1083, 2017.
Iulian Vlad Serban, Alessandro Sordoni, Yoshua Bengio, Aaron C Courville, and Joelle Pineau.
Building end-to-end dialogue systems using generative hierarchical neural network models. In
AAAI, volume 16, pp. 3776-3784, 2016.
Iulian Vlad Serban, Alessandro Sordoni, Ryan Lowe, Laurent Charlin, Joelle Pineau, Aaron C
Courville, and Yoshua Bengio. A hierarchical latent variable encoder-decoder model for generating
dialogues. In AAAI, pp. 3295-3301, 2017.
Lifeng Shang, Zhengdong Lu, and Hang Li. Neural responding machine for short-text conversation.
In ACL, pp. 1577-1586, 2015.
Heung-Yeung Shum, Xiaodong He, and Di Li. From eliza to xiaoice: Challenges and opportunities
with social chatbots. Frontiers ofIT & EE, 19(1):10-26, 2018.
Kaitao Song, Xu Tan, Tao Qin, Jianfeng Lu, and Tie-Yan Liu. Mass: Masked sequence to sequence
pre-training for language generation. In International Conference on Machine Learning, pp.
5926-5936, 2019.
Yiping Song, Rui Yan, Cheng-Te Li, Jian-Yun Nie, Ming Zhang, and Dongyan Zhao. An ensemble
of retrieval-based and generation-based human-computer conversation systems. In IJCAI, pp.
4382-4388, 2018.
Ilya Sutskever, Oriol Vinyals, and Quoc V Le. Sequence to sequence learning with neural networks.
In Advances in neural information processing systems, pp. 3104-3112, 2014.
Chongyang Tao, Shen Gao, Mingyue Shang, Wei Wu, Dongyan Zhao, and Rui Yan. Get the point
of my utterance! learning towards effective responses with multi-head attention mechanism. In
IJCAI, pp. 4418-4424, 2018.
Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, Eukasz
Kaiser, and Illia Polosukhin. Attention is all you need. In NIPS, pp. 5998-6008, 2017.
Oriol Vinyals and Quoc Le. A neural conversational model. arXiv preprint arXiv:1506.05869, 2015.
Chen Xing, Wei Wu, Jie Liu, Yalou Huang, Ming Zhou, and Wei-Ying Ma. Topic aware neural
response generation. In AAAI, pp. 3351-3357, 2017.
Zhilin Yang, Zihang Dai, Yiming Yang, Jaime Carbonell, Ruslan Salakhutdinov, and Quoc V
Le. Xlnet: Generalized autoregressive pretraining for language understanding. arXiv preprint
arXiv:1906.08237, 2019.
Zichao Yang, Diyi Yang, Chris Dyer, Xiaodong He, Alex Smola, and Eduard Hovy. Hierarchical
attention networks for document classification. In Proceedings of the 2016 conference of the North
American chapter of the association for computational linguistics: human language technologies,
pp. 1480-1489, 2016.
Semih Yavuz, Abhinav Rastogi, Guan-Lin Chao, and Dilek Hakkani-Tur. Deepcopy: Grounded
response generation with hierarchical pointer networks. arXiv preprint arXiv:1908.10731, 2019.
Saizheng Zhang, Emily Dinan, Jack Urbanek, Arthur Szlam, Douwe Kiela, and Jason Weston. Per-
sonalizing dialogue agents: I have a dog, do you have pets too? arXiv preprint arXiv:1801.07243,
2018.
11
Published as a conference paper at ICLR 2020
Tiancheng Zhao, Ran Zhao, and Maxine Eskenazi. Learning discourse-level diversity for neural
dialog models using conditional variational autoencoders. In ACL, pp. 654-664, 20l7.
Xueliang Zhao, Chongyang Tao, Wei Wu, Can Xu, Dongyan Zhao, and Rui Yan. A document-
grounded matching network for response selection in retrieval-based chatbots. In IJCAI, pp.
5443-5449, 2019.
Hao Zhou, Tom Young, Minlie Huang, Haizhou Zhao, Jingfang Xu, and Xiaoyan Zhu. Commonsense
knowledge aware conversation generation with graph attention. In IJCAI, pp. 4623-4629, 2018a.
Kangyan Zhou, Shrimai Prabhumoye, and Alan W Black. A dataset for document grounded conver-
sations. arXiv preprint arXiv:1809.07358, 2018b.
12
Published as a conference paper at ICLR 2020
Appendix
A Details of datasets
Table 4 reports the statistics of the Wizard data and the CMU-DOG data.
	Wizard of Wikipedia				CMU-DoG		
	Train	Valid	Test Seen	Test Unseen	Train	Valid	Test
Number of Utterances	166,787	17,715	-8,715-	8,782	74,717	4,993	13,646
Number of Conversations	18,430	1,948	-965	968	3,373	229	-619-
Number of Topics/Documents	1,247	^^99-	-533	58	-30-	-^0-	-30-
Average Turns per Dialogue	9.0	9.1	9.0	9.1	22.2	21.8	22.0
Table 4: Statistics of the two datasets.
B	More Implementation Details
In both Wizard and CMU-DOG, We set the size of word embedding as 300, the hidden size of the
context encoder, the knowledge encoder, and the decoder as 1024. The context encoder and the
decoder have 3 layers respectively. The gθs and gθs0 are similarity functions which contain two
single-layer feed-forward networks (FFNs) of size 512 with tanh non-linearity. The MLPθl, MLPθv
and MLPθv are two-layer FFNs of size 1024 and 300 respectively. The MLPθg, MLPθg0 and MLPθπ
are single-layer FFNs. All models are learned with Adam (Kingma & Ba, 2015) optimizer with
β1 = 0.9, β2 = 0.999, and an initial learning rate = 5e - 4. We increase the learning rate linearly
for the first 5000 training steps and decrease it thereafter proportionally to the inverse square root
of the step number. We set the initial temperature, the minimum temperature, and the anneal rate
of gumbeLsoftmax as 1.0, 0.6, and 4e - 5 respectively. In training, we choose 64 as the size of
mini-batches, and add dropout to gθs0 and MLPθv0 , but do not see much difference. Early stopping on
validation is adopted as a regularization strategy. We employ beam search in response decoding with
a beam size 5. We add weak supervision to guide the training of the decoding manager where the
words that belong to modal verbs4 are forced to be classified as language model.
C Human Evaluation
Metrics MOdeE^^^^	Seen				Unseen			
	Fluency	Context Coherence	Knowledge Relevance	Kappa	Fluency	Context Coherence	Knowledge Relevance	Kappa
TMN (Dinan et al., 2019)	-126~	0.51	047	0.60	-140~	035	0.46	0.68
ITDD (Li et al., 2019)	1.69	1.18	1.16	0.70	1.72	0.73	0.71	0.69
1/4 DATA	1.77	1.54	1.17	0.58	1.75	1.26	1.18	0.57
1/8 DATA	1.68	1.44	1.13	0.60	1.73	1.21	1.25	0.57
Table 5: Human evaluation results on Wizard.
The goal of human study is to get more insights on quality of responses generated by different models
from human annotators. To this end, we randomly sample 300 examples from Test Seen and Test
Unseen respectively, and recruit 3 well educated native speakers as the annotators. Comparison
is conducted among TMN, ITDD, our model (with 1/4 training data), and our model (with 1/8
training data). On each test set, for each of the 300 examples, an annotator is provided with a context,
the ground-truth knowledge, and responses provided by the models under evaluation (the top one
response in beam search). Responses are pooled and randomly shuffled to hide their sources. Then,
each annotator judges the responses from three aspects including fluency, context coherence, and
knowledge relevance, and assigns a score from {0, 1, 2} to each of the response on each aspect,
in which 0 means bad, 1 means fair, and 2 means good. Each response receives 3 scores on each
aspect, and agreement among the annotators are calculated with Fleiss’ kappa (Fleiss, 1971). Table 5
shows the average scores on the three aspects. Overall, the proposed model achieves the state-of-
the-art performance in terms of all the three aspects on both Test Seen and Test Unseen when only
4“can”, “would”, “could”, “will”, “should”, “may”
13
Published as a conference paper at ICLR 2020
1/8 training examples are left. All kappa values exceed or are close to 0.6, indicating substantial
agreement among the annotators. The results are consistent with those reported in Table 1 and Table
2. Our model estimates the decoder with abundant extra resources, and ITDD exploits a two-pass
decoder. Therefore, both of the two models can provide grammatical and fluent responses, no matter
the background knowledge is within the domain of training or out of the domain of training. On the
other hand, with the 15M Reddit data in learning of the context processor, our model can make the
dialogues more coherent than the baselines, although there is a little drop on Test Unseen compared
to Test Seen. Since the model only obtains limited guidance from training in terms of the connection
between the knowledge and the dialogues, how to make the responses relevant to the knowledge is
still challenging, although our model has done a better job than the baselines.
[Knowledge]
[Context]
[Groundtruth]
[TMN]
[ITDD]
Our Model
the lineup , when first signed to geffen records in 1986 , consisted of vocalist axl rose , lead guitarist slash , rhythm guitarist izzy stradlin ,
bassist duff mckagan , and drummer steven adler .
guns n ' roses has released SiX studio albums , accumulating sales of more than 100 million records worldwide ,including 45 million in the
united states , making them the 41st best-selling artist of all time .
guns n ' roses ' debut album , `` appetite for destruction '' ( 1987 ) , reached number one on the `` billboard '' 200 a year after its release , on
the strength of `` sweet child o ' mine '' , the band 's only single to reach number one on the `` billboard '' hot 100 .
guns n ' roses , often abbreviated as gnr , is an american hard rock band from los angeles , california , formed in 1985 .
the album has sold approximately 30 million copies worldwide , including 18 million units in the united states , making it the best-selling
debut album of all time in the us , as well as the eleventh best-selling album in the united states .
the success of the debut was followed by the eight-song album `` g n ' r lies '' ( 1988 ) which reached number two on the `` billboard '' 200 .
the twin albums `` use your illusion i '' and `` use your illusion ii '' ( 1991 ) debuted at number two and number one on the `` billboard '' 200
respectively and have sold a combined 35 million copies worldwide , including 14 million units in the united states .
have you heard of the band guns n ' roses ? they are my favorite band ever .
sure the band was formed inn 1985 in los angeles , california . what is your favorite album ?
they are a great band .
i have n't , but i do know that they are the most popular band in the us .
me too ! they 're an american rock band from los angeles and has released six studio albums .
Generated by Language model	Generated by Context Processor Generated by Knowledge Processor
Table 6: A case from Test Unseen of Wizard.
Table 6 shows an example from Test Unseen, from which we can see that the response from our
model (with 1/8 training data) not only smoothly catches the context, but also expands the topic with
proper pieces of knowledge (highlighted in red). On the other hand, responses from the baselines just
reply to the context but lose the connection with the knowledge, as we have analyzed with the results
in Table 5. Moreover, we also visualize the sources of words in the response with colors. Basically,
words that have weak or no correlation with the context and the knowledge are generated by the
language model, words that connect with the context but have nothing to do with the knowledge are
generated by the context processor, and words that are copied from the knowledge are generated by
the knowledge processor.
D Comparison with MASS
0 8 6 4 2 0
2 11111
IL
Our model (seen)
Our model(unseen)
IΞΞH MASS (seen)
FULL 1/2	1/4	1/8	1/16
Training Data
(a)	F1
0 5 0 5 0 5
3 2 2 1 1 0
a
T山1
FULL 1/2	1/4	1/8	1/16
Training Data
(b)	BLEU-I
)
Figure 4: Comparison with MASS on Wizard.
14
Published as a conference paper at ICLR 2020
We compare our model with MASS (Song et al., 2019), a pre-training technique that achieves
state-of-the-art performance on several language generation tasks such as machine translation, text
summarization, and conversational response generation. MASS firstly pre-trains an encoder-decoder
architecture with large-scale monolingual data from WMT News Crawl datasets by reconstructing
a fragment of a sentence from the remaining, and then fine-tunes the architecture on downstream
language generation tasks. We use the code and the model published at https://github.com/
microsoft/MASS. The original model is for sequence-to-sequence generation. To adapt it to
the knowledge-grounded dialogue generation task, we concatenate the knowledge sentences and
conversational history as a long context as the input of the encoder.
Figure 4 shows the evaluation results. Note that we do not include PPL as a metric like in Figure 3,
since MASS performs generation with sub-words, and thus is not comparable with our model on PPL.
On both Test Seen and Test Unseen, our model consistently outperforms MASS over all training sizes.
The reason might be that “mask then predict”, which is basically the pre-training strategy exploited by
MASS, is not an effective way to leverage the text data for knowledge-grounded dialogue generation,
since the task needs more complicated operations such as deep copying. Another reason might be
that MASS is designed for the sequence-to-sequence generation task and isn’t compatible with the
knowledge-grounded response generation task which has extra knowledge input.
E Ablation over Components
Training Data
(a)
Training Data
(b)
Figure 5: Ablation study over the three components of the decoder. (a) Results on Test Seen. (b)
Results on Test Unseen.
We conduct ablation study over the language model, the context processor, and the knowledge
processor by completely dropping any of them from the decoding manager (in both training and test).
Figure 5(a) and Figure 5(b) report the results on Test Seen and Test Unseen respectively. First of all,
all the three components are useful, since removing any of them in general will cause performance
drop. Second, in terms of importance, knowledge processor>context processor>language model.
The explanation is that (1) part of the function of the language model may be covered by the context
processor and the knowledge processor after it is removed5, since both the context processor and
the knowledge processor also contain language models, although in the full model, the language
model generates 17% words in the responses of Test Seen and Test Unseen; (2) the context processor
is important (generating 27% words), but not always, since a large proportion of responses in the
Wizard data highly depend on the knowledge (e.g., the examples shown in (Dinan et al., 2019)); (3)
the knowledge processor (generating 56% words) is the most important component due to the nature
of the Wizard data. The results also remind us that perhaps we can try pre-training the language
model with larger and more heterogeneous data such as Common Crawl in the future.
15
Published as a conference paper at ICLR 2020
I
(a)
Figure 6: Comparison with the proposed model without pre-training. (a) Results on Test Seen. (b)
Results on Test Unseen.
18
16
E 14
12
10
FULL 1/2	1/4	1/8	1/16
Training Data
(b)
F Comparison with non-pretraining
Figure 6(a) and Figure 6(b) compare two versions of our model on Test Seen and Test Unseen
respectively. One version is the model pre-trained using ungrounded dialogues and documents, and
the other version is the one trained with knowledge-grounded dialogues (i.e., no pre-training is
performed). Besides, we also include the results of TMN to get more insights. We can see that when
there are enough training data (e.g., full data), our model without pre-training outperforms both TMN
and the pre-trained version on Test Seen. This is because the attention and copying operations can
well capture the correlation among the knowledge, the contexts, and the responses in the training data,
while in the pre-trained version, only a small proportion of the model can benefit from the training
data, and a large proportion may suffer from the gap between the knowledge-grounded dialogues
collected from crowd-sourcing and the ungrounded dialogues and documents collected from the Web.
However, when the training size shrinks, which is basically the problem we study in the paper, the
performance of our model without pre-training drops dramatically, and becomes even worse than
that of TMN on Test Seen when the training size is no more than 1/8. This is because when training
data is not enough, our model is more prone to overfit the small training set than TMN, and thus
results in bad generalization ability. In the low-resource setting, pre-training, especially with the
disentangled decoder if we consider the results in Figure 3, is an effective approach to obtaining good
generalization ability on test data. The conclusions are further verified by the comparison on Test
Unseen, where non-pre-training is worse than pre-training over all training sizes, and non-pre-training
quickly drops below TMN when the training data is halved. On Test Unseen, with 1/8 training data,
the pre-trained model achieves the performance of the model learned from the full training data
without pre-training.
5“Part of” is because the language model is pre-trained with monolingual Reddit data, which is different
from the context processor and the knowledge processor.
16