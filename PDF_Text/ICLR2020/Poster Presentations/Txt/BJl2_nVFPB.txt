Published as a conference paper at ICLR 2020
Automatically Discovering and Learning New
Visual Categories with Ranking Statistics
Kai Han*	Sylvestre-Alvise Rebuffi*	Sebastien Ehrhardt*
Andrea Vedaldi Andrew Zisserman
Visual Geometry Group, Department of Engineering Science, University of Oxford
{khan,srebuffi,hyenal,vedaldi,az}@robots.ox.ac.uk
Ab stract
We tackle the problem of discovering novel classes in an image collection given
labelled examples of other classes. This setting is similar to semi-supervised
learning, but significantly harder because there are no labelled examples for the
new classes. The challenge, then, is to leverage the information contained in the
labelled images in order to learn a general-purpose clustering model and use the
latter to identify the new classes in the unlabelled data. In this work we address
this problem by combining three ideas: (1) we suggest that the common approach
of bootstrapping an image representation using the labeled data only introduces
an unwanted bias, and that this can be avoided by using self-supervised learning
to train the representation from scratch on the union of labelled and unlabelled
data; (2) we use rank statistics to transfer the model’s knowledge of the labelled
classes to the problem of clustering the unlabelled images; and, (3) we train the
data representation by optimizing a joint objective function on the labelled and
unlabelled subsets of the data, improving both the supervised classification of the
labelled data, and the clustering of the unlabelled data. We evaluate our approach
on standard classification benchmarks and outperform current methods for novel
category discovery by a significant margin.
1	Introduction
Modern machine learning systems can match or surpass human-level performance in tasks such as
image classification (Deng et al., 2009), but at the cost of collecting large quantities of annotated
training data. Semi-supervised learning (SSL) (Oliver et al., 2018) can alleviate this issue by mixing
labelled with unlabelled data, which is usually much cheaper to obtain. However, these methods still
require some annotations for each of the classes that one wishes to learn. We argue this is not always
possible in real applications. For instance, consider the task of recognizing products in supermarkets.
Thousands of new products are introduced in stores every week, and it would be very expensive to
annotate them all. However, new products do not differ drastically from the existing ones, so it should
be possible to discover them automatically as they arise in the data. Unfortunately, machines are still
unable to effectively learn new classes without manual annotations.
In this paper, we thus consider the problem of discovering new visual classes automatically, assuming
that a certain number of classes are already known by the model (Hsu et al., 2018; 2019; Han et al.,
2019). This knowledge comes in the form of a labelled dataset of images for a certain set of classes.
Given that this data is labelled, off-the-shelf supervised learning techniques can be used to train a
very effective classifier for the known classes, particularly if Convolutional Neural Networks (CNNs)
are employed. However, this does not mean that the learned features are useful as a representation of
the new classes. Furthermore, even if the representation transfers well, one still has the problem of
identifying the new classes in an unlabelled dataset, which is a clustering problem.
We tackle these problems by introducing a novel approach that combines three key ideas (section 2
and fig. 1). The first idea is to pre-train the image representation (a CNN) using all available images,
both labelled and unlabelled, using a self-supervised learning objective. Crucially, this objective does
not leverage the known labels, resulting in features that are much less biased towards the labelled
* indicates equal contribution
1
Published as a conference paper at ICLR 2020
STEP 2
Learning higher level features:
Full-supervision
aui"≡ 6 2 ft Haui"e≡
Figure 1: Overview of our three step learning pipeline. The first step of the training consists in
learning an unbiased image representation via self-supervision using both labelled and unlabelled
data, which learns well the early layers of the representation; in the second step, we fine-tune only the
last few layers of the model using supervision on the labelled set; finally, the fine-tuned representation
is used, via rank statistics, to induce clusters in the unlabelled data, while maintaining a good
representation on the labelled set.
classes. Labels are used only after pre-training to learn a classifier specific to the labelled data as well
as to fine-tune the deepest layers of the CNN, for which self-supervision is not as effective.
The second idea is a new approach to transfer the information contained in the labelled images
to the problem of clustering the unlabelled ones. Information is transferred by sharing the same
representation between labelled and unlabelled images, motivated by the fact that the new classes
are often similar to the known ones. In more detail, pairs of unlabelled images are compared via
their representation vectors. The comparison is done using robust rank statistics, by testing if two
images share the same subset of k maximally activated representation components. This test is
used to decide if two unlabelled images belong to the same (new) class or not, generating a set of
noisy pairwise pseudo-labels. The pseudo-labels are then used to learn a similarity function for the
unlabelled images.
The third and final idea is, after bootstrapping the representation, to optimise the model by minimizing
a joint objective function, containing terms for both the labelled and unlabelled subsets, using
respectively the given labels and the generated pseudo-labels, thus avoiding the forgetting issue that
may arise with a sequential approach. A further boost is obtained by incorporating incremental
learning of the discovered classes in the classification task, which allows information to flow between
the labelled and unlabelled images.
We evaluate our method on several public benchmarks (section 3), outperforming by a large margin
all existing techniques (section 4) that can be applied to this problem, demonstrating the effectiveness
of our approach. We conclude the paper by summarizing our findings (section 5). Our code can be
found at http://www.robots.ox.ac.uk/~vgg/research/auto_novel.
2	Method
Given an unlabelled dataset Du = {xiu, i = 1, . . . , M} of images xiu ∈ R3×H×W, our goal is to
automatically cluster the images into a number of classes Cu , which we assume to be known a
priori. We also assume to have a second labelled image dataset Dl = {(xli , yil), i = 1, . . . , N } where
yil ∈ {1, . . . , Cl} is the class label for image xli. We also assume that the set of Cl labelled classes
is disjoint from the set of Cu unlabelled ones. While the statistics of Dl and Du thus differ, we
hypothesize that a general notion of what constitutes a “good class” can be extracted from Dl and
that the latter can be used to better cluster Du .
We approach the problem by learning an image representation Φ : x 7→ Φ(x) ∈ Rd in the form of a
CNN. The goal of the representation is to help to recognize the known classes and to discover the
new ones. In order to learn this representation, we combine three ideas, detailed in the next three
sections.
2.1	Self-supervised learning
Given that we have a certain number of labelled images Dl at our disposal, the obvious idea is to
use these labels to bootstrap the representation Φ by minimizing a standard supervised objective
such as the cross-entropy loss. However, experiments show that this causes the representation to
overly-specialize for the classes in Dl, providing a poor representation of the new classes in Du.
2
Published as a conference paper at ICLR 2020
Thus we resist the temptation of using the labels right away and use instead a self-supervised learning
method to bootstrap the representation Φ. Self-supervised learning has been shown (Kolesnikov et al.,
2019; Gidaris et al., 2018) to produce robust low-level features, especially for the first few layers
of typical CNNs. It has the benefit that no data annotations are needed, and thus it can be applied
to both labelled and unlabelled images during training. In this way, we achieve the key benefit of
ensuring that the representation is initialized without being biased towards the labelled data.
In detail, we first pre-train our model Φ with self-supervision on the union of Dl and Du (ignoring
all labels). We use the RotNet (Gidaris et al., 2018) approach1 due to its simplicity and efficacy, but
any self-supervised method could be used instead. We then extend the pre-trained network Φ with a
classification head ηl : Rd → RCl implemented as a single linear layer followed by a softmax layer.
The function ηl ◦ Φ is fine-tuned on the labelled dataset Dl in order to learn a classifier for the Cl
known classes, this time using the labels yi and optimizing the standard cross-entropy (CE) loss:
1N
LCE = - N Elog ηlyi (Zi)	⑴
i=1
where zil = Φ(xli) ∈ Rd is the representation of image xli. Only ηl and the last macro-block of Φ
(section 3) are updated in order to avoid overfitting the representation to the labelled data.
2.2	Transfer learning via rank statistics
Once the representation Φ and the classifier ηl have been trained, we are ready to look for the new
classes in Du . Since the classes in Du are unknown, we represent them by defining a relation among
pairs of unlabelled images (xiu, xju). The idea is that similar images should belong to the same (new)
class, which we denote by the symbol sij = 1, while dissimilar ones should not, which we denote by
sij = 0. The problem is then to obtain the labels sij .
Our assumption is that the new classes will have some degree of visual similarity with the known
ones. Hence, the learned representation should be applicable to old and new classes equally well. As
a consequence, we expect the descriptors ziu = Φ(xiu) and zju = Φ(xju) of two images xiu, xju from
the new classes to be close if they are from the same (new) class, and to be distinct otherwise.
Rather than comparing vectors ziu , zju directly (e.g., by a scalar product), however, we use a more
robust rank statistics. Specifically, we rank the values in vector ziu by magnitude. Then, if the
rankings obtained for two unlabelled images xiu and xju are the same, they are very likely to belong
to the same (new) class, so we set sij = 1. Otherwise, we set sij = 0. In practice, it is too strict to
require the two rankings to be identical if the dimension of ziu is high (otherwise we may end up with
sij = 0 for all pairs (i,j), i 6= j). Therefore, we relax this requirement by only testing if the sets of
the top-k ranked dimensions are the same (we use k = 5 in our experiments), i.e.:
Sij = i {top®&(Xu)) = toPk (φ(Xu))},	⑵
where topk : Rd → P ({1, . . . , d}) associates to a vector z the subset of indices {1, . . . , d} of its
top-k elements.
Once the labels Sij have been obtained, we use them as pseudo-labels to train a comparison function
for the unlabelled data. In order to do this, we apply a new head ηu : Rd → RCu to the image
representation ziu = Φ(Xiu) to extract a new descriptor vector ηu(ziu) optimized for the unlabelled
data. As in section 2.1, the head is composed of a linear layer followed by a softmax. Then, the inner
product ηu(ziu)>ηu(zju) is used as a score for whether images Xiu and Xju belong to the same class or
not. Note that ηu(ziu) is a normalized vector due to the softmax layer in ηu. This descriptor is trained
by optimizing the binary cross-entropy (BCE) loss:
MM
LBCE = - MM2 χχΜ∙log ηu(zU)>ηu(zU) + (i - Sij )log(i- ηu (zU)>ηu(z;))].⑶
M	i=1 j=1
1 We present to the network Φ randomly-rotated versions Rx of each image and task it with predicting R.
The problem is formulated as a 4-way classification of the rotation angle, With angle in {0°, 90°, 180°, 270° }.
The model η ◦ Φ(Rx) is terminated by a single linear layer η with 4 outputs each scoring an hypothesis. The
parameters of η and Φ are optimized by minimizing the cross-entropy loss on the rotation prediction.
3
Published as a conference paper at ICLR 2020
Furthermore, we structure ηu in a particular manner: We set its output dimension to be equal to
the number of new classes Cu . In this manner, we can use the index of the maximum element of
each vector yU = argmaxy [ηu ◦ Φ(xU)]y as prediction yU for the class of image Xu (as opposed to
assigning labels via a clustering method such as k-means).
2.3	Joint training on labelled and unlabelled data
We now have two losses that involve the representation Φ: the CE loss LCE for the labelled data
Dl and the pairwise BCE loss LBCE for the unlabelled data Du . They both share the same image
embedding Φ. This embedding can be trained sequentially, first on the labelled data, and then on the
unlabelled data using the pseudo-labels obtained above. However, in this way the model will very
likely forget the knowledge learned from the labelled data, which is known as catastrophic forgetting
in incremental learning (Rebuffi et al., 2017; Lopez-Paz & Ranzato, 2017; Shmelkov et al., 2017;
Aljundi et al., 2018).
In contrast, we jointly fine-tune our model using both losses at the same time. Note that most of the
model Φ is frozen; we only fine-tune the last macro-block of Φ together with the two heads ηu and ηl .
Importantly, as we fine-tune the model, the labels sij are changing at every epoch as the embedding
ηl is updated. This in turn affects the rank statistics used to determine the labels sij as explained
in section 2.2. This leads to a “moving target” phenomenon that can introduce some instability in
learning the model. This potential issue is addressed in the next section.
2.4	Enforcing predictions to be consistent
In addition to the CE and BCE losses, we also introduce a consistency regularization term, which is
used for both labelled and unlabelled data. In semi-supervised learning (Oliver et al., 2018; Tarvainen
& Valpola, 2017; Laine & Aila, 2017), the idea of consistency is that the class predictions on an
image x and on a randomly-transformed counterpart tx (for example an image rotation) should be the
same. In our case, as will be shown in the experiments, consistency is very important to obtain good
performance. One reason is that, as noted above, the pairwise pseudo-labels for the unlabelled data
are subject to change on the fly during training. Indeed, for an image xiu and a randomly-transformed
counterpart txiu, if we do not enforce consistency, we can have topk(Φ(xiu)) 6= topk(Φ(txiu)).
According to eq. (2) defining sij , it could result in different sij for xiu depending on the data
augmentation applied to the image. This variability of the ranking labels for a given pair could then
confuse the training of the embedding.
Following the common practice in semi-supervised learning, we use the Mean Squared Error (MSE)
as the consistency cost. This is given by:
1N	1M
LMSE = NN ∑>'(ZiS + mm E(ηu(zU) - ηu(zu))2,	(4)
i=1	i=1
where Z is the representation of tx.
The overall loss of our model can then be written as
L = LCE + LBCE + ω(t)LMSE,	(5)
where the coefficient ω(t) is a ramp-up function. This is widely used in semi-supervised learn-
ing (Laine & Aila, 2017; Tarvainen & Valpola, 2017). Following (Laine & Aila, 2017; Tarvainen
& Valpola, 2017), We use the sigmoid-shaped function ω(t) = λe-5(1-7t)2, where t is current time
step and T is the ramp-up length and λ ∈ R+ .
2.5	Incremental learning scheme
We also explore a setting analogous to incremental learning. In this approach, after tuning on the
labelled set (end of section 2.1), we extend the head ηl to Cu new classes, so that ηl : Rd → RCl+Cu.
The head parameters for the new classes are initialized randomly. The model is then trained using the
same loss eq. (5), but the cross-entropy part of the loss is evaluated on both labelled and unlabelled data
Dl and Du . Since the cross-entropy requires labels, for the unlabelled data we use the pseudo-labels
yu, which are generated on-the-fly from the head ηu at each forward pass.
The advantage is that this approach increments ηl to discriminate both old and new classes, which
is often desirable in applications. It also creates a feedback loop that causes the features Ziu to be
4
Published as a conference paper at ICLR 2020
	CIFAR-10	CIFAR-100	SVHN	Table 1: Ablation study. “w/o Con.” means without consistency constraints;
Ours w/o Con	82.6±12.0%	61.8±3.6%	61.3±1.9%	“w/o CE” means without the cross en-
Ours w/o CE	84.7±4.4%	58.4±2.7%	59.7±6.6%	tropy loss for training on labeled data.
Ours w/o BCE	26.2±2.0%	6.6±0.7%	24.5±0.5%	
Ours w/o S.S.	89.4±1.4%	67.4±2.0%	72.9±5.0%	“w/o BCE” means without binary cross entropy loss for training on unlabeled
Ours full	90.4±0∙5%	73.2±2.1%	95.0±0.2%	data; “w/o S.S.” means without self-
Ours w/ I.L.	91.7±0.9%	75.2±4.2%	95.2±0.3%	supervision.
refined, which in turn generates better pseudo-labels yU for Du from the head ηu. In this manner,
further improvements can be obtained by this cycle of positive interactions between the two heads
during training.
3	Experiments
3.1	Data and experimental details
We evaluate our models on a variety of standard benchmark datasets: CIFAR-10 (Krizhevsky & Hin-
ton, 2009), CIFAR-100 (Krizhevsky & Hinton, 2009), SVHN (Netzer et al., 2011), OmniGlot (Lake
et al., 2015), and ImageNet (Deng et al., 2009). Following Han et al. (2019), we split these to have
5/20/5/654/30 classes respectively in the unlabelled set. In addition, for OmniGlot and ImageNet
we use 20 and 3 different splits respectively, as in Han et al. (2019), and report average clustering
accuracy. More details on the splits can be found in appendix A.
Evaluation metrics. We adopt clustering accuracy (ACC) to evaluate the clustering performance
of our approach. The ACC is defined as follow:
1 N _
max,、有 ∑1{yi = g (yi)} ,
g∈Sym(L) N i=1
(6)
where yi and yi denote the ground-truth label and clustering assignment for each data point XU ∈ DU
respectively, and Sym(L) is the group permutations of L elements (this discounts the fact that the
cluster indices may not be in the same order as the ground-truth labels). Permutations are optimized
using the Hungarian algorithm (Kuhn, 1955).
Implementation details. We use the ResNet-18 (He et al., 2016) architecture, except for OmniGlot
for which we use a VGG-like network (Simonyan & Zisserman, 2015) with six layers to make our
setting directly comparable to prior work. We use SGD with momentum (Sutskever et al., 2013) as
optimizer for all but the OmniGlot dataset, for which we use Adam (Kingma & Ba, 2014). For all
experiments we use a batch size of 128 and k = 5 which we found worked consistently well across
datasets (see appendix D). More details about the hyper-parameters can be found in appendix B.
3.2	Ablation study
We validate the effectiveness of the components of our method by ablating them and measuring the
resulting ACC on the unlabelled data. Note that, since the evaluation is restricted to the unlabelled
data, we are solving a clustering problem. The same unlabelled data points are used for both training
and testing, except that data augmentation (i.e. image transformations) is not applied when computing
the cluster assignments. As can be seen in table 1, all components have a significant effect as
removing any of them causes the performance to drop substantially. Among them, the BCE loss is by
far the most important one, since removing it results in a dramatic drop of 40-60% absolute ACC
points. For example, the full method has ACC 90.4% on CIFAR-10, while removing BCE causes
the ACC to drop to 26.2%. This shows that that our rank-based embedding comparison can indeed
generate reliable pairwise pseudo labels for the BCE loss. Without consistency, cross entropy, or
self-supervision, the performance drops by a more modest but still significant 7.8%, 5.7% and 1.0%
absolute ACC points, respectively, for CIFAR-10. It means that the consistency term plays a role
as important as the cross-entropy term by preventing the “moving target” phenomenon described
in section 2.4. Finally, by incorporating the discovered classes in the classification task, we get a
further boost of 1.3%, 2.0% and 0.2% points on CIFAR-10, CIFAR-100 and SVHN respectively.
5
Published as a conference paper at ICLR 2020
Table 2: Novel category discovery results on CIFAR-10, CIFAR-100, and SVHN. ACC on the
unlabelled set. “w/ S.S.” means with self-supervised learning.
No		CIFAR-10	CIFAR-100	SVHN
(1)	k-means (MacQueen, 1967)	65.5±0.0 %	56.6±1.6%	42.6%±0.0
(2)	KCL (Hsu et al., 2018)	66.5±3.9%	14.3±1.3%	21.4%±0.6
(3)	MCL (Hsu et al., 2019)	64.2±0.1%	21.3±3.4%	38.6%±10.8
(4)	DTC (Han et al., 2019)	87.5±0.3%	56.7±1.2%	60.9%±1.6
(5)	k-means (MacQueen, 1967) w/ S.S.	72.5±0.0%	56.3±1.7%	46.7±0.0%
(6)	KCL (Hsu et al., 2018) w/ S.S.	72.3±0.2%	42.1±1.8%	65.6±4.9%
(7)	MCL (Hsu et al., 2019) w/ S.S.	70.9±0.1%	21.5±2.3%	53.1±0.3%
(8)	DTC (Han et al., 2019) w/ S.S.	88.7±0.3%	67.3±1.2%	75.7±0.4%
(9)	Ours	90.4±0∙5%	73.2±2.1%	95.0±0.2%
(10)	Ours w/ I.L.	91.7±0.9%	75.2±4.2%	95.2±0.2%
(a) init (b) epoch 30	(C) epoch 90
Figure 2: Evolution of the t-SNE
during the training of CIFAR-10.
Performed on unlabelled data (i.e.,
instances of dog, frog, horse, ship,
truck). Colors of data points denote
their ground-truth labels.
3.3	Novel category discovery
We compare our method to baselines and state-of-the-art methods for new class discovery, starting
from CIFAR-10, CIFAR-100, and SVHN in table 2. The first baseline (row 5 in table 2) amounts to
applying k-means (MacQueen, 1967) to the features extracted by the fine-tuned model (the second
step in section 2.1), for which we use the k-means++ (Arthur & Vassilvitskii, 2007) initialization.
The second baseline (row 1 in table 2) is similar, but uses as feature extractor a model trained from
scratch using only the labelled images, which corresponds to a standard transfer learning setting. By
comparing rows 1, 5 and 9 in table 2, we can see that our method substantially outperforms k-means.
Next, we compare with the KCL (Hsu et al., 2018), MCL (Hsu et al., 2019) and DTC (Han et al.,
2019) methods. By comparing rows 2-4 to 9, We see that our method outperforms these by a large
margin. We also try to improve KCL, MCL and DTC by using the same self-supervised initialization
we adopt (section 2.1), which indeed results in an improvement (rows 2-4 vs 6-8). However, their
overall performance still lags behind ours by a large margin. For example, our method of section 2.4
achieves 95.0% ACC on SVHN, while “KCL w/ S.S.”, “MCL w/ S.S.” and “DTC w/ S.S.” achieve
only 65.6%, 53.1% and 75.7% ACC, respectively. Similar trends hold for CIFAR-10 and CIFAR-100.
Finally, the incremental learning scheme of section 2.5 results in further improvements, as can be
seen by comparing rows 9 and 10 of table 2.
In fig. 2, we show the evolution of the learned representation on the unlabelled data on CIFAR-10
using t-SNE (van der Maaten & Hinton, 2008). As can be seen, while the clusters overlap in the
beginning, they become more and more separated as the training progresses, showing that our model
can effectively discover novel visual categories without labels and learn meaningful embeddings for
them.
We further compare our method to others on two more challenging datasets, OmniGlot and ImageNet,
in table 3. For OmniGlot, results are averaged over the 20 alphabets in the evaluation set (see ap-
pendix A); for ImageNet, results are averaged over the three 30-class unlabelled sets used in (Hsu
et al., 2018; 2019). Since we have a relatively larger number of labelled classes in these two datasets,
we follow (Han et al., 2019) and use metric learning on the labelled classes to pre-train the feature
extractor, instead of the self-supervised learning. We empirically found that self-supervision does
not provide obvious gains for these two datasets. This is reasonable since the data in the labelled
sets of these two datasets are rather diverse and abundant, so metric learning can provide good
feature initialization as there is less class-specific bias due to the large number of pre-training classes.
However, by comparing rows 1 and 5 in table 3, it is clear that metric learning alone is not sufficient
for the task of novel category discovery. Our method substantially outperforms the k-means results
obtained using the features from metric learning —by 11.9% and 10.6% on OmniGlot and ImageNet
respectively. Our method also substantially outperforms the current state-of-the-art, achieving 89.1%
6
Published as a conference paper at ICLR 2020
No		OmniGlot	ImageNet
(1)	k-means (MacQUeen, 1967)	77.2%	71.9%
(2)	KCL (HsU et al., 2018)	82.4%	73.8%
(3)	MCL (HsU et al., 2019)	83.3%	74.4%
(4)	DTC (Han et al., 2019)	89.0%	78.3%
(5)	OUrs	89.1%	82.5%
Table 3: Novel category discovery
results on OmniGlot and ImageNet.
ACC on the unlabelled set.
(a) OUrs	(b) + incr. learning
Figure 3: t-SNE on CIFAR-10: impact of incre-
mental Learning. (a) representation on the la-
belled and (b) Unlabelled CIFAR classes. Colors
of data points denote their groUnd-trUth labels. We
observe a bigger overlap in (a) between the “old”
class 3 and the “new” class 5 when not incorporat-
ing Incremental Learning.
and 82.5% ACC on OmniGlot and ImageNet respectively, compared with 89.0% and 78.8% of (Han
et al., 2019), thUs setting the new state-of-the-art.
3.4	Incremental learning
Table 4: Incremental Learning with the novel categories. “old” refers to the ACC on the labelled
classes while “new” refers to the Unlabelled classes in the testing set. “all” indicates the whole testing
set. It shoUld be noted that the predictions are not restricted to their respective sUbset. Standard
deviation can be foUnd in appendix C.
Classes	CIFAR-10			CIFAR-100			SVHN		
	old	new	all	old	new	all	old	new	all
KCL w/ S.S.	79.4%	60.1%	69.8%	23.4%	29.4%	24.6%	90.3%	65.0%	81.0%
MCL w/ S.S.	81.4%	64.8%	73.1%	18.2%	18.0%	18.2%	94.0%	48.6%	77.2%
DTC w/ S.S.	58.7%	78.6%	68.7%	47.6%	49.1%	47.9%	90.5%	72.8%	84.0%
OUrs w/ I.L.	90.6%	88.8%	89.7%	71.2%	56.8%	68.3%	96.3%	96.1%	96.2%
Here, we fUrther evalUate oUr incremental scheme for novel category discovery as described in sec-
tion 2.5. Methods for novel category discovery sUch as (Han et al., 2019; HsU et al., 2019; 2018)
focUs on obtaining the highest clUstering accUracy for the new Unlabelled classes, bUt may forget the
existing labelled classes in the process. In practice, forgetting is not desirable as the model shoUld be
able to recognize both old and new classes. ThUs, we argUe that the classification accUracy on the
labelled classes shoUld be assessed as well, as for any incremental learning setting. Note however that
oUr setUp differs sUbstantially from standard incremental learning (RebUffi et al., 2017; Lopez-Paz
& Ranzato, 2017; Shmelkov et al., 2017; AljUndi et al., 2018) where every class is labelled and the
focUs is on Using limited memory. In oUr case, we can store and access the original data withoUt
memory constraints, bUt the new classes are Unlabelled, which is often encoUntered in applications.
By constrUction (section 2.5), oUr method learns the new classes on top of the old ones incrementally,
oUt of the box. In order to compare to methods sUch as KCL, MCL and DTC that do not have this
property, we proceed as follows. First, the method rUns as UsUal to clUster the Unlabelled portion of
the data, thUs obtaining pseUdo-labels for it, and learning a featUre extractor as a byprodUct. Then,
the featUre extractor is Used to compUte featUres for both the labelled and Unlabelled training data,
and a linear classifier is trained Using labels and pseUdo-labels, jointly on all the classes, old and new.
We report in table 4 the performance of the resUlting joint classifier networks on the testing set of
each dataset (this is now entirely disjoint from the training set). OUr method has similar performances
on the old and new classes for CIFAR-10 and SVHN, as might be expected as the split between
old and new classes is balanced. In comparison, the featUre extractor learned by KCL and MCL
works mUch better for the old classes (e.g., the accUracy discrepancy between old and new classes is
25.3% for KCL on SVHN). Conversely, DTC learns featUres that work better for the new classes,
as shown by the poor performance for the old classes on CIFAR-10. ThUs, KCL, MCL and DTC
learn representations that are biased to either the old or new classes, resUlting overall in sUboptimal
performance. In contrast, oUr method works well on both old and new classes; fUrthermore, it
drastically oUtperforms existing methods on both.
7
Published as a conference paper at ICLR 2020
4	Related work
Our work draws inspiration from semi-supervised learning, transfer learning, clustering, and zero-shot
learning. We review below the most relevant contributions.
In semi-supervised learning (SSL) (Chapelle et al., 2006), a partially labelled training dataset is
given and the objective is to learn a model that can propagate the labels from the labelled data to
unlabelled data. Most SSL methods focus on the classification task where, usually both labelled
and unlabelled points belong to the same set of classes. On the contrary, our goal is to handle the
case where the unlabelled data classes differ from the labelled data. Oliver et al. (2018) summarizes
the state-of-the-art SSL methods. Among them, the consistency-based methods appeared to be the
most effective. Rasmus et al. (2015) propose a ladder network which is trained on both labelled
and unlabelled data using a reconstruction loss. Laine & Aila (2017) simplifies this ladder network
by enforcing prediction consistency between a data point and its augmented counterpart. As an
alternative to data augmentation, they also consider a regularization method based on the exponential
moving average (EMA) of the predictions. This idea is further improved by Tarvainen & Valpola
(2017): instead of using the EMA of predictions, they propose to maintain the EMA of model
parameters. The consistency is then measured between the predictions of the current model (student)
and the predictions of the EMA model (teacher). More recently (and closer to our work) practitioners
have also combined SSL with self-supervision(Rebuffi et al., 2019; Zhai et al., 2019) to leverage
dataset with very few annotations.
Transfer learning (Pan & Yang, 2010; Weiss et al., 2016; Tan et al., 2018) is an effective way to
reduce the amount of data annotations required to train a model by pre-training the model on an
existing dataset. In image classification, for example, it is customary to start from a model pre-trained
on the ImageNet (Deng et al., 2009) dataset. In most transfer learning settings, however, both the
source data and the target data are fully annotated. In contrast, our goal is to transfer information
from a labelled dataset to an unlabelled one.
Many classic (e.g., Aggarwal & Reddy (2013); MacQueen (1967); Comaniciu & Meer (1979); Ng
et al. (2001)) and deep learning (e.g., Xie et al. (2016); Chang et al. (2017); Dizaji et al. (2017); Yang
et al. (2017; 2016); Hsu et al. (2018; 2019)) clustering methods have been proposed to automatically
partition an unlabelled data collection into different classes. However, this task is usually ill-posed
as there are multiple, equally valid criteria to partition most datasets. We address this challenge by
learning the appropriate criterion by using a labelled dataset, narrowing down what constitutes a
proper class. We call this setting “transfer clustering”.
To the best of our knowledge, the work most related to ours are (Hsu et al., 2018; 2019; Han et al.,
2019). Han et al. (2019) also consider discovering new classes as a transfer clustering problem. They
first learn a data embedding by using metric learning on the labelled data, and then fine-tune the
embedding and learn the cluster assignments on the unlabelled data. In (Hsu et al., 2018; 2019), the
authors introduce KCL and MCL clustering methods. In both, a similarity prediction network (SPN),
also used in (Hsu et al., 2016), is first trained on a labelled dataset. Afterwards, the pre-trained SPN
is used to provide binary pseudo labels for training the main model on an unlabelled dataset. The
overall pipelines of the two methods are similar, but the losses differ: KCL uses a Kullback-Leibler
divergence based contrastive loss equivalent to the BCE used in this paper (eq. (3)), and MCL uses
the Meta Classification Likelihood loss. Zero-shot learning (ZSL) (Xian et al., 2018; Fu et al., 2018)
can also be used to recognize new classes. However, differently from our work, ZSL also requires
additional side information (e.g., class attributes) in addition to the raw images.
Finally, other works (Dean et al., 2013; Yagnik et al., 2011) discuss the application of rank statistics
to measuring the similarity of vectors; however, to the best of our knowledge, we are the first to apply
rank statistics to the task of novel category discovery using deep neural networks.
5	Conclusions
In this paper, we have looked at the problem of discovering new classes in an image collection,
leveraging labels available for other, known classes. We have shown that this task can be addressed
very successfully by a few new ideas. First, the use of self-supervised learning for bootstrapping the
image representation trades off the representation quality with its generality, and for our problem
this leads to a better solution overall. Second, we have shown that rank statistics are an effective
method to compare noisy image descriptors, resulting in robust data clustering. Third, we have
8
Published as a conference paper at ICLR 2020
shown that jointly optimizing both labelled recognition and unlabelled clustering in an incremental
learning setup can reinforce the two tasks while avoiding forgetting. On standard benchmarks, the
combination of these ideas results in much better performance than existing methods that solve the
same task. Finally, for larger datasets with more classes and diverse data (e.g., ImageNet) we note
that self-supervision can be bypassed as the pretraining on labelled data already provides a powerful
enough representation. In such cases, we still show that the rank statistics for clustering gives drastic
improvement over existing methods.
6	Acknowledgments
This work is supported by the EPSRC Programme Grant Seebibyte EP/M013774/1, Mathworks/DTA
DFR02620, and ERC IDIU-638009.
References
Charu C. Aggarwal and Chandan K. Reddy. Data Clustering: Algorithms and Applications. CRC
Press, 2013.
Rahaf Aljundi, Francesca Babiloni, Mohamed Elhoseiny, Marcus Rohrbach, and Tinne Tuytelaars.
Memory aware synapses: Learning what (not) to forget. In ECCV, 2018.
David Arthur and Sergei Vassilvitskii. k-means++: the advantages of careful seeding. In ACM-SIAM
symposium on Discrete algorithms, 2007.
Jianlong Chang, Lingfeng Wang, Gaofeng Meng, Shiming Xiang, and Chunhong Pan. Deep adaptive
image clustering. In ICCV, 2017.
Olivier Chapelle, Bernhard Scholkopf, and Alexander Zien. Semi-Supervised Learning. MIT Press,
2006.
Dorin Comaniciu and Peter Meer. Mean shift: A robust approach toward feature space analysis.
IEEE TPAMI, 1979.
Thomas Dean, Mark A. Ruzon, Mark Segal, Jonathon Shlens, Sudheendra Vijayanarasimhan, and Jay
Yagnik. Fast, accurate detection of 100,000 object classes on a single machine. In CVPR, 2013.
Jia Deng, Wei Dong, Richard Socher, Li-Jua Li, Kai Li, and Li Fei-Fei. Imagenet: A large-scale
hierarchical image database. In CVPR, 2009.
Kamran Ghasedi Dizaji, Amirhossein Herandi, Cheng Deng, Weidong Cai, and Heng Huang. Deep
clustering via joint convolutional autoencoder embedding and relative entropy minimization. In
ICCV, 2017.
Yanwei Fu, Tao Xiang, Yu-Gang Jiang, Xiangyang Xue, Leonid Sigal, and Shaogang Gong. Recent
advances in zero-shot recognition: Toward data-efficient understanding of visual content. IEEE
Signal Processing Magazine, 2018.
Spyros Gidaris, Praveer Singh, and Nikos Komodakis. Unsupervised representation learning by
predicting image rotations. ICLR, 2018.
Kai Han, Andrea Vedaldi, and Andrew Zisserman. Learning to discover novel visual categories via
deep transfer clustering. In ICCV, 2019.
Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image
recognition. In CVPR, 2016.
Yen-Chang Hsu, Zhaoyang Lv, and Zsolt Kira. Deep image category discovery using a transferred
similarity function. arxiv, 2016.
Yen-Chang Hsu, Zhaoyang Lv, and Zsolt Kira. Learning to cluster in order to transfer across domains
and tasks. In ICLR, 2018.
Yen-Chang Hsu, Zhaoyang Lv, Joel Schlosser, Phillip Odom, and Zsolt Kira. Multi-class classification
without multi-class labels. In ICLR, 2019.
9
Published as a conference paper at ICLR 2020
Diederik P. Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In ICLR, 2014.
Alexander Kolesnikov, Xiaohua Zhai, and Lucas Beyer. Revisiting self-supervised visual representa-
tion learning. In CVPR, 2019.
Alex Krizhevsky and Geoffrey Hinton. Learning multiple layers of features from tiny images.
Technical report, 2009.
Harold W Kuhn. The hungarian method for the assignment problem. Naval research logistics
quarterly, 1955.
Samuli Laine and Timo Aila. Temporal ensembling for semi-supervised learning. In ICLR, 2017.
Brenden M. Lake, Ruslan Salakhutdinov, and Joshua B. Tenenbaum. Human-level concept learning
through probabilistic program induction. Science, 2015.
David Lopez-Paz and Marc’Aurelio Ranzato. Gradient episodic memory for continual learning. In
NeurIPS, 2017.
James MacQueen. Some methods for classification and analysis of multivariate observations. In
Proceedings of the Fifth Berkeley Symposium on Mathematical Statistics and Probability, 1967.
Yuval Netzer, Tao Wang, Adam Coates, Alessandro Bissacco, Bo Wu, and Andrew Y. Ng. Reading
digits in natural images with unsupervised feature learning. In NeurIPS Workshop on Deep
Learning and Unsupervised Feature Learning, 2011.
Andrew Y. Ng, Michael I. Jordan, and Yair Weiss. On spectral clustering: Analysis and an algorithm.
In NeurIPS, 2001.
Avital Oliver, Augustus Odena, Colin Raffel, Ekin D. Cubuk, and Ian J. Goodfellow. Realistic
evaluation of deep semi-supervised learning algorithms. In NeurIPS, 2018.
Sinno Jialin Pan and Qiang Yang. A survey on transfer learning. IEEE Transactions on Knowledge
and Data Engineering, 2010.
Rasmus, Mathias M. Berglund, Mikko Honkala, Harri Valpola, and Tapani Raiko. Semi-supervised
learning with ladder networks. In NeurIPS, 2015.
Sylvestre-Alvise Rebuffi, Alexander Kolesnikov, Georg Sperl, and Christoph H Lampert. icarl:
Incremental classifier and representation learning. In CVPR, 2017.
Sylvestre-Alvise Rebuffi, Sebastien Ehrhardt, Kai Han, Andrea Vedaldi, and Andrew Zisserman.
Semi-supervised learning with scarce annotations. arxiv, 2019.
Konstantin Shmelkov, Cordelia Schmid, and Karteek Alahari. Incremental learning of object detectors
without catastrophic forgetting. In ICCV, 2017.
Karen Simonyan and Andrew Zisserman. Very deep convolutional networks for large-scale image
recognition. In ICLR, 2015.
Ilya Sutskever, James Martens, George Dahl, and Geoffrey Hinton. On the importance of initialization
and momentum in deep learning. In ICML, 2013.
Chuanqi Tan, Fuchun Sun, Tao Kong, Wenchang Zhang, Chao Yang, and Chunfang Liu. A survey on
deep transfer learning. In International Conference on Artificial Neural Networks, 2018.
Antti Tarvainen and Harri Valpola. Mean teachers are better role models: Weight-averaged consistency
targets improve semi-supervised deep learning results. In NeurIPS, 2017.
Laurens van der Maaten and Geoffrey Hinton. Visualizing data using t-sne. JMLR, 2008.
Oriol Vinyals, Charles Blundell, Timothy Lillicrap, Koray Kavukcuoglu, and Daan Wierstra. Match-
ing networks for one shot learning. In NeurIPS, 2016.
Karl Weiss, Taghi M. Khoshgoftaar, and DingDing Wang. A survey of transfer learning. Journal of
Big Data, 2016.
10
Published as a conference paper at ICLR 2020
Yongqin Xian, Christoph H. Lampert, Bernt Schiele, and Zeynep Akata. Zero-shot learning - a
comprehensive evaluation of the good, the bad and the ugly. IEEE TPAMI, 2018.
Junyuan Xie, Ross Girshick, and Ali Farhadi. Unsupervised deep embedding for clustering analysis.
In ICML, 2016.
Jay Yagnik, Dennis Strelow, David A. Ross, and Ruei sung Lin. The power of comparative reasoning.
In ICCV, 2011.
Bo Yang, Xiao Fu, Nicholas D. Sidiropoulos, and Mingyi Hong. Towards k-means-friendly spaces:
Simultaneous deep learning and clustering. In ICML, 2017.
Jianwei Yang, Devi Parikh, and Dhruv Batra. Joint unsupervised learning of deep representations and
image clusters. In CVPR, 2016.
Xiaohua Zhai, Avital Oliver, Alexander Kolesnikov, and Lucas Beyer. S4l: Self-supervised semi-
supervised learning. 2019.
11
Published as a conference paper at ICLR 2020
A Dataset splits
For CIFAR-10 and SVHN we keep the labels of the five first categories (namely airplane, automobile,
bird, cat, deer for CIFAR-10, 0-4 for SVHN) and keep the rest of the data as the Unlabelled set. For
CIFAR-100 we use the first 80 categories as labelled data while the rest are used for the unlabelled
set. Following HsU et al. (2018; 2019), for OmniGlot, each of the 20 alphabets in evaluation set
(with 20-47 categories, 659 characters/class) is Used as Unlabelled data, and all the 30 alphabets in
background set are Used as labelled set (964 characters/class). For ImageNet, we follow HsU et al.
(2018; 2019) to Use the 882/118 classes split proposed in Vinyals et al. (2016), and Use the three
30-class sUbsets sampled from the 118 classes as Unlabelled sets.
B Implementation details
In the first self-sUpervised training step, otherwise mentioned, we trained oUr model with the pretext
task of rotation predictions (i.e., a four-class classification: 0°, 90°, 180°, and 2700) for 200 epochs
and a step-wise decaying learning rate starting from 0.1 and divided by 5 at epochs 60, 120, and 160.
In the second step of our framework (i.e., supervised training using labelled data), we fine-tuned our
model on the labelled set for 100 epochs and a step-wise decaying learning rate starting from 0.1
and halved every 10 epochs. From this step onward we fix the first three convolutional blocks of the
model, and fine-tuned the last convolutional block together with the linear classifier.
Finally, in the last joint training step, we fine-tuned our model for 200/100/90 epochs for {CIFAR-10,
CIFAR-100, SVHN}/OmniGlot/ImageNet, which was randomly sampled from the merged set of both
labelled and unlabelled data. The initial learning rate was set to 0.1 for all datasets, and was decayed
with a factor of 10 at the 170th/{30th, 60th} epoch for {CIFAR-10, CIFAR-100, SVHN}/ImageNet.
The learning rate of 0.01 was kept fixed for OmniGlot. For the consistency regularization term, we
used the ramp-up function as described in section 2.4 with λ = {5.0, 50.0, 50.0, 100.0, 10.0}, and
T = {50, 150, 80, 1, 50} for CIFAR-10, CIFAR-100, SVHN, OmniGlot, and ImageNet respectively.
In the incremental learning setting, all previous hyper parameters remain the same for our method.
We only add a ramp-up on the cross entropy loss on unlabelled data. The ramp-up length is the same
as the one used for eq. (4) and we use for all experiments a coefficient of 0.05. For all other methods
we trained the classifier for 150 epochs with SGD with momentum and learning rate of 0.1 divided
by 10 at epoch 50.
We implemented our method using PyTorch 1.1.0 and ran experiments on NVIDIA Tesla M40
GPUs. Following (Han et al., 2019), our results were averaged over 10 runs for all datasets, ex-
cept for ImageNet which was averaged over the three 30-class subsets. In general, we found the
results were stable. Our code is publicly available at http://www.robots.ox.ac.uk/~vgg/
research/auto_novel.
C S tandard deviation of incremental learning experiment
in table 4
Table 5: Incremental Learning with the novel categories. “old” refers to the standard deviation
ACC on the labelled classes while “new” refers to the unlabelled classes in the testing set. “all”
indicates the whole testing set. It should be noted that the predictions are not restricted to their
respective subset.
CIFAR-10	CIFAR-100	SVHN
Classes	old	new	all	old	new	all	old	new	all
KCL w/ S.S.	0.6%	0.6%	0.1%	0.3%	0.3%	0.2%	0.3%	0.5%	0.1%
MCL w/ S.S.	0.4%	0.4%	0.1%	0.3%	0.1%	0.2%	0.2%	0.3%	0.1%
DTC w/ S.S.	0.6%	0.2%	0.3%	0.2%	0.2%	0.2%	0.3%	0.2%	0.1%
Ours w/ I.L.	0.2%	0.2%	0.1%	0.1%	0.3%	0.1%	0.1%	0.0%	0.1%
12
Published as a conference paper at ICLR 2020
results for k
Figure 4:
{1, 2, 3, 5, 7, 10, 15, 20, 50}.
D IMPACT OF k OVER RESULTS
We provide an additional study of the evolution of performances of our method with respect to k .
We results on SVHN/CIFAR10/CIFAR100 in fig. 4. We found that k = {5, 7} gave the best results
overall. We also found that for all values of k except 1 results were in general stable.
E Results with an unknown number of classes
While in our work we assume the number of new classes Cu to be known a priori, this hypothesis can
be restrictive in practice. Instead, one can estimate the number of classes in Du using recent methods
such as DTC (Han et al., 2019). In table 6 we compare ACC of KCL (Hsu et al., 2018), KCL (Hsu
et al., 2019), DTC(Han et al., 2019) and our method on unlabelled splits of OmniGlot and ImageNet
datasets with Cu computed from DTC. We note that our method again reaches the state-of-the-art on
ImageNet and is on par with the state-of-the-art on OmniGlot.
Table 6: Novel category discovery results with unknown Cu .
No		OmniGlot	ImageNet
(1)	KCL (HsU etal.,2018)	80.3%	71.4%
(2)	MCL (Hsu et al., 2019)	80.5%	72.9%
(3)	DTC (Han et al., 2019)	87.0%	77.6%
(4)	Ours	85.4%	80.5%
13