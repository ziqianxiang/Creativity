Figure 1: Query2Box reasoning framework. (A) A given conjunctive query “Where did Canadiancitizens with Turing Award graduate?” can be represented with a dependency graph. (B) Computationgraph specifies the reasoning procedure to obtain a set of answers for the query in (A). (C) Exampleknowledge graph, where green nodes/entities denote answers to the query. Bold arrows indicatesubgraphs that match the query graph in (A). (D) In QUERY2B OX, nodes of the KG are embedded aspoints in the vector space. We then obtain query embedding according to the computation graph (B)as a sequence of box operations: start with two nodes TuringAward and Canada and apply Win andCitizen projection operators, followed by an intersection operator (denoted as a shaded intersectionof yellow and orange boxes) and another projection operator. The final embedding of the query is agreen box and query’s answers are the entities inside the box.
Figure 2: The geometric intuition of the two operations and distance function in QUERY2BOX. (A)Projection generates a larger box with a translated center. (B) Intersection generates a smaller boxlying inside the given set of boxes. (C) Distance distbox is the weighted sum of distoutside anddistinside , where the latter is weighted less.
Figure 3: Illustration of converting a computation graph of an EPFO query into an equivalentcomputation graph of the Disjunctive Normal Form.
Figure 4: Query structures considered in the experiments, where anchor entities and relations areto be specified to instantiate logical queries. Naming for each query structure is provided undereach subfigure, where 'p’，‘i'，and 'u' stand for ‘projection', ‘intersection', and 'union'，respectively.
Figure 5: Example of the degenerated queries, including (1) r and rsame anchor node and relation in intersections.
