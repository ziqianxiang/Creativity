Figure 1: The computation graph of SymODEN. Blue arrows indicate neural network parametrization. Redarrows indicate automatic differentiation. For a given (x, u), the computation graph outputs a fθ (x, u) whichfollows Hamiltonian dynamics with control. The function itself is an input to the Neural ODE to generateestimation of states at each time step. Since all the operations are differentiable, weights of the neural networkscan be updated by backpropagation.
Figure 2: Sample trajectories and learned functions of Task 1.
Figure 3: Without true generalized momentum data, the learnedfunctions match the ground truth With a scaling. Here β = 0.357different from the true value, αt = 1∕3, in this task. By a scaling β = αt∕αe = 0.357, the learnedfunctions match the ground truth. Even We are not learning the true αt, We can still perform predic-tion and control since We are learning the dynamics of q correctly. We let Vd = -Vθ2 (q), then thedesired Hamiltonian has minimum energy When the pendulum rests at the upWard position. For thedamping injection, We let Kd = 3. Then from Equation (7) and (8), the controller We synthesize isu(cos q, Sin q, q)g-31(cos q, sin q)(2(-Only SymODEN out of all modelsWe consider provides the learned po-tential energy Which is required tosynthesize the controller. Figure 4shoWs hoW the states evolve Whenthe controller is fed into the OpenAIGym simulator. We can successfully(27)产 Sin q + 萼 cos q∂ cos q	∂ sin q0	2	4 β 8	10	02468	10	0	2	4 β 8	10
Figure 4: Time-evolution of the state variables (Cos q, sinq,q)when the closed-loop control input u(cos q, sinq,q) is governedby Equation (27). The thin black lines shoW the expected results.
Figure 5:	Train error per trajectory and prediction error per trajectory for all 4 tasks with different number oftraining trajectories. Horizontal axis shows number of initial state conditions (16, 32, 64, 128, 256, 512, 1024)in the training set. Both the horizontal axis and vertical axis are in log scale.
Figure 6:	Mean square error and total energy of test trajectories. SymODEN works the best in terms of bothMSE and total energy. Since SymODEN has learned the Hamiltonian and discovered the conservation fromdata the predicted trajectories match the ground truth. The ground truth of energy in all four tasks stay constant.
Figure 7: MSE and Total energy of a sample test trajectory. Left two figures: the training data for themodels are randomly generated in an annulus, the same as in HNN. Right two figures: the trainingdata for the models are randomly generated in a rectangle - the same way that we use in SymODEN.
Figure 8: Snapshots of a controlled trajectory of the fully-actuated CartPole system with a0.3s time interval.
Figure 9: Time series of state variables and control inputs of a controlled trajectory shown in Figure 8. Blackreference lines indicate expected value in the end.
Figure 10: Snapshots of a controlled trajectory of the fully-actuated Acrobot system with a 1s time interval.
Figure 11: Time series of state variables and control inputs of a controlled trajectory shown in Figure 10.
