Figure 1: Vehicle dynamics testing in the high-data regime. Each plot compares the true trajectory(dotted red) with the prediction from the surrogate (solid blue). The time horizon is 5x than intraining. The shown methods are: (a)-(b) the proposed δ-SNODE and α-SNODE schemes, (c) fifth-order Dormand-Prince, and (d) Explicit Euler. Models trained with our methods have better test MSEand forecast more precisely.
Figure 2: Multi-agent testing in high-data regime. Each plot compares the true trajectory (dottedred) with the prediction from the surrogate (solid blue). The time horizon is 4x longer than in training.
Figure 3: Multi-agent learning using different methods. Training loss vs. iterations (left) andexecution time (right). Our methods converge one order of magnitude faster and to a lower loss. Notethat changing the simulation parameters can make Euler unstable (see Figure 4).
Figure 4: Multi-agent learning with increased controller gains using different methods. Trainingloss vs. iterations (left) and execution time (right). Our methods remain stable and their learningcurves are the same as in Figure 3. BKPR-Euler and ADJ-Euler are not able to train in thisconfiguration. The proposed algorithms are inherently more stable and robust than the baselines.
Figure 5: Vehicle dynamics learning in high-data regime. Top row: δ-SNODE method. Bottomrow: fifth-order Dormand-Prince method (Butcher & Wanner, 1996) with backpropagation. Firstthree columns: comparison of true trajectories (red) with the prediction from the surrogate (black) atdifferent iterations of the optimization. Last column: loss function at each iteration. δ-SNODE hasfaster convergence than Euler.
Figure 6: Vehicle dynamics learning in high-data regime. Top row: α-SNODE method. Bottomrow: Explicit Euler method with back-propagation. First three columns: comparison of true trajecto-ries (red) with the prediction from the surrogate (black) at different iterations of the optimization.
Figure 7: Vehicle dynamics learning with perturbed input data for the α-SNODE method. Left:comparison of true trajectories (red) with the input data (black). Right: comparison in the timedomain for the states of the first sample of the batch.
Figure 8: Multi-agent testing in low-data regime.
