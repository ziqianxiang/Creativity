Under review as a conference paper at ICLR 2020
Cover Filtration and Stable Paths in Mapper
Anonymous authors
Paper under double-blind review
Ab stract
The contributions of this paper are two-fold. We define a new filtration called the
cover filtration built from a single cover based on a generalized Jaccard distance.
We provide stability results for the cover filtration, and show its equivalence to the
Cech filtration under certain settings. We then develop a language and theory for
stable paths within this filtration, inspired by ideas of persistent homology. This
framework can be used to develop new learning representations in applications
where an obvious metric may not be defined but a cover is readily available. We
demonstrate the utility of our framework as applied to recommendation systems
and explainable machine learning.
We demonstrate anew perspective for modeling recommendation system data sets
that does not require defining a bespoke metric. As an application, we find that
stable paths identified by our framework in a movies data set represent sequences
of movies constituting a gentle transition and ordering from one genre to another.
For explainable machine learning, we present stable paths between subpopulations
in the mapper of a model as explanations. Our framework provides an alternative
way to build a filtration from a single mapper, and explore stable paths in it. For
illustration, we build a mapper from a supervised machine learning model trained
on the FashionMNIST data set. Stable paths in the cover filtration provide im-
proved explanations of relationships between subpopulations of images.
Keywords: cover and nerve, Jaccard distance, stable paths in filtration, Mapper, recommender sys-
tems, explainable machine learning.
1 Introduction and Motivation
The need to rigorously seed a solution with a notion of stability in topological data analysis (TDA)
has been addressed primarily using topological persistence (Carlsson, 2009; Ghrist, 2008). Persis-
tence arises when we work with a sequence of objects built on a data set, a filtration, rather than
with a single object. One line of focus of this work has been on estimating the homology of the
data set. This typically manifests itself as examining the persistent homology represented as a dia-
gram or barcode, with interpretations of zeroth and first homology as capturing significant clusters
and holes, respectively (Adams & Carlsson, 2009; Edelsbrunner et al., 2002; Edelsbrunner & Harer,
2009; Zomorodian, 2005). In practice it is not always clear how to interpret higher dimensional
homology (even holes might not make obvious sense in certain cases). A growing focus is to use
persistence diagrams as a form of feature engineering to help compare different data sets rather than
interpret individual homology groups (Adams et al., 2017; Chazal et al., 2009; Turner et al., 2014).
The implicit assumption in most such TDA applications is that the data is endowed with a natural
metric, e.g., points exist in a high-dimensional space or pairwise distances are available. In certain
applications, it is also not clear how one could assign a meaningful metric. For example, member-
ships of people in groups of interest is captured simply as sets specifying who belongs in each group.
An instance of such data is that of recommendation systems, e.g., as used in Netflix to recommend
movies to the customer. Graph based recommendation systems have been an area of recent research.
Usually these systems are modeled as a bipartite graph with one set of nodes representing recom-
mendees and the other representing recommendations. In practice, these systems are augmented in
bespoke ways to accommodate whichever type of data is available. It is highly desirable to analyze
the structure directly using the membership information.
Another distinct TDA approach for structure discovery and visualization of high-dimensional data is
based on a construction called Mapper (Singh et al., 2007). Defined as a dual construction to a cover
of the data (see Figure 1), Mapper has found increasing use in diverse applications in the past several
1
Under review as a conference paper at ICLR 2020
years (Lum et al., 2013). Attention has recently focused on interpreting parts of the 1-skeleton of
the Mapper, which is a simplicial complex, as significant features of the data. Paths, flares, and
cycles have been investigated in this context (Li et al., 2015; Nicolau et al., 2011; Torres et al.,
2016). The framework of persistence has been applied to this construction to define a multi-scale
Mapper, which permits one to derive results on stability of such features (Dey et al., 2016). At the
same time, the associated computational framework remains unwieldy and still most applications
base their interpretations on a single Mapper object.
Figure 1: Mapper constructed on a noisy set
of points sampled from a circle.
We illustrate the standard Mapper construction in
Figure 1. We start with overlapping intervals cover-
ing values of a parameter, e.g., height of the points
sampled from a circle. We then cluster the data
points falling in each interval, and represent each
cluster by a vertex. If two clusters share data points,
we add an edge connecting the corresponding ver-
tices. If three clusters share data points, we add the
triangle, and so on. The Mapper could present a
highly sparse representation of the data set that still
captures its structure—the large number of points
sampled from the circle is represented by just four vertices and four edges here. More generally, we
consider higher dimensional intervals covering a subspace of Rd . But in recommendation systems,
the cover is just a collection of abstract sets providing membership info (rather than intervals over
the range of function values). Could we define a topological construction on such abstract covers
that still reveals the topology of the dataset?
We could study paths in this construction, but as the topological constructions are noisy, we would
want to define a notion of stability for such paths. With this goal in mind, could we define a filtration
from the abstract cover? But unlike in the setting of, e.g., multiscale Mapper (Dey et al., 2016), we
do not have a sequence of covers (called a tower of covers)—we want to work with a single cover.
How do we define a filtration on a single abstract cover? Could we prove stability results for such a
filtration? Finally, could we demonstrate the usefulness of our construction on real data?
1.1	Our Contributions
We introduce a new type of filtration defined
on a single abstract cover. Termed cover filtra-
tion, our construction uses Steinhaus distances
between elements of the cover. We generalize
the Steinhaus distance between two elements to
those of multiple elements in the cover, and de-
fine a filtration on a single cover using the gen-
eralized Steinhaus distance as the filtration in-
dex. Working with a bottleneck distance on
covers, we show a stability result on the cover
filtration—the cover filtrations of two covers are
α/m interleaved, where α is a bound on the bot-
tleneck distance between the covers and m is
the cardinality of the smallest element in either
cover (see Theorem 3.5). We conjecture that in
Euclidean space, the cover filtration is isomor-
phic to the standard Cech filtration built on the
data set. We prove the conjecture holds in di-
mension 1 and independently that the Vietoris-
Rips filtration completely determines the cover
filtration in arbitrary dimensions (see Section 4).
This filtration is quite general, and enables the
computation of persistent homology for data sets
without requiring strong assumptions. With real
Figure 2: A cover with 7 elements, and the cor-
responding nerve (left column). The cyan and
green vertices are connected by a single edge.
But this edge is generated by a single point in
the intersection of the cyan and green cover el-
ements. Removing this point from the data set
gives the cover and nerve shown in the right col-
umn. The path from cyan to green node now has
six edges.
life applications in mind, we study paths in the 1-skeleton of our construction. Paths provide intu-
2
Under review as a conference paper at ICLR 2020
itive explanations of the relationships between the objects that the terminal vertices represent. Our
perspective of path analysis is that shortest may not be more descriptive—see Figure 2 for an illus-
tration. Instead, we define a notion of stability of paths in the cover filtration. Under this notion, a
stable path is analogous to a highly persistent feature as identified by persistent homology.
We demonstrate the utility of stable paths in cover filtrations on two real life applications: a problem
in movie recommendation system and Mapper. We first show how recommendation systems can be
modeled using the cover filtration, and then show how stable paths within this filtration suggest a
sequence of movies that represent a “smooth” transition from one genre to another (Appendix C.1).
We then define an extension of the traditional Mapper (Singh et al., 2007) termed the Steinhaus
Mapper Filtration, and show how stable paths within this filtration can provide valuable explanations
of populations in the Mapper, focusing on the case of explainable machine learning (Appendix C.2).
1.2 Related Work
Cavanna & Sheehy (2017) developed theory for a cover filtration, built from a cover of a filtered
simplicial complex. But we work from more general covers of arbitrary spaces.
We are inspired by similar goals as those of Dey et al. (2016) and Carriere et al. (2018), Who ad-
dressed the question of stability in the Mapper construction. Our goal is to provide some consistency,
and thus interpretability, to the Mapper. We incorporate ideas of persistence in a different manner
into our construction using a single cover, Which considerably reduces the effort to generate results.
While stability of persistence diagrams is a Well studied topic (Edelsbrunner & Harer, 2009), We
may not get stability to simplices and cycles that generate the persistence homology classes (Bendich
et al., 2019). In contrast, our definition of path stability (Section 5) aligns exactly With our result on
stability for cover filtrations (Section 3). We believe this is a unique feature of our method and its
stability result—paths are automatically stable With respect to perturbations of input data.
The multi-scale Mapper defined by Dey et al. (2016) builds a filtration on the Mapper by varying the
parameters of a cover. This construction yields nice stability properties, but is unWieldy in practice
and difficult to interpret. Carriere et al. develop ways based on extended persistence to automatically
select a single cover that best captures the topology of the data (Carriere et al., 2018), producing one
final Mapper that is easy to interpret
Methods have been developed to track populations within the Mapper by identifying interesting
paths (Kalyanaraman et al., 2019) and interesting flares (Kamruzzaman et al., 2018). Interesting
paths maximize an interestingness score, and are manifested in the Mapper as long paths that track
particular populations that show trending behavior. Flares capture subpopulations that diverge, i.e.,
show branching behavior. In our context, we are interested in shorter paths, under the assumption
that they provide the most succinct explanations for relationships between subpopulations.
Our work is similar to that of Parthasarathy et al. (2017) in that they use the Jaccard Index of an
observed graph to estimate the geodesic distance of the underlying graph. We take an approach
more akin to persistence and make fewer assumptions about underlying data. Hence we are unable
to make rigorous estimates of distances and instead provide many possible representative paths.
S-paths defined by Purvine et al. (2018) are similar to stable paths when we realize that covers can
be modeled as hypergraphs, and vice versa. Stable paths incorporate the size of each cover elements
(or hyperedges), normalizing the weights by relative size. This perspective allows us to compare
different parts of the resulting structure which may have wildly difference sizes of covers. In this
context, a large overlap of small elements is considered more meaningful than a proportionally small
intersection of large elements.
2 Cover Filtrations
We introduce the notions of distance on covers required to construct our filtrations and then provide
the general definition of the cover filtration.
We begin with the definition of Steinhaus distance, a generalization of the standard Jaccard distance
between two sets, and further generalize it to an arbitrary collection of subsets of a cover. These
generalizations take a measure μ and assumes that all sets are taken modulo differences by sets of
measure 0. We will take μ as arbitrary unless otherwise stated.
3
Under review as a conference paper at ICLR 2020
Definition 2.1 (SteinhaUs Distance (MarczeWski & Steinhaus, 1958)). Given a measure μ, the Stein-
haus distance between two sets A, B is
dSt(A, B) = 1 -
μ(A ∩ B)
μ(A ∪ B)
μ(A ∪ B) - μ(A ∩ B)
μ(A ∪ B)
This distance is also bounded on [0, 1], i.e., tWo sets have Steinhaus distance 0 When they are equal
(as sets differing by measure 0 are identified) and distance 1 When they do not intersect.
We extend this distance from an operator on a pair of elements to an operator on a set of elements.
Definition 2.2 (Generalized Steinhaus distance). Define the generalized Steinhaus distance of a
collection of sets {Ui } as
dSt({Ui}) =1 - μsU).
Much of our results that consider paths used the standard version of Jaccard distance for finite sets.
But We require the Steinhaus distance for general measures to present equivalence results to Cech
and VR filtrations (Section 4). Hence We present all results for the generalized Steinhaus distance.
We make use of this generalized distance to associate birth times to simplices in a nerve. Given a
cover, We define the cover filtration as the filtration induced from sublevel sets of the generalized
Steinhaus distance function. In other Words, consider a cover of the space and the nerve of this
cover. For each simplex in the nerve, We assign as birth time the value of its Steinhaus distance.
This filtration captures information about similarity of cover elements, and the overall structure of
the cover.
Definition 2.3 (Nerve). A nerve of a cover U = {Ui}i∈C is an abstract simplicial complex defined
such that each subset {Uj}j∈j ⊆ U , i.e., with J ⊆ C, defines a simplex if Tj∈j{Uj} = 0. In this
construction, each cover element Ui ∈ U defines a vertex.
Definition 2.4 (Steinhaus Nerve). The Steinhaus nerve of a cover U, denoted NrvSt (U), is defined
as the nerve of U with each simplex assigned their generalized Steinhaus distance as weight:
wσ = dSt({Ui | i ∈ σ}) ∀ σ ∈ U.
Note that wσ < 1 by definition for every simplex σ ∈ U. We will use NrvSt when the cover U is
evident from context. This can be thought of as a weighted nerve, but the weighting scheme satisfies
the conditions ofa filtration (see Page 14 for the proof).
Theorem 2.5. The Steinhaus nerve of a cover U is a filtered simplicial complex.
Following this result, we refer to the construction as the Steinhaus filtration. The only cover filtra-
tions we use in this paper is Steinhaus filtrations, so we will use the two terms interchangeably.
We could study an adaptation of cover filtration to an analog of the VR complex by building a
weighted clique rank filtration from the 1-skeleton of the cover filtration (Petri et al., 2013). This
adaptation drastically reduces the number of intersection and union checks required for the construc-
tion. The weight rank clique filtration is a way of generating a flag filtration from a weighted graph
(Petri et al., 2013). We can apply this technique to build a VR analog of the cover filtration.
3 Stability
We consider notions of stability in the cover filtration with respect to changes in the cover. We first
modify the standard edit distance to define a bottleneck distance on the space of covers of a finite
set that have the same cardinality. Under this setting, we show that the cover filtration is interleaved
with respect to this distance.
Definition 3.1 (Bottleneck metric on covers). Let U and V be two finite covers of finite set X with
same cardinality, and let M(U, V) be the set of all possible matchings between them. Let 4 denote
the symmetric difference. Then the bottleneck distance dB (∙, ∙) between two covers is defined as
dB (U, V) = min J max μ(U4V) > .
M∈M(U,V)	(U,V)∈M
4
Under review as a conference paper at ICLR 2020
We can verify that dB is indeed a metric (see Page 14 for the proof).
Proposition 3.2. Let U , V, and W be finite covers of a finite set X with equal cardinalities, and let
dB be the bottleneck distance between any pair of these covers (Definition 3.1). Then dB is a metric.
We now present two somewhat technical lemmas, which we subsequently employ in the proof of the
main stability result. See Page 14 for proof of Corollary 3.4.
Lemma 3.3. Let a, b, c, d, e, f be real numbers with a < b, c + d = e + f, |b| > |d|, and |b| > |f|.
Then we have that (a- c)/(b + d) > (a-e)/(b+f) when c < e. In words, fora weight α = c+d
that we can distribute between decreasing the numerator of a proper fraction and increasing its
denominator, the greatest decrease comes from decreasing the numerator by the entire weight.
a-c a-e
Proof. We Will show that, With the given conditions, ---- - ----- > 0.
b+d b+f
a - c a - e (a - c)(b + f) - (a - e)(b + d)
------------------=----------------:------：~~:-----：-------------
b + d b + f	(b + d)(b + f)
(a - c)(b + c + d - e) - (a - e)(b + e + f - c)
(b + d)(b + f)
, since f
c + d - e, d = e + f - c.
ab + ac + ad - ae - cb - c2 - cd + ce - ab - ae - af + ac + eb + e2 + ef - ce
(b + d)(b + f)
2ac - 2ae + ad - af + be - bc + e2 - c2 + ef - cd
(b + d)(b + f)
-2a(e - c) + a(d - f) + b(e - c) + (e + c)(e - c) + ef - cd
(b + d)(b + f)
-2a(e - c) + a(e - c) + b(e - c) + (e + c)(d - f) + ef - cd
(b + d)(b + f)	，
since e - c = d - f.
(-a + b)(e - c) + ed - ef + cd - cf + ef - cd	(-a + b)(e - c) + ed - cf
(b + d)(b + f)	(b + d)(b + f)
Since c < e, d > f, so ed > cf and e-c > 0. Also, since a/b is proper, a < b, so -a+b > 0. Thus
(-a+b)(e-c)+(ed-cf) > 0. Since b+d, b+f > 0, We get that
> 0,
a-c a-e
which in turn shows that --∑ > ---, as desired.
b+d b+f
(-a + b)(e - c) + ed - cf
(b + d)(b + f)
□
Corollary 3.4. Similar to Lemma 3.3, the greatest increase possible in such a scenario comes from
assigning the negative of the total weight to the numerator.
We now present a theorem that provides basic stability guarantees for the constructed filtration,
assuming that each element is not too small.
Theorem 3.5. Suppose that U = {Ui} and V = {Vj} are two covers ofX with |U| = |V| such
that dB(U, V) ≤ α. Given m = min{minu∈u μ(U), minv∈v μ(V)}, NrvSt(U) and NrvSt(V)
are a/m interleavedfiltrations.
Proof. Given two covers U = {Ui} and V = {Vj}, we use the notation that Ui and Vi, for generic
indices i and j , are paired in a matching that minimizes the bottleneck distance between the two
covers. We assume that the bottleneck distance is α, a positive integer.
We consider the following question: what is the largest change in generalized Steinhaus distance
possible between a collection UI and VJ, where index sets I and J are paired elementwise in a
matching. To answer this question, we keep UI fixed and consider how large a difference in gen-
eralized Steinhaus distance we can achieve by taking the symmetric difference with a set Si with
5
Under review as a conference paper at ICLR 2020
measure UP to α for each Ui. That is, We want to maximize change in μ(∩Uι)∕μ(∪U1). To get
the maximum increase in μ(∩Uι)∕μ(∪U1), we must increase the numerator and/or decrease the
denominator. Likewise, we must decrease the numerator and/or increase the denominator to get
maximum decrease.
First, we note that Si can be Partitioned into two sets: si,1 = Ui ∩ Si, and si,2 = Si \ si,1, those
not in Ui ∩ Si. μ(si,ι + si,2) = μ(Si) ≤ α. Replacing Ui with Ui \ Si,ι cannot increase the size
of the intersection or union, but it can decrease the size of the intersection or union by up to μ(si,ι).
Likewise, replacing Ui with Ui ∪ si,2 cannot decrease the size of the intersection or union, but could
increase the size of the intersection or union by up to μ(si,2).
The greatest possible change would occur if it were possible to select an Si for each Ui in the cover
such that replacing each Ui in turn with Ui4Si increases or decreases the numerator with μ(si,ι)
or μ(si,2), respectively, and does the opposite to the size of the denominator by μ(si,2) or μ(si,ι),
again respectively. Since μ(si,ι + si,2) = μ(Si) ≤ α, it follows that each change has a weight of at
most α which it could throw into increasing or decreasing the size of the intersection and doing the
opposite to the size of the union.
Lemma 3.3 and Corollary 3.4 imply that the maximum possible change in those situations will be
achieved when all weight is directed toward increasing or decreasing the size of the intersection,
since μ(∩Uι)∕μ(∪Uι) must be between 0 and 1. As we want to bound the possible change in the
Steinhaus distance, it will suffice to use the observation that
μ(∩Vι) + Sa	μ(∩Uι)	μ(∩Vι) - Sa
1 - -------:------ ≤ 1 一 —:---------- ≤ 1 - ------:--------
μ(∪Vι)	一	μ(∪Uι) 一	μ(∪Vι)
to obtain bounds on the change of Steinhaus distance between covers with maximum bottleneck
distance of a and with S as the cover cardinality.
Then we have
μ(∩Vι) + Sa
1 ------：---：-- ≤
μ(∪Vι)一
⇒ 1 - μ(∩VI) - Sa ≤
一μ(∪Vl) 一 μ(∪Vι)一
一	μ(∩Vl)	Sa
=⇒	1 -	-	≤
μ(∪Vι)	Sm 一
μ(∩Vι)	Sa
1 — —：---- ----- ≤
μ(∪Vι)	Sm 一
⇒	dst(V∣) - — ≤
m
μ(∩Uι)
1 — —：------
μ(∪Uι)
dSt(UI)
dSt(UI), where m is the size of the smallest set, since
μ(∩Vι)	Sa
- μ(∪Vι) - μ(∪Vι),
dSt(UI).
Similarly, since
μ(∩Vι) - Sa	μ(∩Uι)
1 -------:-------- ≥ 1 — —:------
μ(∪Vι)	一	μ(∪Uι)
we get dst(Vι) + a ≥ dst(Uι).
m
Hence dSt (VI) -
a
m ≤ dSt(UI) ≤
dst(V∣) + —, giving that U and V are a/m interleaved.
m
□
Remark 3.6. Consider the case when |U | 6= |V |. Assume without loss of generality that |U | >
|V|. Then there is a vertex v ∈ NrvSt (U) that is not present in NrvSt (V). Hence NrvSt (U) and
NrvSt (V) cannot be interleaved in the current setting. We need to first generalize matchings and the
bottleneck distance to allow covers with unequal cardinalities.
4	Equivalence
To situate the cover filtration, we wish to show that it is isomorphic to the Cech and VR filtrations
under certain conditions. We conjecture that the Cech filtration on a finite set of points, i.e., the
nerve of balls with radius r around each point and over a sequence of r, and the Steinhaus Nerve
constructed from the terminal cover of the Cech filtration are isomorphic.
6
Under review as a conference paper at ICLR 2020
More precisely, the insertion order of simplices is equivalent between the two cases, and there exists
a continuous bijection between insertion times of the Steinhaus Nerve and insertion times of the
Cech filtration. We prove this result for n = 1, i.e., when X is drawn from the real line. We
also provide experimental evidence for the 1-skeleton equivalence, and prove one direction of this
equivalence (that the VR filtration completely determines the cover filtration).
Let Cr (X) be the cover of X by balls of radius r centered on points in X. The Cech complex is
nerve of this cover. The Cech filtration is the sequence of simplicial complexes for all values of r.
Conjecture 4.1 (Cech equivalence). Given a finite data set X ⊂ Rn and some radius R >
diam(X) the Cech filtration constructed from X is isomorphic to the the cover filtration on X
constructed from CR (X), given the Lebesgue (i.e. volume) measure.
A comprehensive proof for arbitrary order of intersections and arbitrary dimension is incomplete.
We provide the proof for the case of n-skeleton in 1-dimension and provide a mapping from the
Cech filtration to cover filtration for the 1-skeleton in arbitrary dimension.
Proof. We will define C({vi}) as the birth radius of the simplex defined by the set {vi}. This can
be computed as C({vi}) = (maxi(vi) - mi□i(vi))∕2 since in a 1-dimensional space the associated
simplex is born precisely when the balls around the two outermost points intersect.
Let {Vi} be the set of balls of radius R centered on the set {vi}. Recall that we are using the Stein-
haus distance for Lebesgue measure, so μ computes volume here. Then the generalized Steinhaus
distance for those balls is given by dst({Vi}) = 1 - mn(vi+R)-maX(vi-R), since the mutual intersec-
max(vi +R)-min(vi -R)
tion of all of the balls in this one dimensional space is the interval bounded by the minimum right
endpoint of all the balls and the maximum of all left endpoints of all the balls and the union of all the
balls has the minimum left endpoint amongst left endpoints and maximum right endpoint amongst
right endpoints.
,1 min(vi) - max(vi) + 2R	-2C({vi}) + 2R	R - C({vi})
dst({ Vi}) = 1= 1= 1.
max(vi) - min®) + 2R	2C({vi}) + 2R	R + C({v∙i})
Solving for C({vi}), We get C({vi}) = 2-dSt1^V*, establishing a bijection between birth times.
Now since R is the radius of X and Vi ⊆ X, 0 ≤ C({vi}) ≤ R. Also, R-X decreases monotonically
over the range X ∈ [0, R]. Thus 1 - R-+χ increases monotonically on X ∈ [0, R]. Thus if we order
the subsets of of X by increasing birth radius (si, s2,…,Sn), (dst(sι), dst(s2),…，dst(sn)) is
also in increasing order. Thus the two filtrations are isomorphic.	口
We now address the case of 1-skeleton of the Cech and cover filtrations in arbitrary dimension.
It is clear that if the 1-skeletons are isomorphic, then the cover filtration is isomorphic to the VR
filtration. We prove one direction of this isomorphism (see Page 15 for the proof).
Lemma 4.2. The VR filtration completely determines the cover filtration in arbitrary dimensions.
Hence one can derive the cover filtration from the Vietoris-Rips filtration. In Appendix B, we
present some experimental evidence suggesting that the 1-skeleton of the Steinhaus filtration and
the Vietoris-Rips filtration are isomorphic.
5	Stable Paths
We develop a theory of stable paths in the 1-skeleton ofa cover filtration. We provide an algorithm
to find a maximally stable path from one vertex to another, with Steinhaus distances as edge weights.
Note that a maximally stable path might not be a shortest path in terms of number of edges. Con-
versely, a shortest path might not be highly stable. Since the two objectives are at odds with each
other, we provide an algorithm to identify a family of shortest paths as we vary the stability level,
similar in a loose sense to computing persistent homology.
We were studying shortest paths in a Mapper constructed on a machine learning model as ways to
illustrate the relations between the data as identified by the model. In this context, shortest paths
found could have low Steinhaus distance, and thus could be considered noise. This motivated our
7
Under review as a conference paper at ICLR 2020
desire to find stable paths, as they would intuitively be most representative of the data set and stable
with respect to changing parameters in Mapper or changing data.
Definition 5.1 (ρ-Stable Path). Given a Steinhaus distance ρ, a path P is defined to be ρ-stable if
max{dSt(e)|e ∈ P} ≤ ρ .
In other words, the largest edge weight (Steinhaus distance) along the path is at most ρ. Note that
a ρ1-stable path is also ρ2-stable for any ρ2 ≥ ρ1. Also, a ρ1-stable path P1 is more stable than a
ρ2-stable path P2 when ρ1 < ρ2 . Hence we have a higher confidence that edges in P1 do exist (are
not due to noise) than those in P2. We now define maximally stable paths between a pair of vertices.
Definition 5.2 (Maximally Stable Path). Given a pair of vertices s and t, a maximally stable s-t path
is a ρ-stable path between s and t for the smallest value of ρ. If there are multiple s-t paths at the
same minimum ρ value, a shortest path among them is defined as a maximally stable path.
Figure 3: Algorithm to identify the Pareto frontier between
shortest and maximally stable paths.
Input : 1- skeleton G of cover filtration
and vertices s,t
The problem of finding the max-
imally stable s-t path can be
solved as a minimax path prob-
lem on an undirected graph, which
can solved efficiently using, e.g.,
range minimum queries (Demaine
et al., 2009).
set LIST = [0,0] // stores [P, ρ] pairs
while s,t are connected in G
compUte shortest path P between s and
find ρ = max{dSt(e) | e ∈ P}
if LIST has no pair [P0, ρ0] : |P| = |P0|
add [P, ρ] to LIST
else if ρ < ρ0 for
replace [P0, ρ0]
[P0,ρ0] ∈LIST : |P| = |P0|
with [P, ρ] in LIST
remove all edges
e from G with
dSt(e) ≥ ρ
Return: LIST
We are then left with two paths be-
tween vertices s and t, the short-
est and the maximally stable. The
shortest path is not necessarily
stable and the stable path is not
necessarily short. As these two
notions, stable and short, are at
odds with each other, we are in-
terested in computing the entire
Pareto frontier between the short
and stable path. We present an
algorithm to identify the Pareto
frontier in Figure 3, and a visual-
ization of the output from this al-
Rorithm in FiRUre 4.
t
We repeatedly compute the shortest path,
while essentially sweeping over the Steinhaus
Distance. This process results in a Pareto fron-
tier balancing the shortest paths with the sta-
bility of those paths. The blue points in Figure
4 are on the Pareto frontier, while the orange
points are the pairs [P0 ,ρ0] that get replaced
from the LIST in the course of the algorithm.
We then visualize the paths on the Pareto fron-
tier in Figure 5. Continuing our analogy to per-
sistence, the path corresponding to a point on
the Pareto frontier which sees a steep rise to
the left is considered highly persistent, e.g., the
path with length 21 on the frontier.
—Pareto frontier
■ Nonoptimal paths
• Optimal paths
----1---1---1---1----1----1----1---1----1----1----1----1---1----1----
15	16	17	18	19	20	21	22	23	24	25	26	27	28
Length CIfPattl
Figure 4: Pareto frontier between length and sta-
bility of path.
8
Under review as a conference paper at ICLR 2020
6	Applications
We apply the cover filtration and stable paths to two applications, recommendation systems and
Mapper. We first show how recommendation systems can be modeled using the cover filtration
and then show how stable paths within this filtration can answer the question what movies should I
show my friend first, to wean them into my favorite (but potentially weird) movie? We then define an
extension of the traditional Mapper (Singh et al., 2007; Carriere & Oudot, 2017) called the SteinhaUs
Mapper Filtration, and show how stable paths within this filtration can provide valuable explanations
of populations in the Mapper. As a direct illustration, we focus on the case of explainable machine
learning, where the Mapper is constructed with a supervised machine learning model as the filter
function, and address the question what can we learn about the model?
Movie Recommendations: We illustrate how our cover filtration framework could be used to find
a sequence of movies to gently transition from Mulan to Moulin Rouge. It would be abrupt to switch
directly from one to the other movie, since they belong to completely different genres. We compute
stable paths that identify such feasible gentle sequences. Two sequences corresponding to a shortest
path and the most stable path are presented in Table 1. See Appendix C.1 for details.
Table 1: Two sequences of movie transitions from Mulan to Moulin Rouge.
Shortest Path	Most Stable Path
1. Mulan (1998)	1. Mulan (1998)
2. Dumbo (1941)	2. Robin Hood (1973)
3. Sound of Music, The (1965)	3. Dumbo (1941)
4. Moulin Rouge (2001)	4. Sound of Music, The (1965)
5. Gone with the Wind (1939)
6. Psycho (1960)
7. High Fidelity (2000)
8. Moulin Rouge (2001)
Explanations in a Machine Learning Model: With a goal to develop a method of model in-
duction for inspecting a machine learning model, we build a Mapper (Singh et al., 2007) from the
predicted probability space of a logistic regression model built from the Fashion-MNIST data set
(Xiao et al., 2017). The goal is to understand the model structure by characterizing the relation-
ship between the feature space and the prediction space. We extend the constructed Mapper to be a
Steinhaus Mapper Filtration and analyze the stable paths in that object.
See Appendix C.2 for details. We look at three regions of shoes (sneaker, ankle boot, and sandals)
that are understandably confusing to the machine learning model. We try to elucidate where these
confusions arise by studying the stable paths connecting representative nodes for each type of shoe.
Figure 11 shows representatives from each vertex in the path for the shortest path and the stable
path. In both paths, the vertices start predominately containing sneakers and sneaker-like sandals.
They then transition to containing a larger proportion of ankle boots, with all three classes showing
higher cut tops or high heels.
Along each path we can see the relationships between nodes change. In the most stable path on the
right, we a slow transition from sneaker space to ankle boot space, with some amount of sandals
spread throughout. Through the path, shoes from each of the three classes become taller. Near the
middle of the path, the images from sneakers and ankle boots are nearly indistinguishable. And
earlier in the path, we see how some white strips in the sneakers and boots might easily be confused
with negative space in the sandals.
9
Under review as a conference paper at ICLR 2020
7	Conclusion
In this work, we established the cover filtration, a new kind of filtration that enables application of
TDA to previously inaccessible types of data. We then developed a theory of stable paths in the cover
filtration, and provide algorithms for computing the Pareto frontier between short and stable paths.
As proof of their utility to real world applications, we show how these two ideas can be applied
to the analysis of recommendation systems and of Mapper in the context of explainable machine
learning.
The results in this paper suggest many new questions. The application of recommendation systems
leaves us curious if the cover filtration along with new results such as the one on predicting links
in graphs using persistent homology (Bhatia et al., 2018) could provide methods for answering
the main question in recommendation system research: what item to recommend to the user next?
Proving Conjecture 4.1 is a highly desirable goal.
The applications of cover filtration and stable paths are not limited to ones we highlighted. Another
possibility not explored is for sensor networks. Sensor coverage areas are often not uniform balls,
and the cover filtration is aptly suited for developing a filtration. In the context of communication
networks, stable paths could be interpreted as reliable routes. Yet another direct application could
be in finding driving directions that take not only short, but also “easy” routes.
While paths and connected components are most amenable to practical interpretations, could other
structures in the cover filtration also suggest insights? What would holes and loops in the cover
filtration for recommendation systems mean?
Our application for explanations in machine learning models raises the following question. What
are the implications of understanding a path as in Figure 11? How could the predictive model be
updated to account for such implications?
We showed that the cover filtration is stable to small changes within the cover. Does this result imply
that the persistence diagram of the Steinhaus Mapper filtration is stable with respect to changes in
the data, cover parameters, or filter functions?
10
Under review as a conference paper at ICLR 2020
References
Henry Adams and Gunnar Carlsson. On the nonlinear statistics of range image patches. SIAM
Journal on Imaging Sciences, 2(1):110-117, 2009.
Henry Adams, Tegan Emerson, Michael Kirby, Rachel Neville, Chris Peterson, Patrick Shipman,
Sofya Chepushtanova, Eric Hanson, Francis Motta, and Lori Ziegelmeier. Persistence images: A
stable vector representation of persistent homology. Journal of Machine Learning Research, 18
(8):1-35, 2017. URL http://jmlr.org/papers/v18/16-337.html.
Paul Bendich, Peter Bubenik, and Alexander Wagner. Stabilizing the unstable output of per-
sistent homology computations. Journal of Applied and Computational Topology, Nov 2019.
ISSN 2367-1734. doi: 10.1007/s41468-019-00044-9. URL https://doi.org/10.1007/
s41468-019-00044-9.
Sumit Bhatia, Bapi Chatterjee, Deepak Nathani, and Manohar Kaul. Understanding and predicting
links in graphs: A persistent homology perspective. arXiv preprint arXiv:1811.04049, 2018.
Philip Bille, Anna Pagh, and Rasmus Pagh. Fast evaluation of union-intersection expressions. In
Takeshi Tokuyama (ed.), Algorithms and Computation, pp. 739-750, Berlin, Heidelberg, 2007.
Springer Berlin Heidelberg. ISBN 978-3-540-77120-3.
Gunnar Carlsson. Topology and data. Bulletin of the American Mathematical Society, 46(2):255-
308, January 2009. ISSN 0273-0979. doi: 10.1090/s0273-0979-09-01249-x.
MathieU Carriere and Steve Oudot. Structure and stability of the one-dimensional mapper.
Foundations of Computational Mathematics, Oct 2017. ISSN 1615-3383. doi: 10.1007/
s10208-017-9370-z. arXiv:1511.05823.
Mathieu Carriere, Bertrand Michel, and Steve Oudot. Statistical analysis and parameter selection
for mapper. Journal of Machine Learning Research, 19(12):1-39, 2018. URL http://jmlr.
org/papers/v19/17-291.html. arXiv:1706.00204.
Nicholas J Cavanna and Donald R Sheehy. Persistent nerves revisited. Young Researchers Fo-
rum at Symposium of Computational Geometry, 2017. URL http://donsheehy.net/
research/cavanna17peristent_yrf.pdf.
Frederic Chazal, David Cohen-Steiner, Leonidas J. Guibas, Facundo Memoli, and Steve Y. Oudot.
Gromov-hausdorff stable signatures for shapes using persistence. In Proceedings of the Sym-
posium on Geometry Processing, SGP ’09, pp. 1393-1403, Aire-la-Ville, Switzerland, Switzer-
land, 2009. Eurographics Association. URL http://dl.acm.org/citation.cfm?id=
1735603.1735622.
Erik D. Demaine, Gad M. Landau, and Oren Weimann. On cartesian trees and range minimum
queries. In Susanne Albers, Alberto Marchetti-Spaccamela, Yossi Matias, Sotiris Nikoletseas,
and Wolfgang Thomas (eds.), Automata, Languages and Programming, pp. 341-353, Berlin,
Heidelberg, 2009. Springer Berlin Heidelberg. ISBN 978-3-642-02927-1.
Tamal K. Dey, Facundo Memoli, and Yusu Wang. Multiscale mapper: Topological summarization
via codomain covers. In Proceedings of the Twenty-Seventh Annual ACM-SIAM Symposium on
Discrete Algorithms, SODA ’16, pp. 997-1013, Philadelphia, PA, USA, 2016. Society for Indus-
trial and Applied Mathematics. ISBN 978-1-611974-33-1. arXiv:1504.03763.
Herbert Edelsbrunner and John L. Harer. Computational Topology An Introduction. American
Mathematical Society, December 2009. ISBN 0821849255.
Herbert Edelsbrunner, David Letscher, and Afra Zomorodian. Topological persistence and simplifi-
cation. Discrete and Computational Geometry, 28:511-533, 2002.
Martin Ester, Hans-Peter Kriegel, Jorg Sander, and Xiaowei Xu. A density-based algorithm for
discovering clusters a density-based algorithm for discovering clusters in large spatial databases
with noise. In Proceedings of the Second International Conference on Knowledge Discovery and
Data Mining, KDD’96, pp. 226-231. AAAI Press, 1996.
11
Under review as a conference paper at ICLR 2020
Robert Ghrist. Barcodes: The persistent topology of data. Bulletin of the American Mathematical
Society, 45:61-75, 2008. doi: 10.1090/S0273-0979-07-01191-3. URL http://www.ams.
org/bull/2008-45-01/S0273-0979-07-01191-3/.
F Maxwell Harper and Joseph A Konstan. The MovieLens datasets: History and context. ACM
transactions on interactive intelligent systems (TIIS), 5(4):19, 2016.
Ananth Kalyanaraman, Methun Kamruzzaman, and Bala Krishnamoorthy. Interesting Paths in the
Mapper Complex. Journal of Computational Geometry, 2019. To appear; arXiv:1712.10197.
Methun Kamruzzaman, Ananth Kalyanaraman, and Bala Krishnamoorthy. Detecting divergent
subpopulations in phenomics data using interesting flares. In Proceedings of the 2018 ACM
International Conference on Bioinformatics, Computational Biology, and Health Informatics,
BCB ’18, pp. 155-164, New York, NY, USA, 2018. ACM. ISBN 978-1-4503-5794-4. doi:
10.1145/3233547.3233593.
Li Li, Wei-Yi Cheng, Benjamin S. Glicksberg, Omri Gottesman, Ronald Tamler, Rong Chen, Er-
win P. Bottinger, and Joel T. Dudley. Identification of type 2 diabetes subgroups through topolog-
ical analysis of patient similarity. Science Translational Medicine, 7(311):311ra174-311ra174,
2015. ISSN 1946-6234. doi: 10.1126/scitranslmed.aaa9364.
S Li. Concise formulas for the area and volume of a hyperspherical cap. Asian Journal of Mathe-
matics and Statistics, 4(1):66-70, 2011.
Pek Y. Lum, Gurjeet Singh, Alan Lehman, Tigran Ishkanov, Mikael. Vejdemo-Johansson, Muthi
Alagappan, John G. Carlsson, and Gunnar Carlsson. Extracting insights from the shape of com-
plex data using topology. Scientific Reports, 3(1236), 2013. doi: 10.1038/srep01236.
Edward Marczewski and Hugo Steinhaus. On a certain distance of sets and the corresponding
distance of functions. Colloquium Mathematicum, 6(1):319-327, 1958. URL http://eudml.
org/doc/210378.
L. McInnes and J. Healy. UMAP: Uniform Manifold Approximation and Projection for Dimension
Reduction. ArXiv e-prints, February 2018.
Leland McInnes, John Healy, Nathaniel Saul, and LUkas GroBberger. Umap: Uniform manifold
approximation and projection. The Journal of Open Source Software, 3(29):861, 2018. URL
https://joss.theoj.org/papers/10.21105/joss.00861.
Monica Nicolau, Arnold J. Levine, and Gunnar Carlsson. Topology based data analysis identifies a
subgroup of breast cancers with a unique mutational profile and excellent survival. Proceedings
of the National Academy of Sciences, 108(17):7265-7270, 2011. doi: 10.1073/pnas.1102826108.
Nina Otter, Mason A Porter, Ulrike Tillmann, Peter Grindrod, and Heather A Harrington. A roadmap
for the computation of persistent homology. EPJ Data Science, 6(1):17, 2017.
Srinivasan Parthasarathy, David Sivakoff, Minghao Tian, and Yusu Wang. A quest to unravel the
metric structure behind perturbed networks. In Proceedings of the thirty-three annual symposium
on Computational geometry, pp. 123-445. ACM, 2017.
Giovanni Petri, Martina Scolamiero, Irene Donato, and Francesco Vaccarino. Topological strata of
weighted complex networks. PloS one, 8(6):e66506, 2013.
Emilie Purvine, Sinan Aksoy, Cliff Joslyn, Kathleen Nowak, Brenda Praggastis, and Michael Robin-
son. A topological approach to representational data models. In Sakae Yamamoto and Hirohiko
Mori (eds.), Human Interface and the Management of Information. Interaction, Visualization, and
Analytics, pp. 90-109, Cham, 2018. Springer International Publishing. ISBN 978-3-319-92043-6.
Nathaniel Saul and Dustin L. Arendt. Machine learning explanations with topological data analysis.
Demo at the Workshop on Visualization for AI explainability (VISxAI), 2018.
12
Under review as a conference paper at ICLR 2020
Gurjeet Singh, Facundo Memoli, and Gunnar Carlsson. Topological Methods for the Analysis of
High Dimensional Data Sets and 3D Object Recognition. In M. Botsch, R. Pajarola, B. Chen,
and M. ZWicker (eds.), Proceedings of the Symposium on Point Based Graphics, pp. 91-100,
Prague, Czech Republic, 2007. Eurographics Association. ISBN 978-3-905673-51-7. doi: 10.
2312/SPBG/SPBG07/091-100.
Brenda Y. Torres, Jose Henrique M. Oliveira, Ann Thomas Tate, Poonam Rath, Katherine Cumnock,
and David S. Schneider. Tracking resilience to infections by mapping disease space. PLoS Biol,
14(4):1-19, 04 2016. doi: 10.1371/journal.pbio.1002436.
Katharine Turner, Yuriy Mileyko, Sayan Mukherjee, and John Harer. Frechet means for distributions
of persistence diagrams. Discrete & Computational Geometry, 52(1):44-70, Jul 2014. ISSN
1432-0444. doi: 10.1007/s00454-014-9604-7.
Hendrik Jacob van Veen and Nathaniel Saul. Kepler mapper: a python library for visualization of
high-dimensional data. 2017. https://github.com/scikit-tda/kepler-mapper.
Han Xiao, Kashif Rasul, and Roland Vollgraf. Fashion-mnist: a novel image dataset for benchmark-
ing machine learning algorithms. 2017.
Afra J. Zomorodian. Topology for Computing. Cambridge Monographs on Applied and Com-
putational Mathematics. Cambridge University Press, NeW York, NY, USA, 2005. ISBN 978-
0521136099.
13
Under review as a conference paper at ICLR 2020
Appendix
A Missing Proofs
We restate theorems and lemmas stated without proofs in the main paper, and present their proofs.
Theorem 2.5. The Steinhaus nerve of a cover U is a filtered simplicial complex.
Proof. This proof makes use of standard set theory results. Let U be an arbitrary cover of some set
X and let NrvSt be its Steinhaus nerve. We consider NrvSt as a filtration by assigning as the birth
time of simplex σ ∈ NrvSt its weight wσ . To show this is indeed a filtration, we focus on a single
simplex σ and a face τ σ to show that the face always appears in the filtration before the simplex.
Suppose σ is generated from cover elements {Ui}i∈I over some index set I. Let a face τ σ be
generated by cover elements indexed by a subset J ⊂ I .
The birth time of T is dst({U}i∈j) = 1 — μ(∩i∈JJUUi) and
μ(∪i∈j Ui)
the birth time of σ is dst ({Ui}i∈ι) = 1 — μ(∩i∈I[i).
μ(∪i∈ι Ui)
Clearly, with {Ui}i∈j ⊂ {Ui}i∈ι, We have that μ(∩i∈jUi) ≥ μ(∩i∈ιUi) and μ(∪i∈jUi) ≤
μ(∪i∈ιUi). It follows then that dst(τ) ≤ dst(σ). With Ka denoting the subcomplex that in-
cludes all simplices in NrvSt with birth time at most α ∈ [0, 1), for any α, β ∈ [0, 1) with α < β,
we have Ka ⊆ Ke. Hence NrvSt(U) is a monotonic filtration.	□
Proposition 3.2. Let U, V, and W be finite covers of a finite set X with equal cardinalities, and let
dB denote the bottleneck distance between any pair of these covers as specified in Definition 3.1.
Then dB is a metric.
Proof. We make the following observations.
1.	dB (U, U) = 0, as matching each set in the cover to itself gives a distance of 0 and the
smallest cardinality of a symmetric distance is 0, hence this matching gives the minimum
possible symmetric difference. Likewise, if dB (U, V) = 0, there is a matching where the
symmetric difference between each matched pair has cardinality 0. Hence the sets are equal
for each pair in the matching, and hence U = V .
2.	dB (U, V) ≥ 0, since 0 is the greatest lower bound for measures.
3.	dB (U, V)	=	minM∈m(u,v){max(u,v)∈m μ(U∆V)}	=
minM∈M(v,u){max(v,u)∈M μ(V∆U)} = "b(V, U).
4.	Let dB (U, V) = α and dB (V, W) = β. Then Ui and its matched set Vj differ on a set D1
with measure at most α, and Vj and its matched set Wk differ on a set D2 with measure at
most β. Then Ui and Wk differ on some subset of D1 ∪D2, so their difference has measure
at most μ(Dι ∪ D2) ≤ μ(D1) + μ(D2) ≤ α + β. Since this result holds for all i, there
is a matching between U and W with a maximum symmetric difference measure of α + β .
Hence dB (U, W) ≤ α+β = dB(U,V) +dB(V,W).
Hence d，B is a metric with respect to covers of equal cardinality.	□
Corollary 3.4. Similar to Lemma 3.3, the greatest increase possible in such a scenario comes from
assigning the negative of the total weight to the numerator.
Proof. Let a, b, c, d, e, f be numbers as specified. Then —c > —e, and —c — d = —e — f, and
|b| > |d|, |b| > |f|, so a, b, —c, —d, —e, —f fulfill the hypotheses of Lemma 3.3. Then we get that
a + c a + e
b — d V b — f.
14
Under review as a conference paper at ICLR 2020
Lemma 4.2. The VR filtration completely determines the cover filtration in arbitrary dimensions.
Proof. The intersection of two hyperspheres was derived by Li (2011). The volume of intersection
of two hyperspheres of equal radius R in Rn with centers distance d apart is defined as
πn/2	n + 1 1
Vn(RM = WTIy RnIι-(d∕2)∕R2(F, 2)
where Γ is the gamma function and I is the regularized incomplete beta function:
Iz (a, b)
Γ(a + b) R0Z ua-1(1 — u)b-1du
Γ(a)Γ(b)
We can reduce this equation to
V∩n(R,d)
Rn∏(n-1)/2
R01-(d/2)/R2 ud"2(1-u)-1/2du
Γ(n+1)
The volume of an n-sphere of radius R is
匕(R)
∏n∕2
γ( 2 + ι)
Rn
and so the volume of union of two n-spheres is
V∪n(R, d) = 2Vn(R) — V∩n(R, d).
We then compute the Steinhaus distance with Lebesgue measure of two spheres in Rn and radius R
with Euclidean distance d apart as
dSnt(R,d)
2Vn(R)- 2Vn(R, d)
2Vn (R) - Vn(R,d)
πn/2
Γ( 2 + 1)
Rn - 2Rnπ(n-1)/2
R0I-(d2Z2d)ZR2 u(n-i)∕2(i-u)-i∕2du
Γ(n+1)
πn/2
γ( 2+i)
Rn - Rn∏(n-I)/2
R01-(d2/2d)/R2 u(n-1)∕2(i-u)-1∕2du
Γ(^+1)
2Γ(n+1) - nΓ(2)π-1 ROMd/2)/R2 u(n-1)/2(1 - u)-1/2du
2Γ(n++1) - 2Γ(2)π-1 R01-(d/2)/R2 u(n-1)/2(1 - u)-1/2du
rτ->< ♦	. ∙	∙ 1	♦	1'	.1 1 ∙ .1	1' . 1	1	∙ . 1 X 1 i' I . . ∙	. . 1 1 ∙ . 1
This equation provides a mapping from the birth time of the edge in the Cech filtration to the birth
time of the edge in the cover filtration. Once an n and R are chosen, the equation readily reduces,
producing the birth times of a simplex in the cover filtration.	□
B Equivalence
We detail experimental results suggesting that the 1-skeleton of the Steinhaus filtration and the 1-
skeleton the Cech filtration are isomorphic (i.e., the Vietoris-Rips filtration). To estimate the area
of intersection of 1-spheres, we use Monte Carlo integration with uniform sampling. The first plot
in Figure 6 shows the 50 landmark points along with 20,000 points uniformly sampled around the
landmarks. The middle plot shows the persistence diagrams of dimension 0 and 1 for the Vietoris-
Rips filtration on the landmarks. Finally, we show an approximated Steinhaus filtration on the
landmarks, using the balls with radii 0.5 as the covers. We approximate the Steinhaus filtration
similar to how the Vietoris-Rips approximates Cech filtration, i.e., by only computing the 1-skeleton
of the nerve, and including any higher order simplices for which all faces are already contained in
the filtration, taking the maximum birth time of all faces. We note that the two persistence diagrams
have only minor differences (only in dimension 1).
15
Under review as a conference paper at ICLR 2020
Figure 6: Persistence diagrams for the Vietrois-Rips filtration and the approximate Steinhaus filtra-
tion of a set of uniformly sampled points in the plane.
C Applications
C.1 Recommendation Systems
In this application, we apply the cover filtration to a recommendation system data set and employ
the stable paths analysis to compute sequences of movies that ease viewers from one title to another
title. Our viewpoint on recommendation systems is similar to work of graph-based recommendation
systems. This is an active area of research and we believe our new perspective of interpreting such
systems as covers and filtrations will yield useful tools for advancing the field. The general approach
of graph-based recommendation systems is to model the data as a bipartite graph, with one set of
nodes representing the recommendation items and the other set representing the recommendees. We
can interpret a bipartite graph as a cover, either with elements being the recommendees covering the
items, or elements being the items covering the recommendees.
For an example that we will see more of shortly, suppose you have only ever seen the movie Mulan
and your partner wants to show you Moulin Rouge. It would be jarring to just watch the movie, so
your partner might gently build up to Moulin Rouge by showing you movies similar to both Mulan
and Moulin Rouge. We compute stable paths that identify such a feasible gentle sequence.
We use the MovieLens-20m data set (Harper & Konstan, 2016). This data set is comprised of 20
million ratings by 138,493 users of 27,278 movies. Often, these types of data sets are interpreted as
bipartite graphs. Once we realize that a bipartite graph can be equivalently represented as a covering
of one node set with the other, we can apply the cover filtration to build a filtration. In our case, we
interpret each movie as a cover element of the users who have rated the movie. To ensure the entire
computation runs efficiently on a laptop, and to avoid noise, we remove all movies with less than 10
ratings and then sample 4000 movies at random from the remaining movies.
Figure 7 shows the computed
Pareto frontier of stable paths for
the case of Mulan and Moulin
Rouge. In Table 1, we show two
stable paths that might be chosen.
The stable path with length 4 is
found after a large drop in insta-
bility. As the length and stability
must be traded off, we think this
would be a decent path to choose
if you want to optimize both. The
second path shown is the most
stable. For readers who have seen
the movies in this path, the re-
lationship between each edge is
clear, even if one might consider
the path a bit on the longer side.
Figure 7: Pareto frontier of stable paths between
Mulan and Moulin Rouge.
16
Under review as a conference paper at ICLR 2020
Table 1: Two sequences of movie transitions.
Shortest Path
Most Stable Path
1. Mulan (1998)	1. Mulan (1998)
2. Dumbo (1941)	2. Robin Hood (1973)
3. Sound of Music, The (1965)	3. Dumbo (1941)
4. Moulin Rouge (2001)	4. Sound of Music, The (1965)
5. Gone with the Wind (1939)
6. Psycho (1960)
7. High Fidelity (2000)
8. Moulin Rouge (2001)
C.2 Steinhaus Mapper Filtration
As supervised learning has become more powerful, the need for explanations is also grown. We
develop a method of model induction for inspecting a machine learning model. The goal is to
develop an understanding of the model structure by characterizing the relationship between the
feature space and the prediction space. The gleaned understanding can help non-experts make sense
of algorithmic decisions and is essential when models are too complex to fully understand in a
white-box fashion. The Mapper (Singh et al., 2007) is aptly suited for visualizing this functional
structure.
Figure 8: Constructed Mapper from logistic regression model of Fashion-MNIST data set. The
window marks the frame of Figure 9
17
Under review as a conference paper at ICLR 2020
This application is based on the work of using paths in the Mapper to provide explanations for
supervised machine learning models (Saul & Arendt, 2018). We build a Mapper from the predicted
probability space of a logistic regression model. We then extend the constructed Mapper to be a
Steinhaus Mapper Filtration and proceed to analyze the stable paths in that object.
Given topological spaces X, Y , a function f : X → Y , and a cover of Y , we define Mapper to be
the nerve of the refined pullback cover of f(Y ). A refined cover is one such that each cover element
is split into its path-connected components.
Definition C.1 (Steinhaus Mapper filtration). Given data X , a function f : X → Y , and a cover
U of Y , we define the Steinhaus Mapper as the Steinhaus nerve (Definition 2.4) of the refined
pullback cover of f(U):
Nrvst(f*U).
By incorporating information about the amount of overlap between the cover produced by the Map-
per, our analysis is robust to noise and largely insensitive to the chosen parameters of the Mapper
construction.
Figure 9: Depiction of stable paths found along Pareto frontier in Figure 10.
Figure 8 shows the Steinhaus Mapper filtration constructed from a logistic regression model built
from the Fashion-MNIST data set (Xiao et al., 2017). This data set consists of 70,000 images of
clothing items from 10 classes. Each image is 28 pixels. It is widely regarded as a more difficult
drop-in replacement for the ubiquitous MNIST handwritten digits data set.
The dimensionality of the data
set is first reduced to 100 di-
mensions using Principal Com-
ponents Analysis, and then
a logistic regression classi-
fier with l1 regularization is
trained on the reduced data us-
ing 5-fold cross validation on
a training set of 60,000 im-
ages. The model is evaluated
at 93% accuracy on the re-
maining 10,000 images. We
then extract the 10-dimensional
predicted probability space and
use UMAP (McInnes & Healy,
2018; McInnes et al., 2018) to
reduce the space to 2 dimen-
Figure 10: Pareto frontier of stable paths between predominately
sneaker vertex and predominately ankle boot vertex.
sions. This 2-dimensional space is taken as the filter function of the Mapper, using a cover consisting
of 40 bins along each dimension with 50% overlap between each bin. We explored ranges of values
for the number of bins (10-50) and the overlap percentage (20-60%), and observed variabilities in
the constructed Mappers. The final choice of parameters (40 bins, 50% overlap) were chosen as the
Mappers showed least variability over subsets of values centered at these parameter values. DB-
SCAN is used as the clustering algorithm in the refinement step (Ester et al., 1996). KeplerMapper
is used for constructing the Mapper (van Veen & Saul, 2017). Finally, the cover is extracted and the
Steinhaus Mapper filtration is constructed.
To illustrate the power of the path explanations, we start with two vertices selected from the sneaker
and ankle boot regions of the resulting graph. The three regions of shoes (sneaker, ankle boot, and
sandals) are understandably confusing to the machine learning model, and we are interested in where
these confusions arise. Figure 9 shows the paths associated with the Pareto frontier (Figure 10).
18
Under review as a conference paper at ICLR 2020
id： 2875
id: 32368
ιtl: 2007
id： 2007
ι<1: 200⅛0
1
id: B66S
Figure 11: Path visualizations for shortest path (left) and stable path with length 12 (right). Columns
in the visualization are based on the class and each row represents a node in the Mapper. We
show one representative for each node in each column. Columns with no shoes shown had no
representative of that class in the node.
id:17109
X
id: 1415β
idl： 58&B
id: B66β
19
Under review as a conference paper at ICLR 2020
In Figure 10, we show the Pareto frontier between the two chosen vertices. This frontier shows a
large decrease in instability value (thus increase in stability) when moving to a path length of 12. As
noted in Section 5, paths found after a large increase in stability correspond to highly stable paths,
i.e., the path remains the shortest path while sweeping the instability value over a comparatively
large range.
Figure 11 shows representatives from each vertex in the path for the shortest path and the stable path
with length 12. Each row corresponds to one vertex and the columns show a representative from
each class represented in the vertex. Each image shows the multiplicity of that type of shoe in the
vertex.
In both paths, the vertices start predominately containing sneakers and sneaker-like sandals. They
then transition to containing a larger proportion of ankle boots, with all three classes showing higher
cut tops or high heels.
Along each path we can see the relationships between nodes change. In the most stable path on the
right, we a slow transition from sneaker space to ankle boot space, with some amount of sandals
spread throughout. Through the path, shoes from each of the three classes become taller. Near the
middle of the path, the images from sneakers and ankle boots are nearly indistinguishable. And
earlier in the path, we see how some white strips in the sneakers and boots might easily be confused
with negative space in the sandals.
These two paths provide a holistic representation of how the trained logistic model interprets the
data. By exploring these paths, we gain valuable insight into why a model is making a decision.
This can help either reinforce our trust in the model or reject the prediction. In either outcome, these
explanations can strengthen the results of the predictions by including humans in the loop. Even
though the case of predicting clothing types is a low stakes application, this framework is readily
applicable to much more important data sets.
D	Note on Complexity of Cover Filtrations
The complexity of constructing the cover filtration is by and large inherited directly from the com-
putational complexity of the nerve. Given a cover U , the nerve could have at most 2|U | - 1 simplices
and dimension at most |U| - 1 Otter et al. (2017). These bounds are equivalent to the corresponding
worst case bounds for VR and Cech complexes.
The work involved for each simplex in constructing NrvSt includes computing the volume of inter-
section and volume of union of the elements in the simplex. The complexity of union and intersec-
tion operations is largely dependent on the type of data being used. Let CUnn (V) and CInt (V) be the
costs of computing the union and intersection, respectively, of a set of cover elements V ⊆ U . In the
worst case, we have to do CUnn (U) + CInt (U) operations per simplex, leading to an overall worst
case computational complexity of (CUnn (U) + CInt(U))(2|U| - 1). For instance, if we assume that
a hashing-based dictionary could be produced for each set in U, both CUnn(V) and CInt(V) will be
at most linear in |V | Bille et al. (2007).
20