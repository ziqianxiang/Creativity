Under review as a conference paper at ICLR 2020
The B enefits of Over-parameterization at Ini-
tialization in Deep ReLU Networks
Anonymous authors
Paper under double-blind review
Ab stract
It has been noted in existing literature that over-parameterization in ReLU networks
generally improves performance. While there could be several factors involved
behind this, we prove some desirable theoretical properties at initialization which
may be enjoyed by ReLU networks. Specifically, it is known that He initialization
in deep ReLU networks asymptotically preserves variance of activations in the
forward pass and variance of gradients in the backward pass for infinitely wide
networks, thus preserving the flow of information in both directions. Our paper goes
beyond these results and shows novel properties that hold under He initialization:
i) the norm of hidden activation of each layer is equal to the norm of the input, and,
ii) the norm of weight gradient of each layer is equal to the product of norm of the
input vector and the error at output layer. These results are derived using the PAC
analysis framework, and hold true for finitely sized datasets such that the width of
the ReLU network only needs to be larger than a certain finite lower bound. As
we show, this lower bound depends on the depth of the network and the number
of samples, and by the virtue of being a lower bound, over-parameterized ReLU
networks are endowed with these desirable properties. For the aforementioned
hidden activation norm property under He initialization, we further extend our
theory and show that this property holds for a finite width network even when
the number of data samples is infinite. Thus we overcome several limitations of
existing papers, and show new properties of deep ReLU networks at initialization.
1	Introduction
Deep rectifier (ReLU) networks are popular in deep learning due to their ease of training and state-
of-the-art generalization. This success of deep rectifier networks can be partly attributed to good
initialization strategies (for example Glorot & Bengio (2010); He et al. (2015)). Essentially, good
parameter initializations guarantee that there is no exploding or vanishing of information across
hidden layers. These properties help gradient descent based optimization methods in navigating the
complex non-linear loss landscape of deep networks by initializing them at a good starting point
where training can begin. Such favorable properties promised by these initialization strategies are
(in most cases) shown to hold true in asymptotic settings where the network width tends to infinity
and/or under strict assumptions made about the distribution of the input data. A detailed account of
these existing papers and a contrast between these papers and our work is discussed in section 2.
Our paper relaxes the aforementioned assumptions made in previous papers. Further, we show novel
properties that hold for deep ReLU networks at initialization when using the He initialization scheme
(He et al., 2015). Specifically, we show that deep ReLU networks obey the following properties in
the forward (Eq. 1) back backward (Eq. 2) pass (see section 3 for notations),
k
khlk2 ≈kxk2	∀l ∈{1,2,…，L}
∂'(fθ (x), y)
∂Wl
kF ≈kδ(χ,y)k2 ∙kχk2 ∀l ∈{1,2,…，L}
(1)
(2)
We refer to the above properties as as the the activation norm equality and the gradient norm equality
property.
1
Under review as a conference paper at ICLR 2020
Further, we derive a finite lower bound on the width of the hidden layers for which the above results
hold (i.e., the network needs to be sufficiently over-parameterized) in contrast to a number of previous
papers that assume infinitely wide layers.
We do not make any assumption on the data distribution as done in a number of previous papers that
study initialization. Further, our results hold for an infinite stream of data for the activation norm
equality property and for any finite dataset in the backward pass.
Thus we have relaxed a number of assumptions made in previous research work that focus on deriving
initialization strategies for deep ReLU networks. Our results showing the connection between
activation norm and input norm (and similarly the property for gradients) for deep ReLU networks
can be utilized in further research studies.
2	Relation with Existing Work
The seminal work of Glorot & Bengio (2010) studied for the first time a principled way to initialize
deep networks to avoid exploding/vanishing gradient problem (EVGP). Their analysis however is
done for deep linear networks. The analysis by He et al. (2015) follows the derivation strategy of
Glorot & Bengio (2010) except they tailor their derivation for deep ReLU networks. However, both
these papers make a strong assumption that the dimensions of the input are statistically independent
and that the network width is infinite. Our results do not make these assumptions.
Saxe et al. (2013) introduce the notion of dynamical isometry which is achieved when all the singular
values of the input-output Jacobian of the network is 1. They show that deep linear networks achieve
dynamical isometry when initialized using orthogonal weights and this property allows fast learning
in such networks.
Poole et al. (2016) study how the norm of hidden activations evolve when propagating an input
through the network. Pennington et al. (2017; 2018) study the exploding and vanishing gradient
problem in deep ReLU networks using tools from free probability theory. Under the assumption of
an infinitely wide network, they show that the average squared singular value of the input-output
Jacobian for deep ReLU network is 1 when initialized appropriately. Our paper on the other hand
shows that deep ReLU networks are norm preserving maps at appropriate initialization. Further, we
show there exists a finite lower bound on the width of the network for which the Frobenius norm
of the hidden layer-output Jacobian (equivalently the sum of its squared singular values) are equal
across all hidden layers.
Hanin & Rolnick (2018) show that for a fixed input, the variance of the squared norm of hidden layer
activations are bounded from above and below for deep ReLU networks to be near the squared norm
of the input such that the bound depends on the sum of reciprocal of layer widths of the network. Our
paper shows a similar result in a PAC bound sense but as an important difference, we show that these
results hold even for an infinite stream of data by making the bound depend on the dimensionality of
the input.
Hanin (2018) show that sufficiently wide deep ReLU networks with appropriately initialized weights
prevent EVGP in the sense that the fluctuation between the elements of the input-output Jacobian
matrix of the network is small. This avoids EVGP because a large fluctuation between the elements
of the input-output Jacobian implies a large variation in its singular values. Our paper shows that
sufficiently wide deep ReLU networks avoid EVGP in the sense that the norm of the gradient for the
weights of each layer is roughly equal to a fixed quantity that depends on the input and target.
Over-parameterization in deep networks has previously been shown to have advantages. Neyshabur
et al. (2014); Arpit et al. (2017) show empirically that wider networks train faster (number of
epochs) and have better generalization performance. From a theoretical view point, Neyshabur et al.
(2018) derive a generalization bound for a two layer ReLU network where they show that a wider
network has a lower complexity. Lee et al. (2017) show that infinitely wide deep networks act as
a Gaussian process. Arora et al. (2018) show that over-parameterization in deep linear networks
acts as a conditioning on the gradient leading to faster convergence, although in this case over-
parameterization in terms of depth is studied. Our analysis complements this line of work by showing
another advantage of over-parameterization in deep ReLU networks.
2
Under review as a conference paper at ICLR 2020
3	Theoretical Results
Let D = {xi, yi}iN=1 be N training sample pairs of inputs vectors xi ∈ Rno and target vectors yiK
where xi’s are sampled from a distribution with support X. Define a L layer deep ReLU network
fθ (x) = hL with the lth hidden layer’s activation given by,
hl := ReLU(al)
al:= WlhlT	+ bl ι ∈{ι, 2,…l}	(3)
where hl	∈ Rnl	are the hidden	activations,	ho is the input to the network and can be one of	the
input vectors xi, Wl ∈ Rnl ×nl-1 are the weight matrices, b ∈ Rnl are the bias vectors which are
initialized as 0s, al are the pre-activations and θ = {(Wl, bl)}lL=1.
Define a loss on the deep network function for any given training data sample (x, y) as,
`(fθ (x), y)	(4)
where `(.) is any desired loss function. For instance, `(.) can be log loss for a classification problem,
in which case fθ(x) is transformed using a weight matrix to have dimensions equal to the number of
classes and the softmax activation is applied to yield class probabilities (i.e., a logistic regression like
model on top of fθ(x)). However for our purpose, we do not need to restrict `(.) to a specific choice,
we only need it to be differentiable. We will make use of the notation,
δ(χ, y) := d'fx^	(5)
∂aL
We organize our theoretical results as follows. We first derive the activation norm equality property
for finite datasets and then extend these results to infinite dataset setting in section 3.1. We then
derive the gradient norm equality property for finite datasets in section 3.2. All formal proofs, if not
shown in the main text, are available in the appendix.
3.1	Activation Norm Equality
Consider an L layer deep ReLU network and data x ∈ X. We show in this section that the norm of
hidden layer activation of any layer is roughly equal to the norm of the input at initialization for all
x ∈ X if the network weights are initialized appropriately and the network width is sufficiently large
but finite. Specifically we show ∀l ∈ [L] and x ∈ X,
khlk2 ≈ kxk2
(6)
To achieve this goal, We start with a very simple result- in expectation, ReLU transformation in
each layer preserves the norm of its corresponding input if the weights are sampled appropriately.
Evaluating this expectation also helps determining the scale of the random initialization that leads to
norm preservation.
Lemma 1 Let V = ReLU (Ru), where u ∈ Rn, R ∈ Rm×n. If Rij '对 N (0, m2), then for any
fixed vector u, E[kvk2] = kuk2.
The proof for the above lemma involves simply computing the expectation analytically by exploting
the fact that each dimension of the vector u is a weighted sum of Gaussian random variables. The
above result thus shows that for each layer, initializing its weights from an i.i.d. Gaussian distribution
with 0 mean and 2/fan-out variance (viz. He initialization (He et al., 2015)) preserves the norm of
its input in expectation. We now derive a lower bound on the width of a ReLU layer so that it can
preserve the norm of the input for a single fixed input with error margin.
Lemma 2 Let V = ReLU (Ru), where U ∈ Rn, R ∈ Rm×n. If Riji.利.N(0, m2), and E ∈ [0,1),
then for any fixed vector u,
Pr(IkVk2 - kuk2l ≤ Ekuk2) ≥ 1 - 2exP (-m Q + log] + Ji+E
(7)
3
Under review as a conference paper at ICLR 2020
The proof of this lemma involves a direct application of the Chernoff bounding technique. Now we
use the above lemma to show that the norm of hidden activations equal the norm of inputs within a
specified margin and for a finite size dataset for a deep ReLU network.
Theorem 1 Let D be a fixed dataset with N samples and define a L layer ReLU network fθ (.)
as shown in Eq. 3 such that each weight matrix Wl ∈ Rnl ×nl-1 has its elements sampled as
Wij i.i.d. N(0, n) and biases bl are set to zeros. Thenfor any sample (x, y) ∈ D and E ∈ [0,1),
we have that,
Pr((I-E)LIIxk2 ≤kfθ(x)k2 ≤ (1 + E)LIIxI∣2)
≥1-X2N exp -nl0
l0=1
E
4+log
2
1 + √1 + E
(8)
While the statement of the above theorem only talks about the norm of the final output of the network,
it equally applies to any hidden layer l as well since the theorem can be applied equivalently to a l
layer network.
Having proved the activation norm equality property in the finite dataset setting above, we now turn
our attention to the case of infinite dataset case. To do so, we first prove a non-trivial result where we
use lemma 2 to show how a lower bound on the width of an individual ReLU layer can be computed
such that this layer preserves the norm of an infinite stream of inputs.
Lemma 3 Let X be a d ≤ n dimensional subspace of Rn and R ∈ Rm×n. If Rij ''* N (0, ),
E ∈ [0, 1), and,
m ≥ --------------1-----/	∙ ( d log -2- + log 4 j	(9)
—e/12 -log(0.5(1 + P1+^73)) ∖ F δδJ	-
then with probability at least 1 -δ ,
(1 - E)IuI2 ≤ IReLU(Ru)I2≤ (1 + E)IuI2 ∀u∈ X	(10)
where δ := min{ 3√d，√√d}.
Proof Sketch: The core idea behind the proof is inspired by lemma 10 of Sarlos (2006). Without
any loss of generality, we will show the norm preserving property for any unit vector u in the d
dimensional subspace X ofRn. This is because for any arbitrary length vector u, IReLU (Ru)I =
∣∣u∣ ∙ ∣∣ReLU (R^) k. The idea then is to define a grid of finite points over X on [-1,1]d with interval
size depending on e, such that every unit vector U in X is close enough to one of the grid points.
Then, if we choose the width of the layer to be large enough to approximately preserve the length
of the finite number of grid points, we can guarantee that the length of any arbitrary unit vector
approximately remains preserved as well within the derived margin of error. The formal proof can be
found in the appendix.
We now extend the above lemma to a deep ReLU network and show our main result for the forward
pass that the norm of hidden activations equal the norm of input within some distortion margin, for
an infinite stream of input data for a sufficiently large (but finite) width deep ReLU network.
Theorem 2 Define a L layer ReLU network fθ (.) as shown in Eq. 3 such that each weight matrix
Wl ∈ Rnl ×nl-1 has its elements sampled as Wij "i∙d. N(0, n2) and biases bl are set to zeros. Let
X be a d ≤ n dimensional subspace of Rn. If Wij ''科 N (0, n), e ∈ [0,1), and,
nl ≥ ---------------------.	- ∙ I d log ɪ + log — I	∀l ∈ [L]	(11)
l - e/12 - log(0.5(1 + P1+;73)) k g∆ g δ ) L —
then with probability at least 1 - δ,
(1 - E)lIxI2 ≤ IhlI2 ≤ (1 + E)lIxI2 ∀x∈X ∀l∈ [L]	(12)
4
Under review as a conference paper at ICLR 2020
Proof: Since the input lies on a d dimensional subspace of Rn, we apply theorem 3 to the first layer
and get the guarantee that the norm of all inputs on the d dimensional subspace are preserved by
this layer. Next, we show that since each layer is a linear transform followed by pointwise ReLU
non-linearity, and the input takes values in a set defined by the d dimensional subspace of Rn, the
output of the first layer will take values in a set that is strictly a subset of a d dimensional subspace.
To see this, let B ∈ Rn×d denote a matrix with orthonormal columns describing the basis of the
subspace X on which the input lies, and let z ∈ Rd. Then we have that,
x ∈ {Bz|z ∈ Rd}	(13)
The first layer transforms any input x as
h1 = ReLU(W0x)	(14)
= ReLU(W0Bz)	(15)
Denote B0 = W0B. Then note that rank(B0) ≤ d. Let S1 denote the set of values that h1 can take.
Then we have that,
S1 = {B0z|z ∈ Rd} ∩ Rn1+	(16)
where Rn+ denote the subset of Rn where all dimensions take non-negative values. This shows that
h1 takes values in a set that is strictly a subset of a d dimensional subspace of Rn1.
Having proved this for first layer, we can recursively apply this strategy to all higher layers since the
output of each layer lies on a subset of a subspace. Notice that while doing so, the lower bound on
the width of each layer depends only on the subspace dimensionality d. Applying union bound over
the result of theorem 3 for L layers proves the claim.
We note that the lower bound on width derived above depends on two quantities- the depth of the
network L, and the dimensionality of the subspace d on which the input lies. Specifically, the lower
bound on the width becomes larger for larger input dimensionality d and larger network depth L
irrespective of the number of data samples, meaning that a wider network is needed as the depth of
the network and/or the intrinsic input dimensionality increases.
3.2	Gradient Norm Equality
Consider any given loss function `(.) and a data sample (x, y), we show in this section that the norm
of gradient for the parameter Wl of the lth layer depends only on the input and output. Specifically,
for a wide enough network, the following holds at initialization for all l ∈ {1, 2, . . . , L} and ∀x ∈ D,
k
∂'f (x), y)
-∂Wl-
kF ≈ kδ(X, y)k2 ∙ kxk2
∀l
(17)
As a first step, we note that the gradient for a parameter Wl for a sample (x, y) is given,
d'fW^ = d"agfy) M(hi-1)
(18)
where Mnl (hl-1) is a matrix of size nl × nl-1 such that each row is the vector hl-1. Therefore, a
simple algebraic manipulation shows that,
k
∂'(fθ (χ), y)
∂Wl
kF = k 训 f (X), y) k2 ∙khl-1k2
∂a
(19)
In the previous section, we showed that for a sufficiently wide network, khl k2 ≈ kxk2 ∀l with high
probability. To show that gradient norms of parameters are preserved in the sense shown in Eq. (17),
we essentially show that k d*V),y) ∣∣2 ≈ kδ(x, y)k2 ∀l with high probability for sufficiently wide
networks.
Note that k WdaLNy ∣∣2 = kδ(x, y)k2 by definition. To show the norm is preserved for all layers,
we begin by noting that,
∂'(fθ(χ), y) = ∂h∣ G ∂∂al+1 T∂'(fθ(χ), y)∖
∂al = ∂alG 1 ~hhι ∂a1+1 -)
=l(al) G (wl+1T h'f(Xl, y))	(20)
5
Under review as a conference paper at ICLR 2020
where Θ is the point-wise product (or Hadamard product) and 1(.) is the heaviside step function. The
following proposition shows that 1(.) follows a Bernoulli distribution w.r.t. the weights given any
fixed input at the previous layer.
Proposition 1 If network weights are sampled i.i.d. from a Gaussian distribution with mean 0 and
biases are 0 at initialization, then Conditioned on hl-1, each dimension of l(a* l) follows an i.i.d.
Bernoulli distribution with probability 0.5 at initialization.
Given this property of l(al), we show below that the transformation of type shown in Eq. (20) is
norm preserving in expectation.
Lemma 4 Let V = (Ru) Θ Z, where U ∈ Rn, R ∈ Rm×n and Z ∈ Rm. If Rij '对 N(0, Pm) and
Zi i.i.d. Bernoulli (P), thenfor any fixed vector u, E[∣∣vk2 ] = ∣∣uk2.
The proof of this lemma involves analytically computing the expectation of the vector norm by
exploiting the fact that each dimension of v is a sum of Gaussian random variables multiplied to an
independent Bernoulli random variable. This lemma reveals the variance of the 0 mean Gaussian
distribution from which the weights must be sampled in order for the vector norm to be preserved in
expectation. Since l(al) is sampled from a 0.5 probability Bernoulli, We have that the weights must
be sampled from a Gaussian with variance 2/m. We now show this property holds for a finite width
network.
Lemma 5 Let V = (Ru) Θ Z, where u ∈ Rn, z ∈ Rm, and R ∈ Rm×n. If Rij "it' N(0, o-ɪ),
Zi i.i.d. Bernoulli (0.5) and E ∈ [0,1), thenfor any fixed vector u,
Pr(IkVk2 - kuk2l ≤ ekuk2)
≥1 - 2exp (-m G+logτ+√m))	QI)
The proof of this lemma involves a direct application of the Chernoff bounding technique. Having
shown that a finite width ReLU layer can preserve gradient norm, we now note that we need to apply
this result to Eq. (20). In this case, we must substitute the matrix R in the above lemma with the
network’s weight matrix Wl+1T . In the previous subsection, we showed that each element of the
matrix Wl+1 must be sampled from N(0, 2/nl+1) in order for the norm of the input vector to be
preserved. However, in order for the Jacobian norm to be preserved, we require Wl+1 to be sampled
from N(0, 2/nl) as per the above lemma. This suggests that if we want the norms to be preserved in
the forward and backward pass for a single layer simultaneously, it is beneficial for the width of the
network to be close to uniform. The reason we want them to simultaneously hold is because as shown
in Eq. (19), in order for the parameter gradient norm to be same for all layers, we need the norm of
both the Jacobian ∣∣ 必于晦),y) ∣2 as well as the hidden activation ∣∣hl-1k2 to be preserved throughout
the hidden layers. Therefore, assuming the network has a uniform width, we now prove that in deep
ReLU networks with He initialization, the norm of weight gradient for each layer is simply a product
of norm of the input and norm of the error at output.
Theorem 3 1 Let D be a fixed dataset with N samples and define a L layer ReLU network as shown
in Eq. 3 such that each weight matrix Wl ∈ Rn×n has its elements sampledas Wij	N(0, n) and
biases bl are set to zeros. Then for any sample (x, y) ∈ D, E ∈ [0, 1), and for all l ∈ {1, 2, . . . , L}
with probability at least,
1	-4NLexp (-n (Z + logτ+‰))	(22)
the following hold true,
(I-Z)Lkxk2 ∙kδ(χ,y)k2 ≤k阳∂W),y)k2
 ≤ (1 + e)Lkχk2 ∙ kδ(χ,y)k2	(23)
1 Similar to He et al. (2016), we have assumed that d'f (X),y) in independent from l(al) and Wl+1 at
initialization.
6
Under review as a conference paper at ICLR 2020
Figure 1: For He initialization, the norm of hidden activation hi roughly equals the norm of input x;
and the norm of weight gradient ∂ Wi := WdW(Xv' roughly equals the product of norm of input X
and the norm of output error δ(x, y) when width is sufficiently large. Glorot initialization does not
have this property.
6∕2Q8642
LLLL6O.O.6
(=X=JFXg=US
2
4	6	8
Layer Index (i)
10
Figure 2: Tightness of lower bounds on network width derived in lemma 2 and lemma 5 shown in the
left sub-figure and right sub-figure respectively. See text for more details.
and
(1 - )lkxk2 ≤ khlk2 ≤ (1 + )lkxk2
(24)
We note that even though the theorem relies on the specified independence assumption similar to He
et al. (2016), we show that our predictions hold in practice in the next section.
4 Empirical Verification
4.1	Norm Preservation of Activation and Gradients
In this section, We verify the hidden activations have the same norm as input norm kχk2 ≈ 1 (Eq. 6),
and the parameter gradient norm approximately equal the product of input norm and output error
k kdfx),y %
∣∣δ(X,y)∣∣2 ∙∣∣χ∣∣2
norm
≈ 1 (Eq. 17) for all layer indices i for sufficiently wide deep ReLU networks.
For this experiment we choose a 10 layer network with 2000 randomly generated input samples in
R500 and randomly generated target labels in R20 and cross-entropy loss. We add a linear layer
along with softmax activation to the ReLU network’s outputs to make the final output in R20 . We
use network width from the set {100, 500, 2000, 4060}. We show results for both He initialization
(He et al., 2015) which we theoretically show is optimal, as well as Glorot initialization (Glorot &
Bengio, 2010) which is not optimal for deep ReLU nets. As can be seen in figure 1 (left), the mean
ratio of hidden activation norm to the input norm over the dataset is roughly 1 with a small standard
deviation for He initializaiton. This approximation becomes better with larger width. On the other
hand, Glorot initialization fails at preserving activation norm for deep ReLU nets. A similar result
can be seen for parameter gradients norms (figure 1 (right)). In the figure We denote “警脸)")by
∂Wi . Here we find for He initialization that the norm of weight gradient for each layer is roughly
equal to the product of norm of input and norm of error at output, and this approximation becomes
stronger for Wider netWorks. Once again Glorot initialization does not have this property.
7
Under review as a conference paper at ICLR 2020
---- He - Width-variation 1
He - Width-variation 200
---- He - Width-variation 500
Figure 3: Effect of non-uniformity of width in deep ReLU network on the gradient norm equality
property. For each of the three networks, width of each layer is selected independently from
U (1000 - v, 1000 + v), where v is the width variation shown in the plot. Gradient norm equality
holds more accurately when width variation is smaller.
4.2	Tightness of Bound
In the following experiment we verify the tightness of the bound in lemma 2 (for forward pass) and
lemma 5 (for backward pass). To do so, we vary the network width of a one hidden layer ReLU
transformation from 500 to 4000, and feed 2000 randomly sampled inputs x through it. For each
sample we measure the distortion defined as,
for the forward pass, and,
1 khk
1
kxk
k d'(fθ(X)⑨ k
k	∂Wi	kF
kδ(X,y)k2 ∙ kχk2
(25)
(26)
for the backward pass. Here h is the output of the one hidden layer ReLU transformation. We
compute the mean value of for the 2000 examples and plot them against the network width used.
We call this the empirical estimate. We simultaneously plot the values of predicted by lemma 2 and
lemma 5 for failure probability δ = 0.05. We call this the theoretical value. The plot for the forward
pass is shown in figure 2 (left). As can be seen, our lower bound on width is an over-estimation but
becomes tighter for smaller values of . A similar result can be seen for lemma 5 in figure 2 (right).
Thus our proposed bounds can be improved and we leave that as future work.
4.3	Effect of Non-uniformity of Width on Gradient Norm Equality
As discussed in section 3.2, gradient norm equality property holds more accurately when deep
networks have a more uniform width throughout the layers. To verify this, we construct a 20 layer
deep ReLU network such that the width of each layer is determined by independently sampling
uniformly between 1000 - v and 1000 + v , where v denotes the amount of width variation chosen
for a particular experiment. Once the network architecture is fixed, we initialize the weights with He
initialization. We then generate 1000 pairs of input samples and output error similar to the process
described in section 4.1 and compute the ratio
d'fθ (XKy) H
k	∂Wi	kF
kδ(X,yX∣2∙kxk2.
The mean and standard deviation of
this value across samples are shown in figure 3 for v ∈ {1, 200, 500}. It can be seen that the ratio
is closer to 1 with smaller variance when width variation v is small, thus verifying our theoretical
prediction.
5 Conclusion
We derived novel properties that are possessed by deep ReLU networks initialized with He initializa-
tion. Specifically, we show that the norm of hidden activations and the norm of weight gradients are a
function of the norm of input data and error at output. While deriving these properties, we relaxed
most of the assumptions (such as those on input distribution and width of network) made by previous
work that study weight initialization in deep ReLU networks. Thus our work establishes that He
initialization optimally preserves the flow of information in the forward and backward directions in a
stronger setting, and uncovers novel properties.
8
Under review as a conference paper at ICLR 2020
References
Sanjeev Arora, Nadav Cohen, and Elad Hazan. On the optimization of deep networks: Implicit
acceleration by overparameterization. arXiv preprint arXiv:1802.06509, 2018.
Devansh Arpit, Stanislaw Jastrzebski, Nicolas Ballas, David Krueger, Emmanuel Bengio, Maxinder S
Kanwal, Tegan Maharaj, Asja Fischer, Aaron Courville, Yoshua Bengio, et al. A closer look at
memorization in deep networks. arXiv preprint arXiv:1706.05394, 2017.
Xavier Glorot and Yoshua Bengio. Understanding the difficulty of training deep feedforward neural
networks. In Proceedings of the thirteenth international conference on artificial intelligence and
statistics, pp. 249-256, 2010.
Boris Hanin. Which neural net architectures give rise to exploding and vanishing gradients? arXiv
preprint arXiv:1801.03744, 2018.
Boris Hanin and David Rolnick. How to start training: The effect of initialization and architecture.
arXiv preprint arXiv:1803.01719, 2018.
Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Delving deep into rectifiers: Surpassing
human-level performance on imagenet classification. In Proceedings of the IEEE international
conference on computer vision, pp. 1026-1034, 2015.
Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image
recognition. In Proceedings of the IEEE conference on computer vision and pattern recognition,
pp. 770-778, 2016.
Sham Kakade and Greg Shakhnarovich. Random projections, 2009. URL http://ttic.
uchicago.edu/-gregory/courses/LargeScaleLearning/lectures/jl.pdf.
Jaehoon Lee, Yasaman Bahri, Roman Novak, Samuel S Schoenholz, Jeffrey Pennington, and Jascha
Sohl-Dickstein. Deep neural networks as gaussian processes. arXiv preprint arXiv:1711.00165,
2017.
Behnam Neyshabur, Ryota Tomioka, and Nathan Srebro. In search of the real inductive bias: On the
role of implicit regularization in deep learning. arXiv preprint arXiv:1412.6614, 2014.
Behnam Neyshabur, Zhiyuan Li, Srinadh Bhojanapalli, Yann LeCun, and Nathan Srebro. Towards
understanding the role of over-parametrization in generalization of neural networks. arXiv preprint
arXiv:1805.12076, 2018.
Jeffrey Pennington, Samuel Schoenholz, and Surya Ganguli. Resurrecting the sigmoid in deep
learning through dynamical isometry: theory and practice. In Advances in neural information
processing systems, pp. 4785-4795, 2017.
Jeffrey Pennington, Samuel S Schoenholz, and Surya Ganguli. The emergence of spectral universality
in deep networks. arXiv preprint arXiv:1802.09979, 2018.
Ben Poole, Subhaneil Lahiri, Maithra Raghu, Jascha Sohl-Dickstein, and Surya Ganguli. Exponential
expressivity in deep neural networks through transient chaos. In Advances in neural information
processing systems, pp. 3360-3368, 2016.
Tamas Sarlos. Improved approximation algorithms for large matrices via random projections. In
Foundations of Computer Science, 2006. FOCS’06. 47th Annual IEEE Symposium on, pp. 143-152.
IEEE, 2006.
Andrew M Saxe, James L McClelland, and Surya Ganguli. Exact solutions to the nonlinear dynamics
of learning in deep linear neural networks. arXiv preprint arXiv:1312.6120, 2013.
9
Under review as a conference paper at ICLR 2020
Appendix
A Proofs
A.1 Proofs for Forward Pass
Lemma 1 Let V = ReLU (Ru), where U ∈ Rn and R ∈ Rm×n. If Rij "i.d. N(0, m), then for
any fixed vector u, E[kvk2] = kuk2.
Proof:	Define	ai	=	RiT u, where	Ri	denotes the ith row of R.	Since each element	Rij	is an
independent sample from Gaussian distribution, each ai is essentially a weighted sum of these
independent random variables. Thus, each a% 〜 N(0, m∙ kuk2 and independent from one another.
Thus each element Vi = ReLU(a∕ 〜NR(0,mIlull2) where NR denotes the rectified Normal
distribution. Our goal is to compute,
m
E[IvI2] = E[Xvi2]
i=1
= mE[vi2]
(27)
(28)
(30)
(31)
(32)
(33)
(34)
From the definition of vi,
E[vi] = 2 ∙ 0 + 1 E[Z]	(29)
where Z follows a half-Normal distribution corresponding to the Normal distribution N(0, m IluII2).
Thus E[Z] = q2kmk2 ∙ q∏ = 2qkm∏2. Similarly,
E[vi2] = 0.5E[Z2]
= 0.5(var(Z) + E[Z]2)
Since Var(Z)=蒲IluIl2(1 - ∏), we get,
E[v2]=0.5 213∣2(1- 2) + (2"1亚)2
m	π	mπ
=K
m
Thus,
mE[Vi2] = IuI2
which proves the claim.
Lemma 2 Let V = ReLU (Ru), where u ∈ Rn, R ∈ Rm×n. If Rij "U N(0, m), and E ∈ [0,1),
then for any fixed vector u,
Pr(IkVk2 - |"|2| ≤ dUI2) ≥ 1 - 2eχp (-m G + log 1 + √1+E
(35)
Proof: Define V = A^umv. Then we have that each element Vi 〜NR (0,1) and independent
from one another since Vi = ReLU(ai)〜 N R(0, m∙ IuI2 where NR denotes the rectified Normal
distribution. Thus to bound the probability of failure for the R.H.S.,
PMM2 ≥ (I + 划闾2)=Pr (罂M2 ≥ (I + 划附	(36)
= Pr(∣∣V∣∣2 ≥ 0.5m(1 + E))	(37)
1
Under review as a conference paper at ICLR 2020
Using Chernoff’s bound, we get for any λ > 0,
Pr (∣∣V∣∣2 ≥ 0.5m(1 + E)) = Pr (exp(λ∣∣V∣∣2) ≥ exp(λ0.5m(1 + E)))
≤	E[exp(λ∣V k2)]
一exp(0.5mλ(1 + E))
=E[exp(Pm=ι λVi2)]
exp(0.5mλ(1 + E))
=∏m=IE[exp(λVi 2)]
exp(0.5mλ(1 + E))
=(E[exp(λVi2)] V
[exp(0.5λ(1 + E)) J
(38)
(39)
(40)
(41)
(42)
Denote P(Vi) as the probability distribution of the rectified Normal random variable Vi. Then,
E[exp(λVi2)]
Z∞
exp(λVi2)p(Vi)
∞
(43)
We know that the mass at vi = 0 is 0.5 and the density between vi = 0 and vi = ∞ follows the
Normal distribution. Thus,
E[exp(λVi2)] = 0.5exp(0) +——e exp(λVi2 — a2/2)	(44)
2π 0
=0.5 +	1	/ √2	Z exp(- g (1 — 2λ))	(45)
2√(1 — 2λ) √π∕(1 — 2λ) Jo	2 ,	〃
Note that R∞ √===j=y R∞ exp( — v2- (1 — 2λ)) is the integral of a half Normal distribution corre-
sponding to the Normal distribution N(0, 1/(1 — 2λ)). Thus,
1
E[exp(λVi2)] = 0.5 +
2,(1 - 2λ)
(46)
Hence, we get,
Pr (∣∣Vk2 ≥ 0.5m(1 + E)) ≤ (θ.5 (l + ^1^^) exp(—0.5λ(1 + E)))
(47)
The above failure probability can be bounded to be smaller by finding an appropriate value of λ. We
find that λ ≈ 1+5∣ approximately minimizes the above bound. Substituting this value of λ above, we
get,
E	___ E ∖ m
Pr(IlV∣∣2 ≥ 0.5m(1 + E)) ≤(0.5(1 + √1 + E) exp( —4))
E2
=exp — m ——+ log-,
p∖ V+ g1 + √1+^
Thus,
pr(kvk2 ≤ (1 + E)kuk2) ≥ 1 — exp (~m (+ + log ] , 2rτr-
4	1+ 1+E
(48)
(49)
(50)
Similarly, to prove the L.H.S. by bounding the probability of failure from the other side,
Pr (kvk2 ≤ (I-E)kuk2) = Pr (-kvk2 ≥ -(I-E)kuk2)	(51)
=Pr (—罂 ∣Vk2 2-(1-E)kuk2)	(52)
=Pr (-∣∣Vk2 ≥ —0.5m(1 — e))	(53)
2
Under review as a conference paper at ICLR 2020
Using Chernoff,s bound, we get for any λ > 0,
Pr (-∣∣Vk2 ≥ —0.5m(1 — e)) = Pr (exp(-λ∣∣V∣∣2) ≥ exp(-λ0.5m(1 — e)))
(54)
≤	E[exp(-λ∣V∣2)]
_ exp(-0.5mλ(1 — E))
=E[exp(-P乙 λv⅞2)]
exp(-0.5mλ(1 — e))
=∏m=IE[exp(-λv⅞2)]
exp(-0.5mλ(1 — e))
=(E[exp(-λv⅞2)] '
∖exp(-0.5λ(1 — e)),
(55)
(56)
(57)
(58)
m
Performing computations similar to those above to compute the expectation term, we get,
1
E[exp(-λVi2)] = 0.5 +
2√(1 + 2λ)
(59)
Hence, we get,
1
m
Pr(IIvk2 ≤ 0.5m(1 — E)) ≤ I 0.5 I 1 +
exp(0.5λ(1 — E))
(60)
Similar to theR.H.S. case, we find that λ ≈ 05∣ approximately minimizes the failure probability,
Pr (∣V∣∣2 ≤ 0.5m(1 — E)) ≤(0.5 (1 + √1 - E) exp
exp ( m ( E — log
E ))m
2
(61)
(62)
1 + √Γ-7
It can be shown that,
2
2
exp ( m ( E — log
≤ exp ( —m (E + log
1 + √1 + E
(63)
1 + √Γ-7
Thus,
2
Pr (∣v∣2 ≥ (1 — e)∣u∣2) ≥ 1 — exp (—m (E + log
1 + √1 + E
(64)
Using union bound, Eq. (50) and (64) hold together with probability,
Pr((I-E)∣u∣2 ≤ ∣∣v∣2 ≤ (1 + e)∣u∣2) ≥ 1 - 2exp
—m (E + log
2
1 + √1 + E
(65)
This proves the claim. □
Theorem 1 Let D be a fixed dataset with N samples and define a L layer ReLU network as shown in
Eq. 3 such that each weight matrix Wl ∈ Rnι xnι-1 has its elements sampled as Wj "i∙d' N(0,看)
and biases bl are set to zeros. Thenfor any sample (x, y) ∈ D and E ∈ [0,1), we have that,
Pr((I-E)LkXk2 ≤ kfθ(x)k2 ≤ (1 + E)LkXk2) ≥ 1 - X 2Nexp (~nu
l0 = 1	∖
E
4 + log
1 + √1 + E
(66)
Proof: When feed-forwarding a fixed input through the layers of a deep ReLU network, each
hidden layer's activation corresponding to the given input is also fixed because the network is
3
Under review as a conference paper at ICLR 2020
deterministic. Thus applying lemma 2, on each layer’s transformation, the following holds true for
each l ∈ {1,2, ∙ ∙ ∙ L},
Pr((I- e)khl-1k2 ≤ khlk2 ≤ (1 + e)khl-1k2) ≥ 1 - 2exp --nl Q +log 1+ ^21—))
(67)
Thus, using union bound, we have the lengths of all the layers until layer l are simultaneously
preserved with probability at least,
1 -	2 exp -nl0
l0=1
4+log
2
1 + √1 + C
(68)
Applying union bound again, all the lengths until layer l are preserved simultaneously for N inputs
with probability,
2
1 + √1 + c
1-X2N exp -nl0
l0=1
C
4+log
Finally, we note that the following hold true with the above probability,
(1 - C)kxk2 ≤ kh1k2 ≤ (1 + C)kxk2
(1 - C)kh1k2 ≤ kh2k2 ≤ (1 + C)kh1k2
(69)
(70)
(71)
Substituting kh1 k2 ≤ (1 + C)kxk2 in the R.H.S. of the last equation, and (1 - C)kxk2 ≤ kh1 k2 in
the L.H.S. of the last equation, we get,
(1 - C)2kxk2 ≤ kh2k2 ≤ (1 + C)2kxk2	(72)
Performing substitutions for higher layers similarly yields the claim.
Lemma 3 Let X be a d ≤ n dimensional subspace of Rn and R ∈ Rm×n. If Rij ''* N (0, ),
C ∈ [0, 1), and,
m ≥ -----------------------/	∙ d log — — log v
—c/12 - log(0.5(1 + P1+^73)) ∖ f δ
(73)
then for all vectors u ∈ X, with probability at least 1 -δ,
kReLU(Ru)k - kuk ≤ Ckuk	(74)
where δ := min{ 3√d，√√d}.
Proof: The core idea behind the proof is inspired by lemma 10 of Sarlos (2006). Without any loss
of generality, we will show the norm preserving property for any unit vector u in the d dimensional
subspace X of Rn. This is because for any arbitrary length vector U, ∣∣ReLU(Ru)k = ∣∣u∣∣ ∙
∣∣ReLU (Ru)Il. The idea then is to define a grid of finite points over X such that every unit vector
U in X is close enough to one of the grid points. Then, if we choose the width of the layer to be
large enough to approximately preserve the length of the finite number of grid points, we essentially
guarantee that the length of any arbitrary vector approximately remains preserved.
To this end, we define a grid G on [-1,1]d with interval of size ∆ := min{e∕√d, √e∕d}. Note the
number of points on this grid is (∆2 )d. Also, let column vectors of B ∈ Rn×d be the orthonormal
basis of X.
We now prove the R.H.S. ofthe bound in the claim. Ifwe consider any unit vector U in X, we can find
a point g on the grid G such that ∣∣g∣ ≤ 1, and it is closest to U in '2 norm, and define r0 := U - g.
Thus the vector U can essentially be decomposed as,
U = g + r0	(75)
Also note that since r0 lies in the span of X, we can represent r0 := Br for some vector r.
4
Under review as a conference paper at ICLR 2020
Now consider the norm of the vector U after the ReLU transformation give by ∣∣ReLU (R^)k∙ Then
we have,
∣ReLU (R^)∣ = ∣ReLU (R(g + r0))∣	(76)
≤ ∣ReLU (Rg) +ReLU(Rr0))∣	(77)
≤ ∣ReLU(Rg)∣ +∣ReLU(Rr0))∣	(78)
≤ ∣ReLU(Rg)∣ +∣Rr0∣	(79)
Similarly, we have,	
∣ReLU(Rg)k = ∣ReLU(R(g + U - U))k	(80)
≤ 11 ReLU (RU) + ReLU (R(g — U)))∣	(81)
≤ 11 ReLU (RU)k + 11 ReLU (—Rr0))∣	(82)
≤ 11 ReLU (RU)k + ∣Rr0k	(83)
Therefore,	
∣ReLU(Rg)k — ∣Rr0k ≤ ∣ReLU(R^)k ≤ ∣ReLU(Rg)k + IRr0k	(84)
Applying union bound on all the points in G, from lemma 2, we know that with probability at least
1-(∆2)deχp (-m G + log l+‰)),
∣ReLU(Rg)∣2≤(1+)∣g∣2
≤ 1 +	(85)
≤ (1+)2	(86)
This can be substituted in the R.H.S. of Eq. (84). Now we only need to upper bound ∣Rr0∣. To this
end, we rewrite∣Rr0 ∣ = ∣RBr∣. Then,
dd
∣RBr∣2 = X X < RBiri , RBj rj >	(87)
dd	1	1
≤ 2 XX |ri | ∙ |rj 卜 < √2RBi, √2RBj >	(88)
i=1 j=1
Note that 表 R is a matrix whose entries are sampled from N (0, 1). Invoking lemma 6 on the d2
terms in the above sum, we have that with probability at least 1 一 2d2 exp (—mm (e2 一 e3)),
dd	1	1	dd
2 XX |ri|	∙	|rj 卜	< √RBi, √RBj	> ≤ 2 XX	|ri|	∙	|rj |	∙ (< Bi, Bj >	+E)	(89)
i=1 j=1	2	2	i=1 j=1
d	dd
=2 X r2kBik2 + 2 XX ∣ri∣∙∣rj ∣∙ e (9。)
i=1	i=1 j=1
= 2∣r∣2 + 2E∣r∣12	(91)
Since r0, and hence r is a point inside one of the grid cells containing the origin, its length can
be at most the length of the main diagonal of the grid cell. Formally, ∣∣r∣ ≤ √d∆ ≤ G and
IlrIlI ≤ d∆ ≤ √. Subsituting these inequalities in the above equations, we get,
∣RBr∣2 ≤ 4E2	(92)
Looking back at the R.H.S. of Eq. (84), we have that with probability at least 1 一
(∆2)d eχp (-m (I + log 1+‰)) 一 2d2 eχp (—m (e2 一 e3)),
∣∣ReLU(R^)k ≤ 1 + E + 2e	(93)
= 1+3E	(94)
5
Under review as a conference paper at ICLR 2020
To prove the L.H.S. of the claimed bound, we can similarly find a point g on the grid G such that
U — g. Then invoking lemma 2, we know
；ι+√⅛)}
Ilgkl ≥ 1, and it is closest to U in ' norm, and define r0 := ι
that with probability at least 1 — (∆2 )d exp (—m 6 + log
∣ReLU(Rg)∣2
≥
≥
≥
(1 — E)∣g∣2
1—E
(1—E)2
(95)
(96)
This can be substituted in the L.H.S. of Eq.
(84). We then substitute the previously com-
puted upper bound of ∣RBr∣2 once again and have that with probability at least 1 —
exp (一节(e2 — e3)),
1 — 3e ≤ ∣∣ReLU(R^)k ≤ 1 + 3e
Scaling ^ arbitrarily, we equivalently have,
(1 — 3)∣u∣ ≤ ∣ReLU(Ru)∣ ≤ (1 + 3)∣u∣
Finally, since,
W) exp (-m G + log 1 + √m)) ≥ d2 exp (— m Y - E3
We can further lower bound the success probability of Eq. (98) for mathematical ease as,
1 — 4 ( ∆2 ʌ exp (—m (： + log
2
1 + √1 + E
Therefore to guarantee a success probability of at least 1 — δ, we bound,
1—4 (∆2) exp (-mG+logτ+√⅛ ))≥ 1—δ
(97)
(98)
(99)
(100)
(101)
Rearranging the terms in the equality to get a lower bound on m and rescaling proves the claim.
A.2 Proofs for Backward Pass
Proposition 1 If network weights are sampled i.i.d. from a Gaussian distribution with mean 0 and
biases are 0 at initialization, then conditioned on hl-1, each dimension of l(al) follows an i.i.d.
Bernoulli distribution with probability 0.5 at initialization.
Proof: Note that al := Wlhl-1 at initialization (biases are 0) and Wl are sampled i.i.d. from a
random distribution with mean 0. Therefore, each dimension ali is simply a weighted sum of i.i.d.
zero mean Gaussian, which is also a 0 mean Gaussian random variable.
To prove the claim, note that the indicator operator applied on a random variable with 0 mean
and symmetric distribution will have equal probability mass on both sides of 0, which is the same
as a Bernoulli distributed random variable with probability 0.5. Finally, each dimension of al is
i.i.d. simply because all the elements of Wl are sampled i.i.d., and hence each dimension of al is a
weighted sum of a different set of i.i.d. random variables.
Lemma 4 Let V = (Ru) Θ Z, where U ∈ Rn, R ∈ Rm×n and Z ∈ Rm. If Rjik N(0, Pmm) and
Zi i.i.d. Bernoulli (P), thenfor any fixed vector u, E[∣v∣2 ] = ∣∣u∣2.
Proof: Define	ai	=	RiT u,	where	Ri	denotes the	ith	row of R.	Since each element Rij is an
independent sample from Gaussian distribution, each ai is essentially a weighted sum of these
independent random variables. Thus, each ai 〜N(0, Pm IluIl2) and independent from one another.
6
Under review as a conference paper at ICLR 2020
Our goal is to compute,	m E[kVk2]=XE[(aizi)2]	(102) i=1 m = XE[ai2]E[zi2]	(103) i=1 = mE[ai2]E[zi2]	(104) = mp(var(ai) + E[ai]2 )	(105) = kuk2	(106)
which proves the claim.
Lemma 5 Let V = (Ru) Θ Z, where U ∈ Rn, z ∈ Rm, and R ∈ Rm×n. If Rij '对 N(0, 0∙1m),
i.i.d.
Zi 〜 Bernoulli (0.5) and E ∈ [0,1), thenfor any fixed vector u,
Pr(IkVk2 - kuk2l ≤ ekuk2) ≥ 1 - 2eχp -mm G + log 1 + √1ψE
(107)
Proof: Defineai = RTu, where Ri denotes the ith rowof R. Then, each ai 〜N(0, 0∏1mIlulI2) and
Independentfrom one another Define a = Vɪjma. Then we have that each element ai 〜N (0,1).
Define V such that Vi = aiZi. Thus to bound the probability offailurefor the R.H.S.,
Pr (kvk2 ≥ (1 + e)kuk2) = Pr (lU^kV∣2 ≥ (1 + e)3∣2)
0.5m
=Pr (∣V∣2 ≥ 0.5m(1 + E))
Using Chernoff’s bound, we get for any λ > 0,
Pr(IlV∣∣2 ≥ 0.5m(1 + E)) = Pr (exp(λ∣V∣∣2) ≥ exp(λ0.5m(1 + E)))
≤	E[exp(λ∣V k2)]
一exp(0.5mλ(1 + E))
=E[exp(Pm=ι λVi2)]
exp(0.5mλ(1 + E))
=∏m=ιE[exp(λVi2)]
exp(0.5mλ(1 + E))
=(E[exp(λVi2)]「
[exp(0.5λ(1 + E)) J
(108)
(109)
(110)
(111)
(112)
(113)
(114)
Denote p(αi) and p(zi) as the probability distribution of the random variables α,i and zi respectively.
Then,
E[exp(λVi2)] = Xp(zi) / p(ai)exp(λαi2z2) Zli	Jai	(115)
i Substituting p(α) with a standard Normal distribution, we get,	
E[exp(λVi2)] = Xp(zi) Z √2= exp(λ(Ti2z2 — a2-) Zi	ai V	(116)
12 =XP(Zi)	√= exp(-ʒ^ (1 - 2λzi )) Zi	Ja 722	2	(117)
L ， 、f 1	P1 — 2λz2	, ai2,	2、、 =XP(Zi) Li √2π ∙ PT-W exp(-E(I- 2λzi))	(118)
=XP(Zi) ∙ p⅛	(119)
7
Under review as a conference paper at ICLR 2020
where the last equality holds because the integral of a Gaussian distribution over its domain is 1.
Finally, summing over the Bernoulli random variable Zi, we get,
E 怕xp(λVi2)] = (1 — 0.5) 十
1
√1 — 2λ
(120)
Hence, we get,
Pr(Ilv∣∣2 ≥ 0.5m(1 + E)) ≤ I 0.5 I 1 +
0.5
m
VZ(I - 2R
exp(—0.5λ(1 + E))
(121)
1
m
≤ 0.5 1+	/
∖	∖	，(I - 2λ)
exp(—0.5λ(1 + E))
(122)
Wefind that the above inequality is identical to that in Eq. (47). Thus λ ≈ 甘∣ approximately
minimizes the above bound as before. Substituting this value of λ above, we get,
e	______ E ∖ m
Pr(IlV∣∣2 ≥ 0.5m(1 + E)) ≤(0.5 (1 + √1 + E) exp( - -)J
(123)
Thus,
exp ( —m (E + log
2
1 + √1 + E
(124)
Pr(IlVk2 ≤ (1 + E)IlUk2) ≥ 1 — exp (—m (E + log
2
1 + √1 + E
(125)
Similarly, to prove the L.H.S. by bounding the probability of failure from the other side,
Pr(∣∣v∣∣2 ≤ (1一€)3|2) uPM-IMI2
=Pr 3
≥ 一(I-E)kuk2)
2
(126)
0.5m
Ilvll2 ≥—(1 —e)IlUll2
(127)
=Pr (—|闭|2 ≥ —0.5m(1 — e))
Using Chernof bound, we getfor any λ > 0,
Pr (—|冏|2 ≥ —0.5m(1 — e)) = Pr (exp(—λ∣∣V∣∣2) ≥ exp(—λ0.5m(1 — E)))
≤ E[exp(—λ∣∣V∣∣2)]
_ exp(—0.5mλ(1 — e))
=E[exp(— P乙 λv⅞2)]
exp(—0.5mλ(1 — e))
=∏m=IE[exp(一λv⅞2)]
exp(—0.5mλ(1 — e))
=(E[exp(—λVi2)] Am
\exp(—0.5λ(1 - e)))
(128)
(129)
(130)
(131)
(132)
(133)
Performing computations similar to those above to compute the expectation term, we get,
E[exp(-λVi2)] = 0.5 +
1
(134)
Hence, we get,
Pr (kv∣2 ≤ 0.5m(1 — E)) ≤ I 0.5 I 1 +
0.5
m
exp(0.5λ(1 — E))
(135)
m
≤	0.5 1+ J
~∖	∖	√(1 + 2λ)
exp(0.5λ(1 — E))
(136)
1
8
Under review as a conference paper at ICLR 2020
Similar to theR.H.S. case, we find that λ ≈ 05 approximately minimizes the failure probability,
Pr(Ilvk2 ≤ 0.5m(1 — E)) ≤ 仅.5(1 + √1 — E) exp(∣-))	(137)
=exp (mG- ιogτ+√⅛))	(i38)
It can be shown that,
呻(m (E - log τ+√2τ=^)) ≤eχp -m Q+log τ+√m))	(139)
Thus,
Pr(kvk2 ≥ (1 - E)kuk2) ≥ 1 - eχP (-m (E + log 1 + √T+E))	(140)
Using union bound, Eq. (125) and (140) hold together with probability,
Pr((1 - E)kuk2 ≤ Ilvk2 ≤ (1 + e)kuk2) ≥ 1 - 2eχp (-m (E + log 1 + √2τ+1)) (141)
This proves the claim.
Theorem 2 Let D be a fixed dataset with N samples and define a L layer ReLU network as shown in
Eq. 3 such that each weight matrix Wl ∈ Rn×n has its elements sampled as Wij	N(0, 2) and
biases bl are set to zeros. Then for any sample (x, y) ∈ D, E ∈ [0, 1), and for all l ∈ {1, 2, . . . , L}
with probability at least,
1	- 4NLeχP (-n G +logτ+√⅛))	(142)
the following hold true,
(1 -E)LkXk2 ∙ kδ(x, y)k2 ≤ k 阳∂W), y) k2 ≤ (1 + E)LkXk2 ∙ kδ(x, y)k2	(143)
and
(1-E)lkxk2 ≤ khlk2 ≤ (1 + E)lkxk2	(144)
Proof: From theorem 1, we know that the following holds for all l,
Pr((I-E)lkxk2 ≤ khlk2 ≤ (1 + E)lkxk2) ≥ 1 - 2NLexp Qn g + log 1 +	))
(145)
On the other hand, we have that,
d队f LX)1, y) = 1(aLT) ® (wLTδ(x, y))	(146)
From proposition 1, we know that each element of l(aL-1) follows a Bernoulli distribution with
probability 0.5. Thus applying lemma 5 to the above equation (under the assumption that δ(x, y)
and l(al) are statistically independent), the following holdsfor a fixed data sample (x, y),
Pr ((1 -E)kδ(x,y)k2 ≤ Ild'faLX)1,y) Il2 ≤ (1 +E)M(x,y)k2) ≥ 1 - 2eχp (-n (4 + log 1 + √1+E)
(147)
Applying union bound on N fixed samples, the following holds for all N samples,
Pr ((1 -E)kδ(x,y)k2 ≤ Ild'faLx)Iy) Il2 ≤ (1 +E)M(x,y)k2) ≥ 1 - 2Neχp (-n (4 + log 1 + √1+E
(148)
9
Under review as a conference paper at ICLR 2020
Similarly,
Pr ((1 . 珊 df⅛2 k2 ≤ k df⅛2 k2 ≤ (1 + e)k ðf^『
∂ a	Ua	Ua
〉1 — 2N exp I —n ( - + log--/	∣
—	卜 卜4 s1 + √1+^ h
(149)
Combining the the above two results and applying union bound, we get,
Pr ((I - e)2kδ(X,y)k2 ≤ IlU'(faL⅞y) Il2 ≤ (1 + -)2M(X,y)k2) ≥ 1 — 4Neχp (—n (- + log 1 + ʌ/ɪɪ-
(150)
Extending this to all L layers, we havefor all l that,
Pr ((1 — -)LTM(x, y)∣2 ≤ k * (X), y) ∣2 ≤ (1 + -尸 ∣δ(x, y)∣∣2) ≥ 1 — 2NL exp (—n (- + log 1 + √^
(151)
Combining the above result with Eq. (145) using union bound, we get for all l,
Pr ((1—-)LTM(x,y)k2∣∣x∣∣2 ≤∣ 阳(X), ,y『^1||2 ≤ (1 + -)LTM(x,y)k2∣∣x∣∣2
∖	u a
≥1—4nl exp Qn (-+iog1+√⅛))
(152)
Since,
I
∂0(fθ (x), y)
UWl
∣2 = k 四胃火 ∣2 2112 ∀l
Ua
(153)
we have proved the claim. □
Lemma 6 (Corollary 2.1 of Kakade & Shakhnarovich (2009)) Let uɪ, u2 ∈ Rn be any two fixed
vectors such that ∣∣uι ∣∣ ≤ 1 and ∣∣u21∣ ≤ 1, R ∈ Rm×n be a projection matrix where each element of
R is drawn i.i.d. from a Standard Gaussian distribution, Rij 〜 N(0, m) and any - ∈ (0,1 /2)
Pr (| < Ru1, Ru2 > — < u1, u2 > | ≤ -)
≥ 1 — 4exp (一ɪ (-2 — -3))	(154)
Lemma 7 Let vι = (Rui)ΘZ and v2 = (Ru2) ΘZ, where uι, u2 ∈ Rn, z ∈ Rm, and R ∈ Rm×n.
If Rij "打.N (0, o5m), Z「a.Bernoulli (0.5) and - ∈ [0,1), thenfor any fixed vectors ui and u2
s.t. ∣u1∣ ≤ 1 and ∣u2∣ ≤ 1,
Pr(| < vi, V2 > — < ui, u2 > | ≤ -) ≥ 1 — 4exp (—m (- + log 1 + jɪ-))	(155)
Proof: Applying lemma 5 to vectors ui + u2 and ui — u2, we have with probability at least
1 — 4eχp(-m	+ l0g i+√7WiJ),
(1 — -)	∙	∣ui + u2k2 ≤ ∣∣z Θ Rui	+ Z Θ Ru2k2 ≤ (1 + -)	∙	∣∣ui +	u2∣2	(156)
(1 — -)	∙	∣ui — u2∣∣2 ≤ ∣∣z Θ Rui	— z Θ Ru2∣∣2 ≤ (1 + -)	∙	∣∣ui —	u2∣∣2	(157)
Then notice,
4 < Vi, V2 > = 4 < Z Θ Rui, z Θ Ru2 >	(158)
=∣∣z	Θ	Rui + z	Θ Ru2∣∣2 — ∣z Θ Rui — Z	Θ Ru2∣∣2	(159)
≥	(1 —	-) ∙ ∣∣ui + u2∣∣2 — (1 + -) ∙ ∣∣ui —	u2Il2	(160)
=4∙	<	ui, u2 >	—2- ∙ (∣ui∣2 + ∣∣u2∣∣2)	(161)
≥	4∙ <	ui, u2 >	—4-	(162)
Equivalently,
∙ < ui, u2 > — < vi, v2 >≤ -	(163)
The other side of the claim can be proved similarly.
10