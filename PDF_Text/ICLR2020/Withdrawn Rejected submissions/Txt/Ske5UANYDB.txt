Under review as a conference paper at ICLR 2020
B enefit of Interpolation in Nearest Neighbor
Algorithms
Anonymous authors
Paper under double-blind review
Ab stract
The over-parameterized models attract much attention in the era of data science
and deep learning. Itis empirically observed that although these models, e.g. deep
neural networks, over-fit the training data, they can still achieve small testing er-
ror, and sometimes even outperform traditional algorithms which are designed to
avoid over-fitting. The major goal of this work is to sharply quantify the benefit
of data interpolation in the context of nearest neighbors (NN) algorithm. Specif-
ically, we consider a class of interpolated weighting schemes and then carefully
characterize their asymptotic performances. Our analysis reveals a U-shaped per-
formance curve with respect to the level of data interpolation, and proves that a
mild degree of data interpolation strictly improves the prediction accuracy and sta-
tistical stability over those of the (un-interpolated) optimal kNN algorithm. This
theoretically justifies (predicts) the existence of the second U-shaped curve in the
recently discovered double descent phenomenon. Note that our goal in this study
is not to promote the use of interpolated-NN method, but to obtain theoretical
insights on data interpolation inspired by the aforementioned phenomenon.
1	Introduction
Classical statistical learning theory believes that over-fitting deteriorates prediction performance:
when the model complexity is beyond necessity, the testing error must be huge. Therefore, various
techniques have been proposed in literature to avoid over-fitting, such as early stopping, dropout
and cross validation. However, recent experiments reveal that even with over-fitting, many learning
algorithms still achieve small generalization error. For instances, Wyner et al. (2017) explored the
over-fitting in AdaBoost and random forest algorithms; Belkin et al. (2019a) discovered a double
descent phenomenon in random forest and neural network: with growing model complexity, testing
performance firstly follows a (conventional) U-shaped curve, and as the level of overfitting increases,
a second descent or even a second U-shaped testing performance curve occurs.
To theoretically understand the effect of over-fitting or data interpolation, Du & Lee (2018); Du et al.
(2019; 2018); Arora et al. (2018; 2019); Xie et al. (2017) analyzed how to train neural networks un-
der over-parametrization, and why over-fitting does not jeopardize the testing performance; Belkin
et al. (2019c) constructed a Nadaraya-Watson kernel regression estimator which perfectly fits train-
ing data but is still minimax rate optimal; Belkin et al. (2018) and Xing et al. (2018) studied the rate
of convergence of interpolated nearest neighbor algorithm (interpolated-NN); Belkin et al. (2019b);
Bartlett et al. (2019) quantified the prediction MSE of the linear least squared estimator when the
data dimension is larger than sample size and the training loss attains zero. Similar analysis is also
conducted by Hastie et al. (2019) for two-layer neural network models with a fixed first layer.
In this work, we aim to provide theoretical reasons on whether, when and why the interpolated-NN
performs better than the optimal kNN, by some sharp analysis. The classical kNN algorithm for
either regression or classification is known to be rate-minimax under mild conditions (Chaudhuri &
Dasgupta (2014)), say k diverges propoerly. However, can such a simple and versatile algorithm
still benefit from intentional over-fitting? We first demonstrate some empirical evidence below.
Belkin et al. (2018) designed an interpolated weighting scheme as follows:
yb(x)
Pik=1 kx(i) - xk-γy(x(i))
Pk=Ikx(i) -xk-γ
(1)
1
Under review as a conference paper at ICLR 2020
Figure 1: Regression in Simulation (Left) and Classification in Real Data (Right), Comparison
between kNN and Interpolated-NN (with logarithm weight) in Xing et al. (2018).
where x(i) is the i-th closest neighbor to x with the corresponding label y(x(i)). The parameter
γ ≥ 0 controls the level of interpolation: with a larger γ > 0, the algorithm will put more weights
on the closer neighbors. In particular when γ = 0 or γ = ∞, interpolated-NN reduces to kNN or 1-
NN, respectively. Belkin et al. (2018) showed that such an interpolated estimator is rate minimax in
the regression setup, but suboptimal in the setting of binary classification. Later, Xing et al. (2018)
obtained the minimax rate of classification by adopting a slightly different interpolating kernel.
What is indeed more interesting is the preliminary numerical analysis (see Figure 1) conducted in the
aforementioned paper, which demonstrates that interpolated-NN is even better than the rate minimax
kNN in terms of MSE (regression) or mis-classification rate (classification). This observation asks
for deeper theoretical exploration beyond the rate of convergence. A reasonable doubt is that the
interpolated-NN may possess a smaller multiplicative constant for its rate of convergence, which
may be used to study the generalization ability within the “over-parametrized regime.”
In this study, we will theoretically compare the minimax optimal kNN and the interpolated-NN
(under (1)) in terms of their multiplicative constants. On the one hand, we show that under proper
smooth conditions, the multiplicative constant of interpolated-NN, as a function of interpolation
level γ, is U-shaped. As a consequence, interpolation indeed leads to more accurate and stable
performance when the interpolation level γ ∈ (0, γd) for some γd > 0 only depending on the data
dimension d. The amount of benefit (i.e., the “performance ratio” defined in Section 2) follows
exactly the same asymptotic pattern for both regression and classification tasks. In addition, the gain
from interpolation diminishes as the dimension d grows to infinity, i.e. high dimensional data benefit
less from data interpolation. We also want to point out that there still exist other “non-interpolating”
weighting schemes, such as OWNN, which can achieve an even better performance; see Section 3.4.
More subtle results are summarized in the figure below.
Figure 2: Testing Error with Model Complexity / Interpolation Level. The curve within over-fitting
regime is depicted based on the theoretical pattern of performance ratio given d = 2.
From Figure 2, we theoretically justify (predict) the existence of the U-shaped curve within the
“over-fitting regime” of the recently discovered double descent phenomenon by Belkin et al.
2
Under review as a conference paper at ICLR 2020
(2019a;b). As complementary to Belkin et al. (2018); Xing et al. (2018), we further show in ap-
pendix that interpolated-NN reaches optimal rate for both regression and classification under more
general (α, β)-smoothness conditions in Section F.
In the end, we want to emphasize that our goal here is not to promote the practical use of this
interpolation method given that kNN is more user-friendly. Rather, the interpolated-NN algorithm
is used to precisely describe the role of interpolation in generalization ability so that more solid
theoretical arguments can be made for the very interesting double descent phenomenon, especially
in the over-fitting regime.
2	Interpolation in Nearest Neighbors Algorithm
In this section, we review the interpolated-NN algorithm introduced by Belkin et al. (2018) in more
details. Given x, we define Rk+1 (x) to be the distance between x and its (k+ 1)th nearest neighbor.
W.O.L.G, we let X1 to Xk denote the (unsorted) k nearest neighbors of x, and let {Ri (x)}ik=1 to
be distances between x and Xi . Thus, based on the same argument used in Chaudhuri & Dasgupta
(2014) and Belkin et al. (2018), conditional on Rk+1 (x), X1 to Xk are iid variables whose support
is a ball centered at x with radius Rk+1(x), and as a consequence, R1(x) to Rk(x) are conditionally
independent given Rk+1 (x) as well. Note that when no confusion is caused, we will write Ri (x) as
Ri . Thus, the weights of the k neighbors are defined as
W=	R-	=	IRJRkQ-
i	Pk=I R-	Pk=I(Rj/Rk+ι尸,
for i = 1, . . . , k and some γ ≥ 0.
For regression models, denote η(x) as the target function, and Y (x)= η(x) + (x) where (x) is
an independent zero-mean noise with E(x)2 := σ2(x). The regression estimator at x is thus
k
ηbk,n,γ(x)= XWiYi.
i=1
For binary classification, denote η(x)= P(Y = 1|X = x), with g(x)= 1{η(x) > 1/2} as the
Bayes estimator. The interpolated-NN classifier is defined as
gb	(x)= (1	Pik=1 WiYi > 1/2
gk,n,γ	0	Pik=1WiYi ≤ 1/2	.
As discussed previously, the parameter γ controls the level of interpolation: a larger value of γ leads
to a higher degree of data interpolation.
We adopt the conventional measures to evaluate the theoretical performance of interpolated-NN
given a new test data (X, Y ):
Regression: MSE(k, n, γ)= E((ηbk,n,γ(X)- η(X))2).
Classification: Regret(k,n,γ)= P (gbk,n,γ(X)6= Y)- P (g(X)6= Y).
3 Quantification of Interpolation Effect
3.1	Model Assumptions
Recent works by Belkin et al. (2018) and Xing et al. (2018) confirm the rate optimality of MSE and
regret for interpolated-NN under mild interpolation conditions. Two deeper questions (hinted by
Figure 1) we would like to address are whether and how interpolation strictly benefits NN algorithm,
and whether interpolation affects regression and classification in the same manner.
To facilitate our theoretical investigation, we impose the following assumptions:
A.1 X is a d-dimensional random variable on a compact set X with boundary ∂X .
3
Under review as a conference paper at ICLR 2020
A.2 For classification, S = {x∣η(x) = 1/2} is non-empty.
A.3 d - 3γ ≥ C > 0 for some constant C.
A.4 For classification, η is continuous in some open set containing X. The third-order derivative
of η is bounded when η(χ) = 1/2 ± c° fora small constant c0 > 0. The gradient rj(x) = 0
when r (x) = 1/2, and with restriction on x ∈ ∂X, ∂r(x) 6= 0 if r(x) = 1/2 and x ∈ ∂X.
A.5 For classification, density of X, denoted as f, is twice differentiable and finite.
A.6 For regression, the third-order derivative of r is bounded for all x.
A.7 For regression, sup σ2 (x) is finite and σ2 (x) has finite first-order derivative in x.
x∈X
The above assumptions (except A.3) are mostly derived from the framework established by Sam-
worth et al. (2012). Note that the additional smoothness required in r and f is needed to facilitate
the asymptotic study of interpolation weighting scheme. We also want to point out that these as-
sumptions are generally stronger than those used in Chaudhuri & Dasgupta (2014), but necessary to
figure out the multiplicative constant. Further discussions regarding the conditions can be found in
Remark 3 in appendix.
3.2	Main Theorem
The following theorem examines the asymptotic performance ratios of MSE and Regret between
interpolated-NN and kNN and discovers that these ratios (under their respective optimal choice of
k) converges to a function of (d, γ) only. In particular, a U-shaped curve is revealed where the ratio
is smaller than 1 when γ ∈ (0, γd) for some γd < d/3. Define the minimum MSE and Regret over
k ∈ (nβ, n1-4e/d) as follows:
MSE(γ, n) = min	MSE(k, n, γ)
k∈(nβ ,n1-4β∕d)
and Regret(γ, n) = min	Regret(k, n, γ).
k∈(nβ ,n1-4e/d)
Theorem 1 asymptotically compares the interpolated-NN and kNN, i.e., γ = 0, in terms of the above
measures. Interestingly, it turns out that the performance ratio, defined as
PR(d, γ) :
C	4	C	C	d
γ2	) d+4 ( (d — Y)2	(d +2)2) d+4
+ d(d — 2γ))	((d + 2 — γ)2 d2	)
is a function of d and γ only, independent of the underlying data distribution. Note that PR(d, γ) is
just the ratio of multiplicative constants before the minimax rate of interpolated-NN and kNN.
Theorem 1 For regression, suppose that assumptions A.1, A.3, A.6, and A.7 hold. For classification,
under A.1 to A.5, for any γ ∈ [0, d/3),
MSE (n,γ)
MSE(n, 0)
→PR(d,γ),
and
Regret(n, γ )
Regret(n, 0)
→ PR(d, γ),
as n → ∞.
Note that MSE(n, 0)/Regret(n, 0) is the optimum MSE/Regret for kNN.
The proof Theorem 1 are postponed to appendix (Section D).
When k can be chosen adaptively based on γ, we can address the second question that interpolation
affects regression and classification in exactly the same manner through PR(d, γ). In particular,
this ratio exhibits an interesting U-shape of γ for any fixed d. Specifically, as γ increases from
0, PR(d, γ) first decreases from 1 and then increases above 1; see Figures 2 and 3. Therefore,
within the range (0, γd) for some γd only depending on dimension d, PR(d, γ) < 1, that is, the
interpolated-NN is strictly better than the kNN. Given the imposed condition that γ < d/3, Some
further calculations reveal that γd < d/3 when d ≤ 3; γd = d/3 when d ≥ 4.
Remark 1 It is easy to Show that limd→∞[minγ<d∕3 PR(d,γ)] = L This indicates that high di-
mensional model benefits less from interpolation, or said differently, high dimensional model is less
affected by data interpolation. This phenomenon can be explained by the fact that, as d increases,
Ri/Rk+1 → 1 due to high dimensional geometry.
4
Under review as a conference paper at ICLR 2020
Remark 2 The optimum k, which leads to the best MSE/regret, depends on the interpolation level
4
γ. Thus, we denote it as kγ. As shown in the appendix, kγ N ko(:= kγ=o) N nd+4, but
kγ/ko > 1 for γ > 0, i.e., interpolated-NNneedS to employ slightly more neighbors to achieve
the best performance. Empirical support for this finding can be found in Section A of appendix.
4
If we insist using the same k N n d+4 for interPOlated-NN and kNN, we can still verify that
MSE(k,n,γ)/MSE(k, n, 0) < 1 and Regret(k, n, γ)/Regret(k, n, 0) < 1, when Y < Yx for some
γx depending on the distribution of X and η.
3.3 Statistical Stability
In this section, we will explore how the interpolation affects the statistical stability of nearest neigh-
bor classification algorithms. This is beyond the generalization results obtained in Section 3.2. In
short, if we choose the best k in kNN and apply it to the interpolated-NN, then kNN will be more
stable; otherwise, the interpolated-NN will be more stable for Y ∈ (0, Yd) if the k is allowed to be
chosen separately and optimally based on Y .
For a stable classification method, itis expected that with high probability, the classifier can yield the
same prediction when being trained by different data sets sampled from the same population. As a
result, Sun et al. (2016) introduced a type of statistical stability, classification instability (CIS), which
is different from the algorithmic stability in the literature (Bousquet & Elisseeff, 2002). Denote D1
and D2 as two i.i.d. training sets with the same sample size n. The CIS is defined as:
CISk,n(Y) = PD1,D2,X (gbk,n,γ(x,D1) 6= gbk,n,γ(x,D2)) .
Hence, a larger value of CIS indicates that the classifier is less statistically stable. In practice, we
need to take into account of mis-classification rate and classification instability at the same time.
Therefore, we are interested in comparing the stability between interpolated-NN and k-NN only
when the regrets of both algorithms reach their optimal performance under respective optimal k
choices.
Theorem 2 below illustrates how CIS is affected by interpolation through k, n and Y .
Theorem 2 Under the conditions in Theorem 1, the CIS of interpolated-NN is derived as
CISk,n(Y)
Bi 1
√π √k	k,n,γ
(X) + o.
The proof of Theorem 2 is postponed to Section E in appendix.
Similarly, Corollary 3 asymptotically compares CIS between interpolated-NN and kNN.
Corollary 3 Following the conditions in Theorem 2, when the same k value is used for kNN and
interpolated-NN, then as n → ∞,
ClSk,n(Y) > 1
CIS k,n(0).
On the other hand, ifwe choose optimum k’s for kNN and interpolated-NN respectively, i.e. kγ =
arg mink Regret(k, n, Y), when n → ∞, we have
(ClS kγ,n(Y )∖ 2 一 p*、
RW) → pr(d,γ).
Therefore, when Y ∈ (0, Yd), interpolated-NN with optimal k has higher accuracy and stability than
k-NN at the same time.
From Corollary 3, the interpolated-NN is not as stable as kNN if the same number of neighbors
is used in both algorithms. However, this is not the case if an optimal k is chosen separately. An
intuitive explanation is that, under the same k, kNN has a smaller variance (more stable) given equal
weights for all k neighbors; on the other hand, by choosing an optimum k, the interpolated-NN can
achieve a much smaller bias, which offsets its performance lost in variance through enlarging k.
5
Under review as a conference paper at ICLR 2020
3.4 Connection with OWNN and Double Descent Phenomenon
Samworth et al. (2012) firstly worked out a general form of regret using a rank-based weighting
scheme, and proposed the optimally weighted nearest neighbors algorithm (OWNN). The OWNN
is the best nearest neighbors algorithm in terms of minimizing MSE for regression (and Regret for
classification), when the weights of neighbors are only rank-based.
Combining Theorem 1 with Samworth et al. (2012), we can further compare the interpolated-NN
against OWNN as follows:
2d+4	4	d
R(n, OWNN)	4 (d +2) E /	Y	[ d+4 ( (d - Y)	(d +2)21 d+4
R(n,γ)	T Id +4y V + d(d - 2γ))	[(d + 2 - Y)2 d2	)	，
which is always smaller than 1 (just by definition). Here R(n, OWNN) denotes the MSE/Regret
of OWNN given its optimum k, and R(n, Y) denotes the one of interpolated-NN given its own
optimum k choice. It is interesting to note from the above ratio that that the advantage of OWNN
is only reflected at the level of multiplicative constant, and further that the ratio converges to 1 as d
diverges (just as the case of PR(d, Y); see Remark 1). Thus, under ultra high dimensional setting,
the performance differences among kNN, interpolated-NN and OWNN are almost negligible even
at the multiplicative constant level.
We first describe the framework of the recently discovered double descent phenomenon (e.g., Belkin
et al., 2019a;b), and then comment our contributions (summarized in Figure 2) to it in the context
of nearest neighbor algorithm. Specifically, within the “classical regime” where exact data interpo-
lation is impossible, the testing performance curve is the usual U-shape w.r.t. model complexity;
once the model complexity is beyond a critical point it thus enters the “over-fitting regime,” the test-
ing performance will start to decrease again as severeness of data interpolation increases, which is
so-call “double descend”.
In the context of nearest neighbors algorithms, different weighting schemes may be viewed as a
surrogate of modeling complexity. For OWNN, though it allocates more weights on closer neigh-
bors, while none of the weights exceeds (1 + d/2)/k. Thus, OWNN is never an interpolation
weighting scheme. From this aspect, k-NN and OWNN both belong to the “classical regime,” while
interpolated-NN is within the “over-fitting regime.” In particular, the testing performance of OWNN
reaches the minimum point of the U-shaped curve inside the “classical regime.” Deviation from this
optimal choice of weight leads to the increase of the MSE/Regret within this “classical regime.”
After the “over-fitting regime” is reached by the interpolated-NN, say from Y = 0 in Figure 2, the
MSE/Regret decreases as the interpolation level Y increases within the range (0,Yd) and ascends
again when Y > Yd (if the dimension allows Yd < d/3), forming the second U-shaped curve in
Figure 2. Therefore, we obtain an overall W-shaped performance curve with theoretical guarantee,
which coincides the empirical finding of Belkin et al. (2019b) for over-parametrized linear models.
4	Numerical Experiments
In this section, we will present several simulation studies to justify our theoretical discoveries for
regression, classification and stability performances of the interpolated-NN algorithm, together with
some real data analysis.
4.1	Simulations
We aim to estimate the performance ratio curve by data simulation and compare it with the theo-
retical curve PR(d, Y). The second simulation setting in Samworth et al. (2012) is adopted here.
Specifically, the joint distribution of (X = (X(i))id=1,Y) followsP(Y = 1) = P(Y = 0) = 1/2,
f(X∣Y = 0) = Qi[ 1 φ(X⑺;0,1) + 1 φ(X⑴;3, 2)] and f(X∣Y = 1) = Q/1 φ(X⑴；1.5,1) +
2φ(X(i);4.5, 2)], where φ(∙;μ, σ2) denotes the density of N(μ, σ2). The sample size n = 210 and
dimension d = 2, 5. The interpolated-NN regressor and classifier were implemented under different
choices of Y/d = 0, 0.05, 0.1, . . . , 0.35 and k = 1, . . . , n. For regression, the MSE was estimated
based on 100 repetitions, and for classification, the Regret was based on 500 repetitions.
When n = 1024, the Regret/MSE ratio for different Y/d is shown in Figure 3. Here Regret ratio
is defined by Regret(n, Y)/Regret(n, 0), the MSE ratio is defined by MSE(n, Y)/MSE(n, 0). The
6
Under review as a conference paper at ICLR 2020
trends for theoretical value and simulation value are mostly close. The small difference is mostly
caused by the small order terms in the asymptotic result and shall vanish if larger n is used. Note
that γ/d = 0.35 is outside our theoretical range γ∕d < 1/3, but the performance is still reasonable
in our numerical experiment.
Figure 3: Performance ratio curve for n = 1024 and d = 2 (left) and5 (right), solid line is theoretical
value PR(d, γ), dashed line is simulation results for Regret ratio, dashed line with dots is simulation
results for MSE ratio.
We further estimate CIS by training two classifiers based on two different simulated data sets of
1024 samples. The CIS was estimated by calculating the proportion of testing samples that have
different prediction labels, that is
1n
d(γ) = -∑ i(b(χi, Di) = b(χi, D)).
n i=1
The CIS result is shown in Figure 4. One can see that when γ is small, the simulated CIS ratio
Figure 4: Comparison between theoretical CIS ratio ,PR(d, Y) (solid line) and simulated CIS ratio
(dashed line), under d = 2 (left) and 5 (right).
decreases in a similar manner as the asymptotic value, while simulated value will increase when γ
gets larger. This pattern is the same as the theoretical result predicted in Theorem 2.
An additional experiment is postponed to appendix, which shows how the MSE and optimum k
changes in γ and n where n = 2i for i = 6, . . . , 10.
4.2	Real Data Analysis
In real data experiment, we compare the classification accuracy of interpolated-NN with kNN.
Five data sets were considered in this experiment. The data set HTRU2 from Lyon et al. (2016)
uses 17,897 samples with 8 continuous attributes to classify pulsar candidates. The data set Abalone
contains 4,176 samples with 7 attributes. Following Wang et al. (2018), we predict whether the
number of rings is greater than 10. The data set Credit (Yeh & Lien, 2009) has 30,000 samples with
23 attributes, and predicts whether the payment will be default in the next month given the current
7
Under review as a conference paper at ICLR 2020
Data	d	Error (γ = 0)	Error (best γ∕d)	best γ∕d
Abalone	~^Γ~	-0.22239-	0.22007	-0.3-
HTRU2	^^8-	-0.02315-	0.0226	-0.2-
Credit	^^3-	G?T933	0.19287	-0:05-
Digit	~~6Γ~	-0.01745-	0.01543	-0:25-
MNIST	^784^	0.04966 —	0.04656	0.05
Table 1: Prediction Error of kNN, interpolated-NN under the best choice of γ, together with the
value of the best γ for interpolated-NN.
payment information. The built-in data set of digits in sklearn (Pedregosa et al., 2011) contains
1,797 samples of 8×8 images. For images in MNIST are 26 × 26, we will use part of it in our
experiment. Both the data set of digit and MNIST have ten classes. Here for binary classification
we group 0 to 4 as the first class and 5 to 9 as the second class.
For each data set, a proportion of data is used for training and the rest is reserved to test the accuracy
of the trained classifiers. For Abalone, HTRU2, Credit and Digit, we use 25% data as training data
and 75% as testing data. For MNIST, we use randomly choosen 2000 samples as training data and
1000 as testing data, which is sufficient for our comparison. The above experiment is repeated for
50 times and the average testing error rate is summarized in Table 1. For all data sets, the testing
error of interpolated-NN (column “best γ∕d'') is always smaller than the kNN(column ''γ = 0"),
which verifies that nearest neighbor algorithm actually benefits from interpolation.
5	Conclusion
Our work precisely quantifies how data interpolation affects the performance of nearest neighbor
algorithms beyond the rate of convergence. We find that for both regression and classification prob-
lems, the asymptotic performance ratios between interpolated-NN and kNN converge to the same
value, which depends on d and γ only. More importantly, when the interpolation level γ∕d is within
a reasonable range, the interpolated-NN is strictly better than kNN as it has a smaller multiplicative
constant of the convergence rate, and it has a more stable prediction performance as well.
Classical learning framework opposes data interpolation as it believes that over-fitting means fitting
the random noise rather than the model structures. However, in the interpolated-NN, the weight
degenerating occurs only on a nearly-zero-measure set, and thus there is only “local over-fitting”,
which may not hurt the overall rate of convergence. Technically, through balancing the variance
and bias, data interpolation can possibly improve the overall performance. And our work essentially
quantify such a bias-variance balance in a very precise way. It is of great interest to investigate
how our theoretical insights can be carried over to the real deep neural networks, leading to a more
complete picture of double descent phenomenon.
References
Sanjeev Arora, Nadav Cohen, and Elad Hazan. On the optimization of deep networks: Implicit ac-
celeration by overparameterization. In Proceedings of the 35th International Conference on Ma-
chine Learning, volume 80 of Proceedings of Machine Learning Research, pp. 244-253. PMLR,
10-15Jul 2018.
Sanjeev Arora, Simon S Du, Wei Hu, Zhiyuan Li, and Ruosong Wang. Fine-grained analysis of
optimization and generalization for overparameterized two-layer neural networks. In Proceedings
ofthe 36th International Conference on Machine Learning, volume 97 of Proceedings of Machine
Learning Research, pp. 322-332. PMLR, 2019.
Peter L Bartlett, Philip M Long, Gabor Lugosi, and Alexander Tsigler. Benign Ovefitting in linear
regression. arXiv preprint arXiv:1906.11300, 2019.
Mikhail Belkin, Daniel Hsu, and Partha Mitra. Overfitting or perfect fitting? risk bounds for clas-
sification and regression rules that interpolate. In Advances in Neural Information Processing
Systems 31, pp. 2300-2311. 2018.
8
Under review as a conference paper at ICLR 2020
Mikhail Belkin, Daniel Hsu, Siyuan Ma, and Soumik Mandal. Reconciling modern machine learn-
ing and the bias-variance trade-off. Proceedings of the National Academy of Sciences, 116(32):
15849-15854, 2019a. ISSN 0027-8424. doi:10.1073/pnas.1903070116.
Mikhail Belkin, Daniel Hsu, and Ji Xu. Two models of double descent for weak features. arXiv
preprint arXiv:1903.07571, 2019b.
Mikhail Belkin, Alexander Rakhlin, and Alexandre B Tsybakov. Does data interpolation contradict
statistical optimality? In Proceedings of Machine Learning Research, volume 89 of Proceedings
of Machine Learning Research, pp. 1611-1619. PMLR, 16-18 Apr 2019c.
Olivier BoUsqUet and Andre Elisseeff. Stability and generalization. Journal of machine learning
research, 2(Mar):499-526, 2002.
Timothy I Cannings, Thomas B Berrett, and Richard J Samworth. Local nearest neighboUr classifi-
cation with applications to semi-sUpervised learning. arXiv preprint arXiv:1704.00642, 2017.
Kamalika ChaUdhUri and Sanjoy DasgUpta. Rates of convergence for nearest neighbor classification.
In Advances in Neural Information Processing Systems, pp. 3437-3445, 2014.
Simon S DU and Jason D Lee. On the power of over-parametrization in neUral networks with
qUadratic activation. In Proceedings of the 35th International Conference on Machine Learning,
volUme 80 of Proceedings of Machine Learning Research, pp. 1329-1338. PMLR, 10-15 JUl
2018.
Simon S DU, XiyU Zhai, Barnabas Poczos, and Aarti Singh. Gradient descent provably optimizes
over-parameterized neUral networks. arXiv preprint arXiv:1810.02054, 2018.
Simon S DU, Jason D Lee, HaochUan Li, Liwei Wang, and XiyU Zhai. Gradient descent finds
global minima of deep neUral networks. In Proceedings of the 36th International Conference on
Machine Learning, volUme 97 of Proceedings of Machine Learning Research, pp. 1675-1685.
PMLR, 09-15 JUn 2019.
Trevor Hastie, Andrea Montanari, Saharon Rosset, and Ryan J Tibshirani. SUrprises in high-
dimensional ridgeless least sqUares interpolation. arXiv preprint arXiv:1903.08560, 2019.
Robert J Lyon, BW Stappers, S Cooper, JM Brooke, and JD Knowles. Fifty years of pUlsar candidate
selection: from simple filters to a new principled real-time classification approach. Monthly
Notices of the Royal Astronomical Society, 459(1):1104-1123, 2016.
F. Pedregosa, G. VaroqUaUx, A. Gramfort, V. Michel, B. Thirion, O. Grisel, M. Blondel, P. Pretten-
hofer, R. Weiss, V. DUboUrg, J. Vanderplas, A. Passos, D. CoUrnapeaU, M. BrUcher, M. Perrot, and
E. DUchesnay. Scikit-learn: Machine learning in Python. Journal of Machine Learning Research,
12:2825-2830, 2011.
Richard J Samworth et al. Optimal weighted nearest neighboUr classifiers. The Annals of Statistics,
40(5):2733-2763, 2012.
Will Wei SUn, Xingye Qiao, and GUang Cheng. Stabilized nearest neighbor classifier and its statis-
tical properties. Journal of the American Statistical Association, 111(515):1254-1265, 2016.
Yizhen Wang, Somesh Jha, and Kamalika ChaUdhUri. Analyzing the robUstness of nearest neighbors
to adversarial examples. In Proceedings of the 35th International Conference on Machine Learn-
ing, volUme 80 of Proceedings of Machine Learning Research, pp. 5133-5142. PMLR, 10-15 JUl
2018.
Abraham J Wyner, Matthew Olson, JUstin Bleich, and David Mease. Explaining the sUccess of ad-
aboost and random forests as interpolating classifiers. The Journal of Machine Learning Research,
18(1):1558-1590, 2017.
Bo Xie, YingyU Liang, and Le Song. Diverse neUral network learns trUe target fUnctions. In Pro-
ceedings of the 20th International Conference on Artificial Intelligence and Statistics, volUme 54
of Proceedings of Machine Learning Research, pp. 1216-1224. PMLR, 20-22 Apr 2017.
9
Under review as a conference paper at ICLR 2020
Yue Xing, Qifan Song, and Guang Cheng. Statistical optimality of interpolated nearest neighbor
algorithms. arXiv preprint arXiv:1810.02814, 2018.
I-Cheng Yeh and Che-hui Lien. The comparisons of data mining techniques for the predictive
accuracy of probability of default of credit card clients. Expert Systems with Applications, 36(2):
2473-2480, 2009.
10
Under review as a conference paper at ICLR 2020
The appendix is organized as follows. In section A, we demonstrate additional simulation study
which empirically shows that the performances of interpolated-NN and k-NN converge under the
same rate, and interpolated-NN generally requires larger number of neighbors than k-NN. Section B-
E provide the proofs for the main theorems in the manuscript. Section C is for a preliminary theorem
of Theorem 1, Section D provides the proof of Theorem 1, Section E is the proof of Theorem 2.
In Section F, we delivers a complementary result for rate optimality of interpolated-NN in classifi-
cation. Originally Belkin et al. (2018) obtains the optimal MSE rate for regression task, but only a
sub-optimal rate of classification regret. We adopt some techniques introduced by Samworth et al.
(2012), and rigorously show that, under (α, β)-smooth condition (which is more general than the
smooth condition imposed in our main theorems), interpolated-NN achieves optimal convergence
rate for classification as well.
A Additional Numerical Experiment
In this experiment, instead of taking n = 210 only, we take n = 2i for i = 6, . . . , 10 to see how the
performance ratio and optimum k changes in γ for different n’s. The phenomenon for classification
is similar as regression so we only present regression. Figure 5 summarizes the change of MSE
and optimum choice of k with respect to different choices of n and γ∕d, when d = 2. The plot
corresponding to d = 5 is quite similar hence omitted here. This plot shows that with respect to the
increase of n, interpolated-NN converges in the same rate as kNN, and interpolated-NN generally
requires larger k than k-NN.
Figure 5: Change of MSE and optimal k
B Preliminary Proposition
This section provides an useful result when integrating c.d.f:
Proposition 4 From Lemma S.1 in Sun et al. (2016), we have for any distribution function G,
b{a + / tdG(t)},
[G(-bu - a) - 1{u<0}]du
R
u[G(-bu - a) - 1{u<0}]du
R
—
b2 { -2—+ 2 Z t2dG(t) + a Z tdG(t)}.
C Proof of a Preliminary Theorem for Theorem 1
Define P1 and P2 (density as f1, f2) as the conditional distributions of X given Y = 0, 1
respectively, and π1, π2 are the marginal probability P (Y = 0) and P (Y = 1), then take
P = ∏1P2 + ∏2P2, P = ∏1P1 - ∏2P2, f (x) = ∏1f1(x) + ∏2f2(x), and also denote Ψ(χ)=
π1f1(x) - π2f2(x).
11
Under review as a conference paper at ICLR 2020
Theorem 5 For regression, suppose that assumptions A.1, A.3, A.6, and A.7 hold. If k satisfies
nβ ≤ k ≤ n1-4e/d for Some β > 0λ we have 1
MSE(k, n, γ) = kE
——σ2(X)
(Pi=I(Ri/Rk+ι)-)2
+k2E a2(X)E2
R2 (R1∕Rk+1)-γ
Pk=I(Ri/Rk+ι)-γ
X + o.
For classification, under A.1 to A.5, the excess risk w.r.t. γ becomes
Regretlk n, Y) = 4kB1Esk,n,7(X) + L
f(x0)
kη(XO)k
a2 (XO)t2k,n,γ (XO)dVold-1(XO) + o,
where
B1
f(x0)
kη(XO)k
dVold-1(x0),
s2k,n,γ(X)
tk,n,γ (x)
E(R1∕Rk+1)-2γ
E2(R1∕Rk+1)-γ,
ER2(Rι∕Ri+ι)-γ
E(R1∕Rk+1)-γ
a(X)
f (X)d
X[ηj(X)fj(X)+ j(X)f (X)/2] ∖.
j=1	
C.1 Regression
Rewrite the interpolated-NN estimate at X given the distance to the k + 1th neighbor Rk+1, interpo-
lation level γ as
k
Sk,n,γ (X, Rk+1) =	WiYi,
i=1
where the weighting scheme is defined as
(Ri∕Ri+ι)-γ
Pk=I(Ri∕Ri+ι)-γ
For regression, we decompose MSE into bias square and variance, where
S
1
E[(Si,n,γ(X,Ri+ι) - η(X))2∣X]
E	Wi(η(Xi) - η(X))	+E
i=1
k
XWi(Yi - η(Xi))
i=1
2
in which the bias square can be rewritten as
k2
E X	Wi(η(Xi)	-	η(X))	=	kE(W1(η(X1)	-	η(X)))2 +	(k2	-	k)E2(W1(η(X1) -	η(X))),
i=1
and the variance can be approximated as
k
X Wi(Yi - η(Xi))
i=1
E
2
= kEW12σ(X1)2 = kσ(X)2EW12 +o.
Following a procedure similar as Step 1 for classification, i.e., use Taylor expansion to approximate
the bias square, we obtain that for some function a, the bias becomes
EW1(η(X1) - η(X)) = a(X)EW12R12 +o.
As a result, the MSE of interpolated-NN estimate given X becomes,
E[(Sk,n,γ (X, Rk+1) - η(X))2 |X] = kσ(X)2EW12 + k2a(X)2E2W12R12 +o.
Finally we integrate MSE over the whole support.
1The notation “A + o” is understood as A + o = A(1 + o(1)).
12
Under review as a conference paper at ICLR 2020
C.2 Classification
The main structure of the proof follows Samworth et al. (2012). As the whole proof is long, we
provide a brief summary in Section C.2.1 to describe things we will do in each step, then in Section
C.2.2 we will present the details in each step.
C.2.1 B rief Summary
Step 1: denote i.i.d random variables Zi(x, Rk+1) for i = 1, . . . , k where
Zi(x, Rk+1)
(Ri I Rk+ )-γ(Y(Xi)- 1/2)
E(Ri(X)/Rk+ι(x))γ
then the probability of classifying as 0 becomes
P (Sk,n,γ (x) < 1/2) = P	X Zi(x, Rk+1) < 0
The mean and variance of Zi(x, Rk+1) can be obtained through Taylor expansion of η and density
function of x:
E(Z1(x, Rk+1))
V ar(Z1 (x, Rk+1))
η(x) + a(x)
ER2(Rι∕Rk+ι)-γ
E(R1∕Rk+1)-Y
+o
1 E(R1/Rk+1)-2γ
--------：---：--+ o.
4 E2(Rι∕Rk+ι)-Y +
for some function a. The smoothness conditions are assumed in A.4 and A.5.
Note that on the denominator of Zi, there is an expectation E(Ri(X)/Rk+ι(χ))γ. From later Cal-
culation in Corollary 1, the value of this expectation in fact has little changes given or without a
condition of Rk+1, and it is little affected by X either.
Step 2: One can rewrite Regret as
£ (P (XX WiYi ≤ 1) - ")<1∕2J dP(x).
From Assumption A.2, A.4, the region where ηb is likely to make a wrong prediction is near
{χ∣η(χ) = 1/2}, thus We use tube theory to transform the integral of Regret over the d-dimensional
space into a tube, i.e.,
ZSd (P (XX WiYi ≤ 1) - i{η(χ) < 1/2}) dP(x)
{1 +。⑴} ∣s / tkΨ(xo)k (P(Sk,n(x0) < 1/2) - 1{t<0}) dtdVold-1(xo) + o.
The term Will be defined in detail in appendix. Basically, When is Within a suitable range, the
integral over t Will not depend on asymptotically.
Step 3: given Rk+1 and X, the nearest k neighbors are i.i.d. random variables distributed in
B(X, Rk+1), thus We use non-uniform Berry-Esseen Theorem to get the Gaussian approximation
of the probability of Wrong prediction:
Js / tkΨ(xo)k (P(Sk,n(x0) < 1/2) - 1{t<0}) dtdVold-1(xo)
(∕]kΨ(x0)kERk+1
Φ ( ∕-kEZ1 (X0,Rk+l)	) - 1{t<0} ) dtdVold-1(xo) + o.
IpkVar(Zι(x0,Rk+ι))J	{t<0}	0 °)
13
Under review as a conference paper at ICLR 2020
Step 4: take expectation over all Rk+1, and integral the Gaussian probability over the tube to obtain
(∕]kΨ(x0)kERk+ι
-kEZι(x0,Rk+ι)
pkVαr(Z1(x0ΓRk+1))
- 1{t<0} dtdVold-1(x0)
, . 一
W(XO)k
t∣∣η(x0)∣∣ - E(R1∕Rk+1)-γa(χ0)R2
qsk.n,γ/k	qsk,n.γ/k
- 1{t<0} dtdVold-1(x0) + o
B1 E(R1∕Rk+1)-2γ
4k E2(R1∕Rk+1)-Y
+S
*
kΦ(x0)k
kη(x0)k2
a2(x0)
E2(R1∕Rk+1)-γ R2
E2(R1∕Rk+1)-γ
dVold-1(x0) +o
1	r u(⅛∕…一
4kB1Esk,n,γ + JS ∣∣η(xo )∣∣2 a (x0)tk,n,Y dVθ1 J (X0)+ o∙
C.2.2 Details
Denote ad is the Euclidean ball volume parameter
ad = Vol(B(0,1)) = (π∕2)d∕2∕Γ(d∕2 + 1).
Define p = k∕n and r2p = supER2k(X). Denote E be the set that there exists Ri such that
x
Ri > r2p, then for some constant c > 0,
c
r2p =	1/d 1/d
ad c0
Hence from Claim A.5 in Belkin et al. (2018), there exist c1 and c2 satisfying
P(E) ≤ c1k exp(-c2k).
Step 1: in this step, we figure out the i.i.d. random variable in our problem, and calculate its mean
and variance given X.
Denote
Zi(X, Rk+1)
<Ri∕Rk+∖ )-γ(Y(Xi)- 1∕2)
E(Ri∕Rk+ι)γ
(2)
then the dominant part we want to integrate becomes
P 卜k,n(x,Rk+l) ≤ 2)
P Xk (Ri∕Rk+1)-γ(Y (Xi) - 1∕2) < 0Rk+1
Pi=1 Zi (X, Rk+1 ) - kEZ1 (X, Rk+1 )	-kEZ1 (X, Rk+1 )
P I	/	<	/	JRk+1
∖	VZkVar(Z1(x,Rk+1))	VZkVar(Z1(x,Rk+1))
Therefore, one can adopt non-uniform Berry-Essen Theorem to approximate the probability using
normal distribution. Unlike Samworth et al. (2012) in which EY(Xi) is calculated, since the i.i.d.
item in non-uniform Berry-Essen Theorem is Z rather than Y, we now calculate mean and variance
of Z. Under Rk+1,
μk,n,γ(χ, Rk+ι) ：= EZι(χ, Rk+ι)
E(Rι∕Rk+ι)-γ(Y(Xι)-1∕2)
E(R1∕Rk+1)-γ
E(R1∕Rk+1)-γ(η(X1) - 1∕2)
E(R1∕Rk+1)-γ	,
14
Sl
ɪməj jəpjo ɪɪŋms B Ajuo st ¾ J0 OnIBA əgi Aq pəsnŋɔ əɔuəjəjjɪp Qqi
J 忆 ∕3)∕3)“4 + (H)W(H)叼 R 1%"；(*” = (≈>
Suτ5[Bj qSnojqj pəgsHBS əg uŋɔ qoτqM
'。+((取底(8—，X)(8—，X)) ®(M)¢” + (¾I(IX)也(8—[x))回 = 阻(8加
JBqj qons x joj (x)υ uoτpunj Sup[Bj gqjj
(t7)
(t+∣H)o +
10 + (砰,(8-叫曲-χ)J (巽世(电式河/) "?
+ (0χ- x)χ(¾10χ∣0χ)J + (¾10χ∣0χ)∕]χ(0χ- x)(0χ- X)/ (Oχ)⅛θ
(砰(IH 1°x∣x)∕χ(0x - x)(°x _ 吟](°x)⅛θ I?
- IX)(P — IX))观夕呼)
PuB
O + ^ʃpɪ(ɑʃ - X')(0x - ʃ)ʃ ɪ(ɪjfX)J(?X)U) J?=
O + xp(^x - x)χ(¾ ;ɔʃlɔʃ)/(ɔʃ)⅛ɪ(ɔʃ - ʃʧ +。=
ʃp[o + (0χ - x)χ(¾ 1°x∣0χ)z∕ + (¾ 10x∣0χ)∕](0χ)⅛χ(0χ _ 吟]=
xp(τ+¾y^ ^ʃlʃ)/(ɔʃ)(zɪ(ɔʃ — x)ʃ =
(¾∣(θχ)⅛χ(θx- τχ))a
OAeq əm ζτ+¾ PUe % 8uτxτt[
___________j(i+j¾∕^¾)3I_________S
[(ɪ(ɔʃ - IX)(件-IX))(口刈4—(1+%/电)回 T
______J(I+⅞√⅞^)3I____
(0χ)⅛χ(0χ- ⅛)^(τ+¾∕¾)a
+ (M 〃
「(i+⅞√⅞^)3I__________________
((巽-IX)(MQ(巽-IX)Z/1+ (紧)笃(笈-IX) + (μ〃)λ,-(t+¾∕¾)≡
Z 「0+%/电)过
τ (τx)^-(τ+¾∕¾)a
7
——μ (1+灯=(1+叼学"
sb pQjBjnojBO əg uŋɔ 勿 JO qoububλ PUB UBəuɪ Qqj UQqi
'((τ+¾ iχYz')dυΛ ='' (τ+¾ ⅛),c'u'^r>
Λ-(τ+¾∕¾)zW _
⅛-(τ+¾∕¾)≡
A-(τ+¾∕¾)za
屋- (⅛)Λ)⅛-(τ+¾∕¾)a
(τ+¾ 戏 z回
PuB
OCOC XlDl Ie Jadnd əɔuəjəjuoɔ e Se mətaəj jaρu∩
Under review as a conference paper at ICLR 2020
Finally,
μk,n,γ(X0, Rk+1)	= η(XO) + tkη(XO)k + a(XO)tk,n,γ(Rk +1) + o.
Step 2: in this step We construct a tube based on the set S = {χ∣η(χ) = 1/2}, then figure out that
the part of Regret outside this tube is a remainder term.
Assume k,n satisfies sk,n,γ = o(k,n) and k,n = o(sk,n,γ k1/2), then the residual terms throughout
the folloWing steps Will be o(s2k,n,γ + t2k,n,γ). Hence although the choice of k,n is different among
choices of k and n, this does not affect the rate of Regret. Note that We ignore the arguments X and
Rk+1 as from A.2 and A.4, s2k,n,γ (X, Rk+1) 1/k andtk,,n,γ(X, Rk+1) (k/n)2/d for all X While
Rk+1 (k, n)2/d in probability.
By SamWorth et al. (2012), recall that Ψ(X) = d(π1P1(X) - π2P2(X)), then
ZSd (P (XX WiK ≤ 1) - 1{η(x)<ι∕2 J dP(x)
k,n
{1 +。⑴} L J	t∣∣Ψ(xo)k (P(Sk,n(xO) < 1/2) - 1{t<o}) dtdVoldT(xo) + π,
Where
r1
Z叭Sek	(P (X WiYi ≤ 2) - 1{η(x)<ι∕2}) dP(X)
ZRd\Sk,n ERk+1	P Xi=k1Zi(X,Rk+1) <0
-1{η(χ)<1∕2} ) dp(X).
For r1 ,
-Ld∖s'k,n ∩{x∣η(x)<1∕2} r++1
Ld`sk,n ∩{x∣η(x)<1∕2} r++1
P XXZ Zi(X,Rk+ι) ≤ 0)- 1{η(x)<ι∕2}) dP(X)
(P (X Zi(X, Rk+ι) - kEZ1(X,Rk+1) > -kEZι(X,Rk+ι)) ) dP(∕).
Using non-uniform Berry-Essen Theorem, When EZ13(X, Rk+1) < ∞, i.e. γ < d/3, it becomes
Ld∖s'k,n∩{x∣η(x)<ι∕2} ERk+1
P (XZi(X,Rk+ι) - kEZι(X, Rk+ι) > -kEZι(X,Rk+ι)) ) dP(∕)
≤
Ld∖Sk,n ∩{χ∣η(χ)<1∕2}	fc+ι 一
√	√kEZι(X,Rk+ι)
I- Var(Z1(X,Rk+1))
dP(X)
√k Ld∖Sek,n∩{x∣η(x)<1∕2} ERk+1 1 + k3∕2∣EZι(X, Rk+ι)∣3 dP(X)
where Φ(x) = 1 — Φ(x). Since sk,n,γ(x, Rk+ι) = o(α,n), ri = o(s2k,n,γ(x, Rk+ι)).
By the definition of k,n, We have
exP(-ek,n/Sk,n,γ (X,Rk+1))	= O(Sk,n,γ ) + o(1∕k),
inf	∣η(X) - 1/2|	≥ c3efc,n.
x∈Rd∖Sk,n
As a result, using Berstain inequality, r1 is a smaller order term compared with S2k,n,γ when
sk,n,γ(Rk+1)= O(I)，hence r1 = O(Sk,n,γ)∙
16
Under review as a conference paper at ICLR 2020
Step 3: now we apply non-uniform Berry-Esseen Theorem. From Step 3, we have
(	∕*ek,n
JSJ -^k,n
Efifc+1 t∣∣Ψ(x0)k (P(Sk,n(x0) < 1∕2∣Rk+ι) - 1{t<0}) dtdVoldT(xo)
/ /efc,n ERit∣∣Ψ(x0)∣∣ (Φ (p-l≡l==== ) - 1<t<0}) dtdVold-1(x0) + r2,
JSJ-i	k ∖√kVαr(Zι(x0,Rk+ι))/	I
where based on non-uniform Berry-Esseen Theorem:
D(Pi=I Zi(x0, Rk+1) - kEZI(X0,Rk+1)	-kEZI(X0,Rk+1) ∖ ɪ - -kEZI(X0 ,Rk+1)
p	<	— Φ
∖	VzkVar(Z1(x0, Rk+ι))	VZkVar(Z1(x0, Rk+ι)) )	∖ VZkVar(Zι(x0, Rk+1))
<
kE∣Zι(x0, 国+1 )∣3
c------------------------------
EVar 3∕2(Zι(x0,Rk+ι))] +
1
-kEZ1(χ0,Rk+1)
√kVαr(Zι(x0,Rk+ι))
3,
and
r2	≤
/ L E 川山 MI	kE∣Zι(x0,Rk+ι)∣3	_
JSLk,n Rk+1 k ( 0)k k3/2Var3/2(Zi(x0,Rk+i))i +
1
-kEZ1(χ0,Rk+1)
√kVar(Ζι (x0,Rk+ι))
3 dtdVold-1(x0).
For r2,
1
r2	≤
/ L E 川Ψ(X )k	kEIZi(x0,Rk+1)∣3
JsJ-ek,n Rk+1 k ( 0)k k3/2Var3/2(Zi(x0,Rk+i))i +
dtdVold-1(x0)
1(x0)
二 kEZ1(x0,Rk+1)
√ kVar(Z1 (x0 ,Rf))
ɜ dtdVold-1(x0)
Step 4: the integral becomes
c	∕,ek,n	/
JSERk+1 L	Mx0)k(φ
-kEZI(X0,Rk+1)	) - 1{t<0} ) dtdVold-1(x0)
√kVar(Zι(x0,Rfc+ι))	{ < }	「
f	产 k,n	/
(ERk+J_W	t∣∣W(x0)∣∣ I Φ
+r3 + °
tkn(x0)k
E(R1∕Rfc+1)-7 a(x0)R2
Js2,n,γ(x,R+1)∕k	/2,n,γ (x,R + 1)∕k
-1{t<0} dtdVold-1(x0)
(ERk+1 ZtM(x0)k (φ
tkn(x0)k
E(R1∕Rfc+1)-γ a(x0 )R2
sj s2 ,n,γ (x, Rk+1)/k	sj s2 ,n,γ (x, Rk+1)/k
-1{t<0} dtdVold-1(x0)
—
—
—
—
+r3 + r4 + o
Ψ(x0)k Φ
t∣∣η(x0)∣∣	E(R1∕R+1)-γ a(x0)R2
∕⅛n,γ(x”k
∕⅞n,γ(x”k
-1{t<0}	dtdVold-1 (x0)
+r3 + r4 + r5 + o
Bi E(Rι∕Rk+ι)-2γ /
4⅛ E2(R1∕Rk+1)-γ + JS
f(x0)
kn(x0)k
a2(x0) EE⅞iR⅛+'i)-R 2 dVold-1(x0) + r3 + r4 + r5 + °.
—
—
17
Under review as a conference paper at ICLR 2020
Note that ∣∣Ψ(xo)k∕k^η(xo)k = 2f (xo). The last step follows Proposition 4 and the fact that Rk+ι
does not affect the dominant parts. The term E((R1∕Rk+1 )-γ∣Rk+ι) is almost the same for all
Rk+1. For the small order terms, following Samworth et al. (2012) we obtain
k,n
Fkj	t∣Ψ(xo)k(φ
-kEZ1(X0，Rk+1)
PkVar(Zι(x0,Rk+ι))
-Φ
tkη(XO)k
∕sk,n,γ(X，Rk + l"k
E(Ri/Rk+「a(x0)R2	)dtdVold-i(xo )，
s2k,n,γ (X， Rk+1)/k
—
—
o(sk,n,γ + tk,n,γ )，
and
kΨ(x0)k E
JS kr)(χ0)k2 Rk+1R\[-k,n ,k,n ]
tkψ(χo)k (φ f-- —J” (。) 11— — ——] /—:+1)————	- 1{v<0}	dtdVold
∖	∖ ≠k,n,Y/k	√sk,n,Y/k	)	)
o(sk,n,γ).
1(x0)
The term r5 is the difference between the normal probability given Rk+1 and the one after taking
expectation. Similar with Cannings et al. (2017), for each X, when |t| < k,n, we have
t∣η(xo)k	E(R1∕Rk+1 )-γ a(x0)R2
—,	=--------,	=—
s2k,n,γ (X， Rk+1)/k	s2k,n,γ (X， Rk+1)/k
Φ --	t∣η(x0)k	-- E(R1∕Rk+1)-γa(x≡1 ] + O (kVar(tk,n,γ(x,Rk+ι))) +
∖ ∕⅛n,γ (x,Rk + l"k	∕⅛n,γ (x,Rk + l"k )
Following step 3 in Cannings et al. (2017), we obtain
Var(tk,n,γ (x， Rk+1)) ≤
k⅛ XXE(η(Xι) - η(χ))2 = O (1 r2p)
For the case when |t|	sk,n,γ + tk,n,γ, differentiate normal cdf twice still leads to very small
probability, thus for each x, we have
tERk+1Φ
tkη(χo )k
∕⅛n,γ (x,Rk+1)/k
E(R1∕Rk+1)-γ a(x0 )R2
JSk,n,γ (x，Rk+1)/k
dt
tΦ
t∣η(xo)k	E(Ri/Rk+i)-Y a(x0)R2
--,	=-------,	=—
S2k,n,γ (x， Rk+1)/k	S2k,n,γ (x， Rk+1)/k
dt + o(S2k,n,γ + t2k,n,γ).
D Proof of Theorem 1
To show the ratio MSE(γ, n)/MSE(0，n) and Regret(γ, n)/Regret(0，n) asymptotically converges
to a constant, we need to figure out the corresponding optimum k for each scenario.
18
Under review as a conference paper at ICLR 2020
For classification, given x, we know that if X follows multi-dimensional uniform distribution with
density 1/f (x), for some constant cd that only depends on d,
E(Rι∕Rk+ι)-2γ
E(R1∕Rk+1 )-γ
E(R1∕Rk+1)-γR21
Rk+1 r	-2γ	d
ERk+1d L	G	Tjdd + o = K + o,
d
+	+o,
d-γ
E(R1∕Rk+1)2-γRk2+1
2
d
---------------+ o.
d +2 - Y
Since Ri → 0, this approximation still holds if X follow other distributions. As a result, through
figuring out the optimum k for 0 and γ , we have
C	4	C	C	d
Regret(n,γ)	Λ Y2	∖ d+4 ( (d - γ)2	(d + 2)2 ʌ d+4
Regret(n, 0) T (	d(d — 2γ))	∖(d + 2 — YY	d2	)
For regression, one more step needed compared with classification is to evaluate
kE" PR；/；： )2 # Eσ(X )2+k2E 卜(X )E2 "P≡' #!
The SUm of ratios Pk=I(Ri/Rk+ι)--γ is hard to evaluated directly in the denominator, hence We use
upper bound and lower bound on it. Since d - 3Y > 0, using non-uniform Berry-Essen Theorem,
given Rk+1, We have
P (XX(Ri/Rk+Irl - kE(R1∕Rk+1)-γ > ξ
- φ (PkVar((Rξ∕Rk+ι)-Y)
Rk+1
c
≤ 1 + (ξ∕√k)3
Therefore, taking ξ = δkkE(Rι∕Rk+ι)-γ,
k
X(Ri∕Rk+1)-γ > (δk + 1)kE(R1∕Rk+1)-γRk+1
i=1
≤ Φ ( δk√kE(Rι∕Rk+ι)7 Rk+ι! + _ɑ	.
一	∖PVar((Rι∕Rk+ι)-Y)	+	1 + (√kδk )3
Note that (R1∕Rk+1)-γ is alWays larger than 1, hence
E	(Rι∕Rk+ι)-2γ
[(Pk=1(Ri∕Rk+1)-Y )2_
E(R1∕Rk+1)-2γ
≤	Rk+1 [(1- δk)2k2E2(R1∕Rk+1)-Y
+ERk+1
k
P X(Ri∕Rk+1)-γ < (1 - δk)kE(R1∕Rk+1)-γRk+1
i=1
E(Rι∕Rk+ι)-2γ
k2
+o
1	E(Rι∕Rk+ι)-2γ	E(Rι∕Rk+ι)-2γφ δ δk√kE(Rι∕Rk+ι)-γ
≤ k2(1 - δk)2 E2(Rι∕Rk+ι)-Y +	k2	^pVar((Rι∕Rk+T)-γ)
E(Rι ∕Rk+ι)-2γ	C
+ M	1 + (√kδk )3+ o,
While
(Rι∕Rk+ι)-2γ
(Pk=I(Ri∕Rk+ι)-Y )2
1	E(R1∕Rk+1)-2γ	E(R1∕Rk+1)-2γ	c
≥---------------------------------------------------+ o
≥ k2(1 + δk)2 E2(R1∕Rk+1 )-y	k2	1 + (√kδk)3 +
19
Under review as a conference paper at ICLR 2020
Hence taking δk such that δk → 0 while δk√k → ∞,we have
E
(Ri/Rk+i)-2Y
(Pk=ι (R√Rk+ι)-Y )2
1 (d-Y)2
k2 d(d - 2γ)
+ o,
and similarly
E
R2(Ri/Rk+i)-Y
Pk=I(Ri/Rk+ι)-γ
2
d d — γ
d + 2 - Y + o.
After figuring out the optimum k for kNN and interpolated-NN, we finally obtain
4
M≡ - (ι+」
d
(d - γ)2	(d +2)2λ 中
(d+2-Y)2	d2
E Proof of Theorem 2
The proof is similar with Theorem 1 in Sun et al. (2016).
From the definition of CIS, we have
CIS(Y )/2
P (Sk,n,γ (x) ≥ 1/2) (1 - P (Sk,n,γ (x) ≥ 1/2)) dP (x)
R
[(P(Sk,n,γ(x) ≥ 1/2) - 1{η(χ)≤ι∕2}) dP(x)
R
-[(P2 (Sk,n,γ(X) ≥ 1/2) - 1{η(x)≤1∕2}) dP (X).
R
Based on the definition of Zi(x, Rk+ι) in (2), the derivation of μk,n,γ(x, Rk+ι) and
sk,n,γ (X, Rk+1), follow the same procedures as in Theorem 5, we obtain
[(P(Sk,n,γ(x) ≥ 1/2) - 1{η(χ)≤ι∕2}) dP(x)
R
k,n
=Js f	f (X0) {ERk+1 P (Sk,n,γ(x0) < 1/2|Rk+i) - 1{t<0}} dtdVold-1(xo) + o
(ERk+ι Lf(xo) Jφ
tkη(xo)k	E(Rι/Rk+ι)-γ a(x0)R2
Vsk.n,Y/k
∕⅛n,γ Ik
- 1{t<0} dtdVold-1 (x0) + o,
—
—
and similarly,
[(P2(Sk,n,γ ≥ 1/2|R)- 1{η(x)≤ι∕2}) dP(x)
R
k,n
=JS f	f(x0){P2 (Sk,n,γ(x0) < 1/2) - 1{t<0}} dtdVold-1(xo) + o
(ERk+ι Lf(xο) Jφ2 I -
tkη(xo)k	E(R1∕Rk+1)-γ a(x0)R2
Vsk.n,Y/k
Vsk.n,Y/k
- 1{t<0} dtdVold-1(x0) +o.
—
Adopting Proposition 4 and the fact that sk,n,γ (x, Rk+1) is little changed by x and Rk+1, treating
Φ and Φ2 as two distribution functions, we have
CIS(Y) = √1 √k EqoX)+o
√B∏ √k J+d(d- 2γ)+o.
The optimum k for kNN and interpolated-NN satisfies
k(Y).
-----→
k(0)
.	.C	C	、	d
(d +2 - γ)2	d2	ʌ d+4
d(d - 2γ) (d+2)2
Finally we can obtain the asymptotic ratio of CIS’es.
20
Under review as a conference paper at ICLR 2020
F	Interpolation does not Affect the Rate of Convergence
F.1 Model Setup and Theorem
The results in Section 3 are obtained based on smooth η and f, thus the Taylor expansions can be
calculated. In this section, we will provide a weaker result under weaker assumptions as those in
Chaudhuri & Dasgupta (2014) and Belkin et al. (2018).
We first setup some assumptions:
A.1’ X is a d-dimensional random variable on a compact set and satisfies regularity condition:
let λ be the Lebesgue measure on Rd, then there exists positive (c0, r0) such that for any x
in the support X,
λ(X ∩ B(x, r)) ≥ c0λ(B(x, r)),
for any 0 < r ≤ r0 .
A.4’ Smoothness condition: ∣η(x) - η(y)∣ ≤ Akx - y∣∣ɑ for some α > 0.
A.5’ The density of X is finite, and the model satisfies margin condition: P(∣η(X) - 1/2| <
t) ≤ Btβ.
The regularity condition in A.1’ is used to ensure the convergence of the distance of the k + 1th
neighbor: if the density is infinite at some points, the neighbors will be the point itself. The smooth-
ness condition A.4’ describes how smooth the function η is, which affects the minimax performance
of kNN given a class of n's. Assumption A.5' describes how far the samples are away from 1/2,
and affects the minimax rate for binary classification. When β is small, there is a cluster of samples
around 1/2, leading to a large prediction error rate.
In interpolated-NN, if the level of over-fitting is not strong, that is, γ is within some suitable range,
then excess risk of classification also reaches optimal:
Theorem 6 For regression, under A.1’, A.3, A.4’, A.5’,
MSE (γ,n) = o(n-2a/(2a+d)).
For classification, under A.1’, A.3, A.4’, A.5’,
Regret(γ, n) = O(n-a(e+1)/(2a+d)).
In addition, if β ≥ 2, when d - κ(β)γ > 0, where κ(β) denotes the smallest even number that is
greater than β + 1, then we have
Regret(γ, n) = O(n-a(e+1)/(2a+d)).
The main proof of Theorem 6 follows the idea in Chaudhuri & Dasgupta (2014), with Berstein
inequality changing to non-uniform Berry Esseen Thoerem. For the regression part, we refer readers
to Belkin et al. (2018) and Belkin et al. (2019c).
From Theorem 6, one can see that given a reasonable level of over-fitting, the performance of
interpolated-NN reaches the minimax rate for both regression and classification.
When β < 2 and β ≥ 2, we technically impose different restrictions on γ . A quick illustration on
this is that we adopt non-uniform Berry-Essen Theorem to bound the probability. In non-uniform
Berry-Essen Theorem, although the Gaussian probability itself has a exponential tail, the residual
part is only 1/(1 + |t|3). As a result, when summing UP tβ+1∕(1 + 玲 for ti = 2i, β - 2 should be
smaller than 0 in order to bound the summation.
Remark 3 As Chaudhuri & Dasgupta (2014) mentioned, our smoothness condition (A.4’) is in fact
a sufficient condition. In Theorem 6, what we really need is some constant α0 such that
∣η(x) — η(B(x, r))| ≤ Lra .
The result in Samworth et al. (2012) is a case where α 6= α0. We approximate Eη(X) as η(x0) +
tr[η(xo)E(X — xo)(X — xo)>] in Theorem 5, which indicates that we adopt smoothness ɑ0 = 2,
though α = 1. In addition, the margin condition parameter β = 1 under A.1 to A.5 becomes 1.
Therefore, the optimum rate of O(n-a0(e+1)/(2a0+d)) is O(n-4/(4+d)). The over-fitting weighting
scheme in fact leads to optimal rate for classification.
21
Under review as a conference paper at ICLR 2020
F.2 Proof of Theorem 6
LetP = 2k/n. Denote E = {∃Ri > rp, i = 1,...,k}, and ERfc,n(x) - R*(x) as the excess risk.
Then define
ηk,n,γ (χ∣Rk+ι) = E[(R1∕Rk+1)-γ η(Xι)]∕E(R1∕Rfc+1)-7,
as well as
X+∆ = {x ∈ X∣η(x) > 1 ,η(x) ≥ 2 + δ, ∀Rk + 1 < r2p(x)},
Xpδ ={x ∈ XIn(X) < 2,η(X) ≤2 - δ,∀Rk+ι < r2p(χ)},
with the decision boundary area:
∂p,∆ = X\(Xp+∆ UXp∆).
Given ∂p,∆, Xp∆, and X-δ, similar with Lemma 8 in Chaudhuri & Dasgupta (2014), the event of
g(χ) = bk , n, Y(x) can be covered as:
1{g(x)=bk,n,γ (χ)}	≤	1{x∈dp,∆}
+	1{ _ max Ri≥r2p}
i—1 ,...,k
+	1{∣bk,n,γ (X)一η3Rk+1)|≥∆}.
When n(x∣Rk+ι) > 1/2 and X ∈ Xp∆, assume bk,n,Y(x) < 1/2, then
ηk,n,γ (XIRk+1) - b7k,n,γ (x) > ηk,n,γ (XIRk +1) - 1/2 ≥ △.
The other two events are easy to figure out.
In addition, from the definition of Regret, assume n(x) < 1/2,
P(b(x) = Y∣X = x) - n(x)
=	n(x)P(b(x) = 0∣X = x) + (1 — n(x))P(b(x) = 1∣X = x) — n(x)
=	n(x)P(b(x) = g(x)∣x = x) + (1 - n(x))P(b(x) = g(x)∣x = x) - n(x)
=	n(x)	—	n(x)P (b(x)	=	g(x)∣x	= x)	+ (1 — n(x))P (b(x)	=	g(x)∣x	= x)	— n(x)
=	(1 - 2n(x))P (b(x) = g(x)∣x = x),
similarly, when n(x) > 1/2, we have
P (b(x) = Y ∣X = x) — 1 + n(x) = (2n(x) — 1)P (b(x) = g(x)∣X = x).
As a result, the Regret can be represented as
Regret(k,n,γ)	= E (∣1 - 2n(X )∣P(g(X )= bk,n,Y (X))).
For simplicity, denote P = k/n. We then follow the proof of Lemma 20 of Chaudhuri & Dasgupta
(2014). Without loss of generality assume n(x) > 1/2. Define
△0 = sup ∣n(x∣Rk+ι) - n(x)∣ = O(r%) = O(k/n)a/d,
X
∆(x) = ∣n(x) - 1/2|,
then
n(x∣Rk+ι) ≥ n(x) - ∆0 = 1 + (∆(x) - ∆o),
hence X ∈X+∆(x)-∆0.
22
Under review as a conference paper at ICLR 2020
From the definition of Rk,n and R*, when ∆(x) > ∆0, we have
ERk,n(x) - R*(x)
≤ 2∆(x) P(r(k+i)>v2p)+ P (XX WiY(Xi)- η(x∣Rk+ι) > ∆(x)- ∆o)]
k	k
≤ exp(-k∕8) + 2∆(x)p( X(R√Rk+ι)-γY(Xi) > (η(x∣Rk+ι) + ∆(x) - ∆q) X(R√Rk+ι)-γ)
'i=1	i=1	/
k
=exp(-k∕8) + 2∆(x)P ]T(Ri∕Rk+ι)-γY(Xi)- kE(R1∕Rk+ι)-γη(Xi)
、i=1
k
-	(η(x∣Rk+ι) + ∆(x) - ∆0) E [(Ri∕Rk+ι)-γ - E(R1∕Rk+1)-γ]
i=1
>	k(η(x∣Rk+ι) + ∆(x) - ∆0)E(R1∕Rk+1)-γ - kE(R1∕Rk+1)-γη(X1)
k
=exp(-k∕8) + 2∆(x)P E(Ri∕Rk+ι)-γ(Y(Xi) - η(x∣Rk+ι))
〔i=1
-	(∆(x) - ∆0) (XX(Ri∕Rk+ι)-γ - kE(R1 ∕Rk+ι)-γ)
>	k(∆(x) - ∆0)E(R1∕Rk+1)-γ}.
Since
k
EX(Ri∕Rk+ι)-γ(Y(Xi) - η(x∣Rk+ι)) =0,
i=1
E	(∆(x) - ∆0) (XX(Ri∕Rk+ι)-γ - kE(Rι∕Rk+ι)-γ) = 0,
we can use Markov inequality to the power of κ(β) to bound the probability. Denote
Zi(X) = (R√Rk+ι)-γ (Y(Xi)-η(x∣Rk+1))-(∆(x)-∆0)(R√Rk+1)f+(∆(x)-∆0)E(R1∕Rk+1)-γ
for simplicity. Note that
Var(ZI(X)) = O(∆(x) — ∆0).
For different settings of β and γ, the following steps have the same logic but different details:
Case 1: β ≤ 1 and γ < d∕3: Considering the problem that the upper bound can be much greater
than 1 when ∆(x) is small, we define ∆i = 2i∆0, taking i° = min{i ≥ 1∣ (∆i - ∆0)2 > 1∕k}. In
this situation, since EZ3(x) < ∞, we can adopt non-uniform Berry-Essen Theorem for the proof:
ERk,n (X ) - R*(X) = E(Rk,n (X ) - R*(X ))1{∆(X )≤∆i0 }
+E(Rk,n(X ) - R*(X ))1{∆(X)>∆i0 }
≤ 2∆ioP(∆(X) ≤ ∆io) + exp(-k∕8)
+4E [∆(X)1{∆- <∆(X)}Φ (尸。(X) - M!#
` )4i <ZX)}	<pVar(Zι (X )∣X) J∖
C1	1
+4E [△(X)1{&oc(x)} √k 1 + k3∕2(∆(x) - ∆0)3 .
23
Under review as a conference paper at ICLR 2020
The two terms from Berry-Essen Theorem becomes
E ∆(X)1{,
ci
1
≤
A<δ(x)<δ2+1}√k 1 + k3∕2(∆(x) - ∆o)3_
1
Aβ+i Q_______________
i+i √k 1 + k^2(∆i- ∆o)3
k(≡72 (G+i)e+i
Ci
1
√k 1 + k3∕2(∆i- ∆o)3 ,
together with
E ∆(X)1{∆i0 <∆(X)}φ
√k(∆(x) - ∆o)
√Var(Zi (X )|X)
))
≤ E [∆(X)130<∆(X)}Φ (c3√k(∆(x) - ∆o))]
∆β+i
≤ c4 Zr"i+i 八、eχp (-c3k(A - A)2).
√k(∆i - ∆o)
The upper bound is larger than 1 if ∆% ≤ c5 / √k. When ∆% > c5∕ √k,
Λ β + 1
(∆i-∆0) exp (-c3k(A - A)2)
ʌ β+1
(△二 1-∆0) exp(-c3k(A-i - Ao)2)
2β+i
2i-i - 1 exp (-c2k(∆i - ∆o)2)
2i - 1 exp(-c3k(∆i-i - ∆o)2)
≤
2β exp (-c2k。，一 4o)2)	< 1/2
exp (-c2k(∆i-1 - ∆o)2)	.
Therefore the sum of the excess risk can be bounded. When β < 2, β - 2 < 0, hence
E ∆(X)1{,
Ci
1
a<δ(X)<&+1} √k 1 + k3∕2(∆(x) - ∆0)3 _
≤ O (k(β+2)∕2
≤ O (k(β+2)∕2
£[ √k(∆i+i - ∆i)]β-2
i≥i0
X (√k∆i0 )β-22i(β-2)
i≥i0
O (___1___k(e-2)/2∆β-2∖ = O I ^i0—
OU(β+2)∕2 k	、0	= O k2
and
E ∆(X)1{∆i0 <∆(X)}φ
√k(∆(x) - ∆o)
√Var(Zi(X )|X)
))
≤O
X (∆‰exp (-c3kA- ∆o)2)
i≥i0
O
β0+i exp (-c3k0i0 - Ao产).
Recall that ∆^° > ∆o and ∆2o > 1/k, hence when ∆2o = O(1∕k), we can obtain the minimum
upper bound
ERk,n(X) - R*(X) ≤ O(∆β+i) + O
(β+i)∕2
Taking k N (n2a/(2a+d)), the upper bound becomes O(n-a(e+i)/(2a+d)).
24
Under review as a conference paper at ICLR 2020
Case2: γ < d∕κ(β):
ERk,n(X) - R*(X)	= E(Rk,n(X) - R*(X))1{∆(χ)≤∆i0}
+E(Rk,n(X) - R*(X))1{∆(X)>∆io}
≤ 2∆ioP(∆(X) ≤ A。)+exp(-k∕8)
E (p3 Zi(X ))κ⑻
+4E ∆(X)1{~0”(X)} (∆(X) - ∆o)κ(β)kκ(β)Eκ(β)(Rι∕Rk+ι)-γ
while for some constant c1 > 0,
E ∆(X)1{
/ J	、 κ(β)
E (p3 Zi(X))
A3X)2+i} (∆(X) - ∆0)MP)kMe)EMe)(R1∕Rk+1)-γ
κ κ	κ κ(β)
.「 E (p3 Zi(X))
≤	[	(	) {∆i<∆(X)≤∆i+l}J (∆i - ∆0)κ(β)kκ(β)Eκ(β)(R1∕Rk+1)-∙γ
κ κ	K κ(β)
E (P3 Zi(X))
≤ &+1PQ(X) ≤ A+1)(∆i - ∆o)κ(β)kκ(β)Eκ(β)(Rι∕Rk+ι)-γ
/1 ∖κ(β)∕2
≤ ci (J)	∆f+11∕(∆i - ∆o)κ⑶,
where the last inequality is obtained since d - κ(β)γ > 0. Note that κ(β) > β + 1, thus for some
0 < c < 1,
∆出∕A - ∆『⑻< C
∆β+1∕(∆i-i- ∆o)κ(β)	.
Therefore the sum of the excess risk for can be bounded, where
Γ	κ κ	∖κ(β)	1
ʌ/v	e(p3 Zi(X))
E ∆(X)1{Ao "(X)} (∆(X) - ∆o)κ(β)kκ(e)Eκ(β)(Rι∕Rk+ι)-γ
∕1 ∖κ(β)∕2
≤。(1)	X ∆β+11∕(∆i - ∆o)κ⑶	(6)
' i	i≥io
≤ O 0β+1).
Recall that ∆i0 > ∆o and ∆2o > 1∕k, hence when ∆2o = O(1∕k), we can obtain the minimum
upper bound
ERfc,n(X) - R*(X) ≤ O(∆β+1) + O
Taking k N (n2a/(2a+d)), the upper bound becomes O(n-a(e+1)/(2a+d)).
25