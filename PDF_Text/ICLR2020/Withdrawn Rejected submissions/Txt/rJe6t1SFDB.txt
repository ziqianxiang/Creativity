Under review as a conference paper at ICLR 2020
Amused: A Multi-Stream Vector Representa-
tion Method For Use In Natural Dialogue
Anonymous authors
Paper under double-blind review
Ab stract
The problem of building a coherent and non-monotonous conversational agent
with proper discourse and coverage is still an area of open research. Current ar-
chitectures only take care of semantic and contextual information for a given query
and fail to completely account for syntactic and external knowledge which are cru-
cial for generating responses in a chit-chat system. To overcome this problem, we
propose an end to end multi-stream deep learning architecture which learns uni-
fied embeddings for query-response pairs by leveraging contextual information
from memory networks and syntactic information by incorporating Graph Con-
volution Networks (GCN) over their dependency parse. A stream of this network
also utilizes transfer learning by pre-training a bidirectional transformer to extract
semantic representation for each input sentence and incorporates external knowl-
edge through the neighborhood of the entities from a Knowledge Base (KB). We
benchmark these embeddings on next sentence prediction task and significantly
improve upon the existing techniques. Furthermore, we use AMUSED to repre-
sent query and responses along with its context to develop a retrieval based conver-
sational agent which has been validated by expert linguists to have comprehensive
engagement with humans.
1	Introduction
With significant advancements in Automatic speech recognition systems (Hinton et al., 2012; Kumar
et al., 2018) and the field of natural language processing, conversational agents have become an im-
portant part of the current research. It finds its usage in multiple domains ranging from self-driving
cars (Chen et al., 2017b) to social robots and virtual assistants (Chen et al., 2017a). Conversational
agents can be broadly classified into two categories: a task oriented chat bot and a chit-chat based
system respectively. The former works towards completion of a certain goal and are specifically
designed for domain-specific needs such as restaurant reservations (Wen et al., 2017), movie rec-
ommendation (Dhingra et al., 2017), flight ticket booking systems (Wei et al., 2018) among many
others. The latter is more of a personal companion and engages in human-computer interaction for
entertainment or emotional companionship. An ideal chit chat system should be able to perform
non-monotonous interesting conversation with context and coherence.
Current chit chat systems are either generative (Vinyals & Le, 2015) or retrieval based in nature.
The generative ones tend to generate natural language sentences as responses and enjoy scalability
to multiple domains without much change in the network. Even though easier to train, they suffer
from error-prone responses (Zhang et al., 2018b). IR based methods select the best response from
a given set of answers which makes them error-free. But, since the responses come from a specific
dataset, they might suffer from distribution bias during the course of conversation.
A chit-chat system should capture semantic, syntactic, contextual and external knowledge in a con-
versation to model human like performance. Recent work by Bordes et al. (2016) proposed a mem-
ory network based approach to encode contextual information for a query while performing gener-
ation and retrieval later. Such networks can capture long term context but fail to encode relevant
syntactic information through their model. Things like anaphora resolution are properly taken care
of if we incorporate syntax.
Our work improves upon previous architectures by creating enhanced representations of the con-
versation using multiple streams which includes Graph Convolution networks (Bruna et al., 2014),
1
Under review as a conference paper at ICLR 2020
Figure 1: Overview of AMUSED. AMUSED first encodes each sentence by concatenating embed-
dings (denoted by ㊉)from Bi-LSTM and Syntactic GCN for each token, followed by word attention.
The sentence embedding is then concatenated with the knowledge embedding from the Knowledge
Module (Figure 2). The query embedding passes through the Memory Module (Figure 3) before
being trained using triplet loss. Please see Section 4 for more details.
transformers (Vaswani et al., 2017) and memory networks (Bordes et al., 2016) in an end to end set-
ting, where each component captures conversation relevant information from queries, subsequently
leading to better responses. Our contribution for this paper can be summarized as follows:
•	We propose AMUSED, a novel multi stream deep learning model which learns rich unified
embeddings for query response pairs using triplet loss as a training metric.
•	We perform multi-head attention over query-response pairs which has proven to be much
more effective than unidirectional or bi-directional attention.
•	We use Graph Convolutions Networks in a chit-chat setting to incorporate the syntactical
information in the dialogue using its dependency parse.
•	Even with the lack of a concrete metric to judge a conversational agent, our embeddings
have shown to perform interesting response retrieval on Persona-Chat dataset.
2	Related Work
The task of building a conversational agent has gained much traction in the last decade with various
techniques being tried to generate relevant human-like responses in a chit-chat setting. Previous
modular systems (Martin & Jurafsky, 2009) had a complex pipeline based structure containing var-
ious hand-crafted rules and features making them difficult to train. This led to the need of simpler
models which could be trained end to end and extended to multiple domains. Vinyals & Le (2015)
proposed a simple sequence to sequence model that could generate answers based on the current
question, without needing extensive feature engineering and domain specificity. However, the re-
sponses generated by this method lacked context. To alleviate this problem, Sordoni et al. (2015)
introduced a dynamic-context generative network which is shown to have improved performance on
unstructured Twitter conversation dataset. To model complex dependencies between sub-sequences
in an utterance, Serban et al. (2017) proposed a hierarchical latent variable encoder-decoder model.
It is able to generate longer outputs while maintaining context at the same time. Reinforcement
learning based approaches have also been deployed to generate interesting responses (Zhang et al.,
2018a) and tend to possess unique conversational styles (Asghar et al., 2017).
With the emergence of a number of large datasets, retrieval methods have gained a lot of popularity.
Even though the set of responses are limited in this scenario, it doesn’t suffer from the problem of
generating meaningless responses. A Sequential Matching Network proposed by Wu et al. (2017)
performs word matching of responses with the context before passing their vectors to a RNN. Addi-
tion of external information along with the current input sentence and context improves the system
2
Under review as a conference paper at ICLR 2020
as is evident by incorporating a large common sense knowledge base into an end to end conversa-
tional agent (Young et al., 2018). To maintain diversity in the responses, Song et al. (2018) suggests
a method to combine a probabilistic model defined on item-sets with a seq2seq model. Responses
like ’I am fine’ can make conversations monotonous; a specificity controlled model (Zhang et al.,
2018b) in conjunction with seq2seq architecture overcomes this problem. These networks helps
solve one or the other problem in isolation.
To maintain proper discourse in the conversation, context vectors are passed together with input
query vector into a deep learning model (Sordoni et al., 2015). A context modelling approach which
includes concatenation of dialogue history has also been tried (Martin & Jurafsky, 2009). However,
the success of memory networks on Question-Answering task (Sukhbaatar et al., 2015) opened the
door for its further use in conversational agents. Bordes et al. (2016) used the same in a task oriented
setting for restaurant domain and reported accuracies close to 96% in a full dialogue scenario. Zhang
et al. (2018c) further used these networks in a chit chat setting on Persona-Chat dataset and came up
with personalized responses.
In our network, we make use of Graph Convolution Networks (Kipf & Welling, 2017; Defferrard
et al., 2016), which have been found to be quite effective for encoding the syntactic information
present in the dependency parse of sentences (Marcheggiani & Titov, 2017). External Knowledge
Bases (KBs) have been exploited in the past to improve the performances in various tasks (Vashishth
et al., 2018a;b; Ling & Weld, 2012). The relation based strategy followed by Hixon et al. (2015)
creates a KB from dialogue itself, which is later used to improve Question-Answering (Saha et al.,
2018). Han et al. (2015); Ghazvininejad et al. (2018) have used KBs to generate more informa-
tive responses by using properties of entities in the graph. (Young et al., 2018) focused more on
introducing knowledge from semantic-nets rather than general KBs.
3	Background: Graph Convolution Networks
GCN for undirected graph: For an undirected graph G = (V, E), where V is the set of n vertices
and E is the set of edges, the representation of the node v is given by xv ∈ Rm , ∀v ∈ V . The output
hidden representation hv ∈ Rd of the node after one layer of GCN is obtained by considering only
the immediate neighbors of the node as given by Kipf & Welling (2017). To capture the multi-hop
representation, GCN layers can be stacked on top of each other.
GCN for labeled directed graph: For a directed graph G = (V, E), where V is the set of vertices
we define the edge set E as a set of tuples (u, v, l(u, v)) where there is an edge having label l(u, v)
between nodes u and v. Marcheggiani & Titov (2017) proposed the assumption that information
doesn’t necessarily propagate in certain directions in the directed edge, therefore, we add tuples
having inverse edges (v, u,l(u,v)T) as well as self loops (u, u, Ω), where Ω denotes self loops, to
our edge set E to get an updated edge set E0. The representation ofa node xv, after the kth layer is
given as :
hk+1 = f I X (Wku,v)hU + bk(u,v)))∙
u∈N (v)
where Wlk(u,v) ∈ Rd×d and blk(u,v) ∈ Rd are trainable edge-label specific parameters for the layer
k, N (v) denotes the set of all vertices that are immediate neighbors of v and f is any non-linear
activation function (e.g., ReLU: f(x) = max(0, x)).
Since we are obtaining the dependency graph from Stanford CoreNLP (Manning et al., 2014), some
edges can be erroneous. Edgewise gating (Bastings et al., 2017; Marcheggiani & Titov, 2017) helps
to alleviate this problem by decreasing the effects of such edges. For this, each edge (u, v, l(u, v))
is assigned a score which is given by :
guv = σ(hu ∙ Wk(u,v) +bk(u,v)),
where Wlk(U V) ∈ Rm and Uku V)) ∈ R are trained and σ denotes the sigmoid function. Incorporating
this, the final GCN embedding for a node v after nth layer is given as :
hVn+1 = f X gukV × (Wln(u,V)hnu + bln(u,V)) .	(1)
u∈N (V)
3
Under review as a conference paper at ICLR 2020
4	AMUSED DETAILS
This section provides details of three main components of AMUSED which can broadly be classi-
fied into Syntactic, Knowledge and Memory Module. We hypothesize that each module captures
information relevant for learning representations, for a query-response pair in a chit-chat setting.
Suppose that we have a dataset D consisting of a set of conversations d1, d2, ..., dC where dc repre-
sents a single full length conversation consisting of multiple dialogues. A conversation dc is given
by a set of tuples (q1, r1), (q2, r2), ..., (qn, rn) where a tuple (qi, ri) denotes the query and response
pair for a single turn. The context for a given query qi ∀ i ≥ 2 is defined by a list of sentences l :
[q1, r1, ..., qi-1, ri-1]. We need to find the best response ri from the set of all responses, R. The
training set D0 for AMUSED is defined by set of triplets (qi , ri , ni) ∀ 1 ≤ i ≤ N where N is the
total number of dialogues and ni is a negative response randomly chosen from set R.
4.1	S yntactic Module
Syntax information from dependency trees has been successfully exploited to improve a lot of Natu-
ral Language Processing (NLP) tasks (Vashishth et al., 2018a; Mintz et al., 2009). In dialog agents,
where anaphora resolution as well as sentence structure influences the responses, it finds special
usage. A Bi-GRU (Cho et al., 2014) followed by a syntactic GCN is used in this module.
Each sentence s from the input triplet is represented with a list of k-dimensional GloVe embedding
(Pennington et al., 2014) corresponding to each of the m tokens in the sentence. The sentence
representation S ∈ Rm×k is then passed to a Bi-GRU to obtain the representation Sgru ∈ Rm×dgru,
where dgru is the dimension of the hidden state of Bi-GRU.
This contextual encoding (Graves et al., 2013) captures the local context really well, but fails to
capture the long range dependencies that can be obtained from the dependency trees. We use GCN
to encode this syntactic information. Stanford CoreNLP (Manning et al., 2014) is used to obtain the
dependency parse for the sentence s. Giving the input as Sgru, we use GCN Equation 1, to obtain the
syntactic embedding Sgcn . Following Nguyen & Grishman (2018), we only use three edge labels,
namely forward-edge, backward-edge and self-loop. This is done because incorporating all the edge
labels from the dependency graph heavily over-parameterizes the model.
The final token representation is obtained by concatenating the contextual Bi-GRU representation
hgru and the syntactic GCN representation hgcn. A sentence representation is then obtained by pass-
ing the tokens through a layer of word attention (Bahdanau et al., 2014) as used by (Vashishth et al.,
2018b; Jat et al., 2018), which is concatenated with the embedding obtained from the Knowledge
Module (described in Section 4.2) to obtain the final sentence representation hconcat.
4.2	Knowledge Module
The final sentence representation hconcat of the query is then passed into Knowledge Module. It is
further subdivided into two components: a pre-trained Transformer model for next dialogue predic-
tion problem and a component to incorporate information from external Knowledge Bases (KBs).
4.2.1	Next Dialogue Prediction Using Transformers
The next dialogue prediction task is described as follows: For each query-response pair in the
dataset, we generate a positive sample (q, r) and a negative sample (q, n) where n is randomly
chosen from the set of responses R in dataset D. Following Devlin et al. (2018), a training example
is defined by concatenating q and r which are separated by a delimiter || and is given by [q||r]. The
problem is to classify if the next sentence is a correct response or not.
A pre-trained BERT model is used to further train a binary classifier for the next dialogue prediction
task as described above. After the model is trained, the pre-final layer is considered and the vector
from the special cls token is chosen as the sentence representation. The representation thus obtained
would have a tendency to be more inclined towards its correct positive responses. Multi-head atten-
tion in the transformer network, along with positional embeddings during training, helps it to learn
intra as well as inter sentence dependencies (Devlin et al., 2018; Vaswani et al., 2017). The input
query sentence is then passed from this network to obtain the BERT embedding, hbert .
4
Under review as a conference paper at ICLR 2020
Figure 2: Description of Knowledge Module.
The input sentence is passed to a pre-trained
BERT model, output from which is concate-
nated with averaged embedding from the KB-
neighbors of entities present in the input. Re-
fer Section 4.2 for a detailed explanation.
Figure 3: Memory Module description. The
query representation and BERT embeddings
of the context sentences is passed to the mem-
ory network to capture the dialogue context.
Please see Section 4.3 for more details.
4.2.2	k-Hop KB Expansion
In our day-to-day conversations, to ask succinct questions, or to keep the conversation flowing, we
make use of some background knowledge . For example, if someone remarks that they like rock
music, we can ask a question if they have listened to Nirvana. It can be done only if we know that
Nirvana plays rock music. To incorporate such external information, we can make use of existing
Knowledge Bases like Wikipedia, Freebase (Bollacker et al., 2008) and Wikidata (Vrandecic &
Krotzsch, 2014). Entities in these KBs are linked to each other using relations. We can expand the
information we have about an entity by looking at its linked entities. Multiple hops of the Knowledge
Graph (KG) can be used to expand knowledge.
In AMUSED, we do this by passing the input query into Stanford CoreNLP to obtain entity linking
information to Wikipedia. Suppose the Wikipedia page of an entity e contains links to the set
of entities E. We ignore relation information and only consider one-hop direct neighbors of e.
To obtain a KB-expanded embedding hkb of the input sentence, we take the average of GloVE
embeddings of each entity in E . In place of Wikipedia, bigger knowledge bases like Wikidata, as
well as relation information, can be used to improve KB embeddings. We leave that for future work.
4.3	Memory Module
For effective conversations, it is imperative that we form a sense from the dialogues that have already
happened. A question about ’Who is the president of USA’ followed by ’What about France’ should
be self-containing. This dialogue context is encoded using a memory network (Sukhbaatar et al.,
2015). The memory network helps to capture context of the conversation by storing dialogue history
i.e. both question and responses. The query representation, hconcat is passed to the memory network,
along with BERT embeddings hbert of the context, from the Knowledge Module (Section 4.2).
In AMUSED, memory network uses supporting memories to generate the final query repre-
sentation (hconcat0). Supporting memories contains input (mi) and output (ci) memory cells
(Sukhbaatar et al., 2015). The incoming query qi as well as the history of dialogue context
l : [(q1, r1), .., (qi-1, ri-1)] is fed as input. The memory cells are populated using the BERT
representations of context sentences l as follows: mi = ci = {BERT (x), x ∈ τ}, where
τ = [q1,r1,q2,r2, ...,qi,ri] ∀ (qi,ri) ∈ l.
Following Bordes et al. (2016), the incoming query embedding along with input memories is
used to compute relevance of context stories as a normalized vector of attention weights as
ai = k(< mi, hconcat >)k, where < a, b > represents the inner product of a and b. The response
from the output memory, o, is then generated as : o = Pi aici . The final output of the memory
5
Under review as a conference paper at ICLR 2020
cell, u is obtained by adding o to hconcat . To capture context in an iterative manner, memory cells
are stacked in layers (Sukhbaatar et al., 2015) which are called as hops. The output of the memory
cell after the kth hop is given by uk = ok-1 + uk-1 where u0 = hconcat . The memory network
performs k such hops and the final representation hconcat0 is given by sum of ok and uk.
4.4	Triplet Loss
Triplet loss has been successfully used for face recognition (Schroff et al., 2015). Our insight is that
traditional loss metrics might not be best suited for a retrieval-based task with a multitude of valid
responses to choose from. We define a Conversational Euclidean Space where the representation of
a sentence is driven by its context in the dialogue along with its syntactic and semantic information.
We have used this loss to bring the query and response representations closer in the conversational
space. Questions with similar answers should be closer to each other and the correct response.
An individual data point is a triplet which consists of a query (qi), its correct response (ri) and a
negative response (ni) selected randomly. We need to learn their embeddings φ(qi) = hcqoncat0,
φ(ri) = hcroncat and φ(ni) = hcnoncat such that the positive pairs are closer in the embedding space
compared to the negative ones. This leads to the following equation:
kφ(qi) - φ(ri)k22 + α < kφ(qi) - φ(ni)k22 ,
where α is the margin hyper-parameter used to separate negative and positive pairs. If I be the set
of triplets, N the number of triplets and w the parameter set, then, triplet loss (L) is defined as :
N
L(I, w) = X[kφ(qi) - φ(ri)k22 - kφ(qi) - φ(ni)k22 + α]+
i=0
5	Experimental Setup
5.1	Datasets
Persona-Chat: We use this dataset to build and evaluate the chit-chat system. Persona-Chat (Zhang
et al., 2018c) is an open domain dataset on personal conversations created by randomly pairing two
humans on Amazon Mechanical Turk. The paired crowd workers converse in a natural manner for
6 - 12 turns. This made sure that the data mimic normal conversations between humans which
is very crucial for building such a system. This data is not limited to social media comments or
movie dialogues. It contains 9907 training conversations and 1000 conversations each for testing
and validation. There are a total of 131, 438 query-response pairs with a vocab size of 19262 in the
dataset. We use it for training AMUSED as it provides consistent conversations with proper context.
DSTC: Dialogue State Tracking Challenge dataset (Henderson et al., 2014) contains conversations
for restaurant booking task. Due to its task oriented nature, it doesn’t need an external knowledge
module, so we train it only using memory and syntactic module and test on an automated metric.
MNLI and MRPC: We further use Multi-Genre Natural Language Inference and Microsoft Re-
search Paraphrase Corpus (Wang et al., 2019) to fine-tune parts of the network i.e; Knowledge
Module. It is done because these datasets resemble the core nature of our problem where in we want
to predict the correctness of one sentence in response to a particular query.
5.2	Training
Pre-training BERT: Before training AMUSED, the knowledge module is processed by pre-training
a bidirectional transformer network and extracting one hop neighborhood entities from Wikipedia
KB. We use the approach for training as explained in Section 4.2.1. There are 104224 positive
training and 27214 validation query-response pairs from Persona Chat. We perform three different
operations: a) Equal sampling: Sample equal number of negative examples from dataset, b) Over-
sampling: Sample double the negatives to make training set biased towards negatives and c) Under
sampling: Sample 70% of negatives to make training set biased towards positives. Batch size and
maximum sequence length are 32 and 128 respectively. We fine-tune this next sentence prediction
model with MRPC and MNLI datasets which improves the performance.
6
Under review as a conference paper at ICLR 2020
Table 1: Accuracy as an automatic evaluation metric on
Next Dialogue Prediction task over Persona Chat. We
perform different operations on embeddings of sentence
pairs to study ablation. Concat, Diff and Min refers
to Concatenation, Difference and Element wise min re-
spectively. See Section 5.4.2 for more details.
Model	Concat	Diff	Min
Bi-GRU & GCN only	72.8%	73.2%	59.4%
BERT only	74.3%	71.9%	66.3%
BERT with Bi-GRU & GCN	77.7%	73.3%	71.4%
BERT and KB with Bi-GRU and memory networks	83.6%	78.4%	69.2%
Table 2: Precision @1 compar-
ison between different methods.
Precision@1 % tell us the number
of times the correct response from
the dataset comes up. Details in
Section 5.4.2
Method	Precision@1
Seq2Seq	0.092
Profile Memory	0.092
IR Baseline	0.214
AMUSED(PersOna Chat)	0.326
AMUSED(DSTC)	0.78
Training to learn Embeddings: AMUSED requires triplets to be trained using triplet loss. A
total of 131438 triplets of the form (q, r, n) are randomly split in 90:10 ratio to form training and
validation set. The network is trained with a batch size of 64 and dropout of 0.5. Word embedding
size is chosen to be 50. Bi-GRU and GCN hidden state dimensions are chosen to be 192 and 32
respectively. One layer of GCN is employed. Validation loss is used as a metric to stop training
which converges after 50 epochs using Adam optimizer at 0.001 learning rate.
5.3	Retrieval
As a retrieval based model, the system selects a response from the predefined answer set. The
retrieval unit extracts embedding (hconcat) for each answer sentence from the trained model and
stores it in a representation matrix which will be utilized later during inference.
First, a candidate subset A is created by sub-sampling a set of responses having overlapping words
with a given user query. Then, the final output is retrieved on the basis of cosine similarity between
query embedding hconcat0 and the extracted set of potential responses (A). The response with the
highest score is then labelled as the final answer and the response embedding is further added into
the memory to take care of context.
5.4	Results And Evaluation
5.4.1	Selecting The Pre-Trained Model
The model resulting from oversampling method beats its counterparts by more than 3% in accuracy.
It clearly indicates that a better model is one which learns to distinguish negative examples well.
The sentence embeddings obtained through this model is further used for lookup in the Knowledge
Module (Section 4.2) in AMUSED.
5.4.2	Ablation Studies on Automated Metrics
We use two different automated metrics to check the effectiveness of the model and the query-
response representations that we learnt.
Next Dialogue Prediction Task: Various components of AMUSED are analysed for their perfor-
mance on next dialogue prediction task. This task tell us that, given two sentences (a query and a
response) and the context, whether second sentence is a valid response to the first sentence or not.
Embeddings for queries and responses are extracted from our trained network and then multiple
operations which include a) Concatenation, b) Element wise min and c) Subtraction are performed
on those before passing them to a binary classifier. A training example consists of embeddings of
two sentences from a (q, a) or (q, n) pair which are created in a similar fashion as in Section 4.2.1.
7
Under review as a conference paper at ICLR 2020
Table 3: Human based evaluation is conducted for 5 different components in the network as well as
KV memory networks. AMUSED achieves the highest percent gain over specified baseline model.
The scale is 1-10.
Model	Coherence	Context Aware	Non Monotonicity	Average Rating	%gain
Bi-GRU & GCN only	6.82	7.35	6.77	6.98	Baseline
BERT only	7.61	7.24	6.33	7.06	1.14
BERT with Bi-GRU & GCN	7.54	6.91	7.38	7.27	4.15
BERT and External KB with Bi-GRU & GCN	7.16	7.34	7.72	7.40	6.01
KV Memory Networks(Zhang et al., 2018c)	7.56	8.09	7.84	7.83	12.18
BERT & External KB with Bi-GRU, GCN and memory networks	8.21	8.34	7.82	8.12	16.33
Accuracy on this binary classification problem has been used to select the best network. Further-
more, we perform ablation studies using different modules to understand the effect of each compo-
nent in the network. A 4 layer neural network with ReLU activation in its hidden layers and softmax
in the final layer is used as the classifier. External knowledge in conjunction with memory and GCN
module has the best accuracy when embeddings of query and response are concatenated together. A
detailed study of performance of various components over these operations is shown in Table 1.
Precision@1: This is another metric used to judge the effectiveness of our network. It is different
from the next sentence prediction task accuracy. It measures that for n trials, the number of times a
relevant response is reported with the highest confidence value. Table 2 reports a comparative study
of this metric on 500 trials conducted for AMUSED along with results for other methods. DSTC
dataset is also evaluated on this metric without the knowledge module as explained in Section 5.1
Looking for exact answers might not be a great metric as many diverse answers might be valid for
a particular question. So, we must look for answers which are contextually relevant for that query.
Overall, we use next sentence prediction task accuracy to choose the final model before retrieval.
5.4.3	Ablation Study by Humans
There is no concrete metric to evaluate the performance of an entire conversation in a chit-chat
system. Hence, human evaluation was conducted using expert linguists to check the quality of
conversation. They were asked to chat for 7 turns and rate the quality of responses on a scale of 1-10
where a higher score is better. Similar to Zhang et al. (2018c), there were multiple parameters to rate
the chat based on coherence, context awareness and non-monotonicity to measure various factors
that are essential for a natural dialogue. By virtue of our network being retrieval based, we don’t
need to judge the responses based on their structural correctness as this will be implicit.
To monitor the effect of each neural component, we get it rated by experts either in isolation or
in conjunction with other components. Such a study helps us understand the impact of different
modules on a human based conversation. Dialogue system proposed by Zhang et al. (2018c) is also
reproduced and reevaluated for comparison. From Table 3 we can see that human evaluation follows
a similar trend as the automated metric, with the best rating given to the combined architecture.
6	Conclusion
In the paper, we propose AMUSED, a multi-stream architecture which effectively encodes semantic
information from the query while properly utilizing external knowledge for improving performance
on natural dialogue. It also employs GCN to capture long-range syntactic information and improves
context-awareness in dialogue by incorporating memory network. Through our experiments and
results using different metrics, we demonstrate that learning these rich representations through smart
training (using triplets) would improve the performance of chit-chat systems. The ablation studies
show the importance of different components for a better dialogue. Our ideas can easily be extended
to various conversational tasks which would benefit from such enhanced representations.
8
Under review as a conference paper at ICLR 2020
References
Nabiha Asghar, Pascal Poupart, Xin Jiang, and Hang Li. Deep active learning for dialogue genera-
tion. In Proceedings of the 6th Joint Conference on Lexical and Computational Semantics (*SEM
2017), pp. 78-83, Vancouver, Canada, August 2017. Association for Computational Linguistics.
doi: 10.18653/v1/S17-1008. URL https://www.aclweb.org/anthology/S17-1008.
Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Bengio. Neural machine translation by jointly
learning to align and translate. arXiv e-prints, abs/1409.0473, September 2014. URL https:
//arxiv.org/abs/1409.0473.
Joost Bastings, Ivan Titov, Wilker Aziz, Diego Marcheggiani, and Khalil Simaan. Graph con-
volutional encoders for syntax-aware neural machine translation. In Proceedings of the 2017
Conference on Empirical Methods in Natural Language Processing, pp. 1957-1967, Copen-
hagen, Denmark, September 2017. Association for Computational Linguistics. URL https:
//www.aclweb.org/anthology/D17-1209.
Kurt Bollacker, Colin Evans, Praveen Paritosh, Tim Sturge, and Jamie Taylor. Freebase: A collab-
oratively created graph database for structuring human knowledge. In Proceedings of the 2008
ACM SIGMOD International Conference on Management of Data, SIGMOD ’08, pp. 1247-1250,
New York, NY, USA, 2008. ACM. ISBN 978-1-60558-102-6. doi: 10.1145/1376616.1376746.
URL http://doi.acm.org/10.1145/1376616.1376746.
Antoine Bordes, Y-Lan Boureau, and Jason Weston. Learning end-to-end goal-oriented dialog.
arXiv preprint arXiv:1605.07683, 2016.
Joan Bruna, Wojciech Zaremba, Arthur Szlam, and Yann Lecun. Spectral networks and lo-
cally connected networks on graphs. In International Conference on Learning Representations
(ICLR2014), CBLS, April 2014, 2014.
Hongshen Chen, Xiaorui Liu, Dawei Yin, and Jiliang Tang. A survey on dialogue systems: Re-
cent advances and new frontiers. SIGKDD Explor. Newsl., 19(2):25-35, November 2017a.
ISSN 1931-0145. doi: 10.1145/3166054.3166058. URL http://doi.acm.org/10.1145/
3166054.3166058.
Shi-tao Chen, Songyi Zhang, Jinghao Shang, Badong Chen, and Nanning Zheng. Brain inspired
cognitive model with attention for self-driving cars. CoRR, abs/1702.05596, 2017b. URL http:
//arxiv.org/abs/1702.05596.
Kyunghyun Cho, Bart van Merrienboer, Caglar Gulcehre, Dzmitry Bahdanau, Fethi Bougares, Hol-
ger Schwenk, and Yoshua Bengio. Learning phrase representations using rnn encoder-decoder
for statistical machine translation. In Proceedings of the 2014 Conference on Empirical Methods
in Natural Language Processing (EMNLP), pp. 1724-1734. Association for Computational Lin-
guistics, 2014. doi: 10.3115/v1/D14-1179. URL http://www.aclweb.org/anthology/
D14-1179.
Michael Defferrard, Xavier Bresson, and Pierre Vandergheynst. Convolutional neural networks on
graphs with fast localized spectral filtering. In Proceedings of the 30th International Conference
on Neural Information Processing Systems, NIPS’16, pp. 3844-3852, USA, 2016. Curran Asso-
ciates Inc. ISBN 978-1-5108-3881-9. URL http://dl.acm.org/citation.cfm?id=
3157382.3157527.
Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: pre-training of deep
bidirectional transformers for language understanding. CoRR, abs/1810.04805, 2018. URL
http://arxiv.org/abs/1810.04805.
Bhuwan Dhingra, Lihong Li, Xiujun Li, Jianfeng Gao, Yun-Nung Chen, Faisal Ahmed, and Li Deng.
Towards end-to-end reinforcement learning of dialogue agents for information access. In Pro-
ceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Volume
1: Long Papers), pp. 484-495, Vancouver, Canada, July 2017. Association for Computational
Linguistics. doi: 10.18653/v1/P17-1045. URL https://www.aclweb.org/anthology/
P17-1045.
9
Under review as a conference paper at ICLR 2020
Marjan Ghazvininejad, Chris Brockett, Ming-Wei Chang, Bill Dolan, Jianfeng Gao, Scott Wen-
tau Yih, and Michel Galley. A knowledge-grounded neural conversation model. Febru-
ary 2018. URL https://www.microsoft.com/en-us/research/publication/
knowledge-grounded-neural-conversation-model/.
A. Graves, A. r. Mohamed, and G. Hinton. Speech recognition with deep recurrent neural networks.
In 2013 IEEE International Conference on Acoustics, Speech and Signal Processing, pp. 6645-
6649, May 2013. doi: 10.1109/ICASSP.2013.6638947.
Sangdo Han, Jeesoo Bang, Seonghan Ryu, and Gary Geunbae Lee. Exploiting knowledge base
to generate responses for natural language dialog listening agents. In Proceedings of the 16th
Annual Meeting of the Special Interest Group on Discourse and Dialogue, pp. 129-133, Prague,
Czech Republic, September 2015. Association for Computational Linguistics. doi: 10.18653/v1/
W15-4616. URL https://www.aclweb.org/anthology/W15-4616.
Matthew Henderson, Blaise Thomson, and Jason D Williams. The second dialog state tracking
challenge. In Proceedings of the 15th Annual Meeting of the Special Interest Group on Discourse
and Dialogue (SIGDIAL), pp. 263-272, 2014.
Geoffrey Hinton, Li Deng, Dong Yu, George Dahl, Abdel-rahman Mohamed, Navdeep Jaitly, An-
drew Senior, Vincent Vanhoucke, Patrick Nguyen, Brian Kingsbury, et al. Deep neural networks
for acoustic modeling in speech recognition. IEEE Signal processing magazine, 29, 2012.
Ben Hixon, Peter Clark, and Hannaneh Hajishirzi. Learning knowledge graphs for question answer-
ing through conversational dialog. In Proceedings of the 2015 Conference of the North American
Chapter of the Association for Computational Linguistics: Human Language Technologies, pp.
851-861, Denver, Colorado, May-June 2015. Association for Computational Linguistics. doi:
10.3115/v1/N15-1086. URL https://www.aclweb.org/anthology/N15-1086.
S. Jat, S. Khandelwal, and P. Talukdar. Improving Distantly Supervised Relation Extraction using
Word and Entity Based Attention. ArXiv e-prints, April 2018.
Thomas N. Kipf and Max Welling. Semi-supervised classification with graph convolutional net-
works. In International Conference on Learning Representations (ICLR), 2017.
A. Kumar, S. Verma, and H. Mangla. A survey of deep learning techniques in speech recogni-
tion. In 2018 International Conference on Advances in Computing, Communication Control and
Networking (ICACCCN), pp. 179-185, Oct 2018. doi: 10.1109/ICACCCN.2018.8748399.
Xiao Ling and Daniel S. Weld. Fine-grained entity recognition. In Proceedings of the Twenty-
Sixth AAAI Conference on Artificial Intelligence, AAAI’12, pp. 94-100. AAAI Press, 2012. URL
http://dl.acm.org/citation.cfm?id=2900728.2900742.
Christopher D. Manning, Mihai Surdeanu, John Bauer, Jenny Finkel, Steven J. Bethard, and
David McClosky. The Stanford CoreNLP natural language processing toolkit. In Associ-
ation for Computational Linguistics (ACL) System Demonstrations, pp. 55-60, 2014. URL
http://www.aclweb.org/anthology/P/P14/P14-5010.
Diego Marcheggiani and Ivan Titov. Encoding sentences with graph convolutional networks for se-
mantic role labeling. CoRR, abs/1703.04826, 2017. URL http://arxiv.org/abs/1703.
04826.
James H Martin and Daniel Jurafsky. Speech and language processing: An introduction to natural
language processing, computational linguistics, and speech recognition. Pearson/Prentice Hall
Upper Saddle River, 2009.
Mike Mintz, Steven Bills, Rion Snow, and Dan Jurafsky. Distant supervision for relation extraction
without labeled data. In Proceedings of the Joint Conference of the 47th Annual Meeting of the
ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP:
Volume 2-Volume 2, pp. 1003-1011. Association for Computational Linguistics, 2009.
Thien Nguyen and Ralph Grishman. Graph convolutional networks with argument-aware pool-
ing for event detection, 2018. URL https://www.aaai.org/ocs/index.php/AAAI/
AAAI18/paper/view/16329.
10
Under review as a conference paper at ICLR 2020
Jeffrey Pennington, Richard Socher, and Christopher D. Manning. Glove: Global vectors for word
representation. In Empirical Methods in Natural Language Processing (EMNLP), pp. 1532-1543,
2014. URL http://www.aclweb.org/anthology/D14-1162.
Amrita Saha, Vardaan Pahuja, Mitesh M. Khapra, Karthik Sankaranarayanan, and Sarath Chandar.
Complex sequential question answering: Towards learning to converse over linked question an-
swer pairs with a knowledge graph. In AAAI, pp. 705-713. AAAI Press, 2018.
Florian Schroff, Dmitry Kalenichenko, and James Philbin. Facenet: A unified embedding
for face recognition and clustering. In CVPR, pp. 815-823. IEEE Computer Society,
2015. ISBN 978-1-4673-6964-0. URL http://dblp.uni-trier.de/db/conf/cvpr/
cvpr2015.html#SchroffKP15.
Iulian Vlad Serban, Alessandro Sordoni, Ryan Lowe, Laurent Charlin, Joelle Pineau, Aaron
Courville, and Yoshua Bengio. A hierarchical latent variable encoder-decoder model for gener-
ating dialogues. In Proceedings of the Thirty-First AAAI Conference on Artificial Intelligence,
AAAI’17, pp. 3295-3301. AAAI Press, 2017. URL http://dl.acm.org/citation.
cfm?id=3298023.3298047.
Yiping Song, Rui Yan, Yansong Feng, Yaoyuan Zhang, Dongyan Zhao, and Ming Zhang. Towards
a neural conversation model with diversity net using determinantal point processes. In Thirty-
Second AAAI Conference on Artificial Intelligence, 2018.
Alessandro Sordoni, Michel Galley, Michael Auli, Chris Brockett, Yangfeng Ji, Margaret Mitchell,
Jian-Yun Nie, Jianfeng Gao, and Bill Dolan. A neural network approach to context-sensitive gen-
eration of conversational responses. In Proceedings of the 2015 Conference of the North American
Chapter of the Association for Computational Linguistics: Human Language Technologies, pp.
196-205, Denver, Colorado, May-June 2015. Association for Computational Linguistics. doi:
10.3115/v1/N15-1020. URL https://www.aclweb.org/anthology/N15-1020.
Sainbayar Sukhbaatar, Jason Weston, Rob Fergus, et al. End-to-end memory networks. In Advances
in neural information processing systems, pp. 2440-2448, 2015.
Shikhar Vashishth, Prince Jain, and Partha Talukdar. CESI: Canonicalizing open knowledge bases
using embeddings and side information. In Proceedings of the 2018 World Wide Web Conference,
WWW ’18, pp. 1317-1327, Republic and Canton of Geneva, Switzerland, 2018a. International
World Wide Web Conferences Steering Committee. ISBN 978-1-4503-5639-8. doi: 10.1145/
3178876.3186030. URL https://doi.org/10.1145/3178876.3186030.
Shikhar Vashishth, Rishabh Joshi, Sai Suman Prayaga, Chiranjib Bhattacharyya, and Partha Taluk-
dar. RESIDE: Improving distantly-supervised neural relation extraction using side informa-
tion. In Proceedings of the 2018 Conference on Empirical Methods in Natural Language
Processing, pp. 1257-1266. Association for Computational Linguistics, 2018b. URL http:
//aclweb.org/anthology/D18-1157.
Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N. Gomez,
Lukasz Kaiser, and Illia Polosukhin. Attention is all you need. CoRR, abs/1706.03762, 2017.
URL http://arxiv.org/abs/1706.03762.
Oriol Vinyals and Quoc Le. A neural conversational model. arXiv preprint arXiv:1506.05869, 2015.
Denny Vrandecic and Markus Krotzsch. Wikidata: A free collaborative knowledgebase. Commun.
ACM, 57(10):78-85, September 2014. ISSN 0001-0782. doi: 10.1145/2629489. URL http:
//doi.acm.org/10.1145/2629489.
Alex Wang, Amanpreet Singh, Julian Michael, Felix Hill, Omer Levy, and Samuel R. Bowman.
GLUE: A multi-task benchmark and analysis platform for natural language understanding. 2019.
In the Proceedings of ICLR.
Wei Wei, Quoc Le, Andrew Dai, and Jia Li. AirDialogue: An environment for goal-oriented dia-
logue research. In Proceedings of the 2018 Conference on Empirical Methods in Natural Lan-
guage Processing, pp. 3844-3854, Brussels, Belgium, October-November 2018. Association for
Computational Linguistics. URL https://www.aclweb.org/anthology/D18- 1419.
11
Under review as a conference paper at ICLR 2020
TsUng-Hsien Wen, David Vandyke, Nikola Mrksic, Milica Gasic, Lina M. RCjas Barahona, Pei-
Hao Su, Stefan Ultes, and Steve Young. A network-based end-to-end trainable task-oriented
dialogUe system. In Proceedings of the 15th Conference of the European Chapter of the Asso-
Ciation for Computational Linguistics: Volume 1, Long Papers, pp. 438-449, Valencia, Spain,
April 2017. Association for CompUtational LingUistics. URL https://www.aclweb.org/
anthology/E17-1042.
YU WU, Wei WU, Chen Xing, Ming ZhoU, and ZhoUjUn Li. SeqUential matching network: A new
architectUre for mUlti-tUrn response selection in retrieval-based chatbots. In Proceedings of the
55th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers),
pp. 496-505, VancoUver, Canada, JUly 2017. Association for CompUtational LingUistics. doi:
10.18653/v1/P17-1046. URL https://www.aclweb.org/anthology/P17-1046.
Tom YoUng, Erik Cambria, Iti ChatUrvedi, Hao ZhoU, SUbham Biswas, and Minlie HUang. AUg-
menting end-to-end dialogUe systems with commonsense knowledge. In Thirty-Second AAAI
Conference on Artificial Intelligence, 2018.
Hainan Zhang, Yanyan Lan, Jiafeng GUo, JUn XU, and XUeqi Cheng. Reinforcing coherence for
seqUence to seqUence model in dialogUe generation. In Proceedings of the Twenty-Seventh Inter-
national Joint Conference on Artificial Intelligence, IJCAI-18, pp. 4567-4573. International Joint
Conferences on Artificial Intelligence Organization, 7 2018a. doi: 10.24963/ijcai.2018/635. URL
https://doi.org/10.24963/ijcai.2018/635.
RUqing Zhang, Jiafeng GUo, Yixing Fan, Yanyan Lan, JUn XU, and XUeqi Cheng. Learning to control
the specificity in neUral response generation. In Proceedings of the 56th Annual Meeting of the
Association for Computational Linguistics (Volume 1: Long Papers), pp. 1108-1117, 2018b.
Saizheng Zhang, Emily Dinan, Jack Urbanek, ArthUr Szlam, DoUwe Kiela, and Jason Weston. Per-
sonalizing dialogUe agents: I have a dog, do yoU have pets too? CoRR, abs/1801.07243, 2018c.
URL http://arxiv.org/abs/1801.07243.
12