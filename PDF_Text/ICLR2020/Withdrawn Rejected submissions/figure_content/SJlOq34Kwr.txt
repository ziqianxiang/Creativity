Figure 1: Probing a new environment. Given the input showing a (purple) ball moving from rightto left, three possible future outcomes are possible: the ball passes above (A), passes under (U), orbounces (B) off the object. This cannot be predicted from appearance alone. Instead, our modellearns the property of the object by probing each new environment via a small set of experiments.
Figure 2: Overview of our method. Ψ (bottom right block) acts as a meta-learning module. It takesas input past experiments compressed into dynamic images alongside with the median image andlearn to optimise m and a to minimise the final loss. η (top-left yellow block) extracts states x0:T0ʌwhich are carried forward with the auto-regressive predictor Φ. Finally g renders frame It from xt .
Figure 3: Qualitative results. We show time lapse images for the trajectory predicted for the ballcolliding with obstacles of type U (permeable; left) and B (solid; right). We test three variants ofthe model: (1) the model supervised with ground-truth obstacle masks, (2) the unsupervised modeland (3) the model after suppressing the dynamic image that summarizes the experience (ablation).
Figure A1: Dataset samples. Pairs of sample data from left to right: R2, C, C+T.
Figure A2: Additional material used for data generation. From left to right: color palette for solidobject/background color (R2,R4,C), texture used to increase background complexity in (C+T), set ofcustom objects for (C) data generation.
Figure A3: Networks architecture detail. All the networks generally uses layer normalization ηand Φ are simple auto-encoder type architecture while Ψ shares similarity with U-Net.
