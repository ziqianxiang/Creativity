Figure 1: Meta-Learning Runge-Kutta: The model represented by the blue block determines thestep size adjustment logrn-ι using a LSTM and a linear layer, Cf. Eq. (10). The Runge-Kuttaupdate then determines the new step size log hn = log hn-ι + log rn-ι. The new step size is usedto perform the next Runge-Kutta step which computes the approximation yn+ι at time step tn+ι andan error estimate e∏*n+ι according to (12). Then the next input Xn+ι for the model is computed.
Figure 2: The mean L1-Lagrangian loss (5) of the approximation (tn, yn) in step n over threedifferent test sets. (a) MLRK achieved a smaller mean loss, thus, it generalizes well to new probleminstances of the same class of problems (low-freq) it was trained on. (b) MLRK achieves a lowerloss on instances with both higher amplitude and frequency than the problem instances used duringtraining. Thus, MLRK is able to generalize to different problems. (c) Even on higher frequenciesthan the ones in (med-freq), MLRK shows a mean loss similar to that of the baseline controller.
Figure 3: The mean local error over the test set of van der Pol ODEs for different methods is shown.
Figure 4: The mean local error over the test set of double pendulums for different methods is shown.
Figure 5: The upper plot shows the numerically approximated solution y1(t) of avan der Pol oscillatorwith σ = 2. The lower plot displays the local error estimates for h = 0.1. The error estimates showhigh spikes whenever the solution switches from being driven to being damped.
Figure 6: A double pendulum is one pendulum attached to another pendulum. The masses M1 andM2 of these pendulums may vary as do the lengths L1 and L2. The initial configuration of angularposition and velocity determines the trajectory of the double pendulum.
Figure 7: The red and blue line show the mean loss Eq. (5) of the approximation (tn , yn) in step nover the test set. The red and blue area indicate the standard deviation. (a) The learned model LSTMattains a smaller mean loss on new instances of the same class of problems (high-freq) it was trainedon, this is especially pronounced in the steps n ≥ 5. (b) The test set consists of 1500 harmonicoscillators of class (higher-freq), which means that it also contains higher frequency oscillators. Themean loss of our learned controller is lower than the mean loss of the baseline controller whichindicates that our method generalizes to these different problem instances.
Figure 8: The mean local error of our learned controller and the baseline controller is shown. (a)Testing on 1500 harmonic oscillators of class (low-freq) shows that both the baseline and the learnedcontroller are able to keep the local errors close to the tolerance. The mean local error of the learnedcontroller is slightly closer to the tolerance. (b) For a test set consisting of 1500 harmonic oscillatorsof class (high-freq) the two controllers show a similar performance, both are able to keep the localerror close to the tolerance. Testing the controllers on problem instances of class (med-freq) yields asimilar results.
Figure 9: The mean local error over different test sets is shown. (a) The test set consists of 1500linear differential equations with constant coefficients of class (osc-increasing). For these probleminstances the learned controller demonstrates its ability to keep the mean local error close to thetolerance. In fact, the local errors of our controller appear to be closer to the tolerance than the localerrors of the baseline for some part of the integration. (b) Testing our controller on a set of 1500 vander Pol oscillators of type (vdP(0, 1)) reveals a similar performance to that of the baseline controller.
