Figure 1: Primal graph and its dual graph: a) A graph G, which represents a primal graph, with5 nodes; b) the corresponding dual graph G to graph G at its left side; arrow-arcs demonstrate theconversion between G and G .
Figure 2: Architecture of TwinGCN: Two pipleline architecture, the upper is for primal graph, thelower is for the dual graph. The predictions of the two pipelines are combined with their KL-Divergence for final results.
Figure 3: Fast algorithm for calculating the aggregated primal predictions from dual predictionsFig.3 illustrates a fast algorithm deriving primal predictions from predictions of dual pipeline. It isconducted by introducing two special incidence matrices. The matrix at the left hand side (N × M ,N = |V | and M = |E |) is an incidence matrix in which the rows represent primal nodes, eachcolumn depicts whether a primal node in a row has an incidence in the dual node represented bythis column. The rightmost matrix is the incidence matrix of primal labels presenting in dual labelswith dimension of L2 × L. Although these two matrices are extremely sparse when node number isvery large (we store them in compressed form), by taking advantage of GPU’s powerful computingcapability, the delicate sparse matrix multiplication subroutine, e.g. Nvidia’s cuSARSE, runs muchfaster than codes with loops for lumping the incidences.
Figure 4: a) Mean and standard deviation of validation accuracy on Cora; b) Loss function of vali-dationperformance of GCN, indicating that applying relationship between nodes can be a powerful tool inthe classification task. The regularization(KL-divergence). However, TwinGCN suffers from largeruncertainty suggested by the larger standard deviation.
