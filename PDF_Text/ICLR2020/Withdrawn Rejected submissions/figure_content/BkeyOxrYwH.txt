Figure 1: Innovating tools in a simulated reaching task. The model is trained on data triplets comprisingthe toolkit, the task environment, and an indicator of success (left). The toolkit is an image of stick-liketools (here in yellow, light green, and pink). The goal of the task is to determine if any tool can reach thedark green target whilst touching the red boundary and avoiding any blue obstacles. When no object in thetoolkit satisfies these geometric constraints, our model (TasMON) is able to take a tool from the toolkit andimagine suitable modifications until it does satisfy these constraints (right). Here we see TasMON imaginethe yellow stick transforming into a hook with a thin enough handle to both pass through the gap betweenthe blue obstacles and reach the dark green target, all whilst still crossing over the red boundary.
Figure 2: Illustrative examples of tasks in our dataset. Each task has a green target, a red line indicatingthe movement limits of the robot, and potentially some blue obstacles. We train on the first four in-samplescenario types: A - D. During evaluation, We also include interpolation SCenario types: E - G, which canbe solved by the tools seen in training data, as well as an extrapolation scenario type: H, which can onlybe solved by claw tools never seen in the training data. We choose these scenarios to set constraints onthe dimensions of an appropriate tool; for example, in scenario C (third column), a tool needs to be thinenough to reach the goal. Other attributes which affect applicability are tool length and type. In the toprow, we overlay tools in yellow, which can press the buttons without colliding with the obstacles or leavingthe movement space, as indicated by the green tick. The bottom row, marked with red crosses, shows tasksbeing attempted by orange tools, which cannot succeed without violating the constraints. Tools are renderedhere for visualisation and are not present in the task images.
Figure 3: TasMON model architecture. A convolutional encoder φ represents the task image IG as a latentvector zG . In parallel, the encoder ψ of a MONet scene decomposition model represents the toolkit imageIT as a set of latent vectors zT,1..3 where each latent vector represents one of the tools. The concatenatedtool-task representations zcat,1..3 are used to compute a soft-attention α1..3 over tools. A weighted sum bzof the tool representations is concatenated to the task representation again forming hcat which is used bya classifier σ to estimate the success of any of the tools solving the task. The task loss Ltask is computedover σ's output. We use the MONet decoder ψ0 to render latent tool representations into images. Given thegradient signal produced when optimising task success for the classifier σ, a chosen latent tool representationzim gets updated to render an increasingly suitable tool for the task, as depicted on the bottom right in acallback to Figure 1. A latent vector z4 for the toolkit background, and a second loss LMONet used to trainthe MONet model, are omitted from the figure for clarity of presentation.
Figure 4: Qualitative results from our imagination experiments. The figure shows the evolution of toolsduring the imagination process (overlayed manually over the corresponding task image). Of these, eachrow illustrates how the imagination procedure can succeed at constructing tools that solve a task, by (A)increasing the tool length, (B) decreasing the tool width, and (C) changing the configuration between a stickand a hook. The overlapping area is marked in bright yellow. The arrows indicates tool synthesis withincreasing optimisation steps.
Figure 5: More illustrative examples of tasks (cf. Figure 2). We procedurally generated 196,390 uniqueinstances across eight scenario types for our reaching experiments.
Figure 6: More examples of imagined tools for all tasks. The first two columns are the task and toolkitinputs, and the next four columns are imagination reconstructions for the selected tool overlaid on the taskimage. The overlapping area is marked in bright yellow.
