Figure 1: Network architecture: the point (x, y) ∈ R2 serves as an input and the value u(x, y) as theoutput.
Figure 2: Left to right: finite differences grid, finite elements mesh and random points samples usedin the proposed algorithm.
Figure 3: Synthetic conductivities σ(x) referred to as phantoms. Left to right: phantom 1, phantom2 and phantom 3Table 1: Forward problem results for phantom 1 compared with the DGM method Sirignano &SPilioPoulos (2017)	n	φ	u: DGM		u: Proposed		Ux: DGM		ux: Proposed				MSE	PSNR	MSE	PSNR	MSE	PSNR	MSE	PSNR丁	1	~0	2.50e-1	-902	2∙38e-4	39.23	6.01e-6	11.17	7.11e-9	40.432	1	π∕8	4.20e-2	14.90	1.13e-4	40.60	7.95e-7	19.27	5.92e-9	40.553	1	π∕4	5.46e-2	13.54	1.23e-4	40.03	1.87e-6	13.36	5.62e-9	38.584	2	0	5.12e-2	16.90	4.50e-5	47.46	1.64e-6	14.28	2.81e-9	41.945	2	π∕4	6.11e-2	6.51	831e-5	35.18	1.99e-6	11.08	2.74e-9	39.69The first phantom is shown in Figure 3 left. The impedance values associated with the backgroundelliPses and circle were 1, 5 and 2 resPectively. The original Piecewise constant function σ wasslightly smoothed by a Gaussian kernel.
Figure 4: Reconstructed conductivity σ(x) using the generalized inverse problem. Left: phantom 1,Right: phantom 2. MSE and PSNR are summed up in rows 1-2 of Table 3.
Figure 5: Free form shapes. Left to right: Ω1, Ω2, Ω3 and sample points of Ω3. The red pointsindicate the boundary.
Figure 6: Reconstructed conductivity σ(x) using the generalized inverse problem given phantom 3applied on different domains. Left to right: Ω1, Ω2, Ω3. MSE and PSNR are given in rows 3-5 ofTable 3and1 Nb	β NsI σ(x; wσ = XJj σ(x;wσ D + N X ∣σ (Xb) - σ0 (Xb )| + αkwσ k2 + N X Vσ (Xi)|p.
Figure 7: Reconstructed conductivity C(x, y). Left: ground truth, Middle: proposed method,Right: Xu & Darve (2019). MSE and PSNR are given in rows 1-4 of Table 47.2	Wave EquationThe second example is the wave equation given byd Udt2y,t) = η2(χ,y)v2u(χ,y,t)	((χ,y),t) ∈ [-1,1]2 X [0,τ].
Figure 8: Reconstructed velocity field η(x, y). Left: ground truth, Middle: proposed method,Right: Xu & Darve (2019). MSE and PSNR are given in rows 5-8 of Table 4Table 4: Inverse problem results for diffusion and wave equations	Equation	σ noise	Xu & Darve (2019)		Proposed				MSE	PSNR	MSE	PSNR丁	Diffusion	-0	4.90e-4	39.12	2.04e-4	42.922	Diffusion	1e-7	0.259	11.89	0.249	12.063	Diffusion	5e-7	0.335	10.77	0.316	11.024	Diffusion	1e-6	0.448	9.50	0.438	9.605	Wave	0	0.015	19.01	0.013	19.536	Wave	3e-9	0.049	13.92	0.015	19.167	Wave	3.5e-9	0.056	13.34	0.018	18.328	Wave	4e-9	0.059	13.11	0.029	16.198	Implementation DetailsThe network architecture had 4 layers having 26, 26, 26 and 10 neurons. The algorithm was im-plemented by TensorFlow Ten (2015) using the ADAM optimizer which is a variant of the SGDalgorithm. We used almost the same hyper parameters set in our experiments. Batch size=1000,decaying learning rate starting at 5e - 3. The learning rate was factored by 0.8 every 200 epochs,Ns = 80000, Nb = 1200, λ = 0.01, α = 1e - 8, K = 40, μ = 0.01, and β = 0.01. In the diffusionand wave equation case we set λ = 1, β = 1e - 4, μ = 1e - 4 and α = 1e - 5. Running time, for
Figure 9: Sensitivity analysis of the algorithm with respect to the number of sample points.
Figure 10: Forward problem results of U(X) and ∂u(x)∕∂x for current frequency n = 1 and phaseφ = π∕8 given phantom 1. Left column: ground truth (FEM). Middle column: proposed method.
Figure 11: Forward problem results of U(X) and ∂u(x)∕∂x for current frequency n = 2 and phaseφ = π∕2 given phantom 2. Left column: ground truth (FEM). Middle column: proposed method.
Figure 12: Forward problem results of u(x) and ∂u(x)∕∂x for current frequency n = 2 and phaseφ = π∕4 given phantom 3 applied on different domains. Left to right: Ω1, Ω2, Ω3. MSE and PSNRare reported in rows 6, 8 and 10 of Table 2.
