Figure 1: MCTS and its parallelization. (a) An overview of MCTS. (b) The ideal parallelization: themost up-to-date statistics {Vs, Ns} (in chromatic color) are assumed to be available to all workers assoon as a simulation begins (unrealistic in practice). (c) The key challenge in parallelizing MCTS:the workers can only access outdated {Vs, Ns} (in gray-color), leading problems like collapse ofexploration. (d) WU-UCT tracks the number of incomplete simulation queries, which is denoted asOs , and modifies the UCT policy in a principled manner to retain effective exploration-exploitationtradeoff. It achieves comparable speedup and performance as the ideal parallelization.
Figure 2: Diagram of WU-UCTâ€™s system architecture and its time consumption. (a) the Greenblocks and the task buffers are operated at the master, while the blue blocks are executed by theworkers. (b-c) the breakdown of the time consumption on two game benchmarks (Section 5).
Figure 3:	Three popular parallel MCTS algorithms. LeafP parallelizes the simulation steps, TreePuses virtual loss to encourage exploration, and RootP parallelizes the subtrees of the root node.
Figure 4:	WU-UCT speedup and performance. Results are averaged over 10 runs. WU-UCT achieves linear speedup with negligible performance loss (measured in game steps).
Figure 5:	Speed and performance test of our WU-UCT along with three baselines on four Atarigames. All experiments are repeated three times and the mean and standard deviation (for episodereward only) are reported. For WU-UCT, the number of expansion workers is fixed to be one.
Figure 6:	Snapshots of the Tap-elimination game.
Figure 7:	Our deployed user pass-rate prediction system.
Figure 8: Distribution of the pass-rateprediction error on 130 game-levels.
Figure 9: Architecture of the original PPO network (left) and the distilled network (right).
Figure 10: Relative performance between WU-UCT and three baseline approaches on 15 Ataribenchmarks. Relative performance is calculated according to the mean episode reward in 3 trials.
