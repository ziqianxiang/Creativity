{
    "Decision": {
        "decision": "Reject",
        "title": "ICLR 2018 Conference Acceptance Decision",
        "comment": "The proposed relational reasoning algorithm is basically a fairly standard graph neural network, with a few modifications (e.g., the prediction loss at each layer - also not a new idea per se).\n\n The claim that previously reasoning has not been considered in previous applications of graph neural networks (see discussion) is questionable.  It is not even clear what is meant here by 'reasoning' as many applications of graph neural networks may be regarded as performing some kind of inference on graphs (e.g., matrix completion tasks by Berg, Kipf and Welling; statistical relational learning by  Schlichtkrull et al).\n\nSo the contribution seems a bit over-stated.  Rather than introduces a new model, the work basically proposes an application of largely known model to two (not-so-hard) tasks which have not been studied in the context of GNNs. The claim that the approach is a general framework for dealing with complex reasoning problems is not well supported as both problems are (arguably) not complex reasoning problems (see R2).\n\nThere is a general consensus between reviewers that the paper, in its current form, does not quite meet acceptance criteria.\n\nPros:\n-- an interesting direction\n-- clarity\nCons:\n-- the claim of generality is not well supported\n-- the approach is not so novel\n-- the approach should be better grounded in previous work\n\n\n"
    },
    "Reviews": [
        {
            "title": "The proposed method should be better explained",
            "rating": "5: Marginally below acceptance threshold",
            "review": "This paper describes a method called relational network to add relational reasoning capacity to deep neural networks. The previous approach can only perform a single step of relational reasoning, and was evaluated on problems that require at most three steps. The current method address the scalability issue and can solve tasks with orders of magnitude more steps of reasoning. The proposed methods are evaluated on two problems, Sudoku and Babi, and achieved state-of-the-art results. \n\nThe proposed method should be better explained. What’s the precise definition of interface? It’s claimed that other constraint propagation-based methods can solve Sudoku problems easily, but don’t respect the interface. It is hard to appreciate without a precise definition of interface. The proposed recurrent relational networks are only defined informally. A definition of the model as well as related algorithms should be defined more formally. \n\n\n\n",
            "confidence": "3: The reviewer is fairly confident that the evaluation is correct"
        },
        {
            "title": "Very nice direction but no complex relational reasoning demonstrated and missing related work",
            "rating": "3: Clear rejection",
            "review": "The paper introduced recurrent relational network (RRNs), an enhanced version of the\nexisting relational network, that can be added to any neural networks to add\nrelational reasoning capacity. RRNs are illustrated on sudoku puzzles and textual QA.\n\nOverall the paper is well written and structured. It also addresses an important research question: combining relational reasoning and neural networks is currently receiving a lot of attention, in particular when generally considering the question of bridging sub-symbolic and symbolic methods. Unfortunately, it is current form, the paper has two major downsides. First of all,  the sudoku example does not illustrate “complex relational reasoning” as claimed in the title. The problem is encoded at a positional level where \nmessages encoded as MLPs and LSTMs implement the constraints for sudoko. Indeed, \nthis allows to realise end-to-end learning but does not illustrate complex reasoning. \nThis is also reflected in the considered QA task, which is essentially coded as a positional problem. Consequently, the claim of the conclusions, namely that “we have\nproposed a general relational reasoning model” is not validated, unfortunately. Such\na module that can be connected to any existing neural network would be great. However, \nfor that one should show capabilities of relational logic. Some standard (noisy) \nreasoning capabilities such as modus ponens. This also leads me to the second downside. \nUnfortunately, the paper falls short on discussion related work. First of all, \nthere is the large field of statistical relational learning, see \n\nLuc De Raedt, Kristian Kersting, Sriraam Natarajan, David Poole:\nStatistical Relational Artificial Intelligence: Logic, Probability, and Computation. Synthesis Lectures on Artificial Intelligence and Machine Learning, Morgan & Claypool Publishers 2016\n\nfor a recent overview. As it has the very same goals, while not using a neural architecture for implementation, it is very much related and has to be discussed. That\none can also use a neural implementation can be seen in \n\nIvan Donadello, Luciano Serafini, Artur S. d'Avila Garcez:\nLogic Tensor Networks for Semantic Image Interpretation. IJCAI 2017: 1596-1602\n\nMatko Bosnjak, Tim Rocktäschel, Jason Naradowsky, Sebastian Riedel:\nProgramming with a Differentiable Forth Interpreter. ICML 2017: 547-556\n\nLuciano Serafini, Artur S. d'Avila Garcez:\nLearning and Reasoning with Logic Tensor Networks. AI*IA 2016: 334-348\n\nGustav Sourek, Vojtech Aschenbrenner, Filip Zelezný, Ondrej Kuzelka:\nLifted Relational Neural Networks. CoCo@NIPS 2015\n\nTim Rocktäschel, Sebastian Riedel:\nEnd-to-end Differentiable Proving. CoRR abs/1705.11040 (2017)\n\nWilliam W. Cohen, Fan Yang, Kathryn Mazaitis:\nTensorLog: Deep Learning Meets Probabilistic DBs. CoRR abs/1707.05390 (2017)\n\nto list just some approaches. There are also (deep) probabilistic programming \napproaches such as Edward that should be mentioned as CPS like problems (Sudoku) can\ndefinitely be implement there. Moreover, there is a number of papers that discuss \nembeddings of relational data and rules such as \n\nWilliam Yang Wang, William W. Cohen:\nLearning First-Order Logic Embeddings via Matrix Factorization. IJCAI 2016: 2132-2138\n\nThomas Demeester, Tim Rocktäschel, Sebastian Riedel:\nLifted Rule Injection for Relation Embeddings. EMNLP 2016: 1389-1399\n\nand even neural-symbolic approaches with a long publication history. Unfortunately, \nnon of these approaches has been cited, giving the wrong impression that this is \nthe first paper that tackles the long lasting question of merging sub-symbolic and symbolic reasoning. BTW, there have been also other deep networks for optimisation, see e.g. \n\nBrandon Amos, J. Zico Kolter:\nOptNet: Differentiable Optimization as a Layer in Neural Networks. \nICML 2017: 136-145\n\nthat have also considered Sudoku. To summarise, I like very much the direction of the paper but it seems to be too early to be published. ",
            "confidence": "5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature"
        },
        {
            "title": "Interesting, clearly presented new structured prediction algorithm. Paper marginally below acceptance threshold.",
            "rating": "5: Marginally below acceptance threshold",
            "review": "This paper introduces recurrent relational networks: a deep neural network for structured prediction (or relational reasoning). The authors use it to achieve state-of-the-art performance on Soduku puzzles and the BaBi task (a text based QA dataset designed as a set of to toy prerequisite tasks for reasoning).\n\nOverall I think that by itself the algorithm suggested in the paper is not enough to be presented in ICLR, and on the other hand the authors didn't show it has a big impact (could do so by adding more tasks - as they suggest in the discussion). This is why I think the paper is marginally below the acceptance threshold but could be convinced otherwise.\n\nC an the authors give experimental evidences for their claim: \"As such, the network could use a small part of the hidden state for retaining a current best guess, which might remain constant over several steps, and other parts of the hidden state for running a non-greedy...\" - \n\nPros\n- The idea of the paper is clearly presented, the algorithm is easy to follow.\n- The motivation to do better relational reasoning is clear and the network suggested in this paper succeeds to achieve it in the challenging tasks.\n\nCons\n- The recurrent relational networks is basically a complex learned message passing algorithm. As the authors themselves state there are several works from recent years which also tackle this (one missing reference is Deeply Learning the Messages in Message Passing Inference of Lin et al from NIPS 2016). It would been interesting to compare results to these algorithms.\n- For the Sudoku the proposed architecture of the network seems a bit to complex, for example why do a 16 embedding is needed for representing a digit between 0-9? Some other choices (batch size of 252) seem very specific.",
            "confidence": "3: The reviewer is fairly confident that the evaluation is correct"
        }
    ]
}