{
    "Decision": "",
    "Reviews": [
        {
            "summary_of_the_paper": "This paper proposes a deep learning-based method to solve linear stress problems. The original problem is transformed into an energy functional minimizatoin problem, and then its discrete form is used as the loss function. In addition, this paper analyzes the error and provides numerical examples for verification.",
            "main_review": "The main concern is the novlety of this paper. RitzNet is not essentially same as  the deep Ritz method [1]. It is well known that the linear elasticity problem can be formulated as a system of elliptic partial differential equations in divergence form, which can be considered as a variational minimization problem. Then variational problems can be solved by the deep Ritz method proposed in [1]. Besides, using the penalty method to deal with Dirichlet boundary conditions is also mentioned in [1].\n\nLemma 1 and Proposition 1 are restatements of the results in standard elliptic PDEs textbook, such as [2]. Besides, Theorem 1 is also a trivial property of energy functional $J(u)$, which means if we replace $\\mathcal{M}_{N}(\\theta,l)$ by another function space, the equation is also hold. As for Theorem 2, it only estimates the error between solutions of the discrete energy (13) and the continuous one (3). I would expect the authors to analyzes the error between the solution of (3) and that of (1).\n\nFinally, I have a question that why RitzNet are beneficial than finite element method. The deep neural networks have advantages in high-dimensional problems, but the linear stress problems do not need to consider high-dimensional case. Moreover, using FEM only need to solve a linear system while training neural network solution is a non-convex optimization problem.\n\n [1] Weinan, E., Yu, B.: The deep ritz method: A deep learning-based numerical algorithm\nfor solving variational problems. Communications in Mathematics and Statistics 6(1), 1-12 (2017)\n\n [2] Gilbarg, D., Trudinger, N.: Elliptic partial differential equations of second order, 2nd\ned. Springer (1998)",
            "summary_of_the_review": "There is no essential difference between RitzNet and the deep Ritz method [1], and most of results in the paper are the classic results in the textbook. Besides, RitzNet has no obvious advantages over the FEM method for solving linear stress problems.\n [1] Weinan, E., Yu, B.: The deep ritz method: A deep learning-based numerical algorithm\nfor solving variational problems. Communications in Mathematics and Statistics 6(1), 1-12 (2017)\n\n [2] Gilbarg, D., Trudinger, N.: Elliptic partial differential equations of second order, 2nd\ned. Springer (1998)",
            "correctness": "4: All of the claims and statements are well-supported and correct.",
            "technical_novelty_and_significance": "2: The contributions are only marginally significant or novel.",
            "empirical_novelty_and_significance": "1: The contributions are neither significant nor novel.",
            "flag_for_ethics_review": [
                "NO."
            ],
            "recommendation": "3: reject, not good enough",
            "confidence": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
        },
        {
            "summary_of_the_paper": "The paper proposed RitzNet---an unsupervised learning method for solving linear elastic boundary value problem. The loss function is the energy functional. Numerical experiments are preformed to show the effectiveness of the proposed method. Theoretical analysis for error estimation is also derived.",
            "main_review": "Strengths:\n- The paper showed theoretically that the total error is bounded by the numerical integration error and the network approximation error.\n\nWeaknesses:\n- There is no novelty in the method. It is basically the deep ritz method [E & Yu, 2018]. Training a network to minimize the energy functional of PDEs has been used in many papers.\n- The paper only considered one PDE problem, which is not convincing enough to show the effectiveness of the method. Other problems and nonlinear problems should be tested. In fact, the same problem and more complicated problems have been solved using almost the same method in literature, such as https://doi.org/10.1016/j.cma.2021.113933\n\nOther comments:\n- The introduction is not correct. The method is in [Raissi et al., 2019] is not really semi-supervised. It is semi-supervised for inverse PDE problems, but it is unsupervised for forward PDE problems.\n",
            "summary_of_the_review": "There is little novelty in the method, and the problems solved in the paper have addressed in a similar way in the literature.",
            "correctness": "3: Some of the paper’s claims have minor issues. A few statements are not well-supported, or require small changes to be made correct.",
            "technical_novelty_and_significance": "1: The contributions are neither significant nor novel.",
            "empirical_novelty_and_significance": "1: The contributions are neither significant nor novel.",
            "flag_for_ethics_review": [
                "NO."
            ],
            "recommendation": "1: strong reject",
            "confidence": "4: You are confident in your assessment, but not absolutely certain. It is unlikely, but not impossible, that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work."
        },
        {
            "summary_of_the_paper": "The goal of this paper is to use neural networks to solve PDEs without requiring a discretization (or mesh).\nThe variational form of the PDE is used, which translates into a loss function for the neural network.\n\nThe method is tested on a benchmark PDE with an analytical solution: \" A TWO-DIMENSIONAL QUADRATIC MEMBRANE UNDER TENSION\" as well as a more challenging problem with no exact solution : \"a common scenario in engineer design is to make decision in a space of design parameters referencing the simulation results for a series of choices. For example, engineers ask what is the largest hole size allowed to use such that the maximum stress is still within the material’s limit.\"\n\nOnce the neural network is available, it is used to solve parametric PDEs.  The output of RitzNet (with various hyperparameters) is comapred to FEA (adaptive p-element), a benchmark method for solving these types of PDEs. \n",
            "main_review": "This paper makes an effort to motivate the use of neural networks to solve PDE problems: these problem already have a good solution (the benchmark) so why use a neural network.  The problem with using neural networks is that this method lacks the convergence theorem and error analysis available for the finite element method.  However, the model is introduced as a preprocessing step, where, in principle, an engineer could quickly perform a parameter search, before, presumably, solving the problem using a more reliable method.\n\nHowever, the problem with this idea is that the accuracy of the neural network is not very good, even on the benchmark problem (Table 2).  In particular, in the last column, only one model gets with 10 percent of the correct value.  So this is a preliminary result.\n\nSecond, even if better accuracy was obtained, it would be necessary to further justify the method as the parameter are changed.  How do we know that accuracy on new problem (or different parameters) is controlled by the accuracy on the prior problems?",
            "summary_of_the_review": "Better than other PDE / neural network papers, but still doesn't beat the basic PDE solvers in terms of accuracy or reliability. ",
            "correctness": "3: Some of the paper’s claims have minor issues. A few statements are not well-supported, or require small changes to be made correct.",
            "technical_novelty_and_significance": "2: The contributions are only marginally significant or novel.",
            "empirical_novelty_and_significance": "2: The contributions are only marginally significant or novel.",
            "flag_for_ethics_review": [
                "NO."
            ],
            "recommendation": "3: reject, not good enough",
            "confidence": "3: You are fairly confident in your assessment. It is possible that you did not understand some parts of the submission or that you are unfamiliar with some pieces of related work. Math/other details were not carefully checked."
        },
        {
            "summary_of_the_paper": "The paper proposed a neural-network based approach for solving the classical linear elasticity problem, where the displacement field is represented by a neural network. The proposed method is sequentially test with 3 case studies and the results are compared to the exact solution as well as the solution given by classical finite element method. ",
            "main_review": "I enjoyed reading the paper and appreciated the author's effort for brining mathematical rigorous in the writing. However, I do not think the approach proposed in the article is novel - in fact, the so-called physics informed neural networks use exactly the same idea and there are already published papers using exactly the same idea (see for example, see for example the deep-ritz method by Weinan and Yu (2017)). In addition, the cases considered in the paper are trivial - as the governing PDEs considered in this study are all linear and there are numerous papers already published showing that the deep-ritz method (or other version of it) can solve linear PDEs very well. \n\nIn particular, I have a few questions/comments about the details: \n(1) The benefit of using a neural network to approximate the solution field is it is differentiable. The author seems to abandon this property and applied numerical differentiation. I wonder how good/bad it would be if one use auto-differentiation rather than numerical differentiation to analyze the same problem. \n(2) In case 2, the results obtained from FEM and the author's approach doesn't look the same to me (at least visually). I understand the peak values are close but that means nothing. How different are they in terms of L2 norm, or H1 norm? I suspect a large difference is there given the clear visual difference. \n(3) In case 3 (Fig. 7a and 7b) it seems that there are jumps (discontinuities) in displacement fields far away from the singularity (judging from the contour plot). I do not think this is physical and suspect that there are huge errors in the solution by the author's method. \n\n",
            "summary_of_the_review": "In general, I do not think the paper meets the standard of ICLR in its current form. Therefore I recommend a strong rejection. ",
            "correctness": "2: Several of the paper’s claims are incorrect or not well-supported.",
            "technical_novelty_and_significance": "1: The contributions are neither significant nor novel.",
            "empirical_novelty_and_significance": "Not applicable",
            "flag_for_ethics_review": [
                "NO."
            ],
            "recommendation": "1: strong reject",
            "confidence": "5: You are absolutely certain about your assessment. You are very familiar with the related work and checked the math/other details carefully."
        }
    ]
}