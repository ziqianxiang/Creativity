{
    "Decision": {
        "decision": "Reject",
        "comment": "The paper proposes two methods for link prediction in knowledge hypergraphs. The first method concatenates the embedding of all entities and relations in a hyperedge. The second method combines an entity embedding, a relation embedding, and a weighted convolution of positions. The authors demonstrate on two datasets (derived by the authors from Freebase), that the proposed methods work well compared to baselines. The paper proposes direct generalizations of knowledge graph approaches, and unfortunately does not yet provide a comprehensive coverage of the possible design space of the two proposed extensions.\n\nThe authors should be commended for providing the source code for reproducibility. One of the reviewers (who was unfortunately also the most negative), was time pressed. Unfortunately, the discussion period was not used by the reviewers to respond to the authors' rebuttal of their concerns.\n\nEven discounting the most negative review, this paper is on the borderline, and given the large number of submissions to ICLR, it unfortunately falls below the acceptance threshold in its current form.\n\n\n",
        "title": "Paper Decision"
    },
    "Reviews": [
        {
            "experience_assessment": "I have published one or two papers in this area.",
            "rating": "1: Reject",
            "review_assessment:_thoroughness_in_paper_reading": "I read the paper thoroughly.",
            "review_assessment:_checking_correctness_of_experiments": "I assessed the sensibility of the experiments.",
            "title": "Official Blind Review #2",
            "review_assessment:_checking_correctness_of_derivations_and_theory": "I carefully checked the derivations and theory.",
            "review": "The paper proposes models for link prediction task in a generalized knowledge graph setting that can contain n-ary\nrelationships. The paper explains the problem of using only binary relationships to model real-world scenarios, typical workaround for converting n-ary relationships to binary relationships and their\nproblems. The work then extends one model for link prediction in a binary setting to n-ary setting. Work also proposes a novel model using positional convolutional filters for entity embeddings to model n-ary relationships and use that for link prediction. Work also establishes baselines for the new problem and publishes two\ndatasets (subsets of FREEBASE) for the same. Experimental results show the proposed models, outperform the baselines by good margin (with some exceptions). \n\nThis is a very obvious generalization from binary to n-array relations, but the work is very incremental and does not provide any good motivations. It is well known that hypergraphs can be approximated with graphs using clique and star expansions but I do not see any discussion regarding this. Frankly, I do not see any good motivation to consider this generalization. \n\n Comments: \n 1. Table 3: for arity 2, r-simply is performing better, but HSimplIE is marked best. Ideally, for arity 2 both should\nhave the same result right?\n 2. For arity 6, there is a sudden drop in performance for both the proposed models. But the baseline model mtransH holds very tight. Any reason or explanation for this massive drop and large gap in performance.\n 3. Have you conducted experiments for higher arity? On the continuation of the above point, the performance drop consistently for higher arity than 5? '\n "
        },
        {
            "experience_assessment": "I have read many papers in this area.",
            "rating": "6: Weak Accept",
            "review_assessment:_thoroughness_in_paper_reading": "I read the paper thoroughly.",
            "review_assessment:_checking_correctness_of_experiments": "I carefully checked the experiments.",
            "title": "Official Blind Review #3",
            "review_assessment:_checking_correctness_of_derivations_and_theory": "I carefully checked the derivations and theory.",
            "review": "This paper proposes two new embedding strategies for the task of knowledge graph completion, with special attention on generalizations that support hypergraphs.  The first method, HSimplE, learns an embedding for entities that directly contains multiple positional representations; these are shifted depending on the relation they're used in.  The second method, HypE, disentangles entity embeddings and positional convolutional filters, allowing stronger positional generalization.  Experiments on standard benchmarks demonstrate that the approaches work well.\n\nI think this paper should be accepted.  While the ideas are so simple that they border on being trivial generalizations of previous work, the paper is well written, and the results seem solid.  I think this is work that needs to be done, so I favor accepting it.\n\nOn the positive side:\n\n* The ideas underlying HSimplE and HypE are natural and clear - we basically want to learn better embeddings for hypergraphs, and there are a couple of obvious ways to do that.  Both of these seem clear.\n\n* The experiments are nicely done, and show a consistent (if unsurprising) benefit to the approach.\n\n* The paper is well written and well situated in the literature.\n\n* I expect that other researchers in this area will be able to reproduce and build upon this work without any difficulty.\n\nOn the negative side:\n\n* The ideas are obvious; the results are unsurprising; the paper lacks \"deep insight\".  It is a contribution in the sense that someone needed to do this work, and I'm glad that it's been done (and done well), but it's not earth-shattering.\n\n* It doesn't seem like this is quite the best version of this idea.  I really like the idea of HypE, but it seems strange that entity embeddings are modulated based on position *only*, without regard to relation -- that is, it seems like a given entity in position #2 might need to be represented in very different ways depending on which relation is being used."
        },
        {
            "experience_assessment": "I have read many papers in this area.",
            "rating": "3: Weak Reject",
            "review_assessment:_thoroughness_in_paper_reading": "I read the paper at least twice and used my best judgement in assessing the paper.",
            "review_assessment:_checking_correctness_of_experiments": "I carefully checked the experiments.",
            "title": "Official Blind Review #1",
            "review_assessment:_checking_correctness_of_derivations_and_theory": "I carefully checked the derivations and theory.",
            "review": "Contributions:\n1. This paper extends SimplE, a previous embedding model, from modeling binary knowledge graphs to knowledge hypergraphs, where n-ary relations may show up.\n2. The paper designs two different architectures, HypE and HSimplE, to achieve knowledge hypergraph embedding.\n3. Empirical results comparing with existing methods are proposed.\n\nThe major contribution of this paper is to propose two new architectures for hypergraph embedding. However, I still have some concerns after reading this paper.\n\n1. The paper proposes to use 1d convolutions to separate entity positions and entity embeddings (HypE) and claim this strategy is better than just rotating the entity embeddings (HsimplE) because one can introduce additional parameters through the convolution filters. I'm expecting to see more evidence justifying this strategy. For example, in Table 2, SimplE is better than HypE in most cases. So probably HypE is not the most efficient way to use parameters. Besides, I'm curious about how performance will be when you use different n,l,d,s, since some of them are set to be very small according to 6.2.\n\n2. The second thing that I feel confused about is the fair comparison with other methods to handle hypergraphs. For example, t-SimplE performs badly on all metrics, including Hit@t and MRR in Table 1. This could result from a sub-optimal adaptation/reification of SimplE to hypergraphs. However, in Table 3 it does much better than the rest methods for binary relations (0.478 vs others). This makes me confused and I don't understand why that could happen. Moreover, have you tried another adaptation method? For example, by converting non-binary relations into cliques?\n\nI think the paper makes some contribution to the existing literature, but it should at least clarify its contribution with more evidence and better comparison criterions."
        }
    ]
}