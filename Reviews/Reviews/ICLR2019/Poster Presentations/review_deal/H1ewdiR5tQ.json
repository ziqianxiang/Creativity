{
    "Decision": {
        "metareview": "AR1 and AR3 have found this paper interesting in terms of replacing the spectral operations in GCN by wavelet operations. However, AR4 was more critical about the poor complexity of the proposed method compared to approximations in Hammond et al. AR4 was also right to find the proposed work similar to Chebyshev approximations in ChebNet and to highlight that the proposed approach is only marginally better than GCN. On balance, all reviewers find some merit in this work thus AC advocates an accept. The authors are asked to keep the contents of the final draft as agreed with AR4 (and other reviewers) during rebuttal without making any further theoretical changes/brushing over various new claims/ideas unsolicited by the reviewers (otherwise such changes would require passing the draft again through reviewers).",
        "confidence": "5: The area chair is absolutely certain",
        "recommendation": "Accept (Poster)",
        "title": "some novelty"
    },
    "Reviews": [
        {
            "title": "Promising but need further development",
            "review": "This paper proposed a new formulation of graph convolution, that is based on\ngraph wavelet transform. The convolution network is expressed in eq.(4)\nwith \\psi_s given by eq.(1). This new formulation is exciting in that\nit has numerous advantages comparing to spectral graph convolutions\nsuch as the sparsity of \\psi_s (see the items listed in section 2.3).\nThe method showed marginal improvement (<1%) on node classification\ntasks of citation networks.\n\nOverall, I am convinced with the technical novelty and that the method\ncan be promising. However, in its current form, there are several\nmajor weaknesses, hinting that this work needs further developments before\npublication.\n\n1. By the vanilla implementation without any approximations, the multiplication\nwith \\phi_s and \\phi_s^{-1} has quadratic complexity, and to compute these two\nmatrices is of cubic complexity. \nThis is not acceptable for large graphs. In section 3.2, the authors\nmentioned that Hammond et al (2011) have an approximation of\n\\phi_s and \\phi_s^{-1} with the complexity of O(|E|).\nHowever, this important technical detail is disappointingly missing\nin the main text. I have further concerns about whether the good\nproperties listed in section 2.3 are preserved by this approximation,\nwhich is not discussed in the paper.\n\nEven with such an approximation, the matrix multiplication still\nhas quadratic complexity. To reduce this complexity needs some non-trivial\ndevelopments. I suggest the author(s) dive into the expression of\n\\phi_s and write the convolution in the vertex domain and seek possibilities\nfor a linear approximation.\n\n2. Experimentally, the improvement over GCN is marginal. Taking into account\nthe implementation difficulty and complexity, the\nproposed method is more like a proof-of-concept instead of\nbeing of practical use. The authors are suggested to make the\nempirical study more comprehensive, by including node classification\nin an inductive setting, and/or including link prediction experiments. \n\n3. The hyper-parameters (scale of the heat kernel) and t (threshold\nto zero the \\phi_s matrix) has to be tuned for each data set.\nThis is not the ideal case because these parameters may not be easy\nto tune for real data sets, making the method difficult to use.\nThe authors should at least give some recipes on how to tune these parameters.\n",
            "rating": "4: Ok but not good enough - rejection",
            "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"
        },
        {
            "title": "Long-awaited combination of Graph wavelets and NNs",
            "review": "This paper proposes to learn graph wavelet kernels through a neural network. This idea is interesting, even if it is not a real surprise, given the interesting features graph wavelets, and the explosion of proposals for graph neural networks. Yet, the paper is interesting, pretty complete, and the proposed algorithm is shown to be relatively effective. \n\nA few more detailed comments:\n\n- one for the key motivations the work, namely to avoid eigen-decompositions, is also solved in a different way by methods using Chebyshev approximations (e.g., Khasanova - ICML 2017). The introduction should be clarified accordingly. \n- retaining the flexibility of convolution kernel (on page 2): what do the authors mean here?\n- the graph wavelet nn in 2.4 is certainly an interesting combination of known elements - yet, it is not very clear how the network is trained/optimized at this stage. \n- the section 3 is a bit confusing: are the proposed elements, contributions of the paper, or only ideas with future work?\n- the idea of detaching feature transformation from convolution is interesting: it would be even better to quantify or discuss the penalty, if any, induced by this design choice. \n- the results are generally fine and convincing, even if they are not super-impressive. ' GWNN is comfortably ahead of Spectral CNN. ' is probably an over-statement however...\n- the discussion about interpretability is interesting, and very trendy. However, what the authors discuss is mere localisation and sparsity - this is one way to 'interpret' interpretability of features, but that discussion should be rephrased in a more mild sense then. \n\nGenerally, the ideas in this paper are interesting, even not surprising. The text should be clarified at places, and the paper looks a bit superficial on many aspects (see above). With good revision, it could lead to an interesting paper, and most likely to interesting discussions at ICLR.",
            "rating": "7: Good paper, accept",
            "confidence": "5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature"
        },
        {
            "title": "Interesting approach",
            "review": "This is an empirical paper that proposes to design wavelets on graphs, that can be integrated to neural networks on graphs. It permits to reducing the number of parameters of the « convolution » and exploits the sparsity of sparse weighted graphs for computations. I think it’s an interesting work.\n\nThe perspective I enjoy in using wavelets is that they typically provide a good trade-off in localization in the spectral and graph domains. For instance, large eigenvalues of the laplacian could be potentially captured in a more stable way. This type of work might be a first step.\n\nPros :\n- good numerical results\n- nice incorporation of structure via wavelets\nCons :\n- Sometimes the paper is not really clear\n\nI have severals comments:\n\n1/ (1) « Some subsequent works devote to making spectral methods spectrum-free… avoiding high computational cost ». I think also those types of representations can be potentially unstable. That’s a second reason.\n\n2/ I’m not sure to understand the point (1) of the fourth paragraph of the introduction. (1.)« graph wavelet does not depend on the eigen decomposition of Laplacian matrix ». Does it mean numerically ? This sentence is not clear, because even numerically, it can be done in a dependent way to this matrix. However, if it is implied that the fastest algorithm can be obtained without eigen-decomposition of the Laplacian Matrix, in a cheap way, then I agree and a small rephrasing could be nice.\n\n3/ Please remove all the sentences that are supposed to be an introduction for a section, i.e. the sentences between 2 and 2.1 (« We use graph… ») and 3 and 3.1 (« In many research… »). They are poorly written and do not help the reader.\n\n5/ .(2.2) “However, such a polynomial approximation also limits the flexibility to define appropriate convolution on graph” I’m not sure to understand. In the paper you refer to, the set of filters span the polynomial of degree less than n, of a diagonalizable matrix of size nxn. Thus, lagrange polynomial basis could be used to interpolate any desired values? Does it signify learning non-diagonal(in the appropriate basis) matrix?\n\n6/ (2.3) $s$ how is this parameter chosen, crossvalidation? Is it adjusted such that the singular values of $\\psi_s$ have a certain decay? Why is $s$ constant across layers? How is the spectrum of psi_s? Is it well conditionned? A huge difference with (Hammond et al,2011) is that they use a collection of wavelets. Did you consider this kind of approach ? Is there a loss of information in some cases?(like if $\\psi_s$ has a fast decay)\n\n7/ (2.3) “The matrix $\\psi_s$ and $\\psi_s^{-1}$ are both sparse”. This is a critical affirmation which is not in general true. It is possibly sparse if the weighted laplacian graph is sparse as well, as explained by the remark after theorem 5.5 of page 16 of (Hammond et al, 2011). However, I do agree this typically happens in the application you present. \n\n8/ The (c) of Figure 1 is missing.(in my version at least)\n\n9/ In section 5.3, why not trying to compare the number of parameters with other papers? I think also more results, with maybe a bit higher performances, could be reported, such as: GraphSGAN, GAT. But that’s fine to me.\n\n10/ Appendix A, isn’t it a simple rephrasing of (Hammond et al, 2011)?\n\n11/ How do you compare in term of interpretability with [1]?\n\n12/ Just as a suggestion and/or a comment: it seems similar to approaches such as lifting schemes(which basically builds wavelets on graphs/manifolds), except that there is no learning involved. (e.g. [2]) I think there could be great connexions.\n\n\n[1] Relational inductive biases, deep learning, and graph networks, Battaglia et al 2011?\n[2] THE LIFTING SCHEME: A CONSTRUCTION OF SECOND GENERATION WAVELETS, Wim Sweldgens",
            "rating": "7: Good paper, accept",
            "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"
        }
    ]
}