{
    "Decision": {
        "metareview": "This paper proposes an interesting approach to leveraging crowd-sourced labels, along with an ML model learned from the data itself. \n\nThe reviewers were unanimous in their vote to accept.",
        "confidence": "4: The area chair is confident but not absolutely certain",
        "recommendation": "Accept (Poster)",
        "title": "Interesting idea for interpreting crowd-sourced labels"
    },
    "Reviews": [
        {
            "title": "Generally well-written paper on a new information theoretical approach for learning from crowdsourced data.",
            "review": "Top pros:\n- Well motivated approach with good examples from clinical setting\n- Sound proof on why information theoretical approach is better than MLE based approaches\n- Experiments on diversified data sets to show their approach's performance, with good implementation details. \n\nTop cons:\n- Fairly strong assumption on the existence of mutually independent senior experts in the labeling process\n- Hard-to-check assumption for Theorem 3.4 for real world problems, on the sufficiency of senior expert's info to predict the true class label\n\nThe paper is in general well written, and builds upon existing work on crowdsourced data mining and co-training. I believe this line of work will benefit the community in taking a more information theoretical approach with relaxed assumptions on the data collection process. My main feedback is how to check the existence of senior experts in real-world applications. In particular,\n- If the labels are collected from an unknown setup (e.g. on AMT), where it is hard to establish the dependency structure of the experts, how can we use such approaches effectively? \n- Even if there exists a clear line between senior/junior experts in the labeling process, how do we know or check that the senior experts' opinion can sufficiently estimate the true labels? \n\nIn the experiment section, the label data was collected with a build-in assumption of senior/junior labelers, and we also know exactly who are senior/junior experts. So it is not surprising that the proposed approach outperforms other approaches. It's also interesting to see that AggNet isn't that bad in general compared to the proposed approach (except on LUNA16). What if we combine all experts in one setting and apply the proposed approach without prior knowledge of who are senior/junior? Also, did you require all experts to label ALL the data points or only a subset of training data points? \n\nMinor points:\n- I don't believe \"Naive majority\" is an interesting setting - we can easily detect those junior experts that always label cases with one class, and remove these experts from the system, in practice. \n- I wouldn't call this an \"early\" algorithm as it indicates it's somewhat pre-mature. Just call this a novel approach that is in the early phase, and more sophisticated approach can be further developed. ",
            "rating": "6: Marginally above acceptance threshold",
            "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"
        },
        {
            "title": "More details on actual learning are required",
            "review": "Update after feedback: I would like to thank the authors for their detailed answers, it would be great to see some revisions in the paper also though (except new experimental results).\nEspecially thank you for providing details of a training procedure which I was missing in the initial draft. I hope to see them in the paper (at least some of them).\n\nI have increased the rating to 6. Given new experimental results both on real data and forecaster comparison I would like to increase the rating to 7. However, I am not sure that this is fair to other authors who would might not be physically able to provide new experimental results due to computational constraints, please note that the experiments in this paper are rather 'light' in the standards of modern deep learning experiments and can be done within the rebuttal period.  \n====================================================\n\n\nThe paper finds a practical implementation of ideas from Kong & Schoenebeck (2018) for the learning with crowd problem. It proofs the claims from Kong & Schoenebeck (2018) for the specific family of data classifiers and crowd aggregators. From the general perspective, the papers proposes a method for joint training a classifier and a crowd label aggregator with particular consideration of correlated crowd labels. \n\nThe paper is fairly well-written and well-balanced between theoretical and empirical justification of the method. I see 1 major and 1 big issues with the paper.\n\nMajor issue: I am missing details of the actual procedure of training the model. Is MIG set as a loss function for the data classifier NN? Is crowd aggregator trained also as an NN with MIG as a loss function? How do the authors find the optimal p? Also, in order all the provided theory to work all the found data classifier NN, the aggregator and p should be exact maximisers of MIG as far as I understand. How do the author ensure that they find the exact maximisers? Also related to understanding how training works: on p.15 the authors claim “Note that our method can handle this simple correlated mistakes case and will give all useless experts weight zero based on Theorem 3.4.” I have trouble understanding why the proposed method should find these zero weights rather than it is just able to find them?\n\nI am willing to change my judgement if the authors provide convincing details on the training procedure.\n\nBig issue: Experimental settings. \na) Though it is interesting to see the analysis of the method under controlled environments of synthetic crowd labels with different properties that show benefits of the proposed method (such as dealing with correlated crowd labels), it would be also appealing to see the results with real labels, for example, Rodrigues & Pereira (2017) provide Amazon MTurk crowd labels for the LabelMe data\nb) Is the proposed data-crowd forecaster the only method that uses crowd labels on the test data? While it can be argued that it is not straightforward in the test regime to include crowd labels into Crowd Layer, for example, without retraining the neural net, AggNet can use crowd labels without retraining the neural net part. In the presented format, it is unfair to compare the forecaster with the other methods because it uses more information, and essentially, the forecaster is not compared with anything (that uses the same information). It can be compared, at least, with pure Majority Voting, or more advanced pure crowdsourcing aggregation methods. Yes, they won’t use image data, but at least they can use the same amount of crowd label information, which would make a nice comparison with the presented related work and proposed NN: this is what you can get using just image data during test (Crowd Layer, Max-MIG, and others from the current paper), this is what you can get using just crowd labels during test (Majority Voting or, preferably, more advanced pure crowdsourcing aggregators), and this is what you can get using both image and crowd labels during test (the proposed forecaster and AggNet, for example)\n\nQuestions out of curiosity: \ni). Does Max-MIG handle missing crowd labels for some data points? Did the author use missing labels in the experiments?\nii). Both the Dogs vs. Cats and CIFAR-10 datasets have more or less balanced data, i.e., the number of data points belonging to each ground truth class is similar between classes. Is this true for the LUNA16 dataset? If yes, have the authors tried their method with heavily imbalanced data? In my experience, some crowdsourcing methods may suffer with imbalanced data, for example, Crowd Layer does so on some data. This tendency of Crowd Layer is kind of confirmed on the provided Dogs vs. Cats in the naïve majority case, where based on crowd labels the first class dominates the second.\n\nOther questions/issues/suggestions:\n1. Until the formal introduction of the forecaster on page 4, it is not entirely clear what is the difference between the data classifier and data-crowd forecaster. It should be explained more clearly at the beginning that the 3 concepts (data classifier, crowd label aggregator and \"data-crowd forecaster\") are separated. Also some motivation why we should care about forecaster would be beneficial because one can argue that if we could train a NN that would make good enough predictions why we should waste resources on crowd labels. For example, the provided empirical results can be used as an argument for this.\n2. From the introduction it is unclear that there are methods in crowdsourcing that do not rely on the assumption that data and crowd labels are independent given the ground truth labels. As mentioned in related works there are methods dealing with difficulty of data points, where models assume that crowd labels maybe biased on some data points due to their difficulty, e.g., if images are blurred, which violates this assumption.\nAlso the note that considering image difficulty violates the independence assumption could be added on page 3 around \"[we] do not consider the image difficulty\"\n3. The beginning of page 4. I think it would be more clear to replace \"5 experts' labels:\" by $y^{[5]}=$\n4. I suggest to move the caption of Figure 3 into the main text.  \n5. p.3 \"However, these works are still not robust to correlated mistakes\" - Why? \n6. Data-crowds forecaster equation. It would be good to add some intuition about this choice. The product between the classifier and aggregator predictions seems reasonable, division on p_c is not that obvious. This expression presumably maximises the information gain introduced below. Some link between this equation and the gain introduction would be nice. Also, minor point – it is better to enlarge inner brackets ()_c\n7. The formulation “To the best of our knowledge, our approach is a very early algorithm”, and namely “a very early algorithm” is unclear for me\n8. Dual usage of “information intersection” as an assumption and as something that Max-MIG finds is confusing\n9. Any comments how the learning rates were chosen are always beneficial\n10. Proof of Proposition C.3: “Based on the result of Lemma C.2, by assuming that h ∗ ∈ H_{NN} , we can see (h ∗ , g∗ ,p ∗ ) is a maximizer of max_{h∈H_{NN} ,g∈G_{W A},p∈∆_C} MIGf (h, g,p)” – is expectation missing in the max equation? Is this shown below on page 13? If yes, then the authors should paraphrase this sentence as it does not imply that this is actually shown below\n11. p.12 (and below) – what is $\\mathbf{C}^m$? Is it $\\mathbf{W}^m$?\n12. p.15 (at the end of proof) $p \\log q$ and $p \\log p$ are not formally defined\n\nMinor:\n1. p.1 \"of THE data-driven-based machine learning paradigm\"\n2. \"crowds aggregator\" -> \"crowd aggregator\"?\n3. p.2 (and below) \"between the data and crowdsourced labels i.e. the ground truth labelS\"\n4. Rodrigues & Pereira (2017) has a published version (AAAI) of their paper\n5. p.2 \"that model multiple experts individually and explicitly in A neural network\"\n6. p.3 \"model the crowds by A Gaussian process\"\n7. p.3 \"We model the crowds via confusion matriCES\"\n8. p.3 \"only provide A theoretic framework and assume AN extremely high model complexity\"\n9. p.4 \"forecast\" for h and g -> \"prediction\"?\n10. p.6 “between the data and the crowdsourced labelS”?\n11. p.6 “However, in practice, with A finite number of datapoints”\n12. p.6 “the experiment section will show that our picked H_{NN} and G_{W A} are sufficientLY simple to avoid over-fitting”\n13. p.6 “We call them A Bayesian posterior data classifier / crowds aggregator / data-crowds forecaster, RESPECTEVILY”\n14. p.6 “Theorem 3.4. With assumptionS 3.1, 3.3”\n15. p.7 “DoctOr Net, the method proposed by Guan et al. (2017)”\n16. p.7 “including the naive majority case since naive expert is independent with everything” – rephrasing is required, unclear what “independent with everything” means and who is “naïve expert”\n17. Please capitalised names of conferences and journals in References\n18. p.10 “she labels the image as “dog”/“cat” with THE probability 0.6/0.8 respectively”, “(e.g. B labels the image as “cat” with THE probability 0.5 and “dog” with THE probability 0.5 when the image has cats or dogs)”\n19. p.12 “Lemma C.2. (Kong & Schoenebeck, 2018) With assumptionS 3.1, 3.3”, “Proposition C.3. [Independent mistakes] With assumptionS 3.1, 3.3”\n\n\n\n",
            "rating": "6: Marginally above acceptance threshold",
            "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"
        },
        {
            "title": "Updated review",
            "review": "EDIT: I thank the authors for providing all clarifications. I think this paper is a useful contribution. It will be of interest to the audience in the conference.\n\nSummary:\nThis paper provides a method to jointly learn from crowdsourced worker labels and the actual data. The key claimed difference is that previous works on crowdsourced worker labels ignored the data. At a higher level, the algorithm comprises maximizing the mutual information gain between the worker labels and the output of a neural network (or more generally any ML model) on the data. \n\nEvaluation:\nI like the idea behind the algorithm. However there are several issues on which I ask the authors to provide some clarity. I will provide a formal \"evaluation\" after that. (For the moment, please ignore the \"rating\". I will provide one after the rebuttal.) \n\n(1) As the authors clarified, one key aspect of the \"information intersection\" assumption is that the crowdsourced labels are statistically independent from the data when conditioned on the ground truth. How strongly does this coincide with reality? Since the work is primary empirical, is there any evidence on this front?\n\n(2) In the abstract, introduction etc., what does it mean to say that the algorithm is an \"early algorithm\"?\n-- Thanks for the clarification. I would suggest using the term \"first algorithm\" in such cases. However, is this the first algorithm towards this goal? See point (3).\n\n(3) The submitted paper misses an extremely relevant piece of literature: \"Learning From Noisy Singly-labeled Data\" (arXiv:1712.04577). This paper also aims to solve the label + features problem together. How do the results of this paper compare to that of this submission?\n\n(4) \"Model and assumptions\" Is the i.i.d. assumption across the values of \"i\"? Then does that not violate the earlier claim of accommodating correlated mistakes?\n\n(5) Recent papers on crowdsourcing (such as Achieving budget-optimality with adaptive schemes in crowdsourcing arXiv:1602.03481 and  A Permutation-based Model for Crowd Labeling: Optimal Estimation and Robustness arXiv:1606.09632) go beyond restricting workers to have a common confusion matrix for all questions. In this respect, these are better aligned with the realistic scenario where the error in labeling may depend on the closeness to the decision boundary. How do these settings and algorithms relate to the submission?\n\n(6) Page 5: \"Later we will show....\"   Later where? Please provide a reference.\n\n(7) Theorem 3.4, The assumption of existence of experts such that Y^S is a sufficient statistic for Y: For instance, suppose there are 10 experts who all have a 0.999 probability of correctness (assume symmetric confusion matrices) and there are 5 non-experts who have a 0.001 probability of correctness and even if we suppose all are mutually independent given the true label, then does this satisfy this sufficient statistic assumption? This appears to be a very strong assumption, but perhaps the authors have better intuition?\n\n(8) The experiments comprise only some simulations. The main point of experiments (particularly in the absence of any theoretical results) towards bolstering the paper is to ensure that the assumptions are at least somewhat reasonable. I believe there are several datasets collected from Amazon Mechanical Turk available online? Otherwise, would it be possible to run realistic experiments on some crowdsourcing platforms?\n",
            "rating": "7: Good paper, accept",
            "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"
        }
    ]
}