Under review as a conference paper at ICLR 2019
ON BREIMAN’S DILEMMA IN NEURAL NETWORKS: SUCCESS AND FAILURE OF NORMALIZED MARGINS
Anonymous authors
Paper under double-blind review
ABSTRACT
A belief persists long in machine learning that enlargement of margins over train￾ing data accounts for the resistance of models to overfitting by increasing the
robustness. Yet Breiman shows a dilemma (Breiman, 1999) that a uniform im￾provement on margin distribution does not necessarily reduces generalization er￾ror. In this paper, we revisit Breiman’s dilemma in deep neural networks with
recently proposed normalized margins using Lipschitz constant bound by spectral
norm products. With both simplified theory and extensive experiments, Breiman’s
dilemma is shown to rely on dynamics of normalized margin distributions, that re-
flects the trade-off between model expression power and data complexity. When
the complexity of data is comparable to the model expression power in the sense
that training and test data share similar phase transitions in normalized margin
dynamics, Rademacher complexities of Lipschitz-normalized networks can be re￾garded as small constants and two efficient ways are derived via classic margin￾based generalization bounds to successfully predict the trend of generalization
error. On the other hand, over-expressed models that exhibit uniform improve￾ments on training normalized margins may lose such a prediction power and fail
to prevent the overfitting.
1 INTRODUCTION
Margin, as a measurement of the robustness allowing some perturbations on classifier without chang￾ing its decision on training data, has a long history in characterizing the performance of classification
algorithms in machine learning. As early as Novikoff (1962), it played a central role in the proof on
finite-stopping or convergence of perceptron algorithm when training data is separable. Equipped
with convex optimization technique, a plethora of large margin classifiers are triggered by sup￾port vector machines (Cortes & Vapnik, 1995; Vapnik, 1998). AdaBoost, an iterative algorithm to
combine an ensemble of classifiers proposed by Freund & Schapire (1997), often exhibits a resis￾tance to overfitting phenomenon that during the training process the generalization error keeps on
non-increasing when the training error drops to zero. Toward deciphering the such a resistance of
overfitting phenomenon, Schapire et al. (1998) proposed an explanation that the training process
keeps on improving a notion of classification margins in boosting, among later works on consis￾tency of boosting with early stopping regularization (B¨uhlmann & Yu, 2002; Zhang & Yu, 2005;
Yao et al., 2007). Lately such a resistance to overfitting is again observed in deep neural networks
with overparameterized models (Zhang et al., 2016). A renaissance of margin theory is proposed by
Bartlett et al. (2017) with a normalization of network using Lipschitz constants bounded by products
of operator spectral norms. It inspires many further investigations in various settings (Miyato et al.,
2018; Neyshabur et al., 2018; Liao et al., 2018).
However, the improvement of margin distributions does not necessarily guarantee a better general￾ization performance, which is at least traced back to (Breiman, 1999) in his effort to understanding
AdaBoost. In this work, Breiman designed an algorithm arc-gv such that the margin can be maxi￾mized via a prediction game, then he demonstrated an example that one can achieve uniformly larger
margin distributions on training data than AdaBoost but suffer a higher generalization error. In the
end of this paper, Breiman made the following comments with a dilemma:
”The results above leave us in a quandary. The laboratory results for various arcing algorithms are
excellent, but the theory is in disarray. The evidence is that if we try too hard to make the margins
1
Under review as a conference paper at ICLR 2019
larger, then overfitting sets in. ... My sense of it is that we just do not understand enough about what
is going on.”
Breiman’s dilemma triggers some further explorations to understand the limitation of margin theory
in boosting (Reyzin & Schapire, 2006; Wang et al., 2008; 2011). In particular, Reyzin & Schapire
(2006) points out that the trees found by arg-gv have larger model complexity in terms of deeper
average depth than AdaBoost, suggesting that margin maximization in arc-gv does not necessarily
control the model complexity. The latter works provide tighter bounds based on VC-dimension and
optimized quantile training margins, which however do not apply to over-parametrized models in
deep neural networks and the case where the training margin distributions are uniformly improved.
In this paper, we are going to revisit Breiman’s dilemma in the scenario of deep neural networks.
Both the success and failure can be seen on normalized margin based bounds on generalization error.
First of all, let’s look at the following illustration example.
Example (Breiman’s Dilemma with a CNN). A basic 5-layer convolutional neural network of c
channels (see Section 3 for details) is trained with CIFAR-10 dataset whose 10 percent labels are
randomly permuted. When c = 50 with 92, 610 parameters, Figure 1 (a) shows the training error
and generalization (test) error in solid curves. From the generalization error in (a) one can see
that overfitting indeed happens after about 10 epochs, despite that training error continuously drops
down to zero. One can successfully predict such an overfitting phenomenon from Figure 1 (b), the
evolution of normalized margin distributions defined later in this paper. In (b), while small margins
are monotonically improved during training, large margins undergoes a phase transition from in￾crease to decrease around 10 epochs such that one can predict the tendency of generalization error
in (a) using large margin dynamics. Two particular sections of large margin dynamics are high￾lighted in (b), one at 8.3 on x-axis that measures the percentage of normalized training margins no
more than 8.3 (training margin error) and the other at 0.8 on y-axis that measures the normalized
margins at quantile q = 0.8 (i.e. 1/γˆq,t). Both of them meet the tendency of generalization error
in (a) and find good early stopping time to avoid overfitting. However, as we increase the channel
number to c = 400 with about 5.8M parameters and retrain the model, (c) shows a similar overfit￾ting phenomenon in generalization error; on the other hand, (d) exhibits a monotonic improvement
of normalized margin distributions without a phase transition during the training and thus fails to
capture the overfitting. This demonstrates the Breiman’s dilemma in CNN.
(a) (b)
(c) (d)
Figure 1: Demonstration of Breiman’s Dilemma in Convolutional Neural Networks.
A key insight behind this dilemma, is that one needs a trade-off between the model expression
power and the complexity of the dataset to endorse margin bounds a prediction power. On one hand,
when the model has a limited expression power relative to the training dataset, in the sense that the
2
Under review as a conference paper at ICLR 2019
training margin distributions CAN NOT be uniformly improved during training, the generalization
or test error may be predicted from dynamics of normalized margin distributions. On the other hand,
if we push too hard to improve the margin by giving model too much degree of freedom such that the
training margins are uniformly improved during training process, the predictability may be lost. A
trade-off is thus necessary to balance the complexity of model and dataset, otherwise one is doomed
to meet Breiman’s dilemma when the models arbitrarily increase the expression power.
The example above shows that the expression power of models relative to the complexity of dataset,
can be observed from the dynamics of normalized margins in training, instead of counting the num￾ber of parameters in neural networks. In the sequel, our main contributions are to make these precise
by revisiting the Rademacher complexity bounds with Lipschitz constants (Bartlett et al., 2017).
• With the Lipschitz-normalized margins, a linear inequality is established between train￾ing margin and test margin in Theorem 1. When both training and test normalized margin
distributions undergo similar phase transitions on increase-decrease during the training pro￾cess, one may predict the generalization error based on the training margins as illustrated
in Figure 1. • In a dual direction, one can define a quantile margin via the inverse of margin distribution
functions, to establish another linear inequality between the inverse quantile margins and
the test margins as shown in Theorem 2. Quantile margin is far easier to tune in practice
and enjoys a stronger prediction power exploiting an adaptive selection of margins along
model training.
• In all cases, Breiman’s dilemma may fail both of the methods above when dynamics of nor￾malized training margins undergo different phase transitions to that of test margins during
training, where a uniform improvement of margins results in overfitting.
Section 2 describes our method to derive the two linear inequalities of generalization bounds above.
Extensive experimental results are shown in Section 3 and Appendix with basic CNNs, AlexNet,
VGG, ResNet, and various datasets including CIFAR10, CIFAR100, and mini-Imagenet.
2 METHOD
Let X be the input space (e.g. X ⊂ RC×W×H in image classification) and Y := {1, . . . , K} be
the space of K classes. Consider a sample set of n observations S = {(x1, y1), . . . ,(xn, yn) : xi ∈ X , yi ∈ Y} that are drawn i.i.d. from PX,Y . For any function f : X → R, let Pf = R X f(X)dP
be the population expectation and Pnf = (1/n)P ni=1 f(xi) be the sample average.
Define F to be the space of functions represented by neural networks,
F = {f : X → RK, f(x) = Wlσl(xl)+bl
, xi = σi(Wi−1xi−1+bi−1), i = 1, . . . , l, x0 = x}, (1)
where l is the depth of the network, Wi
is the weight matrix corresponding to a linear operator on
xi and σi stands for either element-wise activation function (e.g. ReLU) or pooling operator that
are assumed to be Lipschitz bounded with constant Lσi
and satisfying σi(0) = 0. For example, in
convolutional network, Wixi + bi = wi ∗ xi + bi where ∗ stands for the convolution between input
tensor xl and kernel tensor wl
. We equip F with the Lipschitz semi-norm, for each f, k fk F := sup
x6=x0 k f(x) − f(x0 )k 2 k x − x0 k 2 ≤ Lσ l Y i=1
k
Wik σ := Lf , (2)
where k · kσ is the spectral norm and Lσ = Q Li=1 Lσi
. For all the examples in this paper, we use
ReLU activation σi
that leads to Lσi = 1. Moreover we consider the following family of hypothesis
mapping,
H = {h(x) = [f(x)]y : X → R, f ∈ F, y ∈ Y}, (3)
where [·]j denotes the j
th coordinate and we further define the following class induced by Lipschitz
semi-norm bound on F, HL = {h(x) = [f(x)]y : X → R, h(x) = [f(x)]y ∈ H with k fk F ≤ L, y ∈ Y}. (4)
3
Under review as a conference paper at ICLR 2019
Lastly, rather than merely looking at whether a prediction f(x) on y is correct or not, we also
consider the margin defined as ζ(f(x), y) = [f(x)]y−max{j:j6=y}[f(x)]j . Therefore, we can define
the ramp loss and margin error depending on the confidence of predictions. Given two thresholds
γ2 > γ1 ≥ 0, define a ramp loss to be
`
(γ1,γ2)(ζ) =
 1 ζ < γ1, − 1∆ (ζ − γ2) γ1 ≤ ζ ≤ γ2, 0 ζ > γ2,
where ∆ := γ2 − γ1. In particular γ1 = 0 and γ2 = γ, we also write ` γ = ` γ for simplicity. Define
the margin error to measure if f has margin no more than a threshold γ, eγ(f(x), y) =  1 ζ(f(x), y) ≤ γ 0 ζ(f(x), y) > γ . (5)
In particular, e0(f(x), y) is the common mis-classification error and E[e0(f(x), y)] =
P[ζ(f(x), y) < 0]. Note that e0 ≤ ` γ ≤ eγ, and ` γ is Lipschitz bounded by 1/γ.
The central question we try to answer is, can we find a proper upper bound to predict the tendency
of the generalization error along training, such that one can early stop the training near the epoch
that P[ζ(ft(x), y) < 0] is minimized? The answer is both a yes and a no!
We begin with the following lemma, as a typical result in multi-label classification from the uniform
law of large numbers (Koltchinskii et al., 2002).
Lemma 2.1. Given a γ0 > 0, then, for any δ ∈ (0, 1), with probability at least 1 − δ, the following
holds for any f ∈ F with k fk F ≤ L, E[` γ0 (f(x), y)] ≤ 1n nXi=1
[` γ0 (f(xi), yi)] + 2K2 γ0 Rn(HL) + r log(1/δ) 2n
(6)
where
Rn(HL) = Exi,εi
sup
h∈HL 1n nXi=1
εih(xi) (7)
is the Rademacher complexity of function class HL with respect to n samples, and the expectation
is taken over xi
, εi, i = 1, ..., n.
Unfortunately, direct application of such bound for a constant γ0 will suffer from the so-called
scaling problem. The following proposition gives an lower bound of Rademacher complexity term,
whose proof is provided in Appendix D.
Proposition 1. Consider the networks with ReLU activation functions. For any L > 0, there holds,
Rn(HL) ≥ CLES[q x21 + . . . + x2n] (8)
where C > 0 is a constant that does not depend on S.
The lemma tells us if L → ∞, upper bound (6) becomes trivial since Rn(HL) → ∞. In fact, both
Telgarsky (2013) and Soudry et al. (2018) show that with gradient descent, the norm of estimator’s
weight in logistic regression and general boosting (including exponential loss), respectively, will go
to infinity at a growth rate log(t) when the data is linearly separable. As for the deep neural network
with cross-entropy loss, the input of last layer is usually be viewed as features extracted from original
input. Training the last layer with other layers fixed is exactly a logistic regression, and the feature is
linearly separable as long as the training error achieves zero. Therefore, without any normalization,
the hypothesis space along training has no upper bound on L and the upper bound (6) is useless.
Besides, even for a fixed L, the complexity term Rn(HL) is computationally intractable.
The first remedy is to restrict our attention on H1 by normalizing f with its Lipschitz semi-norm
k
fk F or its upper bounds. Note that a normalized network f˜ = f /C has the same mis-classification
error as f for all C > 0. For the choice of C, it’s hard in practice to directly compute the Lipschitz
semi-norm of a network, but instead some approximate estimates on the upper bound Lf in (2) are
available as discussed in Appendix A. In the sequel, let f˜ = f /Lf be the normalized network and
4
Under review as a conference paper at ICLR 2019
˜h = h/Lf = ζ(f, y)/Lf = ζ( ˜f, y) ∈ H1 be the corresponding normalized hypothesis function.
Now a simple idea is to regard Rn(H1) as a constant and predict the tendency of generalization
error via training margin error of the normalized network, that avoids the scaling problem and the
computation of complexity term. The following theorem makes this precise.
Theorem 1. Given γ1 and γ2 such that γ2 > γ1 ≥ 0 and ∆ := γ2 − γ1 ≥ 0, for any δ > 0, with
probability at least 1 − δ, along the training epoch t = 1, . . . , T, the following holds for each ft, P[ζ(f˜t(x), y) < γ1] ≤ Pn1[ζ(f˜t(x), y) < γ2] + CH∆ + r
log(1/δ) 2n
(9)
where CH = 2K2Rn(H1).
Remark. In particular, when we take γ1 = 0 and γ2 = γ > 0, the bound above becomes,
P[ζ(ft(x), y) < 0] ≤ Pn[ζ(f˜t(xi), yi) < γ] + CHγ + r
log(1/δ) 2n
(10)
Theorem 1 says, we can bound the normalized test margin distribution P[ζ(f˜t(x), y) < γ1] by the
normalized training margin distribution Pn[ζ(f˜t(x), y) < γ2]. Recently Liao et al. (2018) investi￾gates for normalized networks, the strong linear relationship between cross-entropy training loss and
test loss when the training epochs are large enough. As a contrast, we consider the whole training
process and normalized margins. In particular, we hope to predict the trend of generalization error
by choosing γ1 = 0 and a proper γ. For this purpose, the following facts are important. First, we
do not expect the bound, for example (10), is tight for every choice of γ > 0, instead we hope there
exists some γ such that the training margin error nearly monotonically changes with generalization
error. Figure 2 shows the existence of such γ such that the training margin error successfully recover
the tendency of generalization error on CIFAR10 dataset. Moreover, in Appendix Figure 8 shows
the rank correlation between training margin error at various γ and training/test error. Second, the
normalizing factor is not necessarily to be an upper bound of Lipschitz semi-norm. The key point is
to prevent the complexity term of the normalized network going to infinity. Since for any constant
c > 0, normalization by ¯L = cL works in practice where the constant could be absorbed to γ, we
could ignore the Lipschitz constant introduced by general activation functions in the middle layers.
However, it is a natural question whether a reasonable γ with prediction power exists. A simple
example in Figure 1 shows, once the training margin distribution is uniformly improved, dynamic
of training margin error fails to detect the minimum of generalization error in the early stage. This
is because when network structure becomes complex enough, the training margin distribution could
be more easily improved but the the generalization error may overfit. This is exactly the same
observation in Breiman (1999) to doubt the margin theory in boosting type algorithms. More detailed
discussions will be given in Section 3.2.
The most serious limitation of Theorem 1 lies in we must fix a γ along the complete training process.
In fact, the first term and second term in the bound (10) vary in the opposite directions with respect
to γ, and thus different ft may prefer different γ for a trade-off. As in Figure 1 (b) of the example,
while choosing γ is to fix an x-coordinate section of margin distributions, its dual is to look for a
y-section which leads to different margins for different ft. This motivates the quantile margin in the
following theorem. Let γˆq,f be the q
th quantile margin of the network f with respect to sample S, γˆq,f = inf {γ : Pn1[ζ(f(xi), yi) ≤ γ] ≥ q} . (11)
Theorem 2. Assume the input space is bounded by M > 0, that is k xk 2 ≤ M, ∀x ∈ X . Given a
quantile q ∈ [0, 1], for any δ ∈ (0, 1) and τ > 0, the following holds with probability at least 1 − δ
for all ft satisfying γˆq,f˜t
> τ , P[ζ(ft(x), y) < 0] ≤ Cq + CH γˆq,f˜t
(12)
Cq = q + q
log(2/δ) 2n + q
log log2
(4(M+l)/τ) n
and CH = 4K2Rn(H1).
Remark. We simply denote γq,t for γq,f˜t
when there is no confusion.
5
Under review as a conference paper at ICLR 2019
Compared with the bound (10), (12) make the choice of γ varying with ft and the cost is an ad￾ditional constant term Cq2
and the constraint γˆq,t > τ that typically holds for large enough q in
practice. In applications, stochastic gradient descent (SGD) often effectively improves the train￾ing margin distributions along the drops of training errors, a small enough τ and large enough
q usually meet γˆq,t > τ . Moreover, even with the choice τ = exp(−B), constant term
p
[log log2
(4(M + l)/τ )]/n = O(p log B/n) is still negligible and thus very little cost is paid
in the upper bound.
In practice, tuning q ∈ [0, 1] is far easier than tuning γ > 0 directly and setting a large enough
q ≥ 0.9 usually provides us lots of information about the generalization performance. The quantile
margin works effectively when the dynamics of large margin distributions reflects the behavior of
generalization error, e.g. Figure 1. In this case, after certain epochs of training, the large margins
have to be sacrificed to further improve small margins to reduce the training loss, that typically
indicates a possible saturation or overfitting in test error.
3 EXPERIMENTAL RESULTS
We briefly introduce the network and dataset used in the experiments. For the network, we first
consider the convolutional neural network with very simple structure basic CNN(c). The structure
is shown in Appendix Figure 7. Basically, it has five convolutional layers with c channels at each
and one fully connected layer, where c will be specified in concrete examples. Second, we consider
more practical network structure, AlexNet (Krizhevsky et al., 2012), VGGNet-16 (Simonyan & Zis￾serman, 2014) and ResNet-18 (He et al., 2016). For the dataset, we consider CIFAR10, CIFAR100
(Krizhevsky & Hinton, 2009) and Mini-ImageNet (Vinyals et al., 2016).
The spirit of the following experiments is to show, when and how, the margin bound could be used
to predict the tendency of generalization or test error along the training path?
3.1 SUCCESS: TRAINING MARGIN ERROR AND QUANTILE MARGIN
This section is to apply Theorem 1 and Theorem 2 to predict the tendency of generalization error.
Let’s firstly consider training a basic CNN(50) on CIFAR10 dataset with and without random noise.
The relations between generalization error and training margin error eγ(f˜(x), y) with γ = 9.8,
inverse quantile margin 1/γˆq,t with q = 0.6 are shown in Figure 2. In this simple example where
the net is light and the dataset is simple, the linear bounds (9) and (12) show a good prediction
power: they stop either near the epoch of sufficient training (Left, original data) or where even an
overfitting occurs (Right, 10 percents label corrupted).
Figure 2: Success examples. Net structure: basic CNN (50). Dataset: Original CIFAR10 (Left)
and CIFAR10 with 10 percents label corrupted (Right). In each figure, we show training error (red
solid), training margin error γ = 10 (red dash) and inverse quantile margin (red dotted) with q = 0.6
and generalization error (blue solid). The marker ”x” in each curve indicates the global minimum
along epoch 1, . . . , T. Both training margin error and inverse quantile margin successfully predict
the tendency of generalization error.
A few discussions are given below.
1. There exists a trade-off on the choice of γ from the linear bounds (9) (and parallel argu￾ments hold for q). The training margin error with a small γ is close to the training error,
6
Under review as a conference paper at ICLR 2019
while a large γ is close to generalization error and it’s illustrated in Appendix Figure 8
where we show the Spearman’s ρ rank correlation1 between training margin error and
training error, generalization error against threshold γ.
2. The training margin error (or inverse quantile margin) is closely related to the dynamics
of training margin distributions. For certain choice of γ, if the curve of training margin
error (with respect to epoch) is V-shape, the corresponding dynamics of training margin
distributions will have a cross-over, where the low margins have a monotonic increase and
the large margins undergo a phase transition from increase to decrease, as illustrated by the
red arrow in Figure 1 (b).
3. Dynamics of quantile margins can adaptively select γt for each ft without access to the
complexity term. Unlike merely looking at the training margin error with a fixed γ, quantile
margin bound (12) shows a stronger prediction power than (10) and even be able to capture
more local information as illustrated in Figure 3. The generalization error curve has two
valleys corresponding to a local optimum and a global optimum, and the quantile margin
curve with q = 0.95 successfully identifies both. However, if we consider the dynamics of
training margin errors, it’s rarely possible to recover the two valleys at the same time since
their critical thresholds γt1
and γt2
are different. Another example of ResNet is given in
Appendix Figure 9.
Figure 3: Inverse quantile margin. Net structure: Basic CNN. Dataset: CIFAR10 with 10 percents
label corrupted. Left: the dynamic of generalization error (blue) and inverse quantile margin with
q = 0.95 (red). Two local minimums are marked by ”x” in each dynamic. Right: dynamic of
training margin distribution and two distributions when local minimum occurs are highlighted with
red color. The inverse quantile margin successfully captures two local minimums of test error.
3.2 FAILURE: BREIMAN’S DILEMMA IN OVER-PARAMETERIZED MODELS
In this section, we explore the normalized margin dynamics with over-parameterized models whose
expression power might be greater than data complexity. We conduct experiments in the following
two scenarios.
1. In the first experiment shown in Figure 4, we fix the dataset to be CIFAR10 with 10 percent
of labels randomly permuted, and gradually increase the channels from basic CNN(50) to
basic CNN(400). As the channel number increases, dynamics of the normalized training
margins in the first row change from a phase transition with a cross-over in large margins to
a monotone improvement of margin distributions. This phenomenon is not a surprise since
with a strong representation power, the whole training margin distribution can be monoton￾ically improved without sacrificing the large margins. On the other hand, the generalization
or test error can never be monotonically improved. In the second row, heatmaps depict rank
correlations of dynamics between training and test margin errors, which clearly show the
phase transitions for CNN(50) and CNN(100) and its disappearance for CNN(400).
2. In the second experiment shown in 5, we compare the normalized margin dynamics of
training CNN(400) and ResNet18 on two different datasets, CIFAR100 (the simpler) and
Mini-ImageNet (the more complex). It shows that: (a) CNN(400) (5.8M parameters) does
not have an over-representation power on CIFAR100, whose normalized training margin
1The Spearman’s ρ rank correlation measures how two variables are correlated up to a monotone transform
and a larger correlation means a closer tendency.
7
Under review as a conference paper at ICLR 2019
dynamics exhibits a phase transition – a sacrifice of large margins to improve small margins
during training; (b) ResNet18 (11M parameters) exhibits an over-representation power on
CIFAR100 via a monotone improvement on training margins, but loses such a power in
Mini-ImageNet with the phase transitions in margin dynamics.
More experiments including AlexNet and VGG16 are shown in Appendix Figure 11.
This phenomenon is not unfamiliar to us, since Breiman (Breiman, 1999) has pointed out that the
improvement of training margins is not enough to guarantee a small generalization or test error in
the boosting type algorithms. In this paper Breiman designed an algorithm, called arc-gv, enjoy￾ing an uniformly better training margin distribution comparing with Adaboost but suffer a higher
generalization error. Now again we find the same phenomenon ubiquitous in deep neural networks.
Figure 4: Breiman’s Dilemma I. Net structure: Basic CNN(50) (Left), Basic CNN(100) (Middle),
Basic CNN(400) (Right) . Dataset: CIFAR10 with 10 percent labels corrupted. Top: dynamics of
training margin distributions. Bottom: heatmaps of Spearman’s ρ correlation between test margin
error P[eγ1 (f˜(x), y)] and training margin error Pn[eγ2 (f˜(xi), yi)], where (x, y)-coordinates stand
for (γ1, γ2). With a fixed dataset, we explore how the expression power of the network influences
the phase transitions of margin dynamics. The cross-over in the dynamics of training margin distri￾butions becomes obscure and eventually disappears as the channel number increases. A clear phase
transition is illustrated via the heatmap, where the training margin dynamics are highly correlated
with test margin dynamics when we use Basic CNN(50) and CNN(100) (the area on the diagonal is
light in the left and middle) and the training margin dynamics is very distinct to test error (γ1 ≤ 0)
in CNN(100) (right).
Figure 5: Breiman’s Dilemma II. Net structure: Basic CNN(400) (Left), ResNet18 (Middle, Right).
Dataset: CIFAR100 (Left, Middle), Mini-ImageNet (Right) with 10 percent labels corrupted. With
a fixed network structure, we further explore how the complexity of dataset influences the margin
dynamics. Taking ResNet18 as an example, margin dynamics on CIFAR100 doesn’t have any cross￾over (phase transition), but on Mini-Imagenet a cross-over occurs.
In the end, it’s worth mentioning different choices of the normalization factor estimates may affect
the range of predictability. In all experiments above, normalization factor is estimated via an upper
bound on spectral norm given in Appendix A (Lemma A.1 in Section A). One could also use power
iteration (Miyato et al., 2018) to present a more precise estimation on spectral norm. It turns out
a more accurate estimation of spectral norm can extend the range of predictability, but Breiman’s
dilemma is still there when the balance between model expression power and dataset complexity is
broken. More experiments on this aspect can be found in Figure 10 in Appendix.
8
Under review as a conference paper at ICLR 2019
4 CONCLUSION
In this paper, we show that Breiman’s dilemma is ubiquitous in deep learning, in addition to previous
studies on Boosting algorithms. We exhibit that Breiman’s dilemma is closely related to the trade￾off between model expression power and data complexity. A novel perspective on phase transitions
in dynamics of Lipschitz-normalized margin distributions is proposed to inspect when the model
has over-representation power compared to the dataset, instead of merely counting the number of
parameters. A data-driven early stopping rule by monitoring the margin dynamics is a future direc￾tion to explore. Lipschitz semi-norm plays an important role in normalizing or regularizing neural
networks, e.g. in GANs (Kodali et al., 2017; Miyato et al., 2018), therefore a more careful treatment
deserves further pursuits.
REFERENCES
Peter Bartlett, Dylan J. Foster, and Matus Telgarsky. Spectrally-normalized margin bounds for
neural networks. In The 31st Conference on Neural Information Processing Systems (NIPS),
Long Beach, CA, USA. 2017.
Leo Breiman. Prediction games and arcing algorithms. Neural computation, 11(7):1493–1517,
1999.
Peter B¨uhlmann and Bin Yu. Boosting with the l2-loss: Regression and classification. Journal of
American Statistical Association, 98:324–340, 2002.
Corinna Cortes and Vladimir N. Vapnik. Support-vector networks. Machine Learning, 20(3):273–
297, 1995.
Yoav Freund and Robert E Schapire. A decision-theoretic generalization of on-line learning and an
application to boosting. Journal of Computer and System Sciences, 55:119, 1997.
Gene H Golub and Henk A Van der Vorst. Eigenvalue computation in the 20th century. In Numerical
analysis: historical developments in the 20th century, pp. 209–239. Elsevier, 2001.
Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image
recognition. In Proceedings of the IEEE conference on computer vision and pattern recognition
(CVPR), pp. 770–778, 2016.
Naveen Kodali, Jacob Abernethy, James Hays, and Zsolt Kira. On convergence and stability of gans.
arXiv preprint arXiv:1705.07215, 2017.
Vladimir Koltchinskii, Dmitry Panchenko, et al. Empirical margin distributions and bounding the
generalization error of combined classifiers. The Annals of Statistics, 30(1):1–50, 2002.
Alex Krizhevsky and Geoffrey Hinton. Learning multiple layers of features from tiny images. Tech￾nical report, Citeseer, 2009.
Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton. Imagenet classification with deep con￾volutional neural networks. In Advances in neural information processing systems (NIPS), pp.
1097–1105, 2012.
M. Ledoux and M. Talagrand. Probability in Banach Spaces: Isoperimetry and Processes. Springer￾Verlag, 1991.
Qianli Liao, Brando Miranda, Andrzej Banburski, Jack Hidary, and Tomaso Poggio. A surprising
linear relationship predicts test performance in deep networks. MIT CBMM memo, No. 91, 2018.
Ron Meir and Tong Zhang. Generalization error bounds for bayesian mixture algorithms. Journal
of Machine Learning Research, 4:839–860, 2003.
Takeru Miyato, Toshiki Kataoka, Masanori Koyama, and Yuichi Yoshida. Spectral normalization
for generative adversarial networks. In The 6th International Conference on Learning Represen￾tations (ICLR), 2018.
9
Under review as a conference paper at ICLR 2019
Mehryar Mohri, Afshin Rostamizadeh, and Ameet Talwalkar. Foundations of machine learning.
MIT press, 2012.
Behnam Neyshabur, Srinadh Bhojanapalli, and Nathan Srebro. A pac-bayesian approach to
spectrally-normalized margin bounds for neural networks. In The 6th International Conference
on Learning Representations (ICLR), 2018.
A. B. J. Novikoff. On convergence proofs on perceptrons. In Proceedings of the Symposium on the
Mathematical Theory of Automata, volume 12, pp. 615–622, 1962.
Lev Reyzin and Robert E Schapire. How boosting the margin can also boost classifier complexity.
In Proceedings of the 23rd international conference on Machine learning, pp. 753–760. ACM,
2006.
Robert E. Schapire, Yoav Freund, Peter Bartlett, and Wee Sun Lee. Boosting the margin: a new
explanation for the effectiveness of voting methods. The Annals of Statistics, 26(5):1651–1686,
1998.
Karen Simonyan and Andrew Zisserman. Very deep convolutional networks for large-scale image
recognition. arXiv preprint arXiv:1409.1556, 2014.
Daniel Soudry, Elad Hoffer, and Nathan Srebro. The implicit bias of gradient descent on separable
data. In The 6th International Conference on Learning Representations (ICLR), 2018.
Matus Telgarsky. Margins, shrinkage, and boosting. In Proceedings of the 30th International Con￾ference on Machine Learning (ICML), 2013.
Vladimir N. Vapnik. Statistical Learning Theory. John Wiley & Sons, Inc., 1998.
Oriol Vinyals, Charles Blundell, Tim Lillicrap, Daan Wierstra, et al. Matching networks for one
shot learning. In Advances in Neural Information Processing Systems, pp. 3630–3638, 2016.
Martin J. Wainwright. High-Dimensional Statistics: A Non-Asymptotic Viewpoint. Cambridge Series
in Statistical and Probabilistic Mathematics. Cambridge University Press, 2019.
Liwei Wang, Masashi Sugiyama, Cheng Yang, Zhi-Hua Zhou, and Jufu Feng. On the margin ex￾planation of boosting algorithms. In The 21th Annual Conference on Learning Theory (COLT).
2008.
Liwei Wang, Masashi Sugiyama, Cheng Yang, Zhi-Hua Zhou, and Jufu Feng. A refined margin
analysis for boosting algorithms via equilibrium margin. Journal of Machine Learning Research,
12:1835–1863, 2011.
Yuan Yao, Lorenzo Rosasco, and Andrea Caponnetto. On early stopping in gradient descent learn￾ing. Constructive Approximation, 26(2):289–315, 2007.
Chiyuan Zhang, Samy Bengio, Moritz Hardt, Benjamin Recht, and Oriol Vinyals. Understanding
deep learning requires rethinking generalization. arXiv preprint arXiv:1611.03530, 2016.
Tong Zhang and Bin Yu. Boosting with early stopping: Convergence and consistency. Annals of
Statistics, 33(4):1538–1579, 2005.
10
Under review as a conference paper at ICLR 2019
A ESTIMATE OF NORMALIZATION FACTORS
In this section we discuss how to estimate the Lipschitz constant bound in (2). Given an operator
W associated with a convolutional kernel w, i.e. W x = w ∗ x, there are two ways to estimate its
operator norm. We begin with a useful lemma,
Lemma A.1. For convolution operator with kernel w, i.e. W x := w ∗ x, there holds
k
w ∗ xk 2 ≤ kwk 1k xk 2.
In other words, k Wk σ ≤ kwk 1.
Proof.
k
w ∗ xk 22 = X u (X v x(u)w(u − v))2 = X u (X v (x(u)p w(u − v)) · p w(u − v))2 ≤ X u (X v x(u)2w(u − v))(X
v w(u − v)), = k wk 21k xk 22
where the second last step is due to Cauchy-Schwartz inequality.
A. ` 1-norm. The convolutional operator (spectral) norm can be upper bounded by the ` 1-norm
of its kernels, i.e. k Wk σ ≤ kwk 1. This is a simple way but the bound gets loose when the
channel numbers increase.
B. Power iteration. A fast approximation for the spectral norm of the operator matrix is given
in (Miyato et al., 2018) in GANs that is based on power iterations (Golub & Van der Vorst,
2001). Yet as a shortcoming, it is not easy to apply to the ResNets.
We compare two estimation in Appendix Figure 10. It turns out both of them have prediction power
on the tendency of generalization error and both of them will fail when the network has large enough
expression power. Though using ` 1 norm of kernel is extremely efficient, the power iteration method
may be tighter and has a wider range of predictability.
In the remaining of this section, we will particularly discuss the treatment of ResNets. ResNet is
usually a composition of the basic blocks shown in Figure 6 with short-cut structure. The following
method is used in this paper to estimate the upper bound of operator or spectral norm of such a basic
block of ResNet.
Figure 6: A basic block in ResNets used in this paper. The shortcut consists of one block with
convolutional and batch-normalization layers, while the main stream has two blocks. ResNets are
constructed as a cascading of several basic blocks of various sizes.
(a) Convolution layer: its operator norm can be bounded either by the ` 1 norm of kernel or by
power iteration above.
(b) Batch Normalization (BN): in training process, BN normalizes samples by x+ = (x − µB)/p σ2B +  , where µB, σ2B are mean and variance of batch samples, while keeping
an online averaging as µˆ and σˆ2
. Then BN rescales x+ by estimated parameters ˆα, βˆ
and output xˆ = ˆαx+ + ˆβ. Therefore the whole rescaling of BN on the kernel tensor w
11
Under review as a conference paper at ICLR 2019
of the convolution layer is ˆw = wˆα/√σˆ2 +  and its corresponding rescaled operator is
k
ˆWk σ = k Wk σ ˆα/√σˆ2 +  .
(b) Activation and pooling: their Lipschitz constants Lσ can be known a priori, e.g. Lσ = 1
for ReLU and hence can be ignored. In general, Lσ can not be ignored if they are in the
shortcut as discussed below.
(d) Shortcut: In residue net with basic block in Figure 6, one has to treat the mainstream
(Block2, Block3) and the shortcut Block1 separately. Since k f + gk F ≤ kfk F + k gk F ,
in this paper we take the Lipschitz upper bound by Lσout(k ˆW1k σ + Lσin k
ˆW2k σk ˆW3k σ),
where k ˆWik σ denotes a spectral norm estimate of BN-rescaled convolutional operator Wi.
In particular Lσout can be ignored since all paths are normalized by the same constant while
Lσin can not be ignored due to its asymmetry.
B STRUCTURE OF BASIC CNN
Figure 7: Illustration of the structure of basic CNN.
C EXPERIMENTS
C.1 SPEARMAN’S ρ RANK CORRELATION COEFFICIENT
Figure 8: Spearman’s ρ rank correlation at different γ and q. Dataset: CIFAR10 (Left) and CI￾FAR10 with 10 percents label corrupted (Right). Net structure: Basic CNN(50). Left: training
margin error and generalization error (Blue), training error (Red). Right: inverse quantile margin
and generalization error (Blue), training error (Red). The dynamic of large margin is closely related
to the generalization error.
12
Under review as a conference paper at ICLR 2019
C.2 EXAMPLES: TWO LOCAL MINIMUMS IN RESNET18
Figure 9: Dynamic of inverse quantile margin. Data, CIFAR10 with 10 percents label corrupted.
Network, ResNet18. Normalization factor, spectral complexity estimated by power iteration. Left:
the dynamic of generalization error and inverse quantile margin with q = 0.95. Overfitting occurs
and two local minimums are marked with x in each dynamic. The dash line highlight where the
margin distribution is uniformly improved. Right: dynamic of training margin distribution. Two
distributions when local minimum of generalization error occurs are highlighted with red color.
The picture is slight different here, since after the first (better) local minimum, the training margin
distribution is uniformly improved without reducing generalization error. Therefore, we could not
expect the inverse quantile margin to reflect the tendency of generalization error globally, especially
the order of two local minimums. However, around epochs when local minimum occurs, the training
margin distribution still has a cross-over, and thus the inverse quantile margin could reflect the
tendency locally.
C.3 ESTIMATED BY POWER ITERATION AND KERNEL l1 NORM
Figure 10: Power iteration: success and failure. Top: spectral norm in Lf is estimated by the cor￾responding kernel l1 norm. Bottom: spectral norm is estimated by Power Iteration. Net structure,
Basic CNN with channels 50(Top, Left), 100(Top, Middle), 400(Top Right), 200(Bottom, Left),
600(Bottom, Middle), 900(Bottom, Right). Dataset: CIFAR10 with 10 percents corrupted. A
more accurate estimation of spectral norm can extend the range of predictability, but eventually
face Breiman’s dilemma if the balance between model expression power and dataset complexity is
broken.
13
Under review as a conference paper at ICLR 2019
C.4 SUCCESS AND FAILURE IN MORE PRACTICAL NETWORK AND DATASET
Figure 11: Examples on more practical network and dataset. The dataset and network we ap￾plied is listed in each row. Left: curve of training error, generalization error, training margin er￾ror and inverse quantile margin. Middle: dynamic of training margin distribution. Right: heatmap
of Spearman’s ρ correlation between test margin error E[eγ1 (f˜(x), y)] and training margin error
(1/n)P [eγ2 (f˜(xi), yi)] against (γ1, γ2).
14
Under review as a conference paper at ICLR 2019
C.5 DYNAMIC OF TEST MARGIN DISTRIBUTION
Figure 12: Comparison between dynamic of test margin distribution and training margin distribu￾tion. Top: training margin distribution. Bottom: test margin distribution. Net structure: Basic CNN
with channels 50 (Left), 100 (Middle) and 400 (Right). When model becomes complex, the dynamic
of training margin distribution lose the predictability on test margin distribution.
D PROOFS
D.1 AUXILIARY LEMMAS
Lemma 2.1 follows from the following Lemma D.1 by applying it to bounded function ` γ(f(x), y)
whose range is [0, 1].
Lemma D.1. For any δ ∈ (0, 1) and bounded-value functions FB := {f : X → R : k fk ∞ ≤ B},
the following holds with probability at least 1 − δ,
sup
f∈FB Enf(x) − Ef(x) ≤ 2Rn(FB) + Br
log(1/δ) 2n
(13)
where
Rn(F) = E sup
f∈F
1n nXi=1
εif(xi) (14)
is the Rademacher Complexity of function class F.
For completeness, we include its proof that also needs the following well-known McDiarmid’s in￾equality (see, e.g. Wainwright (2019)).
Lemma D.2 (McDiarmid’s Bounded Difference Inequality). For Bi-bounded difference functions
h : X → R s.t. |h(xi
, x−i) − h(x0i
, x−i)| ≤ Bi, P {Enh − Exh(x) ≥ ε} ≤ exp  − 2 2 P ni=1 Bi2  ,
15
Under review as a conference paper at ICLR 2019
Proof of Lemma D.1. It suffices to show that for f¯ = f(x) − Ef(x),
sup
f∈FB Enf¯ = sup
f∈FB Enf¯− E sup
f∈FB En ¯f + E sup
f∈FB Enf¯ (15)
where with probability at least 1 − δ,
sup
f∈FB Enf¯− E sup
f∈FB Enf¯ ≤ Br
log 1/δ
2n
(16)
by McDiarmid’s bounded difference inequality, and
E sup
f∈FB Enf¯ ≤ 2Rn(F) (17)
using Rademacher complexity.
To see (16), we are going to show that supf∈FB Enf¯ is a bounded difference function. Consider
g(xn1
) = Enf¯ = 1n P ni=1 f(xi) − Exf(x). Assume that the i-th argument xi changes to x0i
, then
for every g, g(xi
, x−i) − sup
g g(x0i
, x−i) ≤ g(xi
, x−i) − g(x0i
, x−i) ≤ 1n[f(xi) − f(x0i
)]
≤ Bn .
Hence supg g(xi
, x−i) − supg g(x0i
, x−i) ≤ B/n, which implies that supf∈FB Enf¯ is a B/n￾bounded difference function. Then (16) follows from the McDiarmid’s inequality (Lemma D.2)
using Bi = B/n and δ = exp(−2nε2/B2).
As to (17),
E sup
f∈FB Enf¯ = Exn1
sup
f∈FB Eyn1 [Enf(xn1 ) − Enf(yn1
)]
≤ Exn1
,yn1
sup
f∈FB [Enf(xn1 ) − Enf(yn1
)]
= Exn1
,yn1
sup
f∈FB Eεn1 1n nXi=1
εi (f(xi) − f(yi)), εi ∈ {±1} ∼ B(n, 1/2)
≤ Exn1
,yn1
,εn1
sup
f∈FB 1n nXi=1
(εif(xi) − εif(yi))
≤ 2Exn1
,εn1
sup
f∈FB 1n nXi=1
εif(xi) = 2R(FB)
that ends the proof.
We also need the following contraction inequality of Rademacher Complexity (Ledoux & Talagrand,
1991; Meir & Zhang, 2003).
Lemma D.3 (Rademacher Contraction Inequality). For any Lipschitz function: φ : R → R such
that |φ(x) − φ(y)| ≤ L|x − y|, R(φ ◦ F) ≤ LR(F).
Ledoux & Talagrand (1991) has an additional factor 2 in the contraction inequality which is dropped
in Meir & Zhang (2003). Its current form is stated in Mohri et al. (2012) as Talagrand’s Lemma
(Lemma 4.2).
Beyond, we further introduce the family,
G = {g(x, y) = ζ(f(x), y) : X × Y → R, f ∈ F}, (18)
and the sub-family constraint in Lipschitz semi-norm on f, GL = {g(x, y) = ζ(f(x), y) : X × Y → R, f ∈ F with k fk F ≤ L}. (19)
The following lemma (Koltchinskii et al., 2002) allows us to bound the Rademacher complexity
term of Rn(G) by Rn(H),
16
Under review as a conference paper at ICLR 2019
Lemma D.4. Rn(GL) ≤ K2Rn(HL)
Proof of Lemma D.4. Rn(GL) = 1nES, sup
k
fk≤L nXi=1

iζ(f(xi), yi), = 1nES, sup
k
fk≤L nXi=1
X y∈Y

iζ(f(xi), yi)1[yi = y], = 1n X y∈Y
ES, sup
k
fk≤L nXi=1

iζ(f(xi), yi)1[yi = y], = 1n X y∈Y
ES,[ sup
k
fk≤L nXi=1

i(2 · 1[yi = y] − 1 2 + 12
)], ≤ 12n X y∈Y
ES,[ sup
k
fk≤L nXi=1

i(2 · 1[yi = y] − 1)
2
] + 12n X y∈Y
ES,[ sup
k
fk≤L mXi=1

iζ(f(xi), y)]), = 1n X y∈Y
ES,[ sup
k
fk≤L mXi=1

iζ(f(xi), y)]), = 1n X y∈Y
ES,[ sup
k
fk≤L mXi=1

i([f(xi)]y − max
y0 6 =y[f(xi)]y0 )], ≤ 1n X y∈Y
ES,[ sup
k
fk≤L mXi=1

i[f(xi)]y] + 1n X y∈Y
ES,[ sup
k
fk≤L mXi=1

i max
y0 6 =y[f(xi)]y0 ], ≤ Kn ES,[ sup
h∈HL mXi=1

ih(xi)] + K(K − 1)
n ES,[ sup
h∈HL mXi=1

ih(xi)], = K2Rn(HL),
where the last inequality is implied from Rn({max(f1, . . . , fM) : fi ∈ Fi}) ≤ P Mm=1 Rn(Fm) (Koltchinskii et al., 2002; Mohri et al., 2012).
D.2 PROOF OF PROPOSITION 1
Proof of Proposition 1. Without loss of generality, we assume Lσi = 1, i = 1, . . . , l. Let T (r) =:
{t(x) = w · x : k wk 2 ≤ r} be the class of linear function with Lipschitz semi-norm less than r and
we show that for each t ∈ T (L/2), there exists f ∈ F with k fk F ≤ L and y0 ∈ {1, . . . , K} such
that h(x) = [f(x)]y0 ∈ HL. Let’s t(x) = w0 · x with k w0k 2 ≤ L/2, we construct the network
f(x) = Wlσl(xl) + bl
, xi = σi(Wi−1xi−1 + bi−1), i = 1, . . . , l, x0 = x as follows,
• x1 = σ1(W1x) = (σ1(w0 · x), σ1(−w0 · x), 0, . . . , 0)
• xk = σk(Wkxk−1) = (σk([xk−1]1), σk([xk−1]2), 0, . . . , 0), k = 2, . . . , l − 1 • xl = Wlxl−1 = ([xl−1]1 − [xl−1]2, 0, . . . , 0)
By construction above, we let h(x) = [f(x)]1, h(x) = σ1(w0 · x) − σ1(−w0 · x), = w0 · x,
17
Under review as a conference paper at ICLR 2019
where k fk F ≤ Πli=1k Wik σ = 2L/2 = L, and thus h ∈ HL by definition. Therefore,
Rn(HL) ≥ Rn(T (L/2)), = ESE sup
k
wk≤L/2 nXi=1

iw · xi, = L2 ESE k nXi=1

ixik 2, ≥ CLESvuut nXi=1
k
xik 2,
where the second equality is implied from Cauchy-Schwarz inequality and the last inequality is
implied from Khintchine inequality.
D.3 PROOF OF THEOREM 1
Proof of Theorem 1. Consider l(γ1,γ2)(ζ(f˜(x), y)), where f˜ := f /Lf is the normalized network,
ζ(f˜(x), y) ∈ G1. Then for any γ2 > γ1 ≥ 0, P[ζ(f˜(x), y) < γ1] ≤ P[` (γ1,γ2)(ζ(f˜(x), y)], ≤ Pn` (γ1,γ2)(f˜(x), y) + 2Rn(l(γ1,γ2) ◦ G1) + r log(1/δ) 2n , ≤ Pn` (γ1,γ2)(f˜(x), y) + 2∆Rn(G1) + r log(1/δ) 2n , ≤ Pn` γ1,γ2 (f˜(x), y) + 2K2 ∆ Rn(H1) + r log(1/δ) 2n , ≤ Pn` γ2 (f˜(x), y) + 2K2 ∆ Rn(H1) + r log(1/δ) 2n ,
where the first and last inequality is implied from 1[ζ < γ1] ≤ ` (γ1,γ2)(ζ) ≤ 1[ζ < γ2], the second
inequality is a direct consequence of Lemma D.1, the third inequality results from Rademacher
Contraction Inequality (Lemma D.3) and finally the fourth equation is implied from Lemma D.4.
D.4 PROOF OF THEOREM 2
Proof of Theorem 2. Firstly, we show after normalization, the normalize margin has an upper bound,
k
f(x)k 2 = k σL(WLxL−1 + bL)k 2, ≤ LσL k WLxL−1 + bLk 2, ≤ (LσL k ¯WLk σ)(k xL−1k 2 + 1)
. . .
≤ ΠLi=1(Lσi k ¯Wik σ)k xk 2 + ΣLi=1(ΠLj=i(Lσi k ¯Wik σ)),
where xi = σi(Wixi−1 + bi) with x0 = x, ¯Wi = (Wi
, bi) and Lσi
is the Lipschitz constant of
activation function σi with σi(0) = 0, i = 1, . . . , L. Then, for normalized network f˜ = f /Lf with
18
Under review as a conference paper at ICLR 2019
Lf = ΠLi=1(Lσi k ¯Wik σ) and k xk 2 ≤ M,kf˜(x)k 2 ≤ M + L.
Therefore ζ(f˜(x), y) ≤ 2k f˜(x)k 2 = 2(M + L) =: M1, and the quantile margin is also bounded
γˆq,t ≤ M1 for all q ∈ (0, 1), t = 1, . . . , T.
The remaining proof is standard. For any  > 0, we take a sequence of  k and γk, k = 1, 2, . . . by

k =  + q
log k n
and γk = M12−k
. Then by Theorem 1, P(Ak) ≤ exp(−2n2k),
where Ak is the event P[ζ(f˜t(x), y) < 0] > Pn[ζ(f˜(x), y) < γk] + 2K2 γk R(H1) +  k, and the
probability is taken over samples {x1, ...xn}. We further consider the probability for none of Ak
occurs,
P(∃Ak) ≤ Σ∞k=1P(Ak), ≤ Σ∞k=1 k12
exp(−2n2), ≤ 2 exp(−2n2).
Hence, fix a q ∈ [0, 1], for any t = 1, . . . , T, as long as γˆq,t > 0, there exists a kˆ ≥ 1 such that,
γˆk+1 ≤ γˆq,t < γˆk. (20)
Therefore,
Aˆk+1 ⊇ P[ζ(f˜t(x), y) < 0] > Pn[ζ(f˜t(x), y) < γˆq,t] + 2K2 γˆk+1
R(H1) +  ˆk+1, ⊇ P[ζ(f˜t(x), y) < 0] > Pn[ζ(f˜t(x), y) < γˆq,t] + 4K2 γˆq,t
R(H1) +  ˆk+1, = P[ζ(f˜t(x), y) < 0] > Pn[ζ(f˜t(x), y) > γˆq,t] + 4K2 ˆγq,t
R(H1) +  + s
log(kˆn
+ 1)
, ⊇ P[ζ(f˜t(x), y) < 0] > Pn[ζ(f˜t(x), y) > γˆq,t] + 4K2 ˆγq,t
R(H1) +  + r
log log2
(2
nM1/γˆq,t).
The first inequality is implied from Pn[ζ(f˜t(x), y) < γˆq,t] > Pn[ζ(f˜t(x), y) < γˆk+1], since γˆk+1 ≤ γˆq,t. The second inequality is implied from γˆq,t < 2γˆk+1 and thus, 1/γˆk+1 < 2/γˆq,t. The third
equality is the direct definition of  ˆk
. The last inequality is implied from kˆ + 1 = log2(M1/γˆk+1)
and again, 1/γˆk+1 < 2/γˆq,t. The conclusion is proved immediately if we do a transform from  to
δ.
19
