Figure 1: Examples of how to compute positional encodings for nodes in a regular tree. The se-quence of branch choices b is used to determine a sequence of transforms Db1 , Db2 , . . . to apply tothe root node’s positional encoding. U is complementarily defined such that applying it to any ofthese nodes results in that node’s parent (e.g. r = Ux = U2y = U 3z). The specific transformsDi , U are defined in Equations 1 and 2.
Figure 2: Nearest neighbor heatmap of parameter-free tree encoding scheme. We number the nodesin the tree according to a breadth-first left-to-right traversal of a balanced binary tree: position 0is the root, 1 is the first child of root, 2 is the second child of root, 3 is the first child of the firstchild of root, and so on. In each case, we consider the row position as a “query” and each columnposition as a potential “value”. The attention score of solely the positional encoding after softmaxis represented as a heatmap scaling from black (0.0) through red and yellow to white (1.0).
Figure 3: Nearest neighbor heatmaps of parameterized tree encodings with example values of p. Asshown in Figure 2, many of the lower-level positions in the tree are quite similar in the absence of adecay factor. For example, position 5 (Root,D2,D1) is most similar to itself (score of 0.44), but quitesimilar to position 6 (Root,D2,D2) and position 3 (Root,D1,D1) with scores of 0.16. An appropriatelevel of decay allows each position to be uniquely identified as in (a); too much decay provides littleadditional information as in (b).
Figure 4: Common traversals and mixtures thereof can be represented as linear transforms. Usingthe position encoding described in this paper, finding the parent, left child, or right child of a givennode can be represented as linear transforms U, D1, and D2. Complex traversals can be representedalso as linear transforms by composing these operations. The attention heatmaps below demonstratethe similarity of tree positional encodings applied to different points in the tree when the “query”has been transformed before dot product with the value.
