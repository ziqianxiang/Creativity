Figure 1: Different trained models for a 2D toy problem. The data distribution (samples shown asgreen dots) consists of a mixture of isotropic Gaussian distributions, arranged in a square grid. Fourdifferent trained models (generator samples shown as red dots) are shown: (a) result of training amodel to optimize KL(p,q), (b-d) result of training models with our method (fine-tuning result of(a)), varying the form of the structured Gibbs distribution ν . Blue lines show contours of learnedstructured GibbS distributions V. In (b-c), the learned parameters of V are μ0, σ0, and βFigure 2: Our method applied to forecast ego-vehicle trajectories, showing input image and overheadviews with the learned cost - log(V) (overlaid on LIDAR map). Middle shows samples from currentq (red), and true future path (cyan). Note that V has learned to penalize regions with obstacles(V (x) = log V(x), i.e. higher V (x) is lower traversal cost). Right: after incorporating the learned V,q and its samples are shifted to avoid high-cost regions, corresponding to suppression of spuriousmodes.
Figure 2: Our method applied to forecast ego-vehicle trajectories, showing input image and overheadviews with the learned cost - log(V) (overlaid on LIDAR map). Middle shows samples from currentq (red), and true future path (cyan). Note that V has learned to penalize regions with obstacles(V (x) = log V(x), i.e. higher V (x) is lower traversal cost). Right: after incorporating the learned V,q and its samples are shifted to avoid high-cost regions, corresponding to suppression of spuriousmodes.
Figure 4: Left: Comparison of methods under the learned VφKITTI (q) criterion. Each row correspondsto a method, and each column corresponds to the method’s result on the item at a specific level ofperformance, from worst (left) to best (right) of results on 100 scenes. Each image is composed ofthe learned VφKITTI (q) blended with the input BEV features, sample trajectories from each method(red), and the true future (blue). The learned V often penalizes samples that go off of the road orinto obstacles inferred from the features. C3PO usually produces the best samples under this metric.
Figure 5: Comparison of methods on a set of random scenes from the CaliForecasting test set.
