Figure 1: (a) the stacked hourglass network may produce erroneous estimates due to occlusion andbody distortion. (b) The MSSH network can better constrain the body keypoints under the conditionof occlusion and body distortion.
Figure 2: Overview of MSSH networkglass network serially connect multiple hourglass networks. So the subsampling and upsamplingare repeated for several times to construct the stacked hourglass network. This means that the entirenetwork has multiple bottom-up and top-down processes to capture information at different scales.
Figure 3: Pre-processing network3.3	Hourglass network enhancementTo enhance the performance of the hourglass network, the inception-resnet is used as the basicbuilding block in each hourglass network. As shown in Figure 4(a), inception-resnet-A consists ofconvolutional layers, batch norm layers and Relu units, with channel-wise concatenation and pixel-wise additions. The concatenation of two branches maintains different level of information, but4Under review as a conference paper at ICLR 2019the concatenated features across different channels need to be transformed and normalized by thesubsequent convolutional layers. The benefit of the convolutional layers with 1*1 kernels is that theinput and output have the same resolution while the depth of channels can be flexible. In addition,inception-resnet-A increases the receptive field of the unit structure by adding a small number ofconvolution layers, effectively learning the context relationships and improving the implicit spacemodel without the gradient disappearing. Compared with inception-resnet-A, inception-resnet-Buses a subsampling layer and upsampling layer to deepen the building block and further extractdifferent levels of information on the feature maps, as shown in Figure 4(b).
Figure 4: Inception-resnet-A and inception-resnet-B4	Loss function for multi-scale stacked hourglass networkThe consistent processing of constraints makes it difficult to form differentiated collaboration mech-anisms for each stacked hourglass network. Motivated by recurrent human pose estimation that usesmultiple regression networks to generate multiple loss functions, new loss function with adaptiveweight coefficients is designed to pay more attention to hard keypoints, where different keypointshave different weight coefficients of loss function at different scales, and the key weight coefficientsare dynamically adjusted from the small scale to the large scale. If the loss function value of akeypoint in the pre-level hourglass network is large, the weight of loss functionin is increased cor-responding keypoint on the current hourglass network. If the loss function value of a keypoint inthe pre-level hourglass network is small, the weight of loss functionin is decreased correspondingkeypoint on the current hourglass network. By dynamically adjusting the weight coefficient, thenetwork gradually increases the focus on the hard keypoints.
Figure 5: pre-processing network with the addition of horizontal connections8Under review as a conference paper at ICLR 20195.2.4	Pixel-wise add and concatenate for information fusion in front of eachHOURGLASS NETWORKAs shown in Figure 2, in stacked hourglass network, the input of the hourglass network stack with thedispatched feature of the pre-processing network and the output of the pre-level hourglass network,so each hourglass networks is able to access new information. Therefore, the way of informationfusion of these two parts is particularly important. In the benchmark hourglass network, we usedpixel-wise add as the way of information fusion. Using concatenation as a comparison test to com-bine features generated from two pipelines, which is similar to inception models. Results show thatpixel-wise addition has the better performance with an accuracy improvement of 0.66%, which thepixel-wise add method is 89.91% and the concatenate method is 89.36%. Therefore, we ended upusing pixel-wise add.
Figure 6: The training curves of stacked hourglass and MSSH networkB Qualitative resultsFigure 7 shows the detection results on the MPII validation set and the LSP dataset when the bodyjoints are not twisted and the keypoints are not occluded. Figure 8 shows the detection results on theMPII validation set and the LSP dataset when the body joints are severely twisted and he keypointsare occluded. Figure 9 shows the detection results on the MPII validation set when the human bodyis occluded or the body joints are twisted.
Figure 7: Results on the MPII validation set (top) and the LSP dataset (bottom), when the bodyjoints are not twisted and the keypoints are not occluded.
Figure 8: Results on the MPII validation set (top) and the LSP dataset (bottom), when the bodyjoints are twisted and the keypoints are not occluded.
