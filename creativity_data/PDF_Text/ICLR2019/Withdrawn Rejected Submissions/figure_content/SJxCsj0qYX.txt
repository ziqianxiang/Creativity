Figure 1: Left Figure, Top Row: Standard GAN training on a toy 2D mixture of 8 Gaussians. LeftFigure, Bottom Row: Stackelberg GAN training with 8 generator ensembles, each of which isdenoted by one color. Right Figure: Stackelberg GAN training with 10 generator ensembles onfashion-MNIST dataset without cherry pick, where each row corresponds to one generator.
Figure 2: Architecture of Stackelberg GAN. We ensemble the losses of various generator anddiscriminator pairs with equal weights.
Figure 3: Comparison of mode collapse/dropping issue of one-generator and multi-generator architec-tures with varying model capacities. (a) and (b) show that increasing the model capacity can alleviatethe mode dropping issue, though it does not alleviate the mode collapse issue. (c) Multi-generatorarchitecture with even small capacity resolves the mode collapse issue.
Figure 4: Comparison of mode collapse issue of multi-branch and multi-generator architectures withvarying model capacities. (a) and (b) show that increasing the model capacity can alleviate the modedropping issue, though it does not alleviate the mode collapse issue. (c) Multi-generator architecturewith much smaller capacity resolves the mode collapse issue.
Figure 5: Stackelberg GAN with varying number of generators of architecture 2-128-256-512-1024-2.
Figure 6: Standard GAN vs. Stackelberg GAN on the MNIST dataset without cherry pick. LeftFigure: Digits generated by the standard GAN. It shows that the standard GAN generates many"1"â€™s which are not very diverse. Middle Figure: Digits generated by the Stackelberg GAN with 5generators, where every two rows correspond to one generator. Right Figure: Digits generated bythe Stackelberg GAN with 10 generators, where each row corresponds to one generator.
Figure 7: Generated samples by Stackelberg GAN on CIFAR-10 dataset without cherry pick. LeftFigure: Examples generated by the standard GAN. It shows that the standard GAN fails to generatebags. Middle Figure: Examples generated by the Stackelberg GAN with 5 generators, where everytwo rows correspond to one generator. Right Figure: Examples generated by the Stackelberg GANwith 10 generators, where each row corresponds to one generator.
Figure 8: Examples generated by Stackelberg GAN on CIFAR-10 (left) and Tiny ImageNet (right)without cherry pick, where each row corresponds to samples from one generator.
Figure 9: Effects of generator architecture of Stackelberg GAN on a toy 2D mixture of Gaussians,where the number of generators is set to be 8. Top Row: The generators have one hidden layer.
Figure 10: Examples generated by Stackelberg GAN with 10 generators on CIFAR-10 dataset, whereeach row corresponds to samples from one generator.
Figure 11: Examples generated by Stackelberg GAN with 10 generators on CIFAR-10 dataset, whereeach row corresponds to samples from one generator.
Figure 12: Examples generated by Stackelberg GAN with 10 generators on Tiny ImageNet dataset,where each row corresponds to samples from one generator.
Figure 13: Examples generated by Stackelberg GAN with 10 generators on Tiny ImageNet dataset,where each row corresponds to samples from one generator.
