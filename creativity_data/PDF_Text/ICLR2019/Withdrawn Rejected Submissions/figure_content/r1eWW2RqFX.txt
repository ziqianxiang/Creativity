Figure 1: The point cloud generation process in PointGroW (best viewed in color). Given i - 1generated points, our model first estimates a conditional distribution of Zi, indicated as p(zi ∣s≤i-1),and then samples a value (indicated as a red bar) according to it. The process is repeated to sampleyi and xi with previously sampled coordinates as additional conditions. The ith point (red point inthe last column) is obtained as {xi, yi, zi}. When i = 1, p(zi∣s≤i-1) = P(Zi).
Figure 2: Context related operations.③：element-wise production,㊉：concatenation.
Figure 3: The self-attention fields in PointGrow for query locations (red points), visualized as Eu-clidean distances between the context feature of a query point and the features of its accessiblepoints. The distances of inaccessible points (generated after the query point) are considered to beinfinitely far. Left: SACA-A; Right: SACA-B.
Figure 4: The proposed model architecture to estimate conditional distributions of point coordinates.
Figure 5: Generated point clouds for different categories from scratch by unconditional PointGrow.
Figure 7: Shape completion results generated by PointGrow.
Figure 8: Examples of successfully generated point clouds by PointGrow conditioned on one-hotcategorical vectors. Bottom right shows failure cases.
Figure 9: Upper left: Generated point clouds conditioned on synthetic testing images fromShapeNet (first 4 columns) and real images from PASCAL3D+ (last 2 columns). Upper right:Examples of image condition arithmetic for chairs. Bottom: Examples of image condition linearinterpolation for cars. Condition vectors from leftmost and rightmost images are used as endpointsfor the shape interpolation.
