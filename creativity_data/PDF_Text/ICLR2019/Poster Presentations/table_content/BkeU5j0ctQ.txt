Table 1: Final performance of cem, td3, multi-actor td3 and cem-td3 on 5 environments. Wereport the mean ands medians over 10 runs of 1 million steps. For each benchmark, we highlight theresults of the method with the best mean.
Table 2: Final performance of erl, cem-ddpg and cem-td3 on 5 environments. We report themean ands medians over 10 runs of 1 million steps. For each benchmark, we highlight the results ofthe method with the best mean.
Table 3: Architecture of the networks (from the input layer (top line) to the output layer (bottomline)Actor	Critic(state dim, 400) tanh (400, 300) tanh (300, action dim) tanh	(state dim + action dim, 400) leaky relu (400, 300) leaky relu (300, 1)B	Importance mixingImportance mixing is a specific mechanism designed to improve the sample efficiency of evolutionstrategies. It was initially introduced in Sun et al. (2009) and consisted in reusing some samplesfrom the previous generation into the current one, to avoid the cost of re-evaluating the correspond-ing policies in the environment. The mechanism was recently extended in Pourchot et al. (2018) toreusing samples from any generation stored into an archive. Empirical results showed that impor-tance sampling can improve sample efficiency by a factor of ten, and that most of these savings justcome from using the samples from the previous generation, as performed by the initial mechanism.
Table 4: Final performance of cem-td3 with and without importance mixing on the half-cheetah-v2, hopper-v2, swimmer-v2, ant-v2 and walker2d-v2 environments. We reportthe mean ands medians over 10 runs of 1 million steps. For each benchmark, we highlight the resultsof the method with the best mean.
Table 5: Final Performance of cem-rl with and without action noise (an), with ddpg, and withrelu non-linearities in mujoco environments. We report the mean ands medians over 10 runs of 1million steps. For each benchmark, we highlight the results of the method with the best mean.
