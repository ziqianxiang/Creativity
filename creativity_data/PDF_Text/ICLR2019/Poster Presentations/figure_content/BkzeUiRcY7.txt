Figure 1: Illustration of our problem setup. Workers have different skills (abilities for completingtasks) and preferences (which tasks they like) indicated by the bar charts. They are self-interestedand perform the tasks they prefer the most. To achieve optimal collaboration, a manager has to firstinfer workersâ€™ minds, and assigns right bonuses to workers for finishing specified tasks in the formof contracts. Consequently, workers will adjust their intentions and work together accordingly. E.g.,workers in the figure initially all want to do task B. To finish all tasks, the manager has to pay morebonus to worker 1 and 2 so that they will perform A and C respectively.
Figure 2: Overview of our network architecture.
Figure 3: (a) Resource Collection environment, where the colored blocks are the resources and thearrows are the workers. (b) Crafting environment (left) and the recipe (right), where the numbersindicate item categories, and the colored block beside an item shows where this item can be crafted.
Figure 4: Learning curves of all approaches in Resource Collection and Crafting. The rewards hereare not rescaled and we show results from 5 runs in all experiments.
Figure 5: Comparison of the adaption capabilities of different exploration strategies during training.
Figure 6: Testing performance when old team members are constantly replaced by new ones.
Figure 7: Average rewards when different numbers of worker agents are present. The policies aretrained with 4 worker agents in Resource Collection and with 8 worker agents in Crafting.
Figure 8: Testing in novel environments. Figure 9: Performance with random actions.
Figure 10: Learning curves in three settings of Resource Collection and in Crafting when applyingdifferent commitment constraints for the manager. The numbers indicate how many steps a contractmust holds.
Figure 12: Comparing training with rule-based worker agents and with RL worker agents in Re-source Collection.
