Published as a conference paper at ICLR 2019
Emerging Disentanglement in Auto-Encoder
Based Unsupervised Image Content Transfer
Ori Press, Tomer Galanti & Sagie Benaim
The School of Computer Science
Tel Aviv University
oripress@mail.tau.ac.il,tomerga2@post.tau.ac.il,sagieb@mail.tau.ac.il
Lior Wolf
Facebook AI Research &
The School of Computer Science
Tel Aviv University
wolf@fb.com
wolf@cs.tau.ac.il
Ab stract
We study the problem of learning to map, in an unsupervised way, between do-
mains A and B, such that the samples b ∈ B contain all the information that
exists in samples a ∈ A and some additional information. For example, ignor-
ing occlusions, B can be people with glasses, A people without, and the glasses,
would be the added information. When mapping a sample a from the first domain
to the other domain, the missing information is replicated from an independent
reference sample b ∈ B . Thus, in the above example, we can create, for every
person without glasses a version with the glasses observed in any face image.
Our solution employs a single two-pathway encoder and a single decoder for both
domains. The common part of the two domains and the separate part are encoded
as two vectors, and the separate part is fixed at zero for domain A. The loss terms
are minimal and involve reconstruction losses for the two domains and a domain
confusion term. Our analysis shows that under mild assumptions, this architecture,
which is much simpler than the literature guided-translation methods, is enough to
ensure disentanglement between the two domains. We present convincing results
in a few visual domains, such as no-glasses to glasses, adding facial hair based on
a reference image, etc.
1	Introduction
In the problem of unsupervised domain translation, the algorithm receives two sets of samples, one
from each domain, and learns a function that maps between a sample in one domain to the analogous
sample in the other domain (Zhu et al., 2017a; Kim et al., 2017; Yi et al., 2017; Benaim & Wolf,
2017; Liu & Tuzel, 2016; Liu et al., 2017; Choi et al., 2017; Conneau et al., 2017; Zhang et al.,
2017a;b; Lample et al., 2018). The term unsupervised means, in this context, that the two sets are
unpaired.
In this paper, we consider the problem of domain B, which contains a type of content that is not
present at A. As a running example, we consider the problem of mapping between a face without
eyewear (domain A) to a face with glasses (domain B). While most methods would map to a person
with any glasses, our solution is guided and we attach to an image a ∈ A, the glasses that are present
in a reference image b ∈ B .
In comparison to other guided image to image translation methods, our method is considerably
simpler. It relies on having a latent space with two parts: (i) a shared part that is common to both
A and B, and (ii) a specific part that encodes the added content in B . By setting the second part
to be the zero vector for all samples in A, a disentanglement emerges. Our analysis shows that this
1
Published as a conference paper at ICLR 2019
Table 1: A comparison to other unsupervised guided image to image translation methods. *k = 5 is
the number of pre-segmented face parts. ^Used for domain confusion, not on the output.
		MUNIT	EG-UNIT	DRIT	PairedCy-	Our
		(Huang,	(Ma,	(Lee,	cleGAN	
		2018)	2018)	2018)	(Chang’18)	
	Shared layers		+	+		
Sharing pattern	Shared latent Space	+		+		+
	Shared encoder					+
	Shared decoder					+
Number of networks	Encoders	4	4	4		2
	Generators	2	2	2	2kt	1
	Discriminators Other	2	2 2	2	kt	甘
leads to the ability to train with a simple, straightforward domain confusion term, while enjoying
the generalization guarantees that would otherwise require a more elaborate loss.
1.1	Previous Work
In image to image translation, the transformations are often captured by multi-layered networks of
an encoder-decoder architecture. The existing solutions often assume a one to one mapping between
the domains, i.e., that there exists a function y such that given a sample a in domain A, maps it to
an analog sample in domain B. In fact, the circularity based constraints by Zhu et al. (2017a); Kim
et al. (2017); Yi et al. (2017) are based on this assumption, since going from one domain to the other
and back, it is assumed that the original sample is obtained, which requires no loss of information.
However, to employ an example made popular by Zhu et al. (2017a), when going from a zebra to a
horse, the stripes are lost, which results in an ambiguity when mapping in the other direction.
This shortcoming was identified by the literature, and a few contributions present many to many
mappings. These include the augmented CycleGAN Almahairi et al. (2018), which adds a random
vector to each domain. A completely different approach is taken by the NAM method (Hoshen &
Wolf, 2018), in which multiple solutions are obtained by considering multiple random initializations.
In our work, multiplicity of outcomes arises from using a reference (guide) image.
A powerful way to capture relations between the two domains, is by employing separate autoen-
coders for the two domains, but which share many of the weights (Liu & Tuzel, 2016; Liu et al.,
2017). This leads to a shared representation: while the low-level image properties, such as texture
and color, are domain-specific and encoded/decoded separately, the mid- and top-level properties are
common to both domains and are processed by identical replicas of the same layers. In our work,
we rely on a shared encoder for both domains in order to enforce a shared representation.
Our method performs one-sided mapping, from A to B, and does not learn the mapping in the other
direction. Benaim & Wolf (2017) perform one-sided mapping using a distance based constraint,
which we do not employ. That method is symmetric in the two domains and in many experiments,
the distance constraint is used in tandem with the cycle constraint. In our case, the two domains
are asymmetric and one domain contains an added content. Our method is inherently asymmetric,
reflecting the asymmetry between the source image and the guide image, which contains the addi-
tional content. The work by Taigman et al. (2017); Hoshen & Wolf (2018) map in an asymmetric
way, but rely on the existence ofa perceptual distance, which we do not employ.
Guided Translation The most relevant work contains very recent and concurrent methods in
which the mapping between the domains employs two inputs: a source image a and a reference
(guide or attribute) image b. Tab. 1 compares these methods to ours along two axes: (i) where shar-
ing occurs in the architecture, and (ii) the number of trained sub-networks of each type. The sharing
can be of layers between different encoders and decoders, following, e.g., Liu & Tuzel (2016);
sharing of a common part of a latent space; and using the same encoder or decoder for multiple
2
Published as a conference paper at ICLR 2019
domains. The networks are of four types: encoders, which map images to a latent space, generators
(also known as decoders), which generate images from a latent representation, discriminators that
are used as part of an adversarial loss, and other, less-standard, networks.
It is apparent that our method is considerably simpler than the literature methods. The main reason
is that our method is based on the emergence of disentanglement, as detailed in Sec. 4. This allows
us to to train with many less parameters and without the need to apply excessive tuning, in order to
balance or calibrate the various components of the compound loss.
The MUNIT architecture by Huang et al. (2018), like our architecture, employs a shared latent space,
in addition to a domain specific latent space. Their architecture is not limited to two domains1 and
unlike ours, employs separate encoders and decoders for the various domains. The type of guiding
that is obtained from the target domain in MUNIT is referred to as style, while in our case, the
guidance provides content. Therefore, MUNIT, as can be seen in our experiments, cannot add
specific glasses, when shifting from the no-glasses domain to the faces with eyewear domain.
The EG-UNIT architecture by Ma et al. (2018) presents a few novelties, including an adaptive
method of masking-out a varying set of the features in the shared latent space. In our latent rep-
resentation of domain A, some of the features are constantly zero, which is much simpler. This
method also focuses on guiding for style and not for content, as is apparent form their experiments.
The very recent DRIT work by Lee et al. (2018) learns to map between two domains using a disen-
tangled representation. Unlike our work, this work seems to focus on style rather than content. The
proposed solution differs from us in many ways: (1) it relies on two-way mapping, while we only
map from A to B . (2) it relies on shared weights in order to ensure that the common representation
is shared. (3) it adds a VAE-like (Kingma & Welling, 2014) statistical characterization of the latent
space, which results in the ability to sample random attributes. As can be seen in Tab. 1, the solution
of Lee et al. (2018) is considerably more involved than our solution.
DRIT (and also MUNIT) employ two different types of encoders that enforce a separation of the
latent space representations to either style or content vectors. For example, the style encoder, unlike
the content encoder, employs spatial pooling and it also results in a smaller representation than the
content one. This is important, in the context of these methods, in order to ensure that the two
representations encode different aspects of the image. If DRIT or MUNIT were to use the same type
of encoder twice, then one encoder could capture all the information, and the image-based guiding
(mixing representations from two images) would become mute. In contrast, our method (i) does not
separate style and content, and (ii) has a representation that is geared toward capturing the additional
content.
The work most similar to us in its goal, but not in method, is the PairedCycleGAN work by Chang
et al. (2018). This work explores the single application of applying the makeup of a reference face
to a source face image. Unfortunately, the method was only demonstrated on a proprietary unshared
dataset and the code is also not publicly available, making a direct comparison impossible at this
time. The method itself is completely different from ours and does not employ disentanglement.
Instead, a generator with two image inputs is used to produce an output image, where the makeup
is transfered between the input images, and a second generator is trained to remove makeup. The
generation is done separately to k = 5 pre-segmented facial regions, and the generators do not
employ an encoder-decoder architecture.
Lastly, there are guided methods, which are trained in the supervised domain, i.e., when there are
matches between domain A and B. Unlike the earlier one-to-one work, such as pix2pix Isola et al.
(2017b), these methods produce multiple outputs based on a reference image in the target domain.
Examples include the Bicycle GAN by Zhu et al. (2017b), who also applied, as baseline in their
experiments, the methods of Bao et al. (2017); Gonzalez-Garcia et al. (2018).
Other Disentanglement Work InfoGAN (Chen et al., 2016) learns a representation in which,
due to the statistical properties of the representations, specific classes are encoded as a one-hot
encoding of part of the latent vector. In the work of Lample et al. (2017); Hadad et al. (2018), the
representation is disentangled by reducing the class based information within it. The separate class
based information is different in nature from our multi-dimensional added content. Cao et al. (2018),
1Ours method can be readily extended to multiple target domains B1, . . . , Bk, but this is not explored here.
3
Published as a conference paper at ICLR 2019
which builds upon Hadad et al. (2018), performs guided image to image translation, but assumes the
availability of class based information, which we do not.
2	Problem Setup
We consider a setting with two domains A = (XA, DA) and B = (XB, DB). Here, XA, XB ⊂ RM
and DA , DB are distributions over them (resp.). The algorithm is provided with two independent
datasets SA = {ai}im=11 and SB = {bj }jm=21 of samples from the two domains that were sampled in
the following manner:
SA ⅛d Dm and SB ⅛d Dm2	(1)
We denote, Da,b := DA X DB the distribution of sampling (a, b) for a 〜 DA and b 〜 DB inde-
pendently. We assume a generative model, in which b is specified by a sample a and a specification
c from a third unknown domain C = (XC, DC) of specifications where DC is a distribution over the
metric space XC ⊂ RN. Formally, there is an invertible function u(b) = (u1(b), u2(b)) ∈ XA × XC
that takes a sample b ∈ XB and returns the content u1(b) of b and the specification u2(b) of b. The
goal is to learn a target function y : XA × XB → XB such that:
y(a, b)〜DB where: a 〜Da, b 〜Db, a Il b and u(y(a, b)) = (a, u2(b))	(2)
Informally, the function y takes two samples a and b and returns the analog of a in B that has
the specification of b. For example, A is the domain of images of persons, B is the domain of
images of persons with sunglasses and C is the domain of images of sunglasses. The function
y takes an image of a person and an image of a person with sunglasses and returns an image of
the first person with the specified sunglasses. For simplicity, we assume that the target function is
extended to inputs (b1, b2) ∈ X2B and u(y(b1, b2)) = (u1(b1), u2(b2)). In other words, b1 and
b2 are mapped to a third b that has the content of b1 and the specification of b2 . In particular,
u(y(b, b)) = (u1 (b), u2(b)) = u(b) and, therefore, y(b, b) = b.
Note that within Eq. 2, there is an assumption on the underlying distributions DA and DB. Using the
concrete example, our framework assumes that the distribution of images of persons with sunglasses
and the distribution of images of persons without them is the same, except for the sunglasses. Oth-
erwise, the distribution of the samples generated by y when resampling a would not be the same as
DB . Note that we do not enforce this assumption on the data, and only employ it for our theoretical
results, to avoid additional terms.
For two functions f1 , f2 : X → R and a distribution D over X, we define the generalization risk
between f1 and f2 as follows:
RD [fl,f2] := Ex〜D ['(fl(x),f2(x))]	(3)
For a loss function ` : RM × RM → [0, ∞). Typically, we use the L1(u, v) := ku - vk1 or
L2(u, v) := ku - vk22 losses. The goal of the algorithm is to return a hypothesis h ∈ H, such that
h : RM × RM → RM , that minimizes the generalization risk,
Rda,b [h, y] = E(a,b)〜Da,b ['(h(a, b), y(a, b))]	(4)
This quantity measures the expected loss of h in mapping two samples a 〜DA and b 〜DB to the
analog y(a, b) of a, that has the specification u2(b) of b. The main challenge is that the algorithm
does not observes paired examples of the form ((a, b), y(a, b)) as a direct supervision for learning
the mapping y : XA × XB → XB . 3
3 Method
In order to learn the mapping y, we only use an encoder-decoder architecture, in which the encoder
receives two input samples and the decoder produces a single output sample that borrows from both
input samples. As we discuss in Sec. 2, the goal of the algorithm is to learn a mapping h = g ◦ f ∈ H
such that: g ◦ f(a, b) ≈ y(a, b). Here, f serves as an encoder and g as a decoder. The encoder f in
our framework is a member of a set of encoders F , each decomposable into two parts and takes the
following form:
f(a, b) = (e1(a), e2(b))	(5)
4
Published as a conference paper at ICLR 2019
'	eι	/、
a 〜DA --------e eι (a)〜eι ◦ DA
f(a, a)
disc
eι
b 〜DB --------e eι(b)〜eι ◦ DB
e2(b)
f(b, b)
Figure 1: An illustration of the domains and functions
employed in our work. DA and DB are the distribu-
tions of images in the two domains. e1 and e2 the two
pathways of the encoder, g is the decoder, which is
applied to f, which aggregates the output of the two
encoder pathways. There are only three constraints
used while training, shown in red: (i) a reconstruction
loss in domain A, comparing g ◦ f (a, a) with a, (ii)
a reconstruction loss in domain B , and (iii) a measure
of the discrepancy between the distributions e1 ◦ DA
and e1 ◦DB, measured with a domain confusion term.
0
g
g
A 0
where e1 : RM → RE1 serves as an encoder of shared content and e2 : RM → RE2 serves as an
encoder of specific content. Here, E1 and E2 are the dimensions of the encodings. The decoder, g
is a member of a set of decoders M. Each member ofM is a function g : RE1+E2 → RM. In order
to learn the functions f and g, we apply the following min-max optimization:
min max {LA + LB - λLD} ,	(6)
f∈F,g∈M d∈C
for some weight parameter λ > 0, of the following training losses (see Fig. 1):
LA =-- ^X ∣∣g(e1(a), 0E2 ) - ak1	4 * * (7)
m1
a∈SA
LB =L X kg(e1(b),e2(b))-bk1	(8)
m2
2 a∈SB
LD =』X l(d(eι(a)), 0) +ɪ X l(d(eι(b)), 1)	(9)
mm
where 0E2 is the vector of zeros of length E2, d is a discriminator network, and l(p, q) =
-(q log(p) + (1 - q) log(1 - p)) is the binary cross entropy loss for p ∈ [0, 1] and q ∈ {0, 1}.
The discriminator d is a member of a set of discriminators C that locates functions d : RM → [0, 1].
The discriminator d is trained to minimize LD and Eq. 9 is a domain confusion term (Ganin et al.,
2016) encouraging the distribution e1 ◦ DA to be similar to the distribution e1 ◦ DB . Here and
elsewhere, the composition f ◦ D of a function f and a distribution D denotes the distribution of
f (x) for X 〜D.
4 Analysis
In this section, we provide a theoretical analysis for the success of the proposed method. For this
purpose, we recall a few technical notations (Cover & Thomas, 2006): the expectation and probabil-
ity operators symbols E, P, the Shannon entropy (discrete or continuous) H(X) := -EX [log P[X]],
the conditional entropy H(X|Y ) := H(X, Y ) - H(Y ), the (conditional) mutual information (dis-
crete or continuous) I(X; Y |Z) := H(X|Z) - H(X|Y, Z), the Kullback-Leibler (KL) divergence
DKL(Pkq) ：= Ex〜p[log(p(x)∕q(x))], and the total correlation TC(z) := DKL (P[z]∣ Qi P[zi]),
where P[zi] is the marginal distribution of the i’th component of z. In particular, TC(z) is zero if
and only if the components of z are independent, in which case we say that z is disentangled. For
two distributions D1 and D2, we define the C-discrepancy between them to be discC(D1, D2) :=
SUPc1 ,c2∈C ∣Rdi [c1,c2]-RD2 [ci, C2]∣ = sup%c2 |Ex 〜Di '(cι (x), C2(x))-Eχ 〜D2 '(cι(x), C2(x))∣.
The discrepancy behaves as an adversarial distance measure between two distributions, where
d(x) = '(cι(x), c2(x)) is the discriminator that tries to differentiate between Di and D2, for
c1 , c2 ∈ C . This quantity is being employed in Chazelle (2000); Ben-david et al. (2006); Mansour
et al. (2009); Cortes & Mohri (2014).
5
Published as a conference paper at ICLR 2019
4.1	Generalization B ound
Thm. 1 upper bounds the generalization risk, based on terms that can be minimized during training,
as well as on approximation terms. It is similar in fashion to the classic domain adaptation bounds
proposed by Ben-David et al. (2010); Mansour et al. (2009).
Theorem 1. Assume that the loss function ` is symmetric and obeys the triangle inequality. Then,
for any autoencoder h = g ◦ f ∈ H, such that f(x1, x2) = (e1 (x1), e2(x2)) ∈ F is an encoder
and g ∈ M is a decoder, the following holds,
Rda,b [h,y] ≤Rdb,b [h,y]+Mn RκDB,1g [g* ◦ f,y] + RDBB[g* ◦ f,y]}	(⑼
+ discM(f ◦ Da,b ,f ◦ DBB)
where DB B is the distribution of (b, b) where b 〜 DB.
(The proofs can be found in the appendix.) Thm. 1 provides an upper bound on the generalization
risk RDA,B [h, y], which is the argument that we would like to minimize. The upper bound is decom-
posed of three terms: a reconstruction error, an approximation error and a discrepancy term. The
first term,
Rdb,b [h, y] = E(b,b)〜db,b ['(g ◦ f (b, b), y(b, b))] = Eb〜DB ['(g ◦ f (b, b), b)]	(11)
is the reconstruction error for samples b 〜 DB.	Since We do not have full ac-
cess to DB, we minimize its empirical version (see Eq. 8). The second term,
ming∈M RRABtlg [g ◦ f, y] + Rdb,b [g ◦ f, y]}
, measures the minimal error obtained by a best fit-
ting g ∈ M, such that g ◦ f ≈ y for inputs (a, b)〜Da,b and for inputs (b, b)〜DB B. Similar
to (Ben-David et al., 2010; Mansour et al., 2009), this term is assumed to be small and is decreased as
M's capacity is increased. The third term, discM(f ◦ Dab , f ◦ DB B), is the discrepancy between
the distributions f ◦ Da,b and f ◦ DB B. This term is small, if the distributions of (e1(a),e2(b))
(for a 〜DA and b 〜DB independently) and (eι(b), e2(b)) (for b 〜DB) are close to each other.
Since e1(a) and e2(b) are independent of each other (from the factorization DA,B = DA × DB), if
this term is small, then, e1(b) and e2(b) weakly depend on each other. Moreover, if the discrepancy
term is zero, then, e1(b) and e2(b) are independent of each other.
While one can minimize the discrepancy term explicitly, by minimizing it with respect to e1 and e2,
using a discriminator, we found empirically that this confusion term, which involves both parts of
the embedding, is highly unstable. Instead, we show theoretically and empirically that there is a high
likelihood for a disentangled representation (where e1(b) and e2(b) are independent) to emerge, and
the discrepancy term can be replaced with the following discrepancy discM0 (e1 ◦ DA, e1 ◦ DB),
which measures the closeness between the distributions of eι(a) and of eι(b) for a 〜DA and
b 〜 DB, as is done in Eq. 9. Here, M0 is a set of discriminators that are similar in complexity
to the ones in M. This discrepancy is simpler than the one in Eq. 10, since it does not involve a
comparison of e2 between two distributions, nor the interaction between e1 and e2 .
In Lem. 1, we show that if eι(b) and e2(b) are independent, then, disc(f ◦ Da,b , f ◦ DB B) ≤
disc(e1 ◦DA, e1 ◦DB). Therefore, if a disentangled representation occurs, we can minimize disc(f ◦
Da,b , f ◦ DB B), by minimizing disc(eι ◦ Da, eι ◦ DB) instead.
Lemma 1. Let M be the set of neural networks of the form: c(x) = φ(Wr . . . φ(W2φ(W1x +
q))), where, Wi ∈ Rdi×di+1 for i ∈ {1, . . . , r - 1}, q ∈ Rd2 and d1 = E1 + E2. In addition,
φ(x1, . . . , xk) = (φ1 (x1), . . . , φ1 (xk)), for k ∈ N, (x1, . . . , xk) ∈ Rk and a non-linear activation
function φ1 : R → R. Let M0 be the same as M with d1 = E1 (instead of d1 = E1 + E2). Let
f(x) = (e1(x), e2(x)) be an encoder and assume that: e1(b) e2(b). Then,
discM(f ◦ DA,B,f ◦ Db,b) ≤ discM0(eι ◦ Da,eι ◦ DB)	(12)
4.2	Emergence of Disentangled Representations
The following results are very technical and inherit many of the assumptions used by previous work.
We therefore state the results informally here and leave the complete exposition to the appendix.
6
Published as a conference paper at ICLR 2019
First, we extend Proposition 5.2 of Achille & Soatto (2018) from the case of multiclass classification
to the case of autoencoders. In their work, the aim is to show the conditions in which a mid-level
representation f of a multi-class classification neural network h = c ◦ f is both disentangled, i.e.,
TC(f(b)) is small, and is minimal, i.e., I(f(b); b) is small, where b is an input random variable. In
their Proposition 5.2, they focus on a linear representation, i.e., f = W is a linear transformation,
and they introduce a tight upper bound on the sum TC(Wb) + I(Wb; b).
In the general case, their goal is to show that for a neural network h = cof, both quantities TC (f (b))
and I (f (b); b) are small, when f that is a high level representation of the input. Unfortunately, they
were unable to show that both terms are small simultaneously. Therefore, in their Cor. 5.3, they
extend the bound of their Proposition 5.2 to show that only the mutual information I (f (b); b) is
small and assume that the components of each mid-level representation of b in the layers of f are
uncorrelated, which is a very restrictive assumption.
In our Lem. 2, we provide an upper bound for TC(f(b)) that is similar in fashion to their bounds.
The main differentiating factor is that We deal with an autoencoder h = g◦f. In this case, the mutual
information I (h(b); b) is expected to be large, since h(b) is trained to recover b and by the data-
processing inequality, I (f (b); b) ≥ I (h(b); b) and therefore, I (f (b); b) is also large in this case.
As a result, no upper bound is given on the mutual information term I (f (b); b). This is unlike the
information bottleneck principle, which guides the classification setting of Achille & Soatto (2018).
Our upper bound on TC(f(b)) includes the term -I (h(b); b), and consequently, TC(f(b)) tends to
be smaller (increased disentanglement) as I(h(b); b) increases. Additionally, the upper bound sums
a term di ∙ q(α). Here, di is the dimension of f (b), a denotes the amount of regularization in the
weights off and q(α) is monotonically increasing as α tends to zero. Therefore, the disentanglement
tends to be larger for an autoencoder h = g ◦ f, such that f is regularized and the mutual information
I (h(b); b) is large. In our analysis, we do not require f to be a linear transformation and we do not
assume that the components of each mid-level representation ofb in the layers off are uncorrelated.
Lemma 2 (Informal). Let b 〜 DB be a distribution and h = g ◦ f an autoencoder Let di be the
dimension of f(b) and d2 the dimension of the layer previous to f (b). Under some assumptions on
the weights of the encoder, there is a monotonically decreasing function q(α) for α > 0 such that:
TC (f (b)) ≤ di ∙ q(α) - I (h(b); b)+ O (d1∕d2)	(13)
Eq. 13 bounds the total correlation of f (b), which measures the amount of dependence between the
components of the encoder on samples in B. The bounds has three terms: di ∙ q(α), -I(h(b), b)
and O (di∕d2 ). In this formulation, α denotes the amount of regularization in the weights of f.
In addition, q(α) is monotonically increasing as α tends to zero. The term I(h(b); b) measures
the mutual information between the input b and output h(b) of the autoencoder h. Since the mutual
information is subtracted in the right hand side, the larger it is, the smallerTC(f(b)) should be. The
last term, O(di∕d2) measures the ratio between the dimension of the output off and the dimension
of the previous layer of f. Thus, this quantity is small whenever there is a significance reduction in
the dimension in the application of the last layer of f .
Therefore, there is a tradeoff between the amount of regularization in the weights of f and the
mutual information I (h(b); b). If there is small regularization, then, the autoencoder is able to
produce better reconstruction h(b) ≈ b, and therefore, a larger value of I(h(b); b). On the other
hand, small regularization leads to a higher value of q(α).
The bound relies on the mutual information between the inputs and outputs of the autoencoder
to be large. The following lemma provides an argument why this is the case when the expected
reconstruction error of the autoencoder is small.
Lemma 3 (Informal). Let b 〜DB be a distribution over a discrete set XB and h = g ◦ f an
autoencoder. Assume that ∀xi 6= x2 ∈ XB : kxi - x2 ki > ∆. Then,
I(h(b); b) ≥ (1 - E[kh(b∆- bki] ) H(b) - PEWr-"b≡	(14)
The above lemma asserts that if the samples in DB are well separated, whenever the autoencoder
has a small expected reconstruction error, E[kh(b) - bki], then, the mutual information I(h(b); b)
is at least a large portion of H (b). Therefore, we conclude that if the autoencoder generalizes well,
then, it also maximizes the mutual information I (h(b); b).
7
Published as a conference paper at ICLR 2019
Table 2: Runtime and memory footprint statistics for our method, the two guided translation methods
from the literature (MUNIT and DRIT), and the Fader network disentangled representation method.
Measure	MUNIT	DRIT	Fader	Our
Performs guided mapping?	Yes	Yes	No	Yes
Number of iterations	1.0M	0.5M	1.5M	1.0M
Time per iteration	0.78s	1.05s	0.14s	0.15s
Memory footprint	4.35 GB	6.03 GB	1.83 GB	1.23 GB
Number of weighting parameters	3 (require tuning)	6 (require tuning)	1 (fixed)	1 (fixed)
To conclude the analysis: fora small enough reconstruction error, when training the autoencoder, the
mutual information between the autoencoder’s input and output is high (Lem. 10), which implies that
the individual coordinates of the representation layer are almost independent of each other (Lem. 9).
When using part of the representation to encode the information that exists in domain A (the shared
part), the other part would contain coordinates that are weakly dependent of the features encoded in
A. In such a case, we can train with a GAN that involves only the shared representation (Lem. 1).
That way, we can upper bound the generalization error expressed in Thm. 1, using relatively simple
loss terms, as is done in Sec. 3.
5 Experiments
We evaluate our method on three additive facial attributes: eyewear, facial hair, and smile. Images
from the celebA face image dataset by Yang et al. (2015) were used, since these are conveniently
annotated as having the attribute or not. The images without the attribute (no glasses, or no facial-
hair, or no smile) were used as domain A in each of the experiments. Note that three different A
domains were used. As the second domain B, we used the images labeled as having glasses, having
facial hair, or smiling, according to the experiment.
Our underlying network architecture adapts the architecture used by Lample et al. (2017), which is
based on (Isola et al., 2017a), where we use Instance Normalization (Ulyanov et al., 2016) instead of
Batch Normalization (Ioffe & Szegedy, 2015), and without dropout. Let Ck denote a Convolution-
InstanceNorm-ReLU layer with k filters, where a kernel size of 4 × 4, with a stride of 2, and a
padding of 1 is used. The activations of the encoders e1, e2 are leaky-ReLUs with a slope of 0.2 and
the deocder g employs ReLUs. e1 has the following layers C32 , C64 , C128 , C256 , C512 , C512-d; e2
has a slightly lower capacity C32 , C64 , C128 , C128 , C128 , Cd, where d = 25. The input images have
a size of 128 × 128, and the encoding is of size 512 × 2 × 2 (split between the e1 and e2). g is
symmetric to the encoders and employs transposed convolutions for the upsampling.
In the first set of experiments, we add the relevant content from a random image b ∈ B into an
image from a. The results are given in Fig. 2, and appendix Fig. 7 and 8. We compare with two
guided image translation baselines: MUNIT (Huang et al., 2018) and DRIT (Lee et al., 2018). We
used the published code for each method and despite our best effort, these methods fail on the task
of content addition. In almost all cases, the baseline methods apply the style of the guide and not
the added content.
It should be noted that the simplicity of our approach directly translates to more efficient training
than the two baselines methods. Our method has one weighting hyperparameter, which is fixed
throughout the experiments. MUNIT and DRIT each has several weighting hyperparameters (since
they use more loss terms) and these require attention and, need to change between the experiments,
both in our runs and in the authors’ own experiments. In addition, our method has a lower memory
footprint and a much shorter duration of each iteration. The statistics are reported in Tab. 2 and as
can be seen, the runtime and memory footprint of our method are much closer to the Fader network
by Lample et al. (2017), which cannot perform guided mapping, than to MUNIT and DRIT.
Since the performance of the baselines is clearly inferior in the current setting, we did not hold a
user study comparing different algorithms. Instead, we compare the output of our method directly
with real images. Two experiments are conducted: (i) can users tell the difference between an image
from domain B and an image from domain A that was translated to domain B, and (ii) can users tell
8
Published as a conference paper at ICLR 2019
image in the top row, with the content of the guide image on the left column.
the difference between an image from domain B and the same image, after replacing the attribute’s
content (glasses, smile, or facial-hair) with that of another image from B . The experiment was
performed with n = 30 users, who observed 10 pairs of images each, for each of the tests.
The results are reported in Tab. 3. As can be seen, users are able to detect the real image over the
generated one, in most of the cases. However, the success ratio varies between the three image
translation tasks and between the two types of comparisons. The most successful experiments, i.e.,
those where the users were confused the most, were in the facial hair (“beard”) category. In contrast,
when replacing a person’s glasses with those of a random person, the users were able to tell the real
image 74% of the time.
Fig. 3 and appendix Fig. 9 and 10 show the type of images shown in the experiment where users
were asked to tell an image from domain B from an hybrid image that contains a face of one image
from this domain, and the attribute content from another image from it. As can be seen, most mix-
and-match combinations seem natural. However, going over the rows, which should have a fixed
attribute (e.g., the same glasses), one observes some variation. This unwanted variation arises from
the need to fit the content to the new face.
The method does have, as can be expected, difficulty dealing with low quality inputs. Examples are
shown in Fig. 4, including a misaligned source or guide image. Also shown is an example in which
the added content in the target domain is very subtle. These challenges result in a lower quality
output. However, the output in each case does indicate some ability to overcome the challenging
input.
To evaluate the linearity of the latent representation e2 (b), we performed interpolation experiments.
The results are presented in Fig. 5. As can be seen, the change is gradual as we interpolate linearly
between the e2 encoding of the two guide images shown on the left and on the right.
In the supplementary appendix, we provide many more translation examples, see Fig. 11, 12, and 13.
9
Published as a conference paper at ICLR 2019
Table 3: User study results. In each cell is the ratio of images, were users selected a real image as
more natural than a generated one. Closer to 50% is better for the method.
Forced choice performed by the user	Glasses	Smile	Facial Hair
Selected b over g(e1(a), e2(b0)), for a ∈ A, b, b0 ∈ B	58.2%	63.4%	51.7%
Selected b over g(e1(b), e2(b0)), for b, b0 ∈ B	74.2%	65.8%	56.7%
combination of the source image in the top row and the guide image on the left column.
While the previous experiments focused on the guided addition of content (mapping from A to B),
our method can also be applied in the other direction, from B to A. This way, the specific content
in image b ∈ B is removed. In our method, this is achieved simply by decoding a representation of
the form (e1 (b), 0).
The advantage of mapping in this direction is the availability of additional literature methods to
compare with, since no guiding is necessary. In Fig. 6, we compare the results we obtain for remov-
ing a feature with the Fader network method of Lample et al. (2017). As can be seen, the removal
process of our method results in less residuals.
To verify that we obtain a better quality in comparison with that of the published implementation
of Fader networks, we have applied both an automatic classifier and a user study. The classifier is
trained on the training set of domain A and B, using the same architecture that is used by Lample
et al. (2017) to perform model selection.
Tab. 4 presents the mean probability of class B provided by the classifier for the output of both
Fader network and our method. As can be seen, the probability to belong to the class of the image
before the transformation is, as desired, low for both methods. It is somewhat lower on average in
our method, despite the fact that our method does not use such a network during training.
10
Published as a conference paper at ICLR 2019
°。JnoS
Guide
(a)
°。JnoS
(c)
Guide
(b)
Some failure cases.
Figure 5: Interpolation experiments, where the content representation is linearly mixed between the
one extracted from the left image and the one extracted from the right image.
The user study was conducted on n = 20 users, each examining 20 random test set triplets from
each experiment. Each triplet showed the original image (with the feature) and the results of the
two algorithms, where the feature is removed. The users preferred our method over fader 92% of
the time for glasses removal, 89% of the time for facial hair removal, and 91% of the time for the
removal of a smile.
6 Conclusions
When converting between two domains, there is an inherent ambiguity that arises from the domain-
specific information in the target domain. In guided translation, the reference image in the target
domain provides the missing information. Previous work has focused on the missing information
that is highly tied to the texture of the image. For example, when translating between paintings and
photos, DRIT adds considerable content from the reference photo. However, this is unstructured
content, which is not well localized and is highly related to subsets of the image patches that exist
in the target domain. In addition, the content from the reference photo that is out of the domain of
paintings is not guaranteed to be fully present in the output.
Our work focuses on transformations in which the domain specific content is well structured, and
guarantees to replicate all of the domain specific information from the reference image. This is done
using a small number of networks and a surprisingly simple set of loss terms, which, due to the
emergence of a disentangled representation, solves the problem convincingly.
11
Published as a conference paper at ICLR 2019
Table 4: Classifier results for the image obtained after removing the desired feature. Results are the
mean probability of domain B for images that were transformed to domain A.
Probability of class B	Glasses	Smile	Facial Hair
Fader networks (Lample et al., 2017)	0.066	0.064	0.182
Our	0.011	0.052	0.119
Figure 6: A comparison to the Fader networks of Lample et al. (2017) for the task of removing a
feature. (a) Glasses. (b) Facial hair. (c) Mouth opening.
Acknowledgements
This project has received funding from the European Research Council (ERC) under the European
Unions Horizon 2020 research and innovation programme (grant ERC CoG 725974). The theo-
retical analysis in this work is part of Tomer Galanti’s Ph.D thesis research conducted at Tel Aviv
University.
References
Alessandro Achille and Stefano Soatto. Emergence of invariance and disentanglement in deep rep-
resentations. Journal of Machine Learning Research, 19, 2018.
Amjad Almahairi, Sai Rajeshwar, Alessandro Sordoni, Philip Bachman, and Aaron Courville. Aug-
mented CycleGAN: Learning many-to-many mappings from unpaired data. In ICML, 2018.
Jianmin Bao, Dong Chen, Fang Wen, Houqiang Li, and Gang Hua. Cvae-gan: Fine-grained image
generation through asymmetric training. In 2017 IEEE International Conference on Computer
Vision (ICCV),pp. 2764-2773. IEEE, 2017.
Shai Ben-david, John Blitzer, Koby Crammer, and Fernando Pereira. Analysis of representations
for domain adaptation. In NIPS, pp. 137-144. 2006.
Shai Ben-David, John Blitzer, Koby Crammer, Alex Kulesza, Fernando Pereira, and Jennifer Wort-
man Vaughan. A theory of learning from different domains. Machine Learning, 79(1-2):151-175,
2010.
Sagie Benaim and Lior Wolf. One-sided unsupervised domain mapping. In NIPS, 2017.
Jinming Cao, Oren Katzir, Peng Jiang, Dani Lischinski, Danny Cohen-Or, Changhe Tu, and Yangyan
Li. Dida: Disentangled synthesis for domain adaptation. arXiv preprint arXiv:1805.08019, 2018.
Huiwen Chang, Jingwan Lu, Fisher Yu, and Adam Finkelstein. PairedCycleGAN: Asymmetric style
transfer for applying and removing makeup. In CVPR, June 2018.
Bernard Chazelle. The Discrepancy Method: Randomness and Complexity. Cambridge University
Press, New York, NY, USA, 2000.
12
Published as a conference paper at ICLR 2019
Xi Chen, Xi Chen, Yan Duan, Rein Houthooft, John Schulman, Ilya Sutskever, and Pieter Abbeel.
InfoGAN: Interpretable representation learning by information maximizing generative adversarial
nets. In NIPS. 2016.
Yunjey Choi, Minje Choi, Munyoung Kim, Jung-Woo Ha, Sunghun Kim, and Jaegul Choo. Star-
gan: Unified generative adversarial networks for multi-domain image-to-image translation. arXiv
preprint arXiv:1711.09020, 2017.
Alexis Conneau, Guillaume Lample, Marc,Aurelio Ranzato, LUdovic Denoyer, and Herve Jegou.
Word translation without parallel data. arXiv preprint arXiv:1710.04087, 2017.
Corinna Cortes and Mehryar Mohri. Domain adaptation and sample bias correction theory and
algorithm for regression. Theor ComPut Sci., 519:103-126, 2014.
Thomas M. Cover and Joy A. Thomas. Elements of Information Theory (Wiley Series in Telecom-
munications and Signal Processing). Wiley-Interscience, New York, NY, USA, 2006. ISBN
0471241954.
Yaroslav Ganin, Evgeniya Ustinova, Hana Ajakan, Pascal Germain, Hugo Larochelle, Francois
Laviolette, Mario Marchand, and Victor Lempitsky. Domain-adversarial training of neural net-
works. Journal of Machine Learning Research, 17(59):1-35, 2016.
Abel Gonzalez-Garcia, Joost van de Weijer, and Yoshua Bengio. Image-to-image translation for
cross-domain disentanglement. In NIPS, 2018.
Naama Hadad, Lior Wolf, and Moni Shahar. A two-step disentanglement method. In Proceedings
of the IEEE Conference on ComPuter Vision and Pattern Recognition, pp. 772-780, 2018.
Yedid Hoshen and Lior Wolf. NAM - unsupervised cross-domain image mapping without cycles or
GANs. In ICLR workshoP, 2018.
Jack D’Aurizio (https://math.stackexchange.com/users/44121/jack daurizio). An upper bound of bi-
nary entropy. Mathematics Stack Exchange, 2015. URL https://math.stackexchange.
com/q/1432228.
Xun Huang, Ming-Yu Liu, Serge Belongie, and Jan Kautz. Multimodal unsupervised image-to-
image translation. In ECCV, 2018.
Sergey Ioffe and Christian Szegedy. Batch normalization: Accelerating deep network training by
reducing internal covariate shift. arXiv PrePrint arXiv:1502.03167, 2015.
Phillip Isola, Jun-Yan Zhu, Tinghui Zhou, and Alexei A Efros. Image-to-image translation with
conditional adversarial networks. arXiv PrePrint, 2017a.
Phillip Isola, Jun-Yan Zhu, Tinghui Zhou, and Alexei A Efros. Image-to-image translation with
conditional adversarial networks. In CVPR, 2017b.
Taeksoo Kim, Moonsu Cha, Hyunsoo Kim, Jungkwon Lee, and Jiwon Kim. Learning to discover
cross-domain relations with generative adversarial networks. arXiv PrePrint arXiv:1703.05192,
2017.
Diederik P Kingma and Max Welling. Auto-encoding variational bayes. stat, 1050:1, 2014.
Guillaume Lample, Neil Zeghidour, Nicolas Usunier, Antoine Bordes, Ludovic Denoyer, et al. Fader
networks: Manipulating images by sliding attributes. In NIPS, pp. 5967-5976, 2017.
Guillaume Lample, Alexis Conneau, Ludovic Denoyer, and Marc’Aurelio Ranzato. Unsupervised
machine translation using monolingual corpora only. In ICLR, 2018.
Hsin-Ying Lee, Hung-Yu Tseng, Jia-Bin Huang, Maneesh Singh, and Ming-Hsuan Yang. Diverse
image-to-image translation via disentangled representations. In The EuroPean Conference on
ComPuter Vision (ECCV), September 2018.
Ming-Yu Liu and Oncel Tuzel. Coupled generative adversarial networks. In NIPS, pp. 469-477.
2016.
13
Published as a conference paper at ICLR 2019
Ming-Yu Liu, Thomas Breuel, and Jan Kautz. Unsupervised image-to-image translation networks.
In NIPS. 2017.
Liqian Ma, Xu Jia, Stamatios Georgoulis, Tinne Tuytelaars, and Luc Van Gool. Exemplar guided
unsupervised image-to-image translation. arXiv preprint arXiv:1805.11145, 2018.
Yishay Mansour, Mehryar Mohri, and Afshin Rostamizadeh. Domain adaptation: Learning bounds
and algorithms. In COLT, 2009.
Mary Phuong, Max Welling, Nate Kushman, Ryota Tomioka, and Sebastian Nowozin. The mutual
autoencoder: Controlling information in latent code representations, 2018. URL https://
openreview.net/forum?id=HkbmWqxCZ.
O. Regev. Entropy-based bounds on dimension reduction in l1. Israeli Journal of Mathematics,
2013. ISSN 0021-2172. doi: https://doi.org/10.1007/s11856-012-0137-6.
Yaniv Taigman, Adam Polyak, and Lior Wolf. Unsupervised cross-domain image generation. In
International Conference on Learning Representations (ICLR), 2017.
Dmitry Ulyanov, Andrea Vedaldi, and Victor Lempitsky. Instance normalization: The missing in-
gredient for fast stylization. arXiv preprint arXiv:1607.08022, 2016.
Shuo Yang, Ping Luo, Chen Change Loy, and Xiaoou Tang. From facial parts responses to face
detection: A deep learning approach. In ICCV, pp. 3676-3684, 2015.
Zili Yi, Hao Zhang, Ping Tan, and Minglun Gong. DualGAN: Unsupervised dual learning for
image-to-image translation. arXiv preprint arXiv:1704.02510, 2017.
Meng Zhang, Yang Liu, Huanbo Luan, and Maosong Sun. Adversarial training for unsupervised
bilingual lexicon induction. In Proceedings of the 55th Annual Meeting of the Association for
Computational Linguistics (Volume 1: Long Papers), volume 1, pp. 1959-1970, 2017a.
Meng Zhang, Yang Liu, Huanbo Luan, and Maosong Sun. Earth mover’s distance minimization for
unsupervised bilingual lexicon induction. In Proceedings of the 2017 Conference on Empirical
Methods in Natural Language Processing, pp. 1934-1945, 2017b.
Shengjia Zhao, Jiaming Song, and Stefano Ermon. Infovae: Information maximizing variational
autoencoders. arXiv preprint arXiv:1706.02262, 2017.
Jun-Yan Zhu, Taesung Park, Phillip Isola, and Alexei A Efros. Unpaired image-to-image translation
using cycle-consistent adversarial networkss. arXiv preprint arXiv:1703.10593, 2017a.
Jun-Yan Zhu, Richard Zhang, Deepak Pathak, Trevor Darrell, Alexei A Efros, Oliver Wang, and Eli
Shechtman. Toward multimodal image-to-image translation. In NIPS, 2017b.
14
Published as a conference paper at ICLR 2019
15
Published as a conference paper at ICLR 2019
Our Method
Figure 8: Facial hair transfer. Our method vs. the literature baselines.
MUNIT	DRIT
16
Published as a conference paper at ICLR 2019
images.
Figure 9: A mix and match experiment for no smile to smile translation, using only domain B
Figure 10: A mix and match experiment for the facial hair transfer, using only domain B images.
17
Published as a conference paper at ICLR 2019
Figure 11: More eyewear transfer examples.
18
Published as a conference paper at ICLR 2019
Figure 12: More smile transfer examples.
19
Published as a conference paper at ICLR 2019
Figure 13: More facial hair transfer examples.
20
Published as a conference paper at ICLR 2019
B Preliminaries
B.1	Notations and Terminology
In this section we provide notations and terminology that are were not introduced in Sec. 4 but are
necessary for the proofs of the claims in this section.
We say that three random variables (discrete or continuous) X1, X2, X3 form a Markov chain, indi-
cated with X1 → X2 → X3, if P[X3|X2, X1] = P[X3|X2]. The Data Processing Inequality (DPI)
for a Markov chain X1 → X2 → X3 ensures that I(X1; X3) ≤ min (I(X1; X2), I(X2; X3)). In
particular, it holds for X2 = f(X1) and X3 = g(X2), where f, g are deterministic processes.
We denote by X 〜logN(μ,σ2) a random variable that is distributed by a log-normal distribu-
tion, i.e., log x 〜N(μ,σ2). We consider that the mean and variance of a log-normal distri-
bution logN(μ,σ2) are exp(μ + σ2∕2) and (exp(σ2) - 1)exp(2μ + σ2) respectively. We de-
note by WOU := (Wk,j ∙ Uk,j)k≤m,j ≤m the Hadamard product of two matrices W , U ∈
Rm×n. For a given vector x ∈ Rm, we denote dim(x) := m and for a matrix W ∈ Rm×n,
we denote dim(W) := mn. In addition, we denote x2 = x J x = (x12, . . . , x2m) and
E[x] = (E[x1], . . . , E[xm]). The indicator function, is denoted by 1[x] for a boolean variable
x ∈ {true, false} (i.e., 1[x] = 1 if x = true and 1[x] = 0 o.w).
B.2	Lemmas
In this section, we provide useful lemmas that aid in the proofs of our main results.
Lemma 4. Let X = (xι,...,Xn) ∈ Rn be a random vector. Let μι,...,μn : R → R be continuous
invertible functions and we denote μ(x) := (μι(xι),..., μn(xn)). Then, TC (x) = TC(μ(x)).
Proof. First, we consider that:
TC(X) = DKL k阳 Il YYP[xi]) = DKL (P[x]∣∣P[x])	(15)
where, X := (Xi,..., Xn) is a vector of independent random variables, such that Xi is distributed,
according to the marginal distribution of xi .
KL-divergence is invariant to applying continuous invertible transformations, i.e., DKL(XkY ) =
DκL(μ(X)kμ(Y)) for μ that is continuous and invertible. Therefore,
TC(X) = DKL (P[μ(x)]∣∣P[μ(X)]) = DKL (p[μ(x)]∣∣YP[μi(Xi)]) = TC(μ(x))	(16)
□
Lemma 5. LetP ∈ [0,1]. Then, H(p) ≤ 2log(2)ʌ/p(l — p).
Proof. See (https://math.stackexchange.com/users/44121/jack daurizio).
The following lemma is a modification of Claim 2.1 in (Regev, 2013).
Lemma 6. Let X and Y be two random variables. Assume that there is a function (i.e., a determin-
istic process) F, such that P[F (Y) = X] ≥ q ≥ 1/2. Then, I(X; Y) ≥ qH(X) - H (q).
Proof. By the data processing inequality,
I(X; Y) ≥ I (X; F (Y))
= H(X) - H(X|F(Y))
= H(X) -H(1X=F(Y),X|F(Y))
=H(X)-(H(1X=F(Y)|F(Y))+H(X|1X=F(Y),F(Y)))
(17)
21
Published as a conference paper at ICLR 2019
Since conditioning does not increase entropy, H( 1X=F(Y) |F(Y )) ≤ H( 1X=F(Y)) ≤ H(q). In
addition,
H(X| 1X=F(Y), F(Y)) =P[ 1X=F(Y) = 0] ∙ H(XIIX=F(Y) = 0, F(Y))
+ P[ 1X=F(Y) = 1] ∙ H(XIIX=F(Y) = 1,F(Y))
=P[ 1X=F(Y) = 0] ∙ H(XIIX=F(Y) = 0, F(Y))	(18)
≤(1 - q)H(XI1X=F(Y) = 0, F(Y))
≤(1 - q)H(X)
Therefore, We conclude that, I(X; Y) ≥ qH(X) - H(q).	口
Lemma 7. Let b 〜DB be a distribution over a discrete set XB ⊂ RM and h : RM → RM is a
(possibly random) function. Assume that ∀x1 6= x2 ∈ XB : kx1 -x2k1 > ∆. Let P[khv (b) -bk1 ≤
∆] ≥ q ≥ 1/2. Then, I (hv (b); b) ≥ qH (b) - H(q).
Proof. Let F(u) := arg minx∈X ku - xk1. Since the members of XB are ∆-distant from each
other, if khv (b) - bk1 ≤ ∆, then, F (hv (b)) = b. Therefore, We have:
P[F(hv(b)) =b] ≥P[khv(b) -bk1 ≤∆] ≥q≥ 1/2	(19)
By Lem. 6, for X . b, Y :— hv(b) and F . F, we have: I(hv(b); b) ≥ qH(b) - H(q). 口
The folloWing lemma is an example of three uncorrelated variables X, Y, Z, such that there is a
dimensionality reducing linear transformation over them that preserves all of their information.
Lemma 8. Let X and Y be two independent uniform distributions over [-1, 1] and Z = (X + Y)2.
Then, the transformation T (x, y, z) = (x, y) satisfies I(X, Y, Z; T (X, Y, Z)) = H(X, Y, Z) and
Cov(X, Y) = Cov(X, Z) = Cov(Y,Z).
Proof. Since X and Y are independent, their covariance is zero. By the definition of X and Y, we
have: E[X] = E[Y] = E[X3] = 0. Therefore,
Cov(Y, Z) = Cov(X, Z)
= E[X(X + Y)2] - E[X]E[(X + Y)2]	(20)
=E[X3] + 2E[X2]E[Y] + E[X]E[Y2] - E[X]E[(X + Y)2] = 0
Finally, we consider that T is a homeomorphic transformation T : (x, y, (x + y)2) 7→ (x, y)
(between the manifolds	{(x, y, z)	I x, y ∈	[-1,	1], z	=	(x	+	y)2} and	[-1, 1]2) and mu-
tual information is invariant to applications of homeomorphic transformations, i.e., I(X; Y) =
I(μ(X); ν(Y)) for homeomorphisms μ and V over the sample spaces of X and Y (resp.). Therefore,
I(X, Y, Z; T(X, Y, Z)) = I(X, Y, Z; X, Y, Z) = H(X, Y, Z).	口
C Proofs of the Main Results
Theorem 1. Assume that the loss function ` is symmetric and obeys the triangle inequality. Then,
for any autoencoder h = g ◦ f ∈ H, such that f(x1, x2) = (e1 (x1), e2(x2)) ∈ F is an encoder
and g ∈ M is a decoder, the following holds,
Rda,b [h, y] ≤Rdb,b [h,y]+Mn {Rda,b [g* ◦ f,y] + RDBB[g* ◦ f,y]}	(⑼
+ discM(f ◦ Da,b ,f ◦ Db,b )
where DB B is the distribution of (b, b) where b 〜 DB.
Proof. Let g* ∈ argmi∏g∈M {r0a,b [g ◦ f, y] + Rdb,b[g ◦ f,y]}
triangle inequality,
Since the loss ` obeys the
Rda,b [g ◦ f,y] ≤ Rda,b [g ◦ f,g* ◦ f] + Rda,b [g* ◦ f, y]	(21)
22
Published as a conference paper at ICLR 2019
By the definition of discrepancy,
Rda,b [g ◦ f, y] ≤ RDBB [g ◦ f,g* ◦ f ] + Rda,b [g* ◦ f, y] + discM(f ◦ Da,b ,f ◦ DBB) (22)
Again, by the triangle inequality,
Rda,b [g ◦ f, y] ≤Rdb,b [g ◦ f, y] + Rda,b [g* ◦ f, y] + RDBB [g* ◦ f, y]
+ discM(f ◦ Da,b, f ◦ DBB)
=RDBB [g ◦ f, y] + min Rddb,13 [g ◦ f, y] + RDBB [g ◦ f, y]}
+ discM(f ◦ Da,b,f ◦ DBB)
(23)
□
Lemma 1. Let M be the set of neural networks of the form: c(x) = φ(Wr . . . φ(W2φ(W1x +
q))), where, Wi ∈ Rdi×di+1 for i ∈ {1, . . . , r - 1}, q ∈ Rd2 and d1 = E1 + E2. In addition,
φ(x1, . . . , xk) = (φ1 (x1), . . . , φ1 (xk)), for k ∈ N, (x1, . . . , xk) ∈ Rk and a non-linear activation
function φ1 : R → R. Let M0 be the same as M with d1 = E1 (instead of d1 = E1 + E2). Let
f(x) = (e1(x), e2(x)) be an encoder and assume that: e1(b) e2(b). Then,
discM(f ◦ Da,b, f ◦ Db B) ≤ discM'(eι ◦ Da, eι ◦ DB)	(12)
Proof. By the definition of discrepancy, and since e1(b) e2(b), we have:
discM(f ◦ DA,B,f ◦ Db,b)
= sup 旭 e1(a),e2(b)'(c1(e1(a),e2(b)),c2(e1(a),e2(b)))
c1 ,c2 ∈M
-Ee1(b),e2(b)'(c1(e1(b), e2(b)), c2(e1(b), e2(b)))l
=SUp ∣Ee2(b){Ee1(a)'(c1 (e1(a),e2(b)), c2(e1(a), e2(b)))
c1 ,c2 ∈M
— Ee1(b)'(c1(e1(b), e2(b)), c2(e1 (b), e2(b)))O∣
By |E[x]| ≤ E[|x|] and Ex[supy∈Y f (x, y)] ≤ supy∈Y Ex [f(x, y)], we have:
discM(f ◦ Da,b,f ◦ Db,b)
≤Ee2(b) sup ∣{Ee1(a)'(c1(e1(a),e2(b)),c2(e1(a),e2(b)))
c1 ,c2 ∈M
—	Ee1(b)'(c1(e1(a), e2(b)), c2(e1(b), e2(b)))} ∣
≤ sup sup ∣∣Eeι(a)'(cι(eι(α), y),C2(eι(a), y))
y∈RE2 c1 ,c2∈M
—	Ee1(b)'(c1(e1(b), y),c2(e1(b), y))}∣
(24)
(25)
By the definition of M, for any c ∈ M and a fixed vector, y ∈ RE2, there is a function u ∈ M0,
such that for every x ∈ RE1 , we have: c(x, y) = u(x). Therefore, we can rewrite the last equation
as follows:
discM(f ◦ Da,b, f ◦ Db,b)
≤ sup	∣{Ee1(a)'(u1(e1(a)),u2(e1(a)) — Ee1(b)'(u1(e1(b)), u2(e1(b))} ∣	(26)
u1 ,u2∈M0
=discM0 (e1 ◦ DA, e1 ◦ DB)
□
23
Published as a conference paper at ICLR 2019
C.1 Emergence of Disentangled Representations
In this section, we employ the theory of (Achille & Soatto, 2018) in order to show the emergence
of disentangled representations, when an autoencoder h = g ◦ f generalizes well. Our analysis
shows that by learning an autoencoder such that the encoder f has log-normal regularization, there
is a high likelihood of learning disentangled representations. We note that until now, we treated the
autoencoder h as a function of two variables (a, b or b, b). From now on, if the two variables are the
same, then, We simply write h(b). In addition, by Eq. 11, instead of writing, RDB ^ [g ◦ f, y] We
can simply write RDB [h, Id] := EfEb^DB ['(g ◦ f (b), b)].
The framework of Achille & Soatto (2018) relies on a few assumptions, which are imported to
our case. The algorithm is provided with m i.i.d samples SB = {bi}im=1 from the distribution
DB and trains an encoder-decoder neural network hv = gu ◦ fw , such that the parameters of the
encoder, fv, have log-normal perturbations. Formally, we learn a mapping hv of the form hv (x) =
φ(W2tφ(W2t-1 . . .φ(W1x))), where Wi ∈ Rdi+1×di, fori ∈ {1, . . . ,2t - 1}, d1 = d2t = M,
w = (Wt, . . . ,W1), u = (W2t, . . ., Wt+1) andv = (W2t, . . . , W1). Here, φ(x1, . . .,xm) =
(φ1(x1), . . . , φ1(xk)) is a non-linear activation function φ1 : R → R extended for all m ∈ N
and (x1 , . . . , xk ) ∈ Rk . We assume that φ1 : R → R is a homeomorphism (i.e., φ1 is invertible,
continuous and φ1-1 is also continuous). The encoder fw is the composition of the first t layers
and the decoder gu is composed of the last t layers of hv. Following Achille & Soatto (2018), we
assume that the posterior distribution p(Wik,j |SB) is defined as a Gaussian dropout,
WijISB Yj ∙ Wij	(27)
where Ei ∈ Rdi+1×di and Ekj 〜logN(-α∕2, α), for k ∈ {1,..., t}. We consider that the mean
and variance of logN(-α∕2, α) are 1 and exp(α) - 1 respectively. Here, Wk is a learned mean
of the k’th layer of the encoder. We denote the output of the k’th layer of fw by zk, i.e., zk =
φ(W kφ(W k-1 . . . φ(W1x))).
Implicit Emergence of Disentangled Representations The following lemma is a corollary of
Proposition 5.2 in (Achille & Soatto, 2018) for our model.
Lemma 9. Let k ∈ {1, . . . , t}, yk = Wkφ(Wk-1 . . . φ(W1b)) and zk = φ(yk), for Wk =
Ek J Wk, where Ekj 〜 logN(αk∕2,ɑk). Further, assume that the marginals of P[yk] and
P[yk |zk-1] are Gaussians, the components of zk-1 are uncorrelated and that their kurtosis is uni-
formly bounded. Let q(α) := —1 log (1 — exp (-α)). Then,
TC(zk) ≤ dim(zk) ∙ q(α∙k) - I(hv(b)； b) + O (rm(Zk]、)	(28)
dim(z k-1)
Proof. By Proposition 5.2 in Achille & Soatto (2018), we have:
TC(yk) + I(yk; ZkT) ≤ ( O (	1	、
dim(yk)	≤ q(αk)+ O (dim(ZkTj	(29)
By Lem. 4, we have, TC(yk) = TC(Zk). In addition, dim(yk) = dim(Zk). Therefore,
TC (zk) + I (yk ； ZkT) ≤ dim(zk) ∙ q(α∙k) + Of /m(Zk1、)	(30)
dim(Zk-1)
Finally, by the data processing inequality, for X1 := b, X2 := Zkk1, X3 := yk and X4 := hv(b),
we have, I(hv(b); b) ≤ I(yk; Zk-1). The bound follows from Eq. 30 and the last observation. □
Lem. 9 provides an upper bound on the total correlation of the k’th layer of the autoencoder hv(b).
This bound assumes that the marginal distributions of yk and yk |Zkk1 are Gaussians. This is a
reasonable assumption ifdim(Zkk1) is large by the central limit theorem. We also assume that there
are no pair-wise linear correlations between the components of Zkk1. In some sense, this assumption
can be viewed as minimality of Zkk1. Informally, if there is a strong linear correlation between two
components of Z kk1, then, we can throw away one of them and keep most of the information.
On the other hand, if the components of Z kk1 are uncorrelated, the existence of a dimensionality
24
Published as a conference paper at ICLR 2019
reducing linear transformation W such that I(W zk-1； zk-1) = H(zk-1) is still a possibility (for
a concrete example, see Lem. 8). Hence, the next layer, zk, is still useful, in order to compress the
representation and can still preserve all the information. We also assume that the kurtosis of the
components of zk-1 is uniformly bounded. This is a technical hypothesis that is alWays satisfied, if
the components of zk-1 are sub-Gaussian or With uniformly bounded support.
The function q(αk) is monotonically increasing as αk tends to 0. Therefore, this bound realizes
a trade-off betWeen the mutual information of hv (b) and b and the amount of perturbations in the
encoder. If the perturbations in the encoder are stronger, then, the ability of the autoencoder to
reconstruct b decays. On the other hand, if the perturbations are small, then, q(α) increases.
We consider that the bound decreases, as I (hv (b)； b) increases. It is reasonable to believe that since
hv(b) is an autoencoder that is being trained to reconstruct b, I (hv (b)； b) is maximized implicitly.
The problem of training an autoencoder that maintains a reconstruction that has high mutual infor-
mation With respect to the input has recently attracted a considerable attention. Several methods for
maximizing this term explicitly Were proposed in (Zhao et al., 2017; Phuong et al., 2018). In the fol-
loWing lemma, We shoW that if the samples of DB are Well separated, then, the mutual information
I (hv (b)； b) is implicitly maximized as the reconstruction, hv(b) ≈ b improves.
Lemma 10. Let b 〜DB be a random vector over a discrete Set XB ⊂ RM and hv : RM → RM
an autoencoder. Assume that ∀xι = x2 ∈ XB : ∣∣xι — x2k1 > ∆ and RDB [hv(b), Id] ≤ 今.Then,
I(hv(b)； b) ≥ 1 —
RDB[hv(b),Id]
H(b) - VZRDB [hv(b),Id]
(31)
∆
Proof. First, assume by contradiction that:
P[khv(b) -bk1 ≤∆] < 1-
RDB [hv (b), Id]
(32)
∆
In other words, P[khv (b) - bkι > ∆] > Rdb [hv(b), Id]∕∆. In particular, We arrive at a Contradic-
tion:
RDB [hv, Id] = Eb[khv(b) — bkι] ≥ P[∣∣hv(b) — b∣∣ι > ∆] ∙ ∆ > RDB [hv, Id]
By the above contradiction and the hypothesis that RDB [hV(b),Id] ≤ 1/2, We have,
(1 — RD [hv㈤,Id]) ≥ 1/2. Therefore, by Lem. 7,
(33)
q≥
I(hv(b)；b) ≥ 1-
RDB[hv(b),Id]
H(b) - H 1 -
RDB [hv (b), Id]
(34)
∆
∆
Additionally, by Lem. 5, we have:
H 1-
RDB [hv(b),Id] ʌ ≤
2 log(2)
RDB [hv (b), Id]	RDB [hv (b), Id]
(35)
2 log(2)
RDB[hv(b),Id]
RDB[hv(b),Id]
∆
∆
∆
≤
∆
≤
∆
Finally,
I(hv(b)； b) ≥	1-
RDB [hv(b), Id]
H(b) -
RDB [hv(b), Id]
(36)
∆
∆
□
The above lemma asserts that if the samples in DB are Well separated, Whenever the autoencoder
has a small expected reconstruction error RDB [hv (b), Id], then, the mutual information I (hv (b)； b)
is at least a large portion of H (b). Therefore, We conclude that if the autoencoder generalizes Well,
then, it also maximizes the mutual information I(hv(b)； b). Finally, We note that We cannot directly
apply Lem. 10 to bound the mutual information in Lem. 9. That is because, in Lem. 9, We assume
that the components of yk are distributed normally, Which implies that the distribution of b must be
continuous. On the other hand, in Lem. 10 We assume that b is distributed according to a discrete
distribution. In order to reduce this friction, instead of assuming that the each component of zk is
distributed according to a normal distribution, We can assume that it is distributed according to a
discrete approximation of a normal distribution.
25