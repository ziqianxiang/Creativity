Published as a conference paper at ICLR 2019
A Convergence Analysis of Gradient Descent
for Deep Linear Neural Networks
Sanjeev Arora
Princeton University and Institute for Advanced Study
arora@cs.princeton.edu
Noah Golowich
Harvard University
ngolowich@college.harvard.edu
Nadav Cohen
Institute for Advanced Study
cohennadav@ias.edu
Wei Hu
Princeton University
huwei@cs.princeton.edu
Ab stract
We analyze speed of convergence to global optimum for gradient descent train-
ing a deep linear neural network (parameterized as x → WNWN-ι …Wιx) by
minimizing the `2 loss over whitened data. Convergence at a linear rate is guar-
anteed when the following hold: (i) dimensions of hidden layers are at least the
minimum of the input and output dimensions; (ii) weight matrices at initialization
are approximately balanced; and (iii) the initial loss is smaller than the loss of any
rank-deficient solution. The assumptions on initialization (conditions (ii) and (iii))
are necessary, in the sense that violating any one of them may lead to convergence
failure. Moreover, in the important case of output dimension 1, i.e. scalar regres-
sion, they are met, and thus convergence to global optimum holds, with constant
probability under a random initialization scheme. Our results significantly extend
previous analyses, e.g., of deep linear residual networks (Bartlett et al., 2018).
1	Introduction
Deep learning builds upon the mysterious ability of gradient-based optimization methods to solve
related non-convex problems. Immense efforts are underway to mathematically analyze this phe-
nomenon. The prominent landscape approach focuses on special properties of critical points
(i.e. points where the gradient of the objective function vanishes) that will imply convergence to
global optimum. Several papers (e.g. Ge et al. (2015); Lee et al. (2016)) have shown that (given
certain smoothness properties) it suffices for critical points to meet the following two conditions:
(i) no poor local minima — every local minimum is close in its objective value to a global mini-
mum; and (ii) strict saddle property — every critical point that is not a local minimum has at least
one negative eigenvalue to its Hessian. While condition (i) does not always hold (cf. Safran and
Shamir (2018)), it has been established for various simple settings (e.g. Soudry and Carmon (2016);
Kawaguchi (2016)). Condition (ii) on the other hand seems less plausible, and is in fact provably
false for models with three or more layers (cf. Kawaguchi (2016)), i.e. for deep networks. It has only
been established for problems involving shallow (two layer) models, e.g. matrix factorization (Ge
et al. (2016); Du et al. (2018a)). The landscape approach as currently construed thus suffers from
inherent limitations in proving convergence to global minimum for deep networks.
A potential path to circumvent this obstacle lies in realizing that landscape properties matter only in
the vicinity of trajectories that can be taken by the optimizer, which may be a negligible portion of
the overall parameter space. Several papers (e.g. Saxe et al. (2014); Arora et al. (2018)) have taken
this trajectory-based approach, primarily in the context of linear neural networks — fully-connected
neural networks with linear activation. Linear networks are trivial from a representational perspec-
tive, but not so in terms of optimization — they lead to non-convex training problems with multiple
minima and saddle points. Through a mix of theory and experiments, Arora et al. (2018) argued
that such non-convexities may in fact be beneficial for gradient descent, in the sense that sometimes,
adding (redundant) linear layers to a classic linear prediction model can accelerate the optimization.
This phenomenon challenges the holistic landscape view, by which convex problems are always
preferable to non-convex ones.
1
Published as a conference paper at ICLR 2019
Even in the linear network setting, a rigorous proof of efficient convergence to global minimum
has proved elusive. One recent progress is the analysis of Bartlett et al. (2018) for linear residual
networks — a particular subclass of linear neural networks in which the input, output and all hidden
dimensions are equal, and all layers are initialized to be the identity matrix (cf. Hardt and Ma (2016)).
Through a trajectory-based analysis of gradient descent minimizing `2 loss over a whitened dataset
(see Section 2), Bartlett et al. (2018) show that convergence to global minimum at a linear rate —
loss is less than e > 0 after O (log ɪ) iterations — takes place if one of the following holds: (i) the
objective value at initialization is sufficiently close to a global minimum; or (ii) a global minimum
is attained when the product of all layers is positive definite.
The current paper carries out a trajectory-based analysis of gradient descent for general deep linear
neural networks, covering the residual setting of Bartlett et al. (2018), as well as many more settings
that better match practical deep learning. Our analysis draws upon the trajectory characterization
of Arora et al. (2018) for gradient flow (infinitesimally small learning rate), together with significant
new ideas necessitated due to discrete updates. Ultimately, we show that when minimizing `2 loss
of a deep linear network over a whitened dataset, gradient descent converges to the global minimum,
at a linear rate, provided that the following conditions hold: (i) the dimensions of hidden layers are
greater than or equal to the minimum between those of the input and output; (ii) layers are initialized
tobe approximately balanced (see Definition 1) — this is met under commonplace near-zero, as well
as residual (identity) initializations; and (iii) the initial loss is smaller than any loss obtainable with
rank deficiencies — this condition will hold with probability close to 0.5 if the output dimension is 1
(scalar regression) and standard (random) near-zero initialization is employed. Our result applies to
networks with arbitrary depth and input/output dimensions, as well as any configuration of hidden
layer widths that does not force rank deficiency (i.e. that meets condition (i)). The assumptions on
initialization (conditions (ii) and (iii)) are necessary, in the sense that violating any one of them may
lead to convergence failure. Moreover, in the case of scalar regression, they are met with constant
probability under a random initialization scheme. We are not aware of any similarly general analysis
for efficient convergence of gradient descent to global minimum in deep learning.
The remainder of the paper is organized as follows. In Section 2 we present the problem of gradi-
ent descent training a deep linear neural network by minimizing the `2 loss over a whitened dataset.
Section 3 formally states our assumptions, and presents our convergence analysis. Key ideas brought
forth by our analysis are demonstrated empirically in Section 4. Section 5 gives a review of rele-
vant literature, including a detailed comparison of our results against those of Bartlett et al. (2018).
Finally, Section 6 concludes.
2	Gradient Descent for Deep Linear Neural Networks
We denote by kvk the Euclidean norm of a vector v, and by kAkF the Frobenius norm of a matrix A.
We are given a training set {(x(i) , y(i) )}im=1 ⊂ Rdx × Rdy , and would like to learn a hypothesis
(predictor) from a parametric family H := {hθ : Rdx → Rdy | θ ∈ Θ} by minimizing the `2 loss:1
min L(θ) := 1- Xm khθ(X⑺)-y⑴k2.
θ∈Θ	2m	i=1
When the parametric family in question is the class of linear predictors, i.e. H = {X 7→ WX | W ∈
Rdy×dx}, the training loss may be written as L(W) = 2m∣∣WX - Y∣∣F, where X ∈ Rdx×m
and Y ∈ Rdy×m are matrices whose columns hold instances and labels respectively. Suppose now
that the dataset is whitened, i.e. has been transformed such that the empirical (uncentered) covariance
matrix for instances — Λχχ := *XX> ∈ Rdχ×dx — is equal to identity. Standard calculations
(see Appendix A) show that in this case:
L(W) = 2 ∣W - ΛyxkF + c,	(1)
1Much of the analysis in this paper can be extended to loss types other than `2 . In particular, the notion of
deficiency margin (Definition 2) can be generalized to account for any convex loss, and, so long as the loss is
differentiable, a convergence result analogous to Theorem 1 will hold in the idealized setting of perfect initial
balancedness and infinitesimally small learning rate (see proof of Lemma 1). We leave to future work treatment
of approximate balancedness and discrete updates in this general setting.
2
Published as a conference paper at ICLR 2019
where Λyχ := mlYX> ∈ Rdy ×dx is the empirical (uncentered) cross-covariance matrix between
instances and labels, and cis a constant (that does not depend on W). Denoting Φ := Λyx for brevity,
we have that for linear models, minimizing `2 loss over whitened data is equivalent to minimizing
the squared Frobenius distance from a target matrix Φ:
minW∈Rdy ×dx LI(W) := 2 kW - φkF
(2)
Our interest in this work lies on linear neural networks — fully-connected neural networks with
linear activation. A depth-N (N ∈ N) linear neural network with hidden widths d1, . . . , dN-1 ∈ N
corresponds to the parametric family of hypotheses H := {x → WN WN-1 ∙∙∙ W1x | Wj ∈
Rdj ×dj-1 , j = 1, . . . , N}, where d0 := dx, dN := dy. Similarly to the case of a (directly pa-
rameterized) linear predictor (Equation (2)), with a linear neural network, minimizing `2 loss over
whitened data can be cast as squared Frobenius approximation of a target matrix Φ:
minwj ∈Rdj ×dj-ι j=ι,...,N LN (Wi,...,Wn ) ：= 2 ∣∣Wn WN-1 …Wi - Φ∣∣F .	⑶
Note that the notation LN (∙) is consistent with that of Equation (2), as a network with depth N = 1
precisely reduces to a (directly parameterized) linear model.
We focus on studying the process of training a deep linear neural network by gradient descent, i.e. of
tackling the optimization problem in Equation (3) by iteratively applying the following updates:
Wj (t + 1) - Wj (t) - η∂W(Wi(t),...,WN (t))	,j = 1,...,N ,t = 0,1,2,... ,	(4)
where η > 0 is a configurable learning rate. In the case of depth N = 1, the training problem in
Equation (3) is smooth and strongly convex, thus it is known (cf. Boyd and Vandenberghe (2004))
that with proper choice of η, gradient descent converges to global minimum at a linear rate. In
contrast, for any depth greater than 1, Equation (3) comprises a fundamentally non-convex program,
and the convergence properties of gradient descent are highly non-trivial. Apart from the case N = 2
(shallow network), one cannot hope to prove convergence via landscape arguments, as the strict
saddle property is provably violated (see Section 1). We will see in Section 3 that a direct analysis
of the trajectories taken by gradient descent can succeed in this arena, providing a guarantee for
linear rate convergence to global minimum.
We close this section by introducing additional notation that will be used in our analysis. For
an arbitrary matrix A, we denote by σmax (A) and σmin(A) its largest and smallest (respec-
tively) singular values.2 For d ∈ N, we use Id to signify the identity matrix in Rd×d. Given
weights W1, . . . , WN of a linear neural network, we let W1:N be the direct parameterization of
the end-to-end linear mapping realized by the network, i.e. Wi：N := WNWN-ι ∙∙∙ Wi. Note that
LN(W1, . . . , WN) = L1 (W1:N), meaning the loss associated with a depth-N network is equal to
the loss of the corresponding end-to-end linear model. In the context of gradient descent, we will
oftentimes use `(t) as shorthand for the loss at iteration t:
`(t) :=LN(Wi(t),...,WN(t)) = Li(Wi:N(t)).
(5)
3	Convergence Analysis
In this section we establish convergence of gradient descent for deep linear neural networks (Equa-
tions (4) and (3)) by directly analyzing the trajectories taken by the algorithm. We begin in Subsec-
tion 3.1 with a presentation of two concepts central to our analysis: approximate balancedness and
deficiency margin. These facilitate our main convergence theorem, delivered in Subsection 3.2. We
conclude in Subsection 3.3 by deriving a convergence guarantee that holds with constant probability
over a random initialization.
3.1	Approximate Balancedness and Deficiency Margin
In our context, the notion of approximate balancedness is formally defined as follows:
2If A ∈ Rd×d0 , σmin (A) stands for the min{d, d0}-th largest singular value. Recall that singular values
are always non-negative.
3
Published as a conference paper at ICLR 2019
Definition 1. For δ ≥ 0, we say that the matrices Wj ∈ Rdj ×dj-1, j=1, . . . , N, are δ-balanced if:
Wj>+1Wj+1-WjWj>F ≤δ ,∀j∈{1,...,N-1}.
Note that in the case of 0-balancedness, i.e. Wj>+1Wj+1 = WjWj>, ∀j ∈ {1, . . . , N - 1}, all
matrices Wj share the same set of non-zero singular values. Moreover, as shown in the proof of
Theorem 1 in Arora et al. (2018), this set is obtained by taking the N-th root of each non-zero
singular value in the end-to-end matrix W1:N. We will establish approximate versions of these facts
for δ-balancedness with δ > 0, and admit their usage by showing that if the weights of a linear
neural network are initialized to be approximately balanced, they will remain that way throughout
the iterations of gradient descent. The condition of approximate balancedness at initialization is
trivially met in the special case of linear residual networks (do = … = d，N = d and Wι(0)=
… = WN(0) = Id). Moreover, as Claim 2 in Appendix B shows, for a given δ > 0, the customary
initialization via random Gaussian distribution with mean zero leads to approximate balancedness
with high probability if the standard deviation is sufficiently small.
The second concept we introduce — deficiency margin — refers to how far a ball around the target
is from containing rank-deficient (i.e. low rank) matrices.
Definition 2. Given a target matrix Φ ∈ RdN ×d0 and a constant c > 0, we say that a matrix W ∈
RdN ×d0 has deficiency margin c with respect to Φ if:3
kW-ΦkF ≤σmin(Φ)-c.	(6)
The term “deficiency margin” alludes to the fact that if Equation (6) holds, every matrix W0 whose
distance from Φ is no greater than that of W, has singular values c-bounded away from zero:
Claim 1. Suppose W has deficiency margin c with respect to Φ. Then, any matrix W0 (of same size
as Φ and W) for which kW0 - ΦkF ≤ kW - ΦkF satisfies σmin (W0) ≥ c.
Proof. Our proof relies on the inequality σmin(A+B) ≥ σmin (A)-σmax (B) — see Appendix D.1.
□
We will show that if the weights W1, . . . , WN are initialized such that (they are approximately bal-
anced and) the end-to-end matrix W1:N has deficiency margin c > 0 with respect to the target Φ,
convergence of gradient descent to global minimum is guaranteed.4 Moreover, the convergence will
outpace a particular rate that gets faster when c grows larger. This suggests that from a theoretical
perspective, it is advantageous to initialize a linear neural network such that the end-to-end matrix
has a large deficiency margin with respect to the target. Claim 3 in Appendix B provides informa-
tion on how likely deficiency margins are in the case of a single output model (scalar regression)
subject to customary zero-centered Gaussian initialization. It shows in particular that if the stan-
dard deviation of the initialization is sufficiently small, the probability of a deficiency margin being
met is close to 0.5; on the other hand, for this deficiency margin to have considerable magnitude, a
non-negligible standard deviation is required.
Taking into account the need for both approximate balancedness and deficiency margin at initial-
ization, we observe a delicate trade-off under the common setting of Gaussian perturbations around
zero: if the standard deviation is small, it is likely that weights be highly balanced and a deficiency
margin be met; however overly small standard deviation will render high magnitude for the defi-
ciency margin improbable, and therefore fast convergence is less likely to happen; on the opposite
end, large standard deviation jeopardizes both balancedness and deficiency margin, putting the en-
tire convergence at risk. This trade-off is reminiscent of empirical phenomena in deep learning, by
3Note that deficiency margin c > 0 with respect to Φ implies σmin (Φ) > 0, i.e. Φ has full rank. Our
analysis can be extended to account for rank-deficient Φ by replacing σmin(Φ) in Equation (6) with the smallest
positive singular value of Φ, and by requiring that the end-to-end matrix W1:N be initialized such that its left
and right null spaces coincide with those of Φ. Relaxation of this requirement is a direction for future work.
4In fact, a deficiency margin implies that all critical points in the respective sublevel set (set of points
with smaller loss value) are global minima. This however is far from sufficient for proving convergence, as
sublevel sets are unbounded, and the loss landscape over them is non-convex and non-smooth. Indeed, we
show in Appendix C that deficiency margin alone is not enough to ensure convergence — without approximate
balancedness, the lack of smoothness can cause divergence.
4
Published as a conference paper at ICLR 2019
which small initialization can bring forth efficient convergence, while if exceedingly small, rate of
convergence may plummet (“vanishing gradient problem”), and if made large, divergence becomes
inevitable (“exploding gradient problem”). The common resolution of residual connections (He
et al., 2016) is analogous in our context to linear residual networks, which ensure perfect balanced-
ness, and allow large deficiency margin if the target is not too far from identity.
3.2	Main Theorem
Using approximate balancedness (Definition 1) and deficiency margin (Definition 2), we present our
main theorem — a guarantee for linear convergence to global minimum:
Theorem 1. Assume that gradient descent is initialized such that the end-to-end matrix W1:N (0)
has deficiency margin c > 0 with respect to the target Φ, and the weights W1 (0), . . . , WN (0) are
δ-balanced with δ = c2∕(256 ∙ N3 * ∙ ∣∣ΦkF(N-1"N ), Suppose also that the learning rate η meets:
c(4N-2)/N
η ≤ 6144 ∙ N3 ∙ kΦkF6N-4)/N '	⑺
Then, for any > 0 and:
T ≥ —2(N-i)/n ∙ log (3 )，	(8)
η ∙ c2(N 1)/N	∖ e J
the loss at iteration T of gradient descent — '(T) — is no greater than e.
3.2.1	On the Assumptions Made
The assumptions made in Theorem 1 — approximate balancedness and deficiency margin at initial-
ization — are both necessary, in the sense that violating any one of them may lead to convergence
failure. We demonstrate this in Appendix C. In the special case of linear residual networks (uni-
form dimensions and identity initialization), a sufficient condition for the assumptions to be met is
that the target matrix have (Frobenius) distance less than 0.5 from identity. This strengthens one
of the central results in Bartlett et al. (2018) (see Section 5). For a setting of random near-zero
initialization, we present in Subsection 3.3 a scheme that, when the output dimension is 1 (scalar re-
gression), ensures assumptions are satisfied (and therefore gradient descent efficiently converges to
global minimum) with constant probability. It is an open problem to fully analyze gradient descent
under the common initialization scheme of zero-centered Gaussian perturbations applied to each
layer independently. We treat this scenario in Appendix B, providing quantitative results concern-
ing the likelihood of each assumption (approximate balancedness or deficiency margin) being met
individually. However the question of how likely it is that both assumptions be met simultaneously,
and how that depends on the standard deviation of the Gaussian, is left for future work.
An additional point to make is that Theorem 1 poses a structural limitation on the linear neural
network. Namely, it requires the dimension of each hidden layer (di, i = 1, . . . , N- 1) to be greater
than or equal to the minimum between those of the input (d0) and output (dN). Indeed, in order for
the initial end-to-end matrix W1:N (0) to have deficiency margin c > 0, it must (by Claim 1) have full
rank, and this is only possible if there is no intermediate dimension di smaller than min{d0 , dN }.
We make no other assumptions on network architecture (depth, input/output/hidden dimensions).
3.2.2	PROOF
The cornerstone upon which Theorem 1 rests is the following lemma, showing non-trivial descent
whenever σmin(W1：N) is bounded away from zero:
Lemma 1. Under the conditions of Theorem 1, we have that for every t = 0, 1, 2, . . . :5
'(t + I) ≤ '⑴一2 ∙ σmin(W1:N ⑴)N ∙ ~^ (W1:N ⑴).	⑼
5NOtethattheterm 需(WI:N(t)) below stands for the gradient of L1(∙) — a convex loss over (directly
parameterized) linear models (Equation (2)) — at the point W1:N (t) — the end-to-end matrix of the network
at iteration t. It is therefore (see Equation (5)) non-zero anywhere but at a global minimum.
5
Published as a conference paper at ICLR 2019
Proof of Lemma 1 (in idealized setting; for complete proof see Appendix D.2). We prove the lemma
here for the idealized setting of perfect initial balancedness (δ = 0):
Wj>+1(0)Wj+1(0) =Wj(0)Wj>(0) , ∀j ∈ {1,...,N-1},
and infinitesimally small learning rate (η → 0+) — gradient flow:
∂LN
Wj (T) = - ∂W "ι (T),...,WN (T)) ,j = 1,...,N , τ ∈ [0, ∞),
where T is a continuous time index, and dot symbol (in Wj (T)) signifies derivative with respect
to time. The complete proof, for the realistic case of approximate balancedness and discrete up-
dates (δ, η > 0), is similar but much more involved, and appears in Appendix D.2.
Recall that `(t) — the objective value at iteration t of gradient descent — is equal to L1(W1:N(t))
(see Equation (5)). Accordingly, for the idealized setting in consideration, we would like to show:
d	1	2(N-1)	dLl	2
dTL1 (WLN(T)) ≤ - 2 σmin^W1:N(T))	N ∙ ^^ (W1:N(T))	.	(IO)
We will see that a stronger version of Equation (10) holds, namely, one without the 1/2 factor (which
only appears due to discretization).
By (Theorem 1 and Claim 1 in) Arora et al. (2018), the weights W1(T), . . . , WN(T) remain balanced
throughout the entire optimization, and that implies the end-to-end matrix W1:N (T) moves according
to the following differential equation:
VeC (W1:N (T)) = -PWLN (T) ∙ VeC (dWw (WLN (T))) ,	(II)
where VeC(A), for an arbitrary matrix A, stands for vectorization in column-first order, and
PW1:N (τ) is a positive semidefinite matrix whose eigenvalues are all greater than or equal to
σmin (W1:N (T))2(N -1)/N. Taking the derivative of L1 (W1:N (T)) with respect to time, we obtain
the sought-after Equation (10) (with no 1/2 factor):
-d-L1 (Wi：N (t ))
dT
VeC
VeC
dL1
dW
dL1
dW
W1:N(T)
W1:N(T)
2(N-1)
≤	fmin (Wi：N (T ))	N
2(N-1)
-σmin^W1,N (T ))	N
(W1:N(T))
2
The first transition here (equality) is an application of the chain rule; the second (equality) plugs
in Equation (11); the third (inequality) results from the fact that the eigenvalues of the symmetric
matrix Pw>n(T) are no smaller than σmin(W1：N(t))2(N-1)/N (recall that |卜|| stands for Euclidean
norm); and the last (equality) is trivial ——IlAkF = ∣∣vec(A)k for any matrix A.	□
dW(W ) = W - φ
dW(W)
With Lemma 1 established, the proof of Theorem 1 readily follows:
Proof of Theorem 1. By the definition of L1(∙) (Equation (2)), for any W ∈ RdN ×d0:
2
=2 ∙ L1 (W).
F
Plugging this into Equation (9) while recalling that `(t) = L1(W1:N(t)) (Equation (5)), we have
(by Lemma 1) that for every t = 0, 1, 2, . . . :
/	2(N-1)、
L1^Wi-.n(t +1)) ≤ L1^Wi.,n(t)) ∙(1 - η ∙ σmin (Wi：N(t))	).
6
Published as a conference paper at ICLR 2019
Since the coefficients 1 -
η ∙ σmin(W1:N (t))
2(N-1)
N
are necessarily non-negative (otherwise would
contradict non-negatiVity of L1 (∙)), We may unroll the inequalities, obtaining:
t /	2(N-1)、
LI(WLN (t + I)) ≤ LI(WLN (O)) ∙ Uto =。(1 - η ∙ σmin(W1：N (t°))	N )∙	(12)
NoW, this in particular means that for every t0= 0, 1, 2, . . . :
L1(Wl:N (t0)) ≤ L1(W1:N (0))	=⇒	kWl:N (t0) - Φ∣∣F ≤ kWl:N (O) - Φ∣∣F .
Deficiency margin c of W1:N (0) along With Claim 1 thus imply σmin W1:N (t0) ≥ c, Which When
inserted back into Equation (12) yields, for every t = 1, 2, 3, . . . :
L1W.N(t)) ≤ L1(W1:N(0)) ∙(1- η ∙ C2NN-1 )t.	(13)
2(N-1)
η ∙ c-N-
is obviously non-negative, and it is also no greater than 1 (otherWise Would contradict
non-negativity of L1(∙)). We may therefore incorporate the inequality 1 - η ∙ c2(N-1)/N ≤ exp (-
η ∙ c2(N-1"n) into Equation (13):
L1(Wi：N (t)) ≤ L1(Wi：N (0)) ∙ exp(-η∙ c2(N-1)/N ∙ t),
from Which it folloWs that L1 (W1:N (t)) ≤ if:
*、	1
t ≥ η ∙ c2(N-1)/N
• log
L1(W1:N(0))

Recalling again that `(t) = L1 (W1:N (t)) (Equation (5)), We conclude the proof.
□
3.3 Balanced Initialization
We define the folloWing procedure, balanced initialization, Which assigns Weights randomly While
ensuring perfect balancedness:
Procedure 1 (Balanced initialization). Given d0, d1, . . . , dN ∈ N such that min{d1, . . . , dN-1} ≥
min{d0 , dN } and a distribution D over dN × d0 matrices, a balanced initialization of Wj ∈
Rdj ×dj-1, j=1, . . . , N, assigns these weights as follows:
(i)	Sample A ∈ RdN ×d0 according to D.
(ii)	Take singular value decomposition A = UΣV >, where U ∈ RdN ×min{d0,dN}, V ∈
Rd0 ×min{d0,dN} have orthonormal columns, and Σ ∈ Rmin{d0,dN}×min{d0,dN} is diagonal
and holds the singular values of A.
(iii)	Set WN ` U S1/N, WN-ι ` Σ^n ,..., W2 ` Σνn , Wi ` Σ^n V >, where the Sym-
bol “'” stands for equality up to zero-valued padding.6 7
The concept of balanced initialization, together With Theorem 1, leads to a guarantee for linear con-
vergence (applicable to output dimension 1 — scalar regression) that holds With constant probability
over the randomness in initialization:
Theorem 2. For any constant 0 < p < 1/2, there are constants d00, a > 0 8 such that the following
holds. Assume dN = 1, d0 ≥ d00, and that the weights W1(0), . . . , WN (0) are subject to balanced
initialization (Procedure 1) such that the entries in W1:N (0) are independent zero-centered Gaus-
Sian perturbations with standard deviation S ≤ ∣∣Φk2A∕αd0∙ Suppose also that we run gradient
6These assignments can be accomplished since min{d1, . . . , dN-1} ≥ min{d0, dN}.
7By design W1:N = A and Wj>+1Wj+1 = WjWj>, ∀j ∈ {1, . . . , N-1} — these properties are actually
all We need in Theorem 2, and step (iii) in Procedure 1 can be replaced by any assignment that meets them.
8As shoWn in the proof of the theorem (Appendix D.3), d00 , a > 0 can take on any pair of values for
which: (i) d0 ≥ 20; and (ii)(1 — 2exp(-d0∕16))(3 — 4F(2∕,α∕2)) ≥ 2p, where F(∙) stands for the
cumulative distribution function of the standard normal distribution. For example, if p = 0.25, it suffices to
take any d00 ≥ 100, a ≥ 100. We note that condition (i) here (d00 ≥ 20) serves solely for simplification of
expressions in the theorem.
7
Published as a conference paper at ICLR 2019
descent with learning rate η ≤ (s2 do)4-2/N/(105N 3kΦk20-6∕N). Then, with probability at least P
over the random initialization, we have that for every > 0 and:
T ≥ 4 (ln(4)(界)2 2/N + kΦk2"-2ln(kΦk2∕(8e))),
the loss at iteration T of gradient descent — '(T) — is no greater than e.
Proof. See Appendix D.3.	口
4	Experiments
Balanced initialization (Procedure 1) possesses theoretical advantages compared with the customary
layer-wise independent scheme — it allowed us to derive a convergence guarantee that holds with
constant probability over the randomness of initialization (Theorem 2). In this section we present
empirical evidence suggesting that initializing with balancedness may be beneficial in practice as
well. For conciseness, some of the details behind our implementation are deferred to Appendix E.
We began by experimenting in the setting covered by our analysis — linear neural networks trained
via gradient descent minimization of `2 loss over whitened data. The dataset chosen for the ex-
periment was UCI Machine Learning Repository’s “Gas Sensor Array Drift at Different Concen-
trations” (Vergara et al., 2012; Rodriguez-Lujan et al., 2014). Specifically, we used the dataset’s
“Ethanol” problem — a scalar regression task with 2565 examples, each comprising 128 features
(one of the largest numeric regression tasks in the repository). Starting with the customary initializa-
tion of layer-wise independent random Gaussian perturbations centered at zero, we trained a three
layer network (N = 3) with hidden widths (d1 , d2) set to 32, and measured the time (number of
iterations) it takes to converge (reach training loss within = 10-5 from optimum) under differ-
ent choices of standard deviation for the initialization. To account for the possibility of different
standard deviations requiring different learning rates (values for η), we applied, for each standard
deviation independently, a grid search over learning rates, and recorded the one that led to fastest
convergence. The result of this test is presented in Figure 1(a). As can be seen, there is a range of
standard deviations that leads to fast convergence (a few hundred iterations or less), below and above
which optimization decelerates by orders of magnitude. This accords with our discussion at the end
of Subsection 3.3, by which overly small initialization ensures approximate balancedness (small δ;
see Definition 1) but diminishes deficiency margin (small c; see Definition 2) — “vanishing gradi-
ent problem” — whereas large initialization hinders both approximate balancedness and deficiency
margin — “exploding gradient problem”. In that regard, as a sanity test for the validity of our anal-
ysis, in a case where approximate balancedness is met at initialization (small standard deviation),
we measured its persistence throughout optimization. As Figure 1(c) shows, our theoretical findings
manifest themselves here — trajectories of gradient descent indeed preserve weight balancedness.
In addition to a three layer network, we also evaluated a deeper, eight layer model (with hidden
widths identical to the former —— N = 8, di = •… = d7 = 32). In particular, using the same
experimental protocol as above, we measured convergence time under different choices of standard
deviation for the initialization. Figure 1(a) displays the result of this test alongside that of the three
layer model. As the figure shows, transitioning from three layers to eight aggravated the instability
with respect to initialization —— there is now a narrow band of standard deviations that lead to con-
vergence in reasonable time, and outside of this band convergence is extremely slow, to the point
where it does not take place within the duration we allowed (106 iterations). From the perspective of
our analysis, a possible explanation for the aggravation is as follows: under layer-wise independent
initialization, the magnitude of the end-to-end matrix W1:N depends on the standard deviation in a
manner that is exponential in depth, thus for large depths the range of standard deviations that lead
to moderately sized W1:N (as required for a deficiency margin) is limited, and within this range,
there may not be many standard deviations small enough to ensure approximate balancedness. The
procedure of balanced initialization (Procedure 1) circumvents these difficulties —— it assigns W1:N
directly (no exponential dependence on depth), and distributes its content between the individual
weights W1 , . . . , WN in a perfectly balanced fashion. Rerunning the experiment of Figure 1(a)
with this initialization replacing the customary layer-wise scheme (using same experimental proto-
col), we obtained the results shown in Figure 1(b) —— both the original three layer network, and the
deeper eight layer model, converged quickly under virtually all standard deviations tried.
8
Published as a conference paper at ICLR 2019
(a)
Figure 1: Experimental results. (a) Convergence of gradient descent training deep linear neural networks
(depths 3 and 8) under customary initialization of layer-wise independent Gaussian perturbations with mean 0
and standard deviation s. For each network, number of iterations required to reach = 10-5 from optimal
training loss is plotted as a function of s (missing values indicate no convergence within 106 iterations). Dataset
in this experiment is a numeric regression task from UCI Machine Learning Repository (details in text). Notice
that fast convergence is attained only in a narrow band of values for s, and that this phenomenon is more ex-
treme with the deeper network. (b) Same setup as in (a), but with layer-wise independent initialization replaced
by balanced initialization (Procedure 1) based on Gaussian perturbations with mean 0 and standard deviation s.
Notice that this change leads to fast convergence, for both networks, under wide range of values for s. Notice
also that the shallower network converges slightly faster, in line with the results of Saxe et al. (2014) and Arora
et al. (2018) for `2 loss. (c) For the run in (a) of a depth-3 network and standard deviation s = 10-3, this plot
shows degree of balancedness (minimal δ satisfying kWj>+1Wj+1 - Wj Wj> kF ≤ δ , ∀j ∈ {1, . . . , N - 1})
against magnitude of weights (minj=1,...,N kWjWj> kF) throughout optimization. Notice that approximate
balancedness persists under gradient descent, in line with our theoretical analysis. (d) Convergence of stochas-
tic gradient descent training the fully-connected non-linear (ReLU) neural network of the MNIST tutorial built
into TensorFlow (details in text). Customary layer-wise independent and balanced initializations — both based
on Gaussian perturbations centered at zero — are evaluated, with varying standard deviations. For each config-
uration 10 epochs of optimization are run, followed by measurement of the training loss. Notice that although
our theoretical analysis does not cover non-linear activation, softmax-cross-entropy loss and stochastic opti-
mization, the conclusion of balanced initialization leading to improved convergence carries over to this setting.
As a final experiment, we evaluated the effect of balanced initialization in a setting that involves
non-linear activation, softmax-cross-entropy loss and stochastic optimization (factors not accounted
for by our analysis). For this purpose, we turned to the MNIST tutorial built into TensorFlow (Abadi
et al., 2016),9 which comprises a fully-connected neural network with two hidden layers (width 128
followed by 32) and ReLU activation (Nair and Hinton, 2010), trained through stochastic gradient
descent (over softmax-cross-entropy loss) with batch size 100, initialized via customary layer-wise
independent Gaussian perturbations centered at zero. While keeping the learning rate at its default
value 0.01, we varied the standard deviation of initialization, and for each value measured the train-
ing loss after 10 epochs.10 We then replaced the original (layer-wise independent) initialization with
a balanced initialization based on Gaussian perturbations centered at zero (latter was implemented
per Procedure 1, disregarding non-linear activation), and repeated the process. The results of this
experiment are shown in Figure 1(d). Although our theoretical analysis does not cover non-linear
activation, softmax-cross-entropy loss or stochasticity in optimization, its conclusion of balanced
initialization leading to improved (faster and more stable) convergence carried over to such setting.
5	Related Work
Theoretical study of gradient-based optimization in deep learning is a highly active area of research.
As discussed in Section 1, a popular approach is to show that the objective landscape admits the
properties of no poor local minima and strict saddle, which, by Ge et al. (2015); Lee et al. (2016);
Panageas and Piliouras (2017), ensure convergence to global minimum. Many works, both classic
(e.g. Baldi and Hornik (1989)) and recent (e.g. Choromanska et al. (2015); Kawaguchi (2016); Hardt
and Ma (2016); Soudry and Carmon (2016); Haeffele and Vidal (2017); Nguyen and Hein (2017);
Safran and Shamir (2018); Nguyen and Hein (2018); Laurent and Brecht (2018)), have focused on
the validity of these properties in different deep learning settings. Nonetheless, to our knowledge,
9https://github.com/tensorflow/tensorflow/tree/master/tensorflow/
examples/tutorials/mnist
10As opposed to the dataset used in our experiments with linear networks, measuring the training loss with
MNIST is non-trivial computationally (involves passing through 60K examples). Therefore, rather than con-
tinuously polling training loss until it reaches a certain threshold, in this experiment we chose to evaluate speed
of convergence by measuring the training loss once after a predetermined number of iterations.
9
Published as a conference paper at ICLR 2019
the success of landscape-driven analyses in formally proving convergence to global minimum for a
gradient-based algorithm, has thus far been limited to shallow (two layer) models only (e.g. Ge et al.
(2016); Du and Lee (2018); Du et al. (2018a)).
An alternative to the landscape approach is a direct analysis of the trajectories taken by the optimizer.
Various papers (e.g. Brutzkus and Globerson (2017); Li and Yuan (2017); Zhong et al. (2017); Tian
(2017); Brutzkus et al. (2018); Li et al. (2018); Du et al. (2018c;b); Liao et al. (2018)) have recently
adopted this strategy, but their analyses only apply to shallow models. In the context of linear
neural networks, deep (three or more layer) models have also been treated — cf. Saxe et al. (2014)
and Arora et al. (2018), from which we draw certain technical ideas for proving Lemma 1. However
these treatments all apply to gradient flow (gradient descent with infinitesimally small learning rate),
and thus do not formally address the question of computational efficiency.
To our knowledge, Bartlett et al. (2018) is the only existing work rigorously proving convergence
to global minimum for a conventional gradient-based algorithm training a deep model. This work
is similar to ours in the sense that it also treats linear neural networks trained via minimization of
`2 loss over whitened data, and proves linear convergence (to global minimum) for gradient descent.
It is more limited in that it only covers the subclass of linear residual networks, i.e. the specific
setting of uniform width across all layers (do = •…=d，N) along with identity initialization. We on
the other hand allow the input, output and hidden dimensions to take on any configuration that avoids
“bottlenecks” (i.e. admits min{d1, . . . , dN-1} ≥ min{d0, dN}), and from initialization require only
approximate balancedness (Definition 1), supporting many options beyond identity. In terms of the
target matrix Φ, Bartlett et al. (2018) treats two separate scenarios:11 (i) Φ is symmetric and positive
definite; and (ii) Φ is within distance 1/10e from identity.12 Our analysis does not fully account for
scenario (i), which seems to be somewhat of a singularity, where all layers are equal to each other
throughout optimization (see proof of Theorem 2 in Bartlett et al. (2018)). We do however provide
a strict generalization of scenario (ii) — our assumption of deficiency margin (Definition 2), in the
setting of linear residual networks, is met if the distance between target and identity is less than 0.5.
6	Conclusion
For deep linear neural networks, we have rigorously proven convergence of gradient descent to
global minima, at a linear rate, provided that the initial weight matrices are approximately balanced
and the initial end-to-end matrix has positive deficiency margin. The result applies to networks with
arbitrary depth, and any configuration of input/output/hidden dimensions that supports full rank,
i.e. in which no hidden layer has dimension smaller than both the input and output.
Our assumptions on initialization — approximate balancedness and deficiency margin — are both
necessary, in the sense that violating any one of them may lead to convergence failure, as we demon-
strated explicitly. Moreover, for networks with output dimension 1 (scalar regression), we have
shown that a balanced initialization, i.e. a random choice of the end-to-end matrix followed by a
balanced partition across all layers, leads assumptions to be met, and thus convergence to take place,
with constant probability. Rigorously proving efficient convergence with significant probability un-
der customary layer-wise independent initialization remains an open problem. The recent work
of Shamir (2018) suggests that this may not be possible, as at least in some settings, the number
of iterations required for convergence is exponential in depth with overwhelming probability. This
negative result, a theoretical manifestation of the “vanishing gradient problem”, is circumvented by
balanced initialization. Through simple experiments we have shown that the latter can lead to favor-
able convergence in deep learning practice, as it does in theory. Further investigation of balanced
initialization, including development of variants for convolutional layers, is regarded as a promising
direction for future research.
The analysis in this paper uncovers special properties of the optimization landscape in the vicinity
of gradient descent trajectories. We expect similar ideas to prove useful in further study of gradient
descent on non-convex objectives, including training losses of deep non-linear neural networks.
11 There is actually an additional third scenario being treated — Φ is asymmetric and positive definite — but
since that requires a dedicated optimization algorithm, it is outside our scope.
121/10e is the optimal (largest) distance that may be obtained (via careful choice of constants) from the
proof of Theorem 1 in Bartlett et al. (2018).
10
Published as a conference paper at ICLR 2019
Acknowledgments
This work is supported by NSF, ONR, Simons Foundation, Schmidt Foundation, Mozilla Research,
Amazon Research, DARPA and SRC. Nadav Cohen is a member of the Zuckerman Israeli Postdoc-
toral Scholars Program, and is supported by Schmidt Foundation.
References
Martin Abadi, Paul Barham, Jianmin Chen, Zhifeng Chen, Andy Davis, Jeffrey Dean, Matthieu Devin, Sanjay
Ghemawat, Geoffrey Irving, Michael Isard, et al. Tensorflow: A system for large-scale machine learning. In
OSDI, volume 16, pages 265-283, 2016.
Sanjeev Arora, Nadav Cohen, and Elad Hazan. On the optimization of deep networks: Implicit acceleration by
overparameterization. In International Conference on Machine Learning, pages 244-253, 2018.
Pierre Baldi and Kurt Hornik. Neural networks and principal component analysis: Learning from examples
without local minima. Neural networks, 2(1):53-58, 1989.
Peter Bartlett, Dave Helmbold, and Phil Long. Gradient descent with identity initialization efficiently learns
positive definite linear transformations. In International Conference on Machine Learning, pages 520-529,
2018.
Rajendra Bhatia. Matrix analysis. Springer-Verlag, 1997.
Stephen Boyd and Lieven Vandenberghe. Convex optimization. Cambridge university press, 2004.
Alon Brutzkus and Amir Globerson. Globally optimal gradient descent for a convnet with gaussian inputs. In
International Conference on Machine Learning, pages 605-614, 2017.
Alon Brutzkus, Amir Globerson, Eran Malach, and Shai Shalev-Shwartz. Sgd learns over-parameterized net-
works that provably generalize on linearly separable data. International Conference on Learning Represen-
tations, 2018.
A Carbery and J Wright. Distributional and lq norm inequalities for polynomials over convex bodies in Rn.
Mathematics Research Letters, 8(3):233-248, 2001.
Anna Choromanska, Mikael Henaff, Michael Mathieu, Gerard Ben Arous, and Yann LeCun. The loss surfaces
of multilayer networks. In Artificial Intelligence and Statistics, pages 192-204, 2015.
Alexander Chudnov. On minimax signal generation and reception algorithms. Problems of Information Trans-
mission, 22(4):49-54, 1986.
Simon S Du and Jason D Lee. On the power of over-parametrization in neural networks with quadratic activa-
tion. In International Conference on Machine Learning, pages 1329-1338, 2018.
Simon S Du, Wei Hu, and Jason D Lee. Algorithmic regularization in learning deep homogeneous models:
Layers are automatically balanced. arXiv preprint arXiv:1806.00900, 2018a.
Simon S Du, Jason D Lee, and Yuandong Tian. When is a convolutional filter easy to learn? International
Conference on Learning Representations, 2018b.
Simon S Du, Jason D Lee, Yuandong Tian, Aarti Singh, and Barnabas Poczos. Gradient descent learns one-
hidden-layer cnn: Dont be afraid of spurious local minima. In International Conference on Machine Learn-
ing, pages 1339-1348, 2018c.
Rong Ge, Furong Huang, Chi Jin, and Yang Yuan. Escaping from saddle pointsonline stochastic gradient for
tensor decomposition. In Conference on Learning Theory, pages 797-842, 2015.
Rong Ge, Jason D Lee, and Tengyu Ma. Matrix completion has no spurious local minimum. In Advances in
Neural Information Processing Systems, pages 2973-2981, 2016.
Benjamin Haeffele and Rene Vidal. Global optimality in neural network training. In IEEE Conference on
Computer Vision and Pattern Recognition, pages 4390-4398, 2017.
Moritz Hardt and Tengyu Ma. Identity matters in deep learning. International Conference on Learning Repre-
sentations, 2016.
Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recognition. In
Proceedings of the IEEE conference on computer vision and pattern recognition, pages 770-778, 2016.
11
Published as a conference paper at ICLR 2019
Roger Horn and Charles Johnson. Matrix analysis. Cambridge university press, 1990.
Kenji Kawaguchi. Deep learning without poor local minima. In Advances in Neural Information Processing
Systems, pages 586-594, 2016.
Beatrice Laurent and Pascal Massart. Adaptive estimation of a quadratic functional by model selection. The
Annals of Statistics, 28(5):1302-1338, 2000.
Thomas Laurent and James Brecht. Deep linear networks with arbitrary loss: All local minima are global. In
International Conference on Machine Learning, pages 2908-2913, 2018.
Jason D Lee, Max Simchowitz, Michael I Jordan, and Benjamin Recht. Gradient descent only converges to
minimizers. In Conference on Learning Theory, pages 1246-1257, 2016.
Yuanzhi Li and Yang Yuan. Convergence analysis of two-layer neural networks with relu activation. In Ad-
vances in Neural Information Processing Systems, pages 597-607, 2017.
Yuanzhi Li, Tengyu Ma, and Hongyang Zhang. Algorithmic regularization in over-parameterized matrix sens-
ing and neural networks with quadratic activations. In Proceedings of the 31st Conference On Learning
Theory, pages 2-47, 2018.
Zhenyu Liao, Yacine Chitour, and Romain Couillet. Almost global convergence to global minima for gradient
descent in deep linear networks. 2018.
Shachar Lovett. An elementary proof of anti-concentration of polynomials in Gaussian variables. Electronic
Colloquium on Computational Complexity, page 182, 2010.
Raghu Meka, Oanh Nguyen, and Van Vu. Anti-concentration for Polynomials of Independent Random Vari-
ables. Theory of Computing, 12:17, 2016.
Vinod Nair and Geoffrey E Hinton. Rectified linear units improve restricted boltzmann machines. In Proceed-
ings of the 27th International Conference on Machine Learning (ICML-10), pages 807-814, 2010.
Quynh Nguyen and Matthias Hein. The loss surface of deep and wide neural networks. In International
Conference on Machine Learning, pages 2603-2612, 2017.
Quynh Nguyen and Matthias Hein. The loss surface and expressivity of deep convolutional neural networks.
arXiv preprint arXiv:1710.10928, 2018.
Ioannis Panageas and Georgios Piliouras. Gradient descent only converges to minimizers: Non-isolated critical
points and invariant regions. In Innovations in Theoretical Computer Science, 2017.
Adam Paszke, Sam Gross, Soumith Chintala, Gregory Chanan, Edward Yang, Zachary DeVito, Zeming Lin,
Alban Desmaison, Luca Antiga, and Adam Lerer. Automatic differentiation in pytorch. In NIPS-W, 2017.
Irene Rodriguez-Lujan, Jordi Fonollosa, Alexander Vergara, Margie Homer, and Ramon Huerta. On the cal-
ibration of sensor arrays for pattern recognition using the minimal number of experiments. Chemometrics
and Intelligent Laboratory Systems, 130:123-134, 2014.
Itay Safran and Ohad Shamir. Spurious local minima are common in two-layer relu neural networks. In
International Conference on Machine Learning, 2018.
Andrew M Saxe, James L McClelland, and Surya Ganguli. Exact solutions to the nonlinear dynamics of
learning in deep linear neural networks. International Conference on Learning Representations, 2014.
Ohad Shamir. Exponential convergence time of gradient descent for one-dimensional deep linear neural net-
works. arXiv preprint arXiv:1809.08587, 2018.
Daniel Soudry and Yair Carmon. No bad local minima: Data independent training error guarantees for multi-
layer neural networks. arXiv preprint arXiv:1605.08361, 2016.
Ilya Sutskever, James Martens, George Dahl, and Geoffrey Hinton. On the importance of initialization and
momentum in deep learning. In International Conference on Machine Learning, pages 1139-1147, 2013.
Yuandong Tian. An analytical formula of population gradient for two-layered relu network and its applications
in convergence and critical point analysis. arXiv preprint arXiv:1703.00560, 2017.
Alexander Vergara, Shankar Vembu, Tuba Ayhan, Margaret A Ryan, Margie L Homer, and Ramon Huerta.
Chemical gas sensor drift compensation using classifier ensembles. Sensors and Actuators B: Chemical,
166:320-329, 2012.
Kai Zhong, Zhao Song, Prateek Jain, Peter L Bartlett, and Inderjit S Dhillon. Recovery guarantees for one-
hidden-layer neural networks. In International Conference on Machine Learning, pages 4140-4149, 2017.
12
Published as a conference paper at ICLR 2019
A `2 LOSS OVER WHITENED DATA
Recall the `2 loss of a linear predictor W ∈ Rdy ×dx as defined in Section 2:
L(W ) = 71- kWX - YkF,
2m
where X ∈ Rdx×m and Y ∈ Rdy ×m Define Axx := m XX> ∈ Rdx ×dx , Ayy := m YY > ∈
Rdy ×dy and Λyx := *YX> ∈ Rdy ×dx. Using the relation ∣∣A∣∣F = Tr(AA>), we have:
L(W) = 2m Tr ((WX — Y)(WX — Y)>)
=2m Tr(WXX>W>) — mm Tr(WXY>) + 2⅛ Tr(YY>)
=1 Tr(WAxxW>) — Tr(WΛ>x) + 1 Tr(Λyy).
By definition, when data is whitened, Axx is equal to identity, yielding:
L(W) = 1 Tr(WW>) — Tr(WA>x) + 2 Tr(Ayy)
=1 Tr ((W - Ayx)(W — Ayx)>) — 1 Tr(AyxA>x) + 1 Tr(Ayy)
=2 IIw — Ayx kF + C,
where c := — 2 Tr(AyxA>x) + 11 Tr(Ayy) does not depend on W. Hence we arrive at Equation (1).
B	Approximate Balancedness and Deficiency Margin Under
Customary Initialization
Two assumptions concerning initialization facilitate our main convergence result (Theorem 1):
(i) the initial weights W1(0), . . . , WN (0) are approximately balanced (see Definition 1); and (ii) the
initial end-to-end matrix W1:N (0) has positive deficiency margin with respect to the target Φ (see
Definition 2). The current appendix studies the likelihood of these assumptions being met under cus-
tomary initialization of random (layer-wise independent) Gaussian perturbations centered at zero.
For approximate balancedness we have the following claim, which shows that it becomes more and
more likely the smaller the standard deviation of initialization is:
Claim 2. Assume all entries in the matrices Wj ∈ Rdj ×dj-1, j = 1, . . . , N, are drawn inde-
pendently at random from a Gaussian distribution with mean zero and standard deviation s > 0.
Then, for any δ > 0, the probability of W1, . . . , WN being δ-balanced is at least max{0, 1 —
10δ-2Ns4d3max}, where dmax := max{d0, . . . , dN}.
Proof. See Appendix D.4.	□
In terms of deficiency margin, the claim below treats the case of a single output model (scalar regres-
sion), and shows that if the standard deviation of initialization is sufficiently small, with probability
close to 0.5, a deficiency margin will be met. However, for this deficiency margin to meet a chosen
threshold c, the standard deviation need be sufficiently large.
Claim 3. There is a constant C1 > 0 such that the following holds. Consider the case where dN =
1, d0 ≥ 20,13 and suppose all entries in the matrices Wj ∈ Rdj ×dj-1, j =1, . . . , N, are drawn
independently at random from a Gaussian distribution with mean zero, whose standard devia-
tion S > 0 is small with respect to the target, i.e. S ≤ ∣∣Φk1∕N/(105d3d1 …dN-1C1 )1/(2N). Then,
for any c with 0 < c ≤ kΦkF 105d03C1(C1N)2N , the probability of the end-to-end matrix W1:N
having deficiency margin c with respect to Φ is at least 0.49 if: 14 15
S ≥ C1/(2N) ∙ (C1N kΦkN2N) /(d1 …dN-1)1/(2N)).
Proof. See Appendix D.5.	□
13The requirement d0 ≥ 20 is purely technical, designed to simplify expressions in the claim.
14The probability 0.49 can be increased to any p < 1/2 by increasing the constant 105 in the upper bounds
for s and c.
15It is not difficult to see that the latter threshold is never greater than the upper bound for s, thus sought-after
standard deviations always exist.
13
Published as a conference paper at ICLR 2019
C Convergence Failures
In this appendix we show that the assumptions on initialization facilitating our main convergence
result (Theorem 1) — approximate balancedness and deficiency margin — are both necessary, by
demonstrating cases where violating each of them leads to convergence failure. This accords with
widely observed empirical phenomena, by which successful optimization in deep learning crucially
depends on careful initialization (cf. Sutskever et al. (2013)).
Claim 4 below shows16 that if one omits from Theorem 1 the assumption of approximate balanced-
ness at initialization, no choice of learning rate can guarantee convergence:
Claim 4. Assume gradient descent with some learning rate η > 0 is a applied to a network whose
depth N is even, and whose input, output and hidden dimensions d0 , . . . , dN are all equal to some
d ∈ N. Then, there exist target matrices Φ such that the following holds. For any c with 0 < c <
σmin (Φ), there are initializations for which the end-to-end matrix W1:N (0) has deficiency margin c
with respect to Φ, and yet convergence will fail — objective will never go beneath a positive constant.
Proof. See Appendix D.6.	□
In terms of deficiency margin, we provide (by adapting Theorem 4 in Bartlett et al. (2018)) a differ-
ent, somewhat stronger result — there exist settings where initialization violates the assumption of
deficiency margin, and despite being perfectly balanced, leads to convergence failure, for any choice
of learning rate:17
Claim 5. Consider a network whose depth N is even, and whose input, output and hidden dimen-
sions d0 , . . . , dN are all equal to some d ∈ N. Then, there exist target matrices Φ for which there
are non-stationary initializations W1 (0), . . . , WN (0) that are 0-balanced, and yet lead gradient
descent, under any learning rate, to fail — objective will never go beneath a positive constant.
Proof. See Appendix D.7.	□
D Deferred Proofs
We introduce some additional notation here in addition to the notation specified in Section 2. We
use kAkσ to denote the spectral norm (largest singular value) of a matrix A, and sometimes kvk2 as
an alternative to kvk — the Euclidean norm of a vector v. Recall that for a matrix A, vec(A) is its
vectorization in column-first order. We let F(∙) denote the cumulative distribution function of the
standard normal distribution, i.e. F(x) = R-∞ √2∏e-2U du (X ∈ R).
To simplify the presentation we will oftentimes use W as an alternative (shortened) notation
for Wi：N — the end-to-end matrix of a linear neural network. We will also use L(∙) as short-
hand for L1(∙) — the loss associated with a (directly parameterized) linear model, i.e. L(W):=
2 kw - Φk2F . Therefore, in the context of gradient descent training a linear neural network, the
following expressions all represent the loss at iteration t:
'(t) = LN(Wι(t),…，WN(t)) = L1(W1:N(t)) = L1(W(t)) = L(W(t)) = 2 kW(t) - Φ∣∣F .
Also, for weights Wj ∈ Rdj ×dj-1, j = 1, . . . , N of a linear neural network, we generalize the
notation Wi：N, and define WjjO := Wj>Wj>-ι ∙ ∙ ∙ Wj for every 1 ≤ j ≤ j0 ≤ N. Note that
WrjO = Wjr Wj+1 …Wjr. Then, by a simple gradient calculation, the gradient descent updates
(4) can be written as
Wj(t + 1) = Wj(t)- ηWj+i:N(t) ∙ ddW(W(t)) ∙ WB-i(t) , 1 ≤ j ≤ N, (14)
where we define Wi:0(t) := Id0 and WN +i:N (t) := IdN for completeness.
16For simplicity of presentation, the claim treats the case of even depth and uniform dimension across all
layers. It can easily be extended to account for arbitrary depth and input/output/hidden dimensions.
17This statement becomes trivial if one allows initialization at a suboptimal stationary point, e.g. Wj (0) =
0, j = 1, . . . , N . Claim 5 rules out such trivialities by considering only non-stationary initializations.
14
Published as a conference paper at ICLR 2019
Finally, recall the standard definition of the tensor product of two matrices (also known as the
Kronecker product): for matrices A ∈ RmA ×nA, B ∈ RmB ×nB, their tensor product A 0 B ∈
RmAmB ×nAnB is defined as
a a1,1B	…	α1,nA B ∖
A 0 B =	.	..	. I ,
∖amA,1B ∙∙∙	amA ,nA BJ
where ai,j is the element in the i-th row andj-th column ofA.
D.1 Proof of Claim 1
Proof. Recall that for any matrices A and B of compatible sizes σmin (A + B) ≥ σmin(A) -
σmax (B), and that the Frobenius norm of a matrix is always lower bounded by its largest singular
value (Horn and Johnson (1990)). Using these facts, we have:
σmin(W0) = σmin(Φ + (W0 - Φ)) ≥。团切&)-。m0方(卬W- Φ)
≥ σmin(Φ) - kW0 - ΦkF ≥ σmin(Φ) - kW - ΦkF
≥ σmin(Φ) - (σmin(Φ) - c) = c.
□
D.2 Proof of Lemma 1
To prove Lemma 1, we will in fact prove a stronger result, Lemma 2 below, which states that for each
iteration t, in addition to (9) being satisfied, certain other properties are also satisfied, namely: (i)
the weight matrices W1(t), . . . , WN (t) are 2δ-balanced, and (ii) W1(t), . . . , WN (t) have bounded
spectral norms.
Lemma 2. Suppose the conditions of Theorem 1 are satisfied. Then for all t ∈ N ∪ {0},
(A(t)) For1 ≤j ≤N -1, kWj>+1(t)Wj+1(t) -Wj(t)Wj>(t)kF ≤ 2δ.
(A0(t)) If t ≥ 1, then for 1 ≤ j ≤ N - 1,
kWj>+1(t)Wj+1(t)-Wj(t)Wj>(t)kF
≤	kWj>+1(t - 1)Wj+1(t - 1) - Wj(t - 1)Wj>(t - 1)kF
+η2 dL1 W(t- 1)	∙ dL1 W(t- 1)	∙ 4 ∙(2kΦkF)2(NT)/N.
dW	dW
Fσ
(Β(t)) If t = 0, then '(t) ≤ 2∣∣Φ∣∣F. If t ≥ 1, then
'⑴ ≤ '(t - I)- 2σmin(W(t — I)) -N-
2
F
dL1
dW(W(t - I))
(C(t)) For 1 ≤ j ≤ N, kWj(t)kσ ≤ (4∣∣Φ∣∣f)1/n.
First we observe that Lemma 1 is an immediate consequence of Lemma 2.
Proof of Lemma 1. Notice that condition B(t) of Lemma 2 for each t ≥ 1 immediately establishes
the conclusion of Lemma 1 at time step t 一 1.	口
D.2. 1 Preliminary lemmas
We next prove some preliminary lemmas which will aid us in the proof of Lemma 2. The first is
a matrix inequality that follows from Lidskii’s theorem. For a matrix A, let Sing(A) denote the
rectangular diagonal matrix of the same size, whose diagonal elements are the singular values of A
arranged in non-increasing order (starting from the (1, 1) position).
15
Published as a conference paper at ICLR 2019
Lemma 3 (Bhatia (1997), Exercise IV.3.5). For any two matrices A, B of the same size, k Sing(A) -
Sing(B)kσ ≤ kA - Bkσ and k Sing(A) - Sing(B)kF ≤ kA - BkF.
Using Lemma 3, we get:
Lemma 4. Suppose D1 , D2 ∈ Rd×d are non-negative diagonal matrices with non-increasing values
along the diagonal and O ∈ Rd×d is an orthogonal matrix. Suppose that kD1 - OD2 O> kF ≤ ,
for some > 0. Then:
1.	kD1 - OD1O>kF ≤2.
2.	kD1 - D2kF ≤.
Proof. Since D1 and OD2OT are both symmetric positive semi-definite matrices, their singular
values are equal to their eigenvalues. Moreover, the singular values of D1 are simply its diagonal
elements and the singular values of OD2OT are simply the diagonal elements of D2 . Thus by
Lemma 3 we get that kD1 - D2kF ≤ kD1 - OD2OT kF ≤ . Since the Frobenius norm is unitarily
invariant, kD1 - D2 kF = kOD1OT - OD2OT kF , and by the triangle inequality it follows that
kD1 - OD1OT kF ≤ kOD1OT -OD2OTkF+kD1 - OD2OT kF ≤ 2.
□
Lemma 5 below states that if W1, . . . , WN are approximately balanced matrices, i.e. Wj>+1Wj+1 -
Wj Wj> has small Frobenius norm for 1 ≤ j ≤ N - 1, then we can bound the Frobenius distance
betweenW1>:jW1:j and (W1>W1)j (as well as between Wj:N Wj>:N and (WN WN>)N-j+1).
Lemma 5. Suppose that dN ≤ dN-1, d0 ≤ d1, and that for some ν > 0, M > 0, the matrices
Wj ∈ Rdj ×dj-1, 1 ≤ j ≤ N satisfy, for 1 ≤ j ≤ N - 1,
kWj>+1Wj+1-WjWj>kF ≤ν,	(15)
and for 1 ≤ j ≤ N, kWj kσ ≤ M. Then, for 1 ≤ j ≤ N,
3
kW>jWij-(W>Wι)jkF ≤ 2ν ∙ M2(j-1)j2,	(16)
and	3
kWj：NW>n -(WNWN)N-j+1kF ≤ 2V ∙ MMN-j)(N -j + 1)2.	(17)
Moreover, if σmin denotes the minimum singular value of W1:N, σ1,min denotes the minimum sin-
gular value of W1 and σN,min denotes the minimum singular value of WN, then
3	2N
σ2 .____VM2(N-1) N2 ≤ J N,min
σ min DVM	N ≤ ] 2N
2	σ1,min
dN ≥ d0 .
dN ≤ d0 .
(18)
Proof. For 1 ≤ j ≤ N, let us write the singular value decomposition of Wj as Wj = Uj Σj Vj> ,
where Uj ∈ Rdj ×dj and Vj ∈ Rdj-1 ×dj-1 are orthogonal matrices and Σj ∈ Rdj ×dj-1 is diagonal.
We may assume without loss of generality that the singular values of Wj are non-increasing along
the diagonal of Σj. Then we can write (15) as
kVj+1Σj>+1Σj+1Vj>+1-UjΣjΣj>Uj>kF ≤V.
Since the Frobenius norm is invariant to orthogonal transformations, we get that
kΣj>+1Σj+1-Vj>+1UjΣjΣj>Uj>Vj+1kF≤V.
By Lemma 4, we have that kΣj>+1Σj+1-ΣjΣj>kF ≤VandkΣjΣj>-Vj>+1UjΣjΣj>Uj>Vj+1kF ≤
2V. We may rewrite the latter of these two inequalities as
k[ΣjΣj>,Vj>+1Uj]kF= k[ΣjΣj>,Vj>+1Uj]Uj>Vj+1kF= kΣjΣj>-Vj>+1UjΣjΣj>Uj>Vj+1kF ≤2V.
Note that
WjN Wj>N = Wj+1：NUjΣj ∑> U> Wj+l:N.
16
Published as a conference paper at ICLR 2019
For matrices A, B, we have that IlABIIF ≤ ∣∣A∣∣σ ∙ IIBlIF. Therefore, for j + 1 ≤ i ≤ N, we have
that
|Wi：NUi-1(∑i-1∑l1)i-juhw>N - Wi+1.,NUi(∑i∑1)i-j+1 UiWiLNIIF
=kWi+1：NUi (∑i%>Ui-ι(∑i-ι∑3)i-ju3%∑[ - (∑i∑I)i-j+1) UJWi+1：NIf
≤ IWi+1：NUi∑i∣∣σ ∙ I(∑i-1 ∑3)i-j + [%>Ui-1,(∑i-1∑iL1)i-j]Ui-1vi - (∑j∑i)i-j∣F
≤ kWi：N ∣σ (k[⅝τUi-i, (∑i-1∑3) 一 ]∣∣F + k(∑i-1∑3 尸-(∑> ∑i 尸 IIF ).
Next, we have that
i-j-1
IInTUi-ι,(∑i-1∑L1)i-j]kF ≤ X k(∑i-1∑i-1)fcnτUi-ι, ∑i-ι∑iLι](∑i-ι∑iLι)i-j-1-fcIf
k=0
i-j-1
≤ X k(∑i-1∑3)i-j-1kσ ∙knτUi-1, ∑i-1∑i-ι]∣F
k=0
≤ (i - j)∣Wi-i吸i-jT) ∙ 2ν.
We now argue that k(∑i-ι∑[Jk - (∑τ∑i)k∣∣f ≤ V ∙ kM2(k-1). Note that ∣∑i-ι∑i-ι -
∑τ∑i∣∣F ≤ v, verifying the case k = 1. To see the general case, since square diagonal matri-
ces commute, we have that
k(∑i-ι∑3)k-(∑T∑i)k∣F =	(∑i-ι∑3-∑T∑i)∙ (X(∑i-1 ∑3)'(∑τ∑i)k-j)]
k-1
≤ V ∙ X kWi-1 吸∙∣Wi吸IT)
'=0
≤ νkM2(k-1).
It then follows that
kWi：NUi-ι(∑i-ι∑T-ι)i-jU>-iWTn - Wi+1：NUi(∑i∑T)i-j+1UiTWi+1：NkF
≤ kWi：Nkσ ∙ ((i-j)M2(i-j-1) ∙ 2ν + ν(i-j)M2(i-jT))
=kWi：Nkσ ∙ 3ν(i - j)M2(i-j-1).
By the triangle inequality, we then have that
k%：NWTN - Un(∑n∑N)N-j+1UNkF
N
≤ V X kWi：Nkσ ∙ 3(i - j)M2(i-jT)
i=j+1
N
≤ 3ν X (i - j)M2(N-i+1)M2(i-jT)
i=j+1
N	3
=3νM2(N-j) X (i - j) ≤ 3v ∙ M2(N-j) ∙ (N - j + 1)2.	(19)
i=j+i	2
By an identical argument (formally, by replacing W7- with WN-j+ι), We get that
IlWTjWI：j- V1(∑T∑1 )7VTkF ≤ 3V ∙ M2(jT) ∙ j2.	(20)
(19)	and (20) verify (17) and (16), respectively, so it only remains to verify (18).
Letting j = 1 in (19), we get
kWi：NW>N - Un(∑N∑N)nUNkF ≤ 2V ∙ M2(N-1) ∙ N2.	(21)
17
Published as a conference paper at ICLR 2019
Let us write the eigendecomposition of W1:N W1>:N with an orthogonal eigenbasis as W1:N W1>:N =
UΣU>, where Σ is diagonal with its (non-negative) elements arranged in non-increasing order and
U is orthogonal. We can write the left hand side of (21) as kUΣU> - UN(ΣNΣ>N)NUN>kF =
kΣ-U>UN(ΣNΣ>N)NUN>UkF.
By Lemma 4, we have that
k∑ - (∑n∑N)nkF ≤ 3VMMN-I)N2.	(22)
Recall that W ∈ RdN ×d0. Suppose first that dN ≤ d0. Let σmin denote the minimum singular value
of W1:N (so that σm2 in is the element in the (dN, dN) position of Σ ∈ RdN ×dN), and σN,min denote
the minimum singular value (i.e. diagonal element) of ΣN, which lies in the (dN, dN) position of
ΣN. (Note that the (dN, dN) position of ΣN ∈ RdN ×dN -1 exists since dN-1 ≥ dN by assumption.)
Then
(σNmin -σmin)2 ≤ (gVM2(NT)N2y ,
so
σN,min ≥ σm in- 3 VM 2(N T)N 2.
By an identical argument using (20), we get that, in the case that d0 ≤ dN, if σ1,min denotes the
minimum singular value of Σ1, then
σ2Nin ≥ σm in- 3 VM 2(NT)N 2.
(Notice that we have used the fact that the nonzero eigenvalues of W1:N W1>:N are the same as the
nonzero eigenvalues of W>N Wi：N.) This completes the proof of (18).	口
Using Lemma 5, we next show in Lemma 6 that if W1, . . . , WN are approximately balanced, then
an upper bound on ∣∣Wn …Wιkσ implies an upper bound on IlWjl∣σ for 1 ≤ j ≤ N.
Lemma 6. Suppose ν, C are real numbers satisfying C > 0 and 0 < ν ≤ CNN. Moreover suppose
that the matrices W1, . . . , WN satisfy the following:
1.	For1 ≤j ≤ N-1, kWj>+1Wj+1 -WjWj>kF ≤ V.
2.	∣Wn …Wιkσ ≤ C.
Thenfor 1 ≤ j ≤ N, ∣∣W∙∣∣σ ≤ C1/N ∙ 21/(2N).
Proof. For 1 ≤ j ≤ N, let us write the singular value decomposition of Wj as Wj = Uj Σj Vj> ,
where the singular values of Wj are decreasing along the main diagonal of Σj . By Lemma
4, we have that for 1 ≤ j ≤ N - 1, kΣj>+1Σj+1 - Σj Σj> kF ≤ V, which implies that
kΣj>+1Σj+1kσ - kΣjΣj>kσ ≤V.
Write M = max1≤j≤N kWj kσ = max1≤j≤N kΣj kσ. By the above we have that kΣj Σj> kσ ≥
M2 - NV for 1 ≤j ≤ N.
Let the singular value decomposition of W1:N be denoted by W1:N = UΣV>, so that kΣkσ ≤ C.
Then by (17) of Lemma 5 and Lemma 4 (see also (22), where the same argument was used), we
have that
k∑Σ> - (∑N ∑N )n ∣f ≤ 2 VM 2(N T)N 2.
Then
k(∑N ∑N )N kσ ≤ k∑∑>kσ + 2 VM (MN-I))N 2 ≤ |加£>|, + 3 V (∣∑n Σ> ∣σ + VN)N T
N2.
(23)
18
Published as a conference paper at ICLR 2019
Now recall that V is chosen so that V ≤ 302N . Suppose for the purpose of contradiction that there
is some j such that kWjWj>kσ > 21/NC2/N. Then it must be the case that
∣∣ΣNΣN∣∣σ > 21/NC2/N - v ∙ N ≥ (5∕4)1∕NC2/N > v ∙ 30N2,	(24)
where we have used that
21/N -3n≥ 总
for all N ≥ 2, which follows by considering the Laurent series exp(1∕z) = P∞=1 高,which
converges in |z | > 0 for z ∈ C.
We now rewrite inequality (24) as
≤ IςN ςN kσ
-30N2	.
Next, using (25) and (1 + 1∕x)x ≤ e for all x > 0,
2V (k∑N∑Nkσ + vN)N-1 N2 ≤ e230 ∙k∑N∑NkN < 20 ∙k∑N∑NkN.
2	20	20
Since k(ΣN ΣN> )Nkσ = kΣN ΣN> kσN, we get by combining (23) and (26) that
k∑N∑Nkσ < (1 - e∕20)-1/N ∙ k∑∑>∣σ/N ≤ (1 - e∕20)-1/N ∙ C2/N,
(25)
(26)
and since 1 一 e/20 > 1 / (5 / 4) ,it follows that ∣∑n ∑N kσ < (5/4)1/N C2/N, which contradicts (24).
It follows that for all 1 ≤ j ≤ N, kWjWj> kσ ≤ 21/NC2/N. The conclusion of the lemma then
follows from the fact that ∣ W7-Wjr kσ = IlWj∣∣σ.	口
D.2.2 Single-Step Descent
Lemma 7 below states that if certain conditions on W1 (t), . . . , WN (t) are met, the sought-after
descent — Equation (9) — will take place at iteration t. We will later show (by induction) that
the required conditions indeed hold for every t, thus the descent persists throughout optimization.
The proof of Lemma 7 is essentially a discrete, single-step analogue of the continuous proof for
Lemma 1 (covering the case of gradient flow) given in Section 3.
Lemma 7. Assume the conditions of Theorem 1. Moreover, suppose that for some t, the matrices
W1(t), . . . , WN (t) and the end-to-end matrix W (t) := W1:N (t) satisfy the following properties:
1.	kWj(t)kσ ≤ (4∣Φ∣f)1∕N for 1 ≤ j ≤ N.
2.	kW(t)-Φkσ≤kΦkF.
3.	kWjr+1(t)Wj+1(t)-Wj(t)Wjr(t)kF ≤2δfor1 ≤j ≤N-1.
4.
σmin := σmin(W(t)) ≥ c.
Then, after applying a gradient descent update (4) we have that
L(W(t + 1)) - L(W(t)) ≤-η2σmN-1"N ddL(W(t)) 2 .
Proof. For simplicity write M = (4∣Φ∣f)1/N and B = ∣∣Φ∣∣f. We first claim that
< ∙ f
η ≤ min
σ2(N-1)∕N
min
σ2(N-1)∕N
min
σ2(N-1)∕(3N)
min
2MN-2BN, 24 ∙ 2M3N-4N2B , 24N2M4(N-I) , 3.4M6N-8N452)1/3
).
(27)
1
Since c ≤ σmin, for (27) to hold it suffices to have
c2(N-1)/N
c2(N-1)/(3N)
η ≤ mi"] 8∣ΦkFiN-2)/N N, 3 ∙ 211kΦkF(N-1"N N2 , 3 ∙ 26 (kφ∣FN-8)/N )1/3 N 4/3
1
19
Published as a conference paper at ICLR 2019
As the minimum singular value of Φ must be at least c, we must have c ≤ kΦkσ . Since then
kΦckF ≤ kΦckσ ≤ 1，it holds that
c2(N-1)/N
kΦkF(N-1)/N
≤ min{ kΦkF(Nτ"N,
c2(N -1)/(3N)
kφk(8N-8)∕(3N)
,
meaning that it suffices to have
c2(N -1)/N
η ≤ 3 ∙ 211N2kΦkF(N-1"n ,
which is guaranteed by (7).
Next, we claim that
2δ ≤
≤
, ʃ
min
c2(N -1)/N
8 ∙ 24N3kΦ∣∣F(N-2)/N,
.ʃ
min
c2
6 ∙ 24N2kΦkF(NTI)N
σ2(N -1)/N	σ2
U min Umin
8N3M2(N-2) , 6N2M2(N-1)
(28)
)
]
The second inequality above is trivial, and for the first to hold, since c ≤ kΦkF , it suffices to take
c2
≤ 128 ∙ N3 ∙ ∣∣ΦkF(NT)/N,
which is guaranteed by the definition of δ in Theorem 1.
Next we continue with the rest of the proof. It follows from (14) that18
W(t+1) -W(t)
j=N	dL
∏ (Wj(t) - ηW>+ιN(t)行(W(t))w>j-1(t)J - Wi:N(t)
-η (X Wj + 1:N Wj+l:N ⑴-W (W ⑴)W>j-1 ⑴WIj-I⑴)+㈤,	(29)
where (?) denotes higher order terms in η. We now bound the Frobenius norm of (?). To do this,
note that since L(W) = 2 ∣∣W — Φ∣∣F,孺(W(t)) = W(t) — Φ. Then
k(?)kF ≤
N
Xηk
k=2
M k(N -1)+N -k
秣(W (ULi秣(W⑻
F
Nk
ηM2N-2N
得(W (t))
N
X(ηM N-2BN )k-1
F k=2
η ∙ (2ηM3N-4N2B) •
dW (W ⑻
(30)
≤
≤
F
18Here, for matrices Ai,...,Ak such that AK Aκ-ι ∙∙∙ Ai is defined, We write QI=K Aj :=
AKAκ-ι …Ai.
20
Published as a conference paper at ICLR 2019
where the last inequality uses ηMN-2BN ≤ 1/2, which is a consequence of (27). Next, by Lemma
5 with ν = 2δ,
∣∣ N	dL
£Wj+i：N Wj+i：N (t) dW (W(t))W>j-1(t)Wij-1(t)
∣ j=1
N	dL	∣∣
-E(WNWN)N-j(W(t))(W>W1)j-1
≤
j=1
N
X(Wj+1:N Wj>+1:N (t) - (WNWN> )N-j
F
)ddW (W (t))W>j-1(t)Wij-1(t)
+
j=1
N	dL
E(WNWN)N-jdW(W(t))(W>j-1Wij-1 - (W>Wι)j-1)
F
j=1
黑(WTIF
F
≤
N
32δ ∙ M2(N-j)(N - j)2M2(j-1) + X 32δ ∙ M2(j-2)(j - 1)2M2(N-j)
j=2
≤
余(W(t))∣∣	∙ 2δN3MMN-2).
Next, by standard properties of tensor product, we have that
Vec(X (WN WN)N-j ddW (W (t))(W>Wιj-)
N	dL
=E ((W>Wι)j-1 乳(WNWN)N-j) vec (丽(W(t))).
j=1
Let us write eigenvalue decompositions W1> W1 = UDU> , WN WN> = VEV> . Then
N
X ((W> W1)j-1 乳(WN WN)N-j)
j=1
N
= X (UDjTU> 0 VEN-jV>)
j=1
(U ㊈ V) (X DjT ㊈ EN-j I (U ㊈ V)>
= OΛO>,
with O = U 0 V, andΛ = PjN=1 Dj-1 0 EN-j. As W1 ∈ Rd1×d0, and WN ∈ RdN×dN-1, then
D ∈ Rd0×d0 , E ∈ RdN ×dN, so Λ ∈ Rd0dN×d0dN. Moreover note that Λ D0 0 EN-1 + DN-1 0
E0 = Id0 0 EN-1 + DN-1 0 IdN . If λD denotes the minimum diagonal element of D and λE
denotes the minimum diagonal element of E, then the minimum diagonal element of Λ is therefore
at least λND-1 + λEN-1. But, it follows from Lemma 5 (with ν = 2δ) that
max{λN,λN} ≥ σmin - 22δM2(NT)N2 ≥ 3σ22le/4,
where the second inequality follows from (28). Hence the minimum diagonal element of Λ is at
least (σm,n∕(4∕3))(N-1)/N ≥，3α小/(4/3).
It follows as a result of the above inequalities that if we write E(t) = Vec(W(t + 1)) - Vec(W(t)) +
η(OΛO>)vec (ddW(W(t))),then
kE(t)k2
Vec(W(t + 1)) — Vec(W(t)) + η(OΛO>)vec (J^(W(t))) ||
≤η
dL
--(W(t))	∙ (2ηM3N-4N2B + 2δN3M2(N-2)
y-l ∖ Λ /
dW
).
F
21
Published as a conference paper at ICLR 2019
Then we have
≤
L(W(t+1)) - L(W (t))
vec(d⅛L(W(t)))> vec (W(t + 1) - W(t)) + 2 ∣∣W(t + 1) - W(t)kF
η (-vec (焉L(W(t)))> (OΛO>)vec (焉L(W(t))
+ 1 Vec (焉L(W(t)))> E⑴
+1 kW(t + 1) - W(t)kF
≤
η-
箱(W⑼
2 02(NT)∕N
σmin
F	4/3
+磊L(W⑼
2ηM3N-4N2B + 2δN3M2(N-2)
2
F
+1 kW(t + 1) - W(t)kF,
where the first inequality follows since L(W) = 21∣ W 一 Φ∣F is 1-smooth as a function of W.
Next, by (29) and (30),
kW(t+1)-W(t)k2F
≤
2η2 ∙ NNMMN-1) ∙ _dL(W(t))
dW
)2+2η2 ∙(2ηM3N-4N2B)2 ∙
F
dW (W ⑻
2
2
F
Thus
2η2
ddW(W (J∙ (N 2
M4(N-1) + (4η2M6N-8N4B2) .
(31)
L(W(t+ 1)) - L(W (t))
η ∙ ddW(W⑻
2(N -1)/N
节/L + 2ηM 3N-4N 2B + 2δN 3M MN-2)
+η∙ (N2MA(N-1) + 4η2M6N-8N4B2)).
By (27, 28), which bound η, 2δ, respectively, we have that
L(W(t+1)) - L(W (t))
2 σ σ2(N-1)∕N
I min_______
4/3
02(N-1)∕N	σ2(N-1)∕N	σ2(N-1)/N	σ2(N-1)∕N
+ min + min + min + min
D.2.3
-1 σ2(N-1)/N η
2 min
(32)
Proof of Lemma 2
≤
F
2
F
—
≤
η •秣(W⑼
—
F
秣(W⑻
2
F
□
Proof of Lemma 2. We use induction on t, beginning with the base case t = 0. Since the weights
W1 (0), . . . , WN (0) are δ-balanced, we get that A(0) holds automatically. To establish B(0), note
that since Wi：N (0) has deficiency margin C > 0 with respect to Φ, we must have |Wi：N (0)一Φ∣f ≤
σmin (Φ) ≤ ∣∣Φ∣f ,meaning that L1(Wi：N (0)) ≤ 1 ∣∣Φ∣F.
Finally, by B(0), which gives IW (0) 一 ΦIF ≤ IΦIF, we have that
kW (0)kσ ≤ kW (0)kF ≤ kW(0) - ΦkF + kΦkF ≤ 2kΦkF.
(33)
To show that the above implies C(0), we use condition A(0) and Lemma 6 with C = 2IΦIF and
ν = 2δ. By the definition of δ in Theorem 1 and since c ≤ IΦIF, we have that
2δ ≤
c2
kΦk%N
128 ∙ N3 ∙∣∣Φ∣IF(N-1)/N = 128N3
C2
WF
kΦk%N
30N2 ,
(34)
<
22
Published as a conference paper at ICLR 2019
as required by Lemma 6. As A(0) and (33) verify the preconditions 1. and 2., respectively, of
Lemma 6, it follows that for 1 ≤ j ≤ N, kWj(t)kσ ≤ (2∣∣Φ∣∣f)1/n ∙ 21/(2N) < (4∣∣Φ∣∣f)1/n,
verifying C (0) and completing the proof of the base case.
The proof of Lemma 2 follows directly from the following inductive claims.
1.	A(t), B(t), C(t) ⇒ B(t + 1). To prove this, we use Lemma 7. We verify first
that the preconditions hold. First, C(t) immediately gives condition 1. of Lemma
7. By B(t), we have that kW (t) - Φkσ ≤ kW (t) - ΦkF ≤ kΦkF, giving
condition 2. of Lemma 7. A(t) immediately gives condition 3. of Lemma 7. Fi-
nally, by B(t), we have that LN(W1(t), . . . , WN (t)) ≤ LN(W1(0), . . . , WN (0)), so
σmin (W1:N (t)) ≥ c by Claim 1. This verifies condition 4. of Lemma 7. Then
Lemma 7 gives that LN (W1 (t + 1), . . . , WN(t + 1)) ≤ LN(W1(t), . . . , WN (t)) -
1 σmin(W(t))2(N-1"nη IlddWL(W(t))∣∣F, establishing B(t + 1).
2.	A(0), A0(1),..., A0(t), A(t), B(0),..., B(t), C(t) ⇒ A(t+ 1),A0(t+ 1). To prove this,
note that for 1 ≤ j ≤ N - 1,
Wj>+1(t + 1)Wj+1(t + 1) - Wj(t + 1)Wj>(t + 1)
=(wj+ι(t) - ηWιj(t)ddW(w(t))>wj+2:N(B
• (Wj+ι(t) -ηWj+2:N(t)dWW(W(t))W>j(B
-(Wj(t) - ηW>+1N(t)dWW(W(t))w>j-ι(t))
. (Wj>(t) - ηW1j-1(t)dWW(W(t))τWj+v,N(t)).
By B(0), . . . , B(t), kW1:N (t) - ΦkF ≤ kΦkF. By the triangle inequality it then follows
that kW1:N (t)kσ ≤ 2kΦkF. Also A(t) gives that for 1 ≤ j ≤ N - 1, kWj(t)Wj>(t) -
Wj>+1 (t)Wj+1 (t)kF ≤ 2δ. By Lemma 6 with C = 2kΦkF , ν = 2δ (so that (34) is
satisfied),
∣∣Wj>+1(t + 1)Wj+1(t + 1) - Wj(t + 1)Wj>(t + 1)∣∣F
≤ kWj+1(t)Wj+1(t) - Wj(t)wjτ(t)kF + η2 dWW(w(t))	. ddWW(w(t))
Fσ
. a%+?：N (t)kσ kwi：j (t)kσ + kW1j-1kσ1明+「N kσ)
≤ kWjτ+1(t)Wj+1(t) -Wj(t)Wjτ(t)kF
+4η2 dL∕ (W(t))	M(W(t))⑵囹山)2(Nτ"N.	(35)
∣ dW ∣	∣ dW ∣
Fσ
In the first inequality above, we have also used the fact that for matrices A, B such that AB
is defined, kABkF ≤ kAkσ kBkF. (35) gives us A0(t + 1).
We next establish A(t + 1). By B(i) for 0 ≤ i ≤ t, We have that ∣∣滁(W(i))∣∣F =
kW-ΦkF ≤ kΦkF. Using A0(i) for 0 ≤ i ≤ t and summing over i gives
kWjτ+1(t + 1)Wj+1(t + 1) - Wj(t + 1)Wjτ(t + 1)kF
≤ kWjτ+1(0)Wj+1(0) -Wj(0)Wjτ(0)kF
t ∣	∣2
+4(2∣∣Φ∣∣f)2(n-1"n . η2 X dW(W(i))	.	(36)
i=0 dW	F
Next, by B(0), . . . , B(t), we have that L(W (i)) ≤ L(W (0)) for i ≤ t. Since W(0) has
deficiency margin of c and by Claim 1, it then follows that σmin (W(i)) ≥ c for all i ≤ t.
23
Published as a conference paper at ICLR 2019
Therefore, by summing B(0), . . . , B(t),
t2
2c2(N-1"Nη X dLw(i)
i=0	F
≤	1 η X σmin(W (i))2(N FN dW (W (i))
2 i=0	dW
≤ L(W (0)) - L(W (t))
≤ L(W(0)) ≤ 1 kΦkF.
Therefore,
t
4(2kΦkF)2(NT)/N η2 X
i=0
≤
≤
2(N-1)/Nrl	kφkF
F	ηc2(N -IMN
16kΦk
16kΦkF(N-1)/N
1
3 ∙ 211 ∙ N3
c(4N-2)/N
1倒铲—4”N
kΦkF
c2(N-1)/N
(37)
≤
c2
256N 3kΦ∣∣F(N FN
δ,
where (37) follows from the definition of η in (7), and the last equality follows from defi-
nition of δ in Theorem 1. By (36), it follows that
kWj>+1 (t + 1)Wj+1(t + 1) - Wj(t + 1)Wj>(t + 1)kF ≤ 2δ,
verifying A(t + 1).
3.	A(t), B(t) ⇒ C(t). We apply Lemma 6 with ν = 2δ and C = 2kΦkF. First, the triangle
inequality and B (t) give
kW1:N (t)kσ ≤ kΦkσ + kΦ — W1:N (t)kσ ≤ ∣∣Φ∣∣F + P ∙ L(W1：N (t)) ≤ 2∣∣Φ∣∣f ,
verifying precondition 2. of Lemma 6. A(t) verifies condition 1. of Lemma 6, so for
1 ≤ j ≤ N, kWj(t)kσ ≤ (4kΦkF)1/N, giving C(t).
The proof of Lemma 2 then follows by induction on t.
□
D.3 Proof of Theorem 2
Theorem 2 is proven by combining Lemma 8 below, which implies that the balanced initialization
is likely to lead to an end-to-end matrix W1:N (0) with sufficiently large deficiency margin, with
Theorem 1, which establishes convergence.
Lemma 8. Letd ∈ N, d ≥ 20; b2 > b1 ≥ 1 be real numbers (possibly depending on d); andΦ ∈ Rd
be a vector. Suppose that μ isa rotation-invariant distribution19 over Rd with a well-defined density,
such that, for some 0 < < 1,
PV ~μ
≤kVk2≤
≥ 1 - .
Then, with probability at least (1 一 E) ∙ 3-4F(2/VZbI), V Will have deficiency margin ∣∣Φ∣∣2∕(b2d)
with respect to Φ.
19Recall that a distribution on vectors V ∈ Rd is rotation-invariant if the distribution of V is the same as
the distribution of OV , for any orthogonal d × d matrix O. If V has a well-defined density, this is equivalent
to the statement that for any r > 0, the distribution of V conditioned on kV k2 = r is uniform over the sphere
centered at the origin with radius r.
24
Published as a conference paper at ICLR 2019
The proof of Lemma 8 is postponed to Appendix D.5, where Lemma 8 will be restated as Lemma 16.
One additional technique is used in the proof of Theorem 2, which leads to an improvement in
the guaranteed convergence rate. Because the deficiency margin of W1:N (0) is very small, namely
O(∣∣Φ∣∣2∕d0) (which is necessary for the theorem to maintain constant probability), at the begin-
ning of optimization, `(t) will decrease very slowly. However, after a certain amount of time, the
deficiency margin of W1:N (t) will increase to a constant, at which point the decrease of `(t) will
be much faster. To capture this acceleration, we apply Theorem 1 a second time, using the larger
deficiency margin at the new “initialization.” From a geometric perspective, we note that the matri-
ces W1(0), . . . , WN (0) are very close to 0, and the point at which Wj(0) = 0 for all j is a saddle.
Thus, the increase in `(t) - `(t+ 1) over time captures the fact that the iterates (W1(t), . . . , WN (t))
escape a saddle point.
Proof of Theorem 2. Choose some a ≥ 2, to be specified later. By assumption, all entries of the
end-to-end matrix at time 0, W1:N (0), are distributed as independent Gaussians of mean 0 and
standard deviation S ≤ kΦ∣∣2∕∙∖∕ad0. We will apply Lemma 8 to the vector Wi：N(0) ∈ Rd0. Since
its distribution is obviously rotation-invariant, in remains to show that the distribution of the norm
kW1:N (0)k2 is not too spread out. The following lemma — a direct consequence of the Chernoff
bound applied to the χ2 distribution with d0 degrees of freedom — will give us the desired result:
Lemma 9 (Laurent and Massart (2000), Lemma 1). Suppose that d ∈ N and V ∈ Rd is a vector
whose entries are i.i.d. Gaussians with mean 0 and standard deviation s. Then, for any k > 0,
P [∣∣Vk2 ≥ S2 (d + 2k + 2√kd)i	≤ exp(-k)
P [∣∣V∣∣2 ≤ s2 (d — 2√kdj	≤ exp(-k).
By Lemma 9 with k = d0∕16, we have that
P 2 ° ≤ IIVI∣2 ≤ 2s2d0 ≥ 1 - 2eχp(-do/16).
We next use Lemma 8, with b1 = ∣Φ∣22∕(2S2d20), b2 = 2∣Φ∣22∕(S2d20); note that since a ≥ 2,
b1 ≥ 1, as required by the lemma. Lemma 8 then implies that with probability at least
(1 - 2 exp(-d0∕16))
(38)
W1:N (0) will have deficiency margin S2d0∕2IΦI2 with respect to Φ.
initialization (Procedure 1) W1 (0), . . . , WN (0) are 0-balanced. Since
tion on η gives
≤	(s2d0)4-2/N
η — 24 ∙ 6144N3kΦk20-6∕N,
By the definition of balanced
24 ∙ 6144 < 105, our assump-
(39)
so that Equation (7) holds with C = 2kφ0^. The conditions of Theorem 1 thus hold with probability
at least that given in Equation (38). In such a constant probability event, by Theorem 1 (and the fact
that a positive deficiency margin implies L1(Wi：N(0)) ≤ 2 ∣∣Φ∣∣2), if we choose
t0 ≥ η-i (当广/Nin(4),	(40)
S2d0
then L1(Wi：N(to)) ≤ 8∣∣Φ∣2, meaning that ||Wi：N(to) - Φ∣∣2 ≤ 2∣∣Φ∣∣2 = ∣∣Φ∣∣2 - 1 σmin(Φ).
Moreover, by condition A(t0) of Lemma 2 and the definition of δ in Theorem 1, we have, for
1 ≤ j ≤ N- 1,
IWjT+1(to)Wj+1(to) - Wj(to)WjT(to)IF ≤
2s4d0	s4 d0
⑵∣Φ∣∣2)2 ∙ 256N3kΦk2-2∕N - 512N3|倒|2-2/" .
(41)
25
Published as a conference paper at ICLR 2019
We now apply Theorem 1 again, verifying its conditions again, this time with the initialization
(W1(t0), . . . , WN (t0)). First note that the end-to-end matrix W1:N (t0) has deficiency margin c =
∣∣Φk2∕2 as shown above. The learning rate η, by Equation (39), satisfies Equation (7) with C =
∣∣Φk2∕2. Finally, since
s4d2	≤	kΦ∣WN	≤ kΦk"N(1/2)2
512N3kΦ|4-2/N ≤ (a2d2) ∙ 512N3 ≤	256N3
for d0 ≥ 2, by Equation (41), the matrices W1 (t0), . . . , WN(t0) are δ-balanced with δ
k^YsN/2) . Iteration to thus satisfies the conditions OfTheorem 1 with deficiency margin ∣∣Φ∣2∕2,
meaning that for
T -t0 ≥η-1
• 22-2/N ∙∣∣Φ∣Wn-2 ln
(42)
We will have '(T) ≤ e. Therefore, by Equations (40) and (42), to ensure that '(T) ≤ e, We may take
T ≥ 4η-1
ln(4) (W J 2/N + ∣Φk2∕N—2 ln(kΦ∣2∕(8e))
Recall that this entire analysis holds only with the probability given in Equation (38). As
limd→∞(1 - 2exp(-d∕16)) = 1 and lima→∞(3 - 4F(2,2∕a))∕2 = 1/2, for any 0 < p < 1/2,
there exist a, d00 > 0 such that for d0 ≥ d00, the probability given in Equation (38) is at least p. This
completes the proof.
□
In the context of the above proof, we remark that the expressions 1 - 2 exp(-d0∕16) and (3 -
4F(2,2∕a))∕2 converge to their limits of 1 and 1∕2, respectively, as do, a → ∞ quite quickly. For
instance, to obtain a probability of greater than 0.25 of the initialization conditions being met, we
may take do ≥ 100, a ≥ 100.
D.4 Proof of Claim 2
We first consider the probability of δ-balancedness holding between any two layers:
Lemma 10. Suppose a, b, d ∈ N and A ∈ Ra×d, B ∈ Rd×b are matrices whose entries are dis-
tributed as i.i.d. Gaussians with mean 0 and standard deviation s. Then for k ≥ 1,
P h∣∣ATA — BBTllF ≥ ks2p2d(a + b)2 + d2(a + b)] ≤ 1∕k2.	(43)
Proof. Note that for 1 ≤ i, j ≤ d, let Xij be the random variable (ATA - BBT)ij, so that
Xij = (ATA — BBT)ij =〉： A'iA'j —〉： Bir Bjr.
1≤'≤a	1≤r≤b
If i 6= j , then
E[X2] = X E[A2iA2j]+ X E[B2rB2r] = (a + b)s4∙
1≤'≤a	1≤r≤b
We next note that for a normal random variable Y of variance s2 and mean 0, E[Y4] = 3s4. Then if
i =j,
E[X2] = s4 • (3(a+b)+a(a— 1) +b(b— 1)—ab) ≤ s4((a + b)2 +2(a+b)).
Thus
E[∣AT A — BBT∣2F] ≤ s4(d((a + b)2 + 2(a + b)) +d(d— 1)(a + b))
≤ s4(2d(a + b)2 +d2(a+b)).
Then (43) follows from Markov,s inequality.	口
Now the proof of Claim 2 follows from a simple union bound:
26
Published as a conference paper at ICLR 2019
Proof of Claim 2. By (43) of Lemma 10, for each 1 ≤ j ≤ N - 1, k ≥ 1,
PhkWj+iWj+1 - WjWjTkF≥ks2p10dmaχi ≤ 1/k2.
By the union bound,
P h∀ι ≤ j ≤ N -1, kwj+1Wj+1 - WjWTkF ≤ ks2pi0dmaχi ≥ 1 - N/k2,
and the claim follows with δ = ks2 ^10d3naχ.	口
D.5 Proof of Claim 3
We begin by introducing some notation. Given d ∈ N and r > 0, we let Bd(r) denote the open
ball of radius r centered at the origin in Rd. For an open subset U ⊂ Rd, let ∂U := U\U be its
boundary, where U denotes the closure of U. For the special case of U = Bd(r), We will denote
by Sd(r) the boundary of such a ball, i.e. the sphere of radius r centered at the origin in Rd. Let
Sd := Sd(1) and Bd := Bd(1). There is a well-defined uniform (Haar) measure on Sd (r) for all
d, r, which we denote by σd,r; we assume σd,r is normalized so that σd,r(Sd(r)) = 1. Finally, since
in the context of this claim we have dN = 1, we allow ourselves to regard the end-to-end matrix
W1:N ∈ R1×d0 as both a matrix and a vector.
To establish Claim 3, we will use the following low-degree anti-concentration result of Carbery and
Wright (2001) (see also Lovett (2010); Meka et al. (2016)):
Lemma 11 (Carbery and Wright (2001)). There is an absolute constant C0 such that the following
holds. Suppose that h is a multilinear polynomial of K variables X1, . . . , XK and of degree N.
Suppose that X1, . . . , XK are i.i.d. Gaussian. Then, for any > 0:
P h∣h(Xι,…,Xk )| ≤ e ∙ PVar[h(Xι,...,Xκ)] ] ≤ CoNe1N.
The below lemma characterizes the norm of the end-to-end matrix W1:N following zero-centered
Gaussian initialization:
Lemma 12. For any constant 0 < C2 < 1, there is an absolute constant C1 > 0 such that
the following holds. Let N, d0, . . . , dN-1 ∈ N. Set dN = 1. Suppose that for 1 ≤ j ≤ N,
Wj ∈ Rdj×dj-1 are matrices whose entries are i.i.d. Gaussians of standard deviation s and mean
0. Then
P s2Ndi …dN-1 (ɪ)	≤kWi:Nk2 ≤ Cιd2dι …dN-is2N ≥ C2.
C1 N
Proof. Let f(W1, . . . , WN) = kW1:N k22, so that f is a polynomial of degree 2N in the entries of
W1 , . . . , WN . Notice that
do / di	dN-1	∖ 2
f (W1, . . . , WN) = X(X …X (WN )1,iN-i (WN-I)iΝ-1,iΝ-2 …(WI)ii,io I .
i0=1 i1=1	iN-1=1
For 1 ≤ i0 ≤ d0, set
d1	dN -1
gio (w1,∙∙∙,wN )= X …X (WN )1,iN-1 (WN-1)iN-i,iN-2 …(WI)il,i0 ,
i1=1	iN-1=1
so that f = Pido=1 gi2o. Since each gio is a multilinear polynomial in W1, . . . , WN, we have that
E[gio (W1, . . . , WN)] = 0 for all 1 ≤ i0 ≤ d0. Also
Var[gio(W1,...,WN)] = E[gio(W1,...,WN)2]
d1	dN -1
=X …X E [(WN )2,iN-1 (WN-1)2N-1,iN-2 …(WI)21,io]
i1=1	iN-1=1
=d1d2 …dN-1s2N.
27
Published as a conference paper at ICLR 2019
It then follows by Markov’s inequality that for any k ≥ 1, P[g2o ≥ ks2Ndi …dN-1] ≤ 1/k. For
any constant B1 (whose exact value will be specified below), it follows that
P[f (Wi,. . . , WN)≥Bid0did2 …dN-is2N]
d0
=P X gio (Wi,...,Wn )2≥Bid2did2 …dN-2S2n
i0=1
≤ do ∙ P[g1(W1,..., WN )2≥B1d0d1 …d，N-is2N ]
≤ 1/B1.	(44)
Next, by Lemma 11, there is an absolute constant C0 > 0 such that for any > 0, and any 1 ≤ i0 ≤
d0,
P [“(Wb ...,Wn )| ≤ eN √s2N di ∙∙∙ dN-i i ≤ CoNe.
Since f2 ≥ gi2 for each io, it follows that
Pff (Wi,...,Wn ) ≥ e2N s2N di …dN —i] ≥ 1 - CoNe.	(45)
Next, given 0 < C2 < 1, choose e = (1 - C2)/(2CoN), and Bi = 2/(1 - C2). Then by (44) and
(45) and a union bound, we have that
P
1 - C2 )	s2Ndi …d，N-i ≤ f (Wi,..., WN) ≤	2	S2Ndθdi …d，N-i
2Co N	1 - C2
≥ C2 .
The result of the lemma then follows by taking Ci
□
max {τ⅛, ι2⅜}.
Lemma 13. Let N, do, . . . , dN-i ∈ N, and set dN = 1. Suppose Wj ∈ Rdj ×dj-1 for 1 ≤ j ≤ N,
are matrices whose entries are i.i.d. Gaussians with mean 0 and standard deviation s. Then, the
distribution of Wi:N is rotation-invariant.
Proof. First we remark that for any orthogonal matrix O ∈ Rd0 ×d0, the distribution of Wi is the
same as that of WiO. To see this, let us denote the rows of Wi by (Wi)i, . . . , (Wi)d1, and the
columns of O by Oi, . . . , Od0 . Then the (ii, io) entry of WiO, for 1 ≤ ii ≤ di, 1 ≤ io ≤ do is
h(Wi)i1 , Oi0i, which is a Gaussian with mean 0 and standard deviation s, since kOi0 k2 = 1. Since
hOi0, Oi00 i = 0 for io 6= i0o, the covariance between any two distinct entries of WiO is 0. Therefore,
the entries of Wi O are independent Gaussians with mean 0 and standard deviation s, just as are the
entries of Wi .
But now for any matrix O ∈ Rd0×d0, the distribution of Wi:N O is the distribution of
WNWN-i …W2(WiO), which is the same as the distribution of WNWN-i …W2Wi = Wi：N,
since Wi, W2,..., Wn are all independent.	口
For a dimension d ∈ N, radius r > 0, and 0 < h < r, a (d, r)-hyperspherical cap of height h is a
subset C ⊂ Bd (r) of the form {x ∈ Bd (r) : hx, ui ≥ r - h}, where u is any d-dimensional unit
vector. We define the area ofa (d, r)-hyperspherical cap of height h —C — tobe σd,r(∂C ∩Sd(r)).
Lemma 14. For d ≥ 20, choose any 0 ≤ h ≤ 1. Then, the area of a (d, 1)-hyperspherical cap of
height h is at least
3 - 4F((1 - h)√d-3)
.
2
Proof. In Chudnov (1986), it is shown that the area of a (d, 1)-hyperspherical cap of height h is
given by I-Cd-"Cd-2⑼,where
Cd(h) := Z i-h(1 -
o
t2)(d-i)/2dt.
28
Published as a conference paper at ICLR 2019
Next, by the inequality 1 - t2 ≥ exp(-2t2) for 0 ≤ t ≤ 1/2,
Z (1 - t2)(d-3)/2dt ≥
≥
厂exP C r)力
P^ ∙ 2F(PdF)- 1
pπ∕(d- 3) ∙ 1- 2eχp(-(d- 3)/4),
(46)
where the last inequality follows from the standard estimate F(x) ≥ 1 - exp(-x2∕2) for x ≥ 1.
Also, since 1 - t2 ≤ exp(-t2) for all t,
/ 1-h(1- t2)(d-3)∕2dt ≤ /1-h exp ( -t2(d- 3)卜
=P2∏∕(d-3) ∙ 2F((I- h)[)- 1.	(47)
Therefore, for d ≥ 20, by (46) and (47),
1 - Cd—2(h)/Cd—2(0)	≥
2
≥
≥
1 _ √2∙(2F((1-h)√d-3)-1)
1	— 2 exp( —(d—3)/4)
2
1 - √2 ∙ (2F((1 - h)√d-3) - 1) ∙ (1+4exp(-(d - 3)/4))
2
3	- 4F ((1 - h)√d-3)
2	,
where the second inequality has used 1/(1 - y) ≤ 1 + 2y for all 0 < y < 1/2 (and where
y = 2exp((-(d - 3)/4)) < 2exp(-17∕4) < 1/2), and the final inequality uses 1 + 4exp(-(d -
3)/4) ≤ √2 for d ≥ 20. The above chain of inequalities gives us the desired result.	□
Lemma 15. Let d ∈ N, d ≥ 20; a ≥ 1 be a real number (possibly depending on d); and Φ ∈ Rd be
some vector. Set r = ∣∣Φ∣∣2/√od, and suppose that V ∈ Sd(r) is drawn according to the uniform
measure. Then, with probability at least 3-4Fg2∕λZa), V will have deficiency margin ||Φk2/(ad)
with respect to Φ.
Proof. By rescaling, We may assume without loss of generality that kΦ∣∣2 = 1, so that r = 1/Vad.
Let D denote the intersection of Bd(r) with the open d-ball of radius 1 - 1/(ad) centered at Φ. Let
C ⊂ Bd(r) denote the (d, r)-hyperspherical cap of height r ∙(1 - 2/(√od)) = r - 2/(ad) whose
base is orthogonal to the line between 0 and Φ (see Figure 2). Note that σd,r(∂D ∩ Sd(r)), the Haar
measure of the portion of ∂D intersecting Sd(r), gives the probability that V belongs to the boundary
of D. By Lemma 14 above (along with rescaling arguments), since d ≥ 20, σd,r(∂C ∩ Sd(r)) ≥
2 ∙ (3 - 4F(2,√α)), and therefore V ∈ ∂C with at least this probability.
We next claim that C ⊆ D. To see this, first let T ⊂ Rd denote the (d - 1)-sphere of radius
1 - 1/(ad) centered at Φ (see Figure 2). Let P be the intersection of T with the line from 0 to Φ,
and Q denote the intersection of this line with the unique hyperplane of codimension 1 containing
T ∩ ∂Bd(r) — we denote this hyperplane by H. If we can show that kP - Qk2 ≤ 1/(ad), then it
follows that C lies entirely on the other side of H as 0, which will complete the proof that C ⊆ D.
The calculation of kP - Qk2 is simply an application of the law of cosines: letting θ be the angle
determining the intersection of ∂Bd(r) and T (see Figure 2), note that
(1 — 1/(ad))2 = r2 + 12 — 2r cos θ = 1/(ad) + 1 — 2/√ɑd ∙ cos(θ),
d(P, Q) = r cosθ — 1/(ad) = ；(1/(ad) — 1/(a2d2)) < 1/(ad),
as desired.
29
Published as a conference paper at ICLR 2019
Figure 2: Figure for proof of Lemma 15. The dashed region denotes D. Not to scale.
Using that C ⊆ D, we continue with the proof. Notice the fact that C ⊆ D is equivalent to ∂C ∩
Sd(r) ⊆ ∂D ∩ Sd(r), by the structure of C and D. Since the probability that V lands in ∂C is at
least -g2/Va), this lower bound applies to V landing in ∂D as well. Since all V ∈ ∂D have
distance at most 1 - 1 /(ad) from Φ, and since σmin(Φ) = ∣∣Φk2 = 1, it follows that for any
V ∈ ∂D, k V - Φ∣2 ≤ σmin(Φ) - 1∕(ad). Therefore, with probability of at least 3--22/Va), V
has deficiency margin ∣ Φ12∕(ad) with respect to Φ.	□
Lemma 16 (Lemma 8 restated). Let d ∈ N, d ≥ 20; b2 > b1 ≥ 1 be real numbers (possibly
depending on d); and Φ ∈ Rd be a vector. Suppose that μ is a rotation-invariant distribution over
Rd with a well-defined density, such that, for some 0 < < 1,
PV〜μ
≤ ∣V∣2 ≤
≥ 1 - .
Then, with probability at least (1 — e) ∙ 3-4'(2/VZbI), V Will have deficiency margin ∣∣Φk2∕(b2d)
with respect to Φ.
Proof. By rescaling we may assume that ∣Φ∣2 = 1 without loss of generality. Then the deficiency
margin of V is equal to 1 -IlV - Φ∣∣2. μ has a well-defined density, so We can set μ to be the
30
Published as a conference paper at ICLR 2019
probability density function of ∣∣ V∣∣2. Since μ is rotation-invariant, We can integrate over spherical
coordinates, giving
P[1- ∣V-Φ∣2 ≥ 1/(b2d)]
厂 P[1 - k V - Φ∣2 ≥ 1∕(b2d) IkVk2 = r]μ(r)dr
0
≥
≥
≥
i∕(√b1d) 3 — 4F(2r√d)
/
1∕∕√bbdd')
μ(r)dr
3 - 4F(2∕√b1)
2
3 — 4F (2∕√b1)
/i/(VbId)
•	μ(r)dr
∙^i∕(√½d)
, (I - E),
2
2
where the first inequlaity used Lemma 15 and the fact that the distribution of V conditioned on
∣V∣2 = r is uniform on Sd(r).
□
Now we are ready to prove Claim 3:
ProofofClaim 3. We let W ∈ R1×d0 ` Rd0 denote the random vector Wi：N; also let μ denote
the distribution of W, so that by Lemma 13, μ is rotation-invariant. Let Ci be the constant from
Lemma 12 for C2 = 999/1000. For some a ≥ 105, the standard deviation of the entries of each Wj
is given by
s
kΦk2
• • • dN-iCi
1/(2N)
(48)
Then by Lemma 12,
P -B
C1N
2N ≤∣Wk2 ≤*2
ad0
999
≥ 1000.
Then Lemma 16, With d = d0, bi = a and b2 = ad02Ci • (CiN)2N, implies that With probability at
least iO00 • 3-4F22∕√a), W has deficiency margin kΦ∣∣2∕(ad3C2N+iN2N) with respect to Φ. But
a ≥ 105 implies that this probability is at least 0.49, and from (48),
kΦk2
s2Ndi …dN-ι
ad0C2N +iN2N = ∣Φ∣2(CiN)2N .
(49)
Next recall the assumption in the hypothesis that s≥ C1N(c ∙∣Φk2/(dι …dN-i))1/2NThenthe
deficiency margin in (49) is at least
(ClN(c ∣Φ∣2 /(dι …dN-IFgN)『N di …dN-1
∣Φ∣2(C1N)2N
c,
completing the proof.
□
D.6 Proof of Claim 4
Proof. The target matrices Φ that Will be used to prove the claim satisfy σmin (Φ) = 1. We may
assume Without loss of generality that c ≥ 3/4, the reason being that if a matrix has deficiency
margin c With respect to Φ and c0 < c, it certainly has deficiency margin c0 With respect to Φ.
We first consider the case d = 1, so that the target and all matrices are simply real numbers; We
Will make a slight abuse of notation in identifying 1 × 1 matrices With their unique entries. We set
Φ = 1. For all choices of η, We Will set the initializations Wi(0), . . . , WN (0) so that Wi:N (0) = c.
Then
kWi:N(0) - Φ∣∣F = |Wi：N(0) - Φ∣ = 1 - C = σmin(Φ) - C,
31
Published as a conference paper at ICLR 2019
so the initial end-to-end matrix W1:N (0) ∈ R1×1 has deficiency margin c. Now fix η. Choose
A ∈ R with
2	2	/20 ∙ 102N-1∖1∕(2N-2))
A = max {pnN, n(1 - C)C(N-1)/N , 2000, 20/n, (	n2N	J	ʃ .	(5O)
We will set:
Wj(0)
Ac1/N
1 ≤ j ≤ N/2
c1/N /A : N/2 < j ≤ N,
(51)
so that Wi：N(0) = c. Then since LN(Wι,..., WN) = 2(1 - WN …Wi)2, the gradient descent
updates are given by
Wj(t +1) = Wj(t) - n(Wi：N(t) - 1) ∙ Wi：j-i(t)Wj+i：N(t),
where we view Wi (t), . . . , WN (t) as real numbers. This gives
_ (c/NAA - η(c - 1)c(NT)/N/A	:	1 ≤ j ≤ N/2
Wj(1) = ci/N /A -η(c- 1)c(N-i)/NA	:	N/2 <j ≤ N.
Since 3/4 ≤ c < 1 and -η(c - 1)c(N -i)/N A ≥ 0, we have that A/2 ≤ 3A/4 ≤ Wj (1) for
1 ≤ j ≤ N/2. Next, since 1，方欢 ≤ N for 0 ≤ c < 1, we have that A2 ≥ nN ≥ ；—：-/N, which
implies that A2 ≥ c1/NA2 + n(1 — c), or c1/NA + η(;) ≤ A. Thus Wj(1) ≤ A for N/2 < j ≤ N.
Similarly, using the same bound 3/4 ≤ c < 1 and the fact that η(1 - c)c(N -i)/N A ≥ 2 we get
16nA ≤ Wj (1) ≤ nA for N/2 < j ≤ N. In particular, for all 1 ≤ j ≤ N, we have that
吗应A ≤ W∙ (1) ≤ max{n, 1}A.
We prove the following lemma by induction:
Lemma 17. For each t ≥ 1, the real numbers Wi(t), . . . , WN (t) all have the same sign and this
sign alternates for each integer t. Moreover, there are real numbers 2 ≤ B(t) < C(t) for t ≥ 1
such that for 1 ≤ j ≤ N, B(t) ≤ |Wj (t)| ≤ C(t) and nB(t)2N-i ≥ 20C (t).
Proof. First we claim that we may take B(1)= 皿嘈」} A and C(1) = max{n, 1}A. We have
shown above that B(1) ≤ Wj(1) ≤ C(1) for all j. Next we establish that nB(1)2N-i ≥ 20C(1).
If n ≤ 1, then
nB(1)2NT = n2N ∙ (A/10)2NT ≥ 20A = 20C(1),
20 i02N-1 i/(2N-2)
where the inequality follows from A ≥ ( 2010N——)	by definition of A. If n ≥ 1, then
nB(1)2N-i = n(A/10)2N-i ≥ 20nA = 20C(1),
where the inequality follows from A ≥ 2000 ≥(20 ∙ 102N-1)1/(2N-2) by definition of A.
Now, suppose the statement of Lemma 17 holds for some t. Suppose first that Wj (t) are all positive
for 1 ≤ j ≤ N. Then for all j, as B(t) ≥ 2, and nB(t)2N-i ≥ 20C(t),
Wj(t + 1) ≤ C(t) - n∙ (B(t)N - 1) ∙ B(t)NT
≤ C(t)- 2B(t)2NT
≤ -9C (t),
which establishes that Wj(t + 1) is negative for all j. Moreover,
Wj (t + 1) ≥ -n(c(t)N -1) ∙c(t)NT
≥ -nC(t)2N-i.
Now set B(t + 1) = 9C(t) and C(t + 1) = nC(t)2N-i. Since N ≥ 2, we have that
nB(t + 1)2N-i = n(9C(t))2N-i ≥ n93C(t)2N-i > 20nC(t)2N-i = 20C(t + 1).
The case that all Wj (t) are negative for 1 ≤ j ≤ N is nearly identical, with the same values for
B(t + 1),C(t + 1) in terms of B(t),C(t), except all Wj(t + 1) will be positive. This establishes
the inductive step and completes the proof of Lemma 17.	□
32
Published as a conference paper at ICLR 2019
By Lemma 17, We have that for all t ≥ 1, LN(Wι(t),..., WN(t)) = 1 (Wi：N(t) - 1)2 ≥ 11 (2n -
1)2 > 0, thus completing the proof of Claim 4 for the case where all dimensions are equal to 1.
For the general case where do = di =…=d，N = d for some d ≥ 1, we set Φ = Id, and given c, η,
We set Wj (0) to be the d × d diagonal matrix Where all diagonal entries except the first one are equal
to 1, and where the first diagonal entry is given by Equation (51), where A is given by Equation (50).
It is easily verified that all entries of Wj (t), 1 ≤ j ≤ N, except for the first diagonal element of
each matrix, will remain constant for all t ≥ 0, and that the first diagonal elements evolve exactly as
in the 1-dimensional case presented above. Therefore the loss in the d-dimensional case is equal to
the loss in the 1-dimensional case, which is always greater than some positive constant.	口
We remark that the proof of Claim 4 establishes that the loss `(t) := LN(Wi(t), . . . , WN (t)) grows
at least exponentially int for the chosen initialization. Such behavior, in which gradients and weights
explode, indeed takes place in deep learning practice if initialization is not chosen with care.
D.7 Proof of Claim 5
Proof. We will show that a target matrix Φ ∈ Rd×d which is symmetric with at least one negative
eigenvalue, along with identity initialization (Wj (0) = Id, ∀j ∈ {1, . . . , N}), satisfy the conditions
of the claim. First, note that non-stationarity of initialization is met, as for any 1 ≤ j ≤ N ,
∂LN (Wi(0),...,Wn (0))
∂W∙ (0)
Wj+1：N(0)>(Wi:N(0) - Φ)Wij-i(0) = Id - Φ = 0,
where the last inequality follows since Φ has a negative eigenvalue. To analyze gradient descent we
use the following result, which was established in Bartlett et al. (2018):
Lemma 18 (Bartlett et al. (2018), Lemma 6). If Wi(0), . . . , WN (0) are all initialized to identity, Φ
is symmetric, Φ = UDU> is a diagonalization of Φ, and gradient descent is performed with any
learning rate, then for each t ≥ 0 there is a diagonal matrix D(t) such that Wj (t) = U D(t)U > for
each 1 ≤ j ≤ N.
By Lemma 18, for any choice of learning rate η, the end-to-end matrix at time t is given by
Wi：：N(t) = UDONU>. As long as some diagonal element of D is negative, say equal to -λ < 0,
then
'(t) = LN (Wi(t),..., Wn (t)) = 2 k Wi：N (t) - ΦkF = 1 kD(t)L - DkF ≥ | λ2 > 0.
□
E	Implementation Details
Below we provide implementation details omitted from our experimental report (Section 4).
The platform used for running the experiments is PyTorch (Paszke et al., 2017). For compliance
with our analysis, we applied PCA whitening to the numeric regression dataset from UCI Machine
Learning Repository. That is, all instances in the dataset were preprocessed by an affine operator
that ensured zero mean and identity covariance matrix. Subsequently, we rescaled labels such that
the uncentered cross-covariance matrix Λyx (see Section 2) has unit Frobenius norm (this has no
effect on optimization other than calibrating learning rate and standard deviation of initialization
to their conventional ranges). With the training objective taking the form of Equation (1), we then
computed c — the global optimum — in accordance with the formula derived in Appendix A.
In our experiments with linear neural networks, balanced initialization was implemented with the
assignment written in step (iii) of Procedure 1. In the non-linear network experiment, we added, for
each j ∈ {1, . . . , N - 1}, a random orthogonal matrix to the right of Wj, and its transpose to the
left of Wj+i — this assignment maintains the properties required from balanced initialization (see
Footnote 7). During all experiments, whenever we applied grid search over learning rate, values
between 10-4 and 1 (in regular logarithmic intervals) were tried.
33