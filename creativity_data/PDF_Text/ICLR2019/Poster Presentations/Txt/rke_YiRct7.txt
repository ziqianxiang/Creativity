Published as a conference paper at ICLR 2019
Small nonlinearities in activation functions
CREATE BAD LOCAL MINIMA IN NEURAL NETWORKS
Chulhee Yun, Suvrit Sra & Ali Jadbabaie
Massachusetts Institute of Technology
Cambridge, MA 02139, USA
{chulheey,suvrit,jadbabai}@mit.edu
Ab stract
We investigate the loss surface of neural networks. We prove that even for one-
hidden-layer networks with “slightest” nonlinearity, the empirical risks have spu-
rious local minima in most cases. Our results thus indicate that in general “no
spurious local minima” is a property limited to deep linear networks, and insights
obtained from linear networks may not be robust. Specifically, for ReLU(-like)
networks we constructively prove that for almost all practical datasets there exist
infinitely many local minima. We also present a counterexample for more general
activations (sigmoid, tanh, arctan, ReLU, etc.), for which there exists a bad local
minimum. Our results make the least restrictive assumptions relative to existing
results on spurious local optima in neural networks. We complete our discussion
by presenting a comprehensive characterization of global optimality for deep lin-
ear networks, which unifies other results on this topic.
1	Introduction
Neural network training reduces to solving nonconvex empirical risk minimization problems, a task
that is in general intractable. But success stories of deep learning suggest that local minima of the
empirical risk could be close to global minima. Choromanska et al. (2015) use spherical spin-glass
models from statistical physics to justify how the size of neural networks may result in local minima
that are close to global. However, due to the complexities introduced by nonlinearity, a rigorous
understanding of optimality in deep neural networks remains elusive.
Initial steps towards understanding optimality have focused on deep linear networks. This area
has seen substantial recent progress. In deep linear networks there is no nonlinear activation; the
output is simply a multilinear function of the input. Baldi & Hornik (1989) prove that some shallow
networks have no spurious local minima, and Kawaguchi (2016) extends this result to squared error
deep linear networks, showing that they only have global minima and saddle points. Several other
works on linear nets have also appeared (Lu & Kawaguchi, 2017; Freeman & Bruna, 2017; Yun
et al., 2018; Zhou & Liang, 2018; Laurent & Brecht, 2018a;b).
The theory of nonlinear neural networks (which is the actual setting of interest), however, is still in
its infancy. There have been attempts to extend the “local minima are global” property from linear
to nonlinear networks, but recent results suggest that this property does not usually hold (Zhou &
Liang, 2018). Although not unexpected, rigorously proving such results turns out to be non-trivial,
forcing several authors (e.g., Safran & Shamir (2018); Du et al. (2018b); Wu et al. (2018)) to make
somewhat unrealistic assumptions (realizability and Gaussianity) on data.
In contrast, we prove existence of spurious local minima under the least restrictive (to our knowl-
edge) assumptions. Since seemingly subtle changes to assumptions can greatly influence the analysis
as well as the applicability of known results, let us first summarize what is known; this will also help
provide a better intuitive perspective on our results (as the technical details are somewhat involved).
1.1	What is known so far?
There is a large and rapidly expanding literature of optimization of neural networks. Some works fo-
cus on the loss surface (Baldi & Hornik, 1989; Yu & Chen, 1995; Kawaguchi, 2016; Swirszcz et al.,
2016; Soudry & Carmon, 2016; Xie et al., 2016; Nguyen & Hein, 2017; 2018; Safran & Shamir,
1
Published as a conference paper at ICLR 2019
2018; Laurent & Brecht, 2018a; Yun et al., 2018; Zhou & Liang, 2018; Wu et al., 2018; Liang et al.,
2018a;b; Shamir, 2018), while others study the convergence of gradient-based methods for optimiz-
ing this loss (Tian, 2017; Brutzkus & Globerson, 2017; Zhong et al., 2017; Soltanolkotabi, 2017;
Li & Yuan, 2017; Du et al., 2018b; Zhang et al., 2018; Brutzkus et al., 2018; Wang et al., 2018; Li
& Liang, 2018; Du et al., 2018a;c; Allen-Zhu et al., 2018; Zou et al., 2018; Zhou et al., 2019). In
particular, our focus is on the loss surface itself, independent of any algorithmic concerns; this is
reflected in the works summarized below.
For ReLU networks, the works (Swirszcz et al., 2016; Zhou & Liang, 2018) provide counterexample
datasets that lead to spurious local minima, dashing hopes of “local implies global” properties.
However, these works fail to provide statements about generic datasets, and one can argue that their
setups are limited to isolated pathological examples. In comparison, our Theorem 1 shows existence
of spurious local minima for almost all datasets, a much more general result. Zhou & Liang (2018)
also give characterization of critical points of shallow ReLU networks, but with more than one
hidden node the characterization provided is limited to certain regions.
There are also results that study population risk of shallow ReLU networks under an assumption
that input data is i.i.d. Gaussian distributed (Safran & Shamir, 2018; Wu et al., 2018; Du et al.,
2018b). Moreover, these works also assume realizability, i.e., the output data is generated from a
neural network with the same architecture as the model one trains, with unknown true parameters.
These assumptions enable one to compute the population risk in a closed form, and ensure that one
can always achieve zero loss at global minima. The authors of Safran & Shamir (2018); Wu et al.
(2018) study the population risk function of the form Ex [(Pik=1 ReLU(wiT x) - ReLU(viTx))1 2],
where the true parameters vi ’s are orthogonal unit vectors. Through extensive experiments and
computer-assisted local minimality checks, Safran & Shamir (2018) show existence of local minima
for k ≥ 6. However, this result is empirical and does not have constructive proofs. Wu et al. (2018)
show that with k = 2, there is no bad local minima on the manifold kw1 k2 = kw2 k2 = 1. Du et al.
(2018b) study population risk of one-hidden-layer CNN. They show that there can be a spurious
local minimum, but gradient descent converges to the global minimum with probability at least 1/4.
Our paper focuses on empirical risk instead of population risk, and does not assume either Gaussian-
ity or realizability. Theorem 1 1’s assumption on the dataset is that it is not linearly fittable1, which
is vastly more general and realistic than assuming that input data is Gaussian or that the output is
generated from an unknown neural network. Our results also show that Wu et al. (2018) fails to
extend to empirical risk and non-unit parameter vectors (see the discussion after Theorem 2).
Liang et al. (2018b) showed that under assumptions on the loss function, data distribution, network
structure, and activation function, all local minima of the empirical loss have zero classification
error in binary classification tasks. The result relies on stringent assumptions, and it is not directly
comparable to ours because both “the local minimum has nonzero classification error” and “the local
minima is spurious” do not imply one another. Liang et al. (2018a) proved that adding a parallel
network with one exponential hidden node can eliminate all bad local minima. The result relies on
the special parallel structure, whereas we analyze standard fully connected network architecture.
Laurent & Brecht (2018a) studies one-hidden-layer networks with hinge loss for classification. Un-
der linear separability, the authors prove that Leaky-ReLU networks don’t have bad local minima,
while ReLU networks do. Our focus is on regression, and we only make mild assumptions on data.
For deep linear networks, the most relevant result to ours is Laurent & Brecht (2018b). When all
hidden layers are wider than the input or output layers, Laurent & Brecht (2018b) prove that any local
minimum of a deep linear network under differentiable convex loss is global.2 They prove this by
showing a statement about relationship between linear vs. multilinear parametrization. Our result in
Theorem 4 is strictly more general that their results, and presents a comprehensive characterization.
A different body of literature (Yu & Chen, 1995; Soudry & Carmon, 2016; Xie et al., 2016; Nguyen
& Hein, 2017; 2018) considers sufficient conditions for global optimality in nonlinear networks.
These results make certain architectural assumptions (and some technical restrictions) that may not
usually apply to realistic networks. There are also other works on global optimality conditions for
specially designed architectures (Haeffele & Vidal, 2017; Feizi et al., 2017).
1That is, given input data matrices X and Y , there is no matrix R such that Y = RX .
2Although their result overlaps with a subset of Theorem 4, our theorem was obtained independently.
2
Published as a conference paper at ICLR 2019
1.2	Contributions and Summary of Results
We summarize our key contributions more precisely below. Our work encompasses results for both
nonlinear and linear neural networks. First, we study whether the “local minima are global” property
holds for nonlinear networks. Unfortunately, our results here are negative. Specifically, we prove
I For piecewise linear and nonnegative homogeneous activation functions (e.g., ReLU), we prove
in Theorem 1 that if linear models cannot perfectly fit the data, one can construct infinitely many
local minima that are not global. In practice, most datasets are not linearly fittable, hence this
result gives a constructive proof of spurious local minima for generic datasets. In contrast, several
existing results either provide only one counterexample (Swirszcz et al., 2016; Zhou & Liang,
2018), or make restrictive assumptions of realizability (Safran & Shamir, 2018; Du et al., 2018b)
or linear separability (Laurent & Brecht, 2018a). This result is presented in Section 2.
I In Theorem 2 we tackle more general nonlinear activation functions, and provide a simple ar-
chitecture (with squared loss) and dataset, for which there exists a local minimum inferior to the
global minimum for a realizable dataset. Our analysis applies to a wide range of activations, in-
cluding sigmoid, tanh, arctan, ELU (Clevert et al., 2015), SELU (Klambauer et al., 2017), and
ReLU. Considering that realizability of data simplifies the analysis and ensures zero loss at global
optima, our counterexample that is realizable and yet has a spurious local minimum is surprising,
suggesting that the situation is likely worse for non-realizable data. See Section 3 for details.
We complement our negative results by presenting the following positive result on linear networks:
I Assume that the hidden layers are as wide as either the input or the output, and that the empirical
risk '((Wj)H=+ι1) equals 'o(Wh+1WH .… Wι), where '0 is a differentiable loss function and Wi
is the weight matrix for layer i. Theorem 4 shows if (Wj )H=11 is a critical point of ',then its type
of stationarity (local min/max, or saddle) is closely related to the behavior of '0 evaluated at the
product W^h+i ∙∙∙ ɪWι. If We additionally assume that any critical point of '0 is a global minimum,
Corollary 5 shows that the empirical risk ' only has global minima and saddles, and provides a
simple condition to distinguish between them. To the best of our knowledge, this is the most
general result on deep linear networks and it subsumes several previous results, e.g., (Kawaguchi,
2016; Yun et al., 2018; Zhou & Liang, 2018; Laurent & Brecht, 2018b). This result is in Section 4.
Notation. For an integer a ≥ 1, [a] denotes the set of integers from 1 to a (inclusive). For a vector
v, we use [v]i to denote its i-th component, while [v][i] denotes a vector comprised of the first i
components of v. Let 1(.)(0(∙)) be the all ones (zeros) column vector or matrix with size (∙).
2	“ReLU-like” networks: bad local minima exist for most data
We study below whether nonlinear neural networks provably have spurious local minima. We show
in §2 and §3 that even for extremely simple nonlinear networks, one encounters spurious local min-
ima. We first consider ReLU and ReLU-like networks. Here, we prove that as long as linear models
cannot perfectly fit the data, there exists a local minimum strictly inferior to the global one. Using
nonnegative homogeneity, we can scale the parameters to get infinitely many local minima.
Consider a training dataset that consists of m data points. The inputs and the outputs are of
dimension dx and dy, respectively. We aggregate these items, and write X ∈ Rdx×m as the
data matrix and Y ∈ Rdy ×m as the label matrix. Consider the 1-hidden-layer neural network
Y = W2h(W1X + biim)+ b2im, where h is a nonlinear activation function, W2 ∈ Rdy×d1,
b2 ∈ Rdy , W1 ∈ Rd1 ×dx , and b1 ∈ Rd1 . We analyze the empirical risk with squared loss
'(W1,W2,b1,b2)=1 ∣∣W2h(W1x+biim)+b2im—γ kF.
Next, define a class of piecewise linear nonnegative homogeneous functions
hs+,s- (x) = max{s+x, 0} + min{s-x, 0},	(1)
where s+ > 0, s- ≥ 0 and s+ 6= s-. Note that ReLU and Leaky-ReLU are members of this class.
2.1 Main results and discussion
We use the shorthand X := [XT 1m]T ∈ R(dχ+1)×m. Themainresultof this section, Theorem 1,
considers the case where linear models cannot fitY , i.e., Y 6= RX for all matrix R. With ReLU-like
activation (1) and a few mild assumptions, Theorem 1 shows that there exist spurious local minima.
3
Published as a conference paper at ICLR 2019
Theorem 1. Suppose that the following conditions hold:
(C1.1) Output dimension is dy = 1, and linear models RX cannot perfectly fit Y.
(C1.2) All the data points xi ’s are distinct.
(C1.3) The activation function h ishs+,s-.
(C1.4) The hidden layer has at least width 2: d1 ≥ 2.
Then, there is a spurious local minimum whose risk is the same as linear least squares model.
Moreover, due to nonnegative homogeneity ofhs+,s-, there are infinitely many such local minima.
Noticing that most real world datasets cannot be perfectly fit with linear models, Theorem 1 shows
that when We use the activation hs+,s-, the empirical risk has bad local minima for almost all
datasets that one may encounter in practice. Although it is not very surprising that neural networks
have spurious local minima, proving this rigorously is non-trivial. We provide a constructive and de-
terministic proof for this problem that holds for general datasets, which is in contrast to experimental
results of Safran & Shamir (2018). We emphasize that Theorem 1 also holds even for “slightest”
nonlinearities, e.g., when s+ = 1 + and s- = 1 where > 0 is small. This suggests that the “local
min is global” property is limited to the simplified setting of linear neural networks.
Existing results on squared error loss either provide one counterexample (Swirszcz et al., 2016;
Zhou & Liang, 2018), or assume realizability and Gaussian input (Safran & Shamir, 2018; Du et al.,
2018b). Realizability is an assumption that the output is generated by a network with unknown
parameters. In real datasets, neither input is Gaussian nor output is generated by neural networks; in
contrast, our result holds for most realistic situations, and hence delivers useful insight.
There are several results proving sufficient conditions for global optimality of nonlinear neural net-
works (Soudry & Carmon, 2016; Xie et al., 2016; Nguyen & Hein, 2017). But they rely on assump-
tions that the network width scales with the number of data points. For instance, applying Theorem
3.4 of Nguyen & Hein (2017) to our network proves that ifX has linearly independent columns and
other assumptions hold, then any critical point with W2 6= 0 is a global minimum. However, lin-
early independent columns already imply row(X) = Rm, so even linear models RX can fit any Y ;
i.e., there is less merit in using a complex model to fit Y . Theorem 1 does not make any structural
assumption other than d1 ≥ 2, and addresses the case where it is impossible to fit Y with linear
models, which is much more realistic.
It is worth comparing our result with Laurent & Brecht (2018a), who use hinge loss based classifica-
tion and assume linear separability to prove “no spurious local minima” for Leaky-ReLU networks.
Their result does not contradict our theorem because the losses are different and we do not assume
linear separability.
One might wonder if our theorem holds even with d1 ≥ m. Venturi et al. (2018) showed that one-
hidden-layer neural networks with d1 ≥ m doesn’t have spurious valleys, hence there is no strict
spurious local minima; however, due to nonnegative homogeneity of h§+,S- we only have non-strict
local minima. Based on Bengio et al. (2006), one might claim that with wide enough hidden layer
and random W1 and b1 , one can fit any Y ; however, this is not the case, by our assumption that
linear models RX cannot fit Y . Note that for any d1 , there is a non-trivial region (measure > 0)
in the parameter space where W1X + b11Tm > 0 (entry-wise). In this region, the output of neural
network Y is still a linear combination of rows of X, so Y cannot fit Y ; in fact, it can only do as
well as linear models. We will see in the Step 1 of Section 2.2 that the bad local minimum that we
construct “kills” d1 - 1 neurons; however, killing many neurons is not a necessity, and it is just to
simply the exposition. In fact, any local minimum in the region W1X + b11Tm > 0 is a spurious
local minimum.
2.2 Analysis of Theorem 1
The proof of the theorem is split into two steps. First, we prove that there exist local minima
(Wj, bj)2=1 whose risk value is the same as the linear least squares solution, and that there are
infinitely many such minima. Second, we will construct a tuple of parameters (Wj , bj )j2=1 that has
strictly smaller empirical risk than (Wj, bj )2=ι∙
4
Published as a conference paper at ICLR 2019
Step 1: A local minimum as good as the linear solution. The main idea here is to exploit the
weights from the linear least squares solution, and to tune the parameters so that all inputs to hidden
nodes become positive. Doing so makes the hidden nodes “locally linear,” so that the constructed
(Wj , bj )j2=1 that produce linear least squares estimates at the output become locally optimal.
Recall that X = [XT 1m]T ∈ R(dx+1)×m, and define a linear least squares loss 'o(R):=
2 ∣∣RX - Y kF that is minimized at WW, so that V'o(WW) = (W X - Y )X T = 0. Since dy = 1, the
solution W ∈ Rdy ×(dχ+1) is a row vector. For all i ∈ [m], let y% = W [xT 1] T be the output of
the linear least squares model, and similarly Y = WX.
Let η := min {-1,2 mini yi}, a negative constant making y% - η > 0 for all i. Define parameters
W1 = α
- ---
[W][dχ]
0(d1 -1)×dx
b1 = α
Wldx+ι -η
-η1d1-1
b2 = η,
where α > 0 is any arbitrary fixed positive constant, [VK][dx] gives the first dχ components of W,
and [W]dx+ι the last component. Since y = [W][dx]Xi + [W]dx+ι, for any i Wιxi + bi > Odi
(component-wise), given our choice of η . Thus, all hidden node inputs are positive. Moreover,
Y = αs1+ s+(αY - αηim)+ η15 = Y, so that the loss '((WWj, bj)2=i) = 2 IlY - YIlF = 'o(W).
So far, we checked that (Wj, bj)j2=1 has the same empirical risk as a linear least squares solution. It
now remains to show that this point is indeed a local minimum of `. To that end, we consider the
perturbed parameters (Wj + ∆j, bj + δj∙)2=i, and check their risk is always larger. A useful point is
that since W is a minimum of 'o(R) = 11 ∣∣RX - Y∣∣F, we have
(WX - Y)XT = (Y - Y) [XT 1m] = 0,	(2)
so (Y-Y )XT = 0 and (Y-Y )1m = 0. For small enough perturbations, (Wi+∆ι)χi + (bi+δι) >
0 still holds for all i. So, we can observe that
'((Wj + ∆j, bj + δj)2=ι)= 1 ∣Y - Y + ∆X + διm∣F= 1 ∣Y - YkF + ɪ∣∆X + διm∣F,⑶
where ∆ and δ are ∆ := s+(W2∆i + ∆2Wi + ∆2∆i) and δ := s+(W2δi + ∆2bi + ∆2δi) + δ2;
they are aggregated perturbation terms. We used (2) to obtain the last equality of (3). Thus, '((Wj +
∆j, bj + δj)j2=i) ≥ '((Wj, bj)j2=i) for small perturbations, proving (Wj, bj)j2=i is indeed a local
minimum of '. Since this is true for arbitrary α > 0, there are infinitely many such local minima.
We can also construct similar local minima by permuting hidden nodes, etc.
Step 2: A point strictly better than the local minimum. The proof of this step is more in-
volved. In the previous step, we “pushed” all the input to the hidden nodes to positive side, and took
advantage of “local linearity” of the hidden nodes near (Wj', bj )2=ι. But to construct parameters
(Wj, bj)2=ι that have strictly smaller risk than (Wj, bj)2=ι (to prove that (Wj, bj)2=ι is a spurious
local minimum), we make the sign of inputs to the hidden nodes different depending on data.
To this end, We sort the indices of data points in increasing order of y6 i.e., yi ≤ y1 ≤ ∙∙∙ ≤ ym,.
Define the set J := {j ∈ [m - 1] | Pi≤j∙ (yi 一 yi) = 0, yj∙ < yj-+ι}. The remaining construction is
divided into two cases: J = 0 and J = 0, whose main ideas are essentially the same. We present
the proof for J = 0, and defer the other case to Appendix A2 as it is rarer, and its proof, while
instructive for its perturbation argument, is technically too involved.
Case 1： J = 0. Pick any jo ∈ J. We can observe that Pi≤j0 (yi - yi) = — Pi>j0 (yi - yi),
because of (2). Define β = yj0 +yj0+1, so that y - β < 0 for all i ≤ jo and y - β > 0 for all i > jo.
Then, let Y be a constant satisfying 0 < ∣γ∣ ≤ 'j0+4-yj0, whose value will be specified later. Since
∣γ∣ is small enough, sign(yi - β) = sign(yi - β + Y) = sign(yi - β - γ). Now select parameters
,---
W][dx]
-[W][dx]
0(d1-2)×dx
〜
〜「[W]dx+1- β + Y
b1 =	-[W]dx + 1 + β + Y
0d1-2
W2 = 士 [1 -1 0Tι-1] , b1= β.
5
Published as a conference paper at ICLR 2019
Recall again that [IW][dx]Xi + [W]d.+ι = yi. For i ≤ jo, yi - β + γ < 0 and -y + β + γ > 0, So
yi= S-⅛∕i-β + Y ) - S+(-yi + β + Y) + β = yi - S+-- γ.
s+ + s-	s+ + s-	s+ + s-
Similarly, for i > jo, y% - β + γ > 0 and -yi + β + γ < 0 results in r^i = yji + s+-s- Y. Here,
s+ +s-
We push the outputs yi of the network by ：+二：-Y from y^ and the direction of the “push” varies
s+ +s-
depending on whether i ≤ jo or i > jo.
The empirical risk for this choice of parameters is
'(Wbj )2=1)=1 Eg。R-；T+2 Xi.瓜+； T
='o(W) - 2 hχ ∙ (yi - yi)i s+ - S- Y + O(Y2).
i≤j0	s+ + s-
Since Pi≤j0 (yi-yi) = 0 and s+ = s-, we can choose Sign(Y) =sign([Pi≤j0 (yi-yi)](s+ -s-)),
and choose small |y| so that '((Wj ,bj j=ι) < 'ο(W) = '((Wj, bj j=。proving that (Wj,bj j=
is a spurious local minimum.
3	Counterexample: bad local minima for many activations
The proof of Theorem 1 crucially exploits the piecewise linearity of the activation functions. Thus,
one may wonder whether the spurious local minima seen there are an artifact of the specific nonlin-
earity. We show below that this is not the case. We provide a counterexample nonlinear network and
a dataset for which a wide range of nonlinear activations result in a local minimum that is strictly in-
ferior to the global minimum with exactly zero empirical risk. Examples of such activation functions
include popular activation functions such as sigmoid, tanh, arctan, ELU, SELU, and ReLU.
We consider again the squared error empirical risk of a one-hidden-layer nonlinear neural network:
'((Wj,bj)2=ι) := 1 kW2h(W1X+bιim)+b2im-YkF,
where we fix dx = d1 = 2 and dy = 1. Also, let h(k) (x) be the k-th derivative of h : R 7→ R,
whenever it exists at x. For short, let h0 and h00 denote the first and second derivatives.
3.1	Main results and discussion
Theorem 2. Let the loss '((Wj, bj)j2=1) and network be as defined above. Consider the dataset
「10 11	L	r
X = [θ ɪ	2J , Y = [0 0 1].
For this network and dataset the following results hold:
1.	If there exist real numbers v1, v2, v3, v4 ∈ R such that
(C2.1) h(v1)h(v4) = h(v2)h(v3), and
(C2∙2) h(vι)h (v3+v4) = h(v3)h (v1++v2),
then there is a tuple (Wj, bj)j2=1 at which ' equals 0.
2.	If there exist real numbers v1, v2, u1, u2 ∈ R such that the following conditions hold:
(C2.3) u1h(v1) + u2h(v2) = 1,
(C2.4) h is infinitely differentiable at v1 and v2,
(C2.5) there exists a constant c > 0 such that |h(n) (v1)| ≤ cnn! and |h(n) (v2)| ≤ cnn!.
(C2.6) (u1h0(v1))2 + u1h3(VI) > 0,
(C2.7) (u1h0(v1)u2h0(v2))2 < ((u1h0(v1))2 + u⅛))((u2h0(v2))2 + u2h3v2)),
then there exists a tuple (Wj, bj)j2=1 such that the output of the network is the same as the linear
least squares model, the risk '((Wj, bj j=ι) = 1, and (W', bj j=ι is a local minimum of'.
6
Published as a conference paper at ICLR 2019
Theorem 2 shows that for this architecture and dataset, activations that satisfy (C2.1)-(C2.7) in-
troduce at least one spurious local minimum. Notice that the empirical risk is zero at the global
minimum. This means that the data X and Y can actually be “generated” by the network, which
satisfies the realizability assumption that others use (Safran & Shamir, 2018; Du et al., 2018b; Wu
et al., 2018). Notice that our counterexample is “easy to fit,” and yet, there exists a local minimum
that is not global. This leads us to conjecture that with harder datasets, the problems with spurious
local minima could be worse. The proof of Theorem 2 can be found in Appendix A3.
Discussion. Note that the conditions (C2.1)-(C2.7) only require existence of certain real numbers
rather than some global properties of activation h, hence are not as restrictive as they look. Con-
ditions (C2.1)-(C2.2) come from a choice of tuple (Wj, bj j=ι that perfectly fits the data. Condi-
tion (C2.3) is necessary for constructing (W', bj j=ι with the same output as the linear least squares
model, and Conditions (C2.4)-(C2.7) are needed for showing local minimality of (Wj∙, bj)2=ι via
Taylor expansions. The class of functions that satisfy conditions (C2.1)-(C2.7) is quite large, and
includes the nonlinear activation functions used in practice. The next corollary highlights this ob-
servation (for a proof with explicit choices of the involved real numbers, please see Appendix A5).
Corollary 3. For the counterexample in Theorem 2, the set of activation functions satisfying condi-
tions (C2.1)-(C2.7) include sigmoid, tanh, arctan, quadratic, ELU, and SELU.
Admittedly, Theorem 2 and Corollary 3 give one counterexample instead of stating a claim about
generic datasets. Nevertheless, this example shows that for many practical nonlinear activations, the
desirable “local minimum is global” property cannot hold even for realizable datasets, suggesting
that the situation could be worse for non-realizable ones.
Remark: “ReLU-like” activation functions. Recall the piecewise linear nonnegative homoge-
neous activation function h§+,§_. They do not satisfy condition (C2.7), so Theorem 2 cannot be
directly applied. Also, if S- = 0 (i.e., ReLU),conditions (C2.1)-(C2.2) are also violated. How-
ever, the statements of Theorem 2 hold even for 九+ ,s-, which is shown in Appendix A6. Recalling
again s+ = 1 + and s- = 1, this means that even with the “slightest” nonlinearity in activation
function, the network has a global minimum with risk zero while there exists a bad local minimum
that performs just as linear least squares models. In other words, “local minima are global” prop-
erty is rather brittle and can only hold for linear neural networks. Another thing to note is that in
Appendix A6, the bias parameters are all zero, for both (Wj, bj)j2=1 and (Wj, bj)j2=1. For models
without bias parameters, (Wj)j2=1 is still a spurious local minimum, thus showing that Wu et al.
(2018) fails to extend to empirical risks and non-unit weight vectors.
4	Global optimality in linear networks
In this section we present our results on deep linear neural networks. Assuming that the hidden
layers are at least as wide as either the input or output, we show that critical points of the loss with
a multilinear parameterization inherit the type of critical points of the loss with a linear parame-
terization. As a corollary, we show that for differentiable losses whose critical points are globally
optimal, deep linear networks have only global minima or saddle points. Furthermore, we provide
an efficiently checkable condition for global minimality.
Suppose the network has H hidden layers having widths d1, . . . , dH. To ease notation, we set
d0 = dx and dH+1 = dy. The weights between adjacent layers are kept in matrices Wj ∈ Rdj ×dj-1
(j ∈ [H + 1]), and the output Y of the network is given by the product of weight matrices with the
data matrix: Y = WH+1 Wh •…WiX. Let (Wj)H=+11 be the tuple of all weight matrices, and Wi：j-
denote the product WiWi-I •…Wj+i Wj for i ≥ j, and the identity for i = j - 1. We consider the
empirical risk '((Wj-)31), which, for linear networks assumes the form
'((Wj )HV):= 'o(WH+Li),	(4)
where '0 is a suitable differentiable loss. For example, when 'o(R) = 11 IlRX - Y∣∣F,
'((Wj)H=11) = 2|Wh+i：iX - YIIF = 'o(Wh+li). Lastly, wewrite V'o(M) ≡ NR'o(R)∣r=m.
Remark: bias terms. We omit the bias terms bi , . . . , bH+i here. This choice is for simplicity;
models with bias can be handled by the usual trick of augmenting data and weight matrices.
7
Published as a conference paper at ICLR 2019
4.1	Main results and discussion
We are now ready to state our first main theorem, whose proof is deferred to Appendix A7.
Theorem 4. Suppose that for all j, dj ≥ min{dx, dy}, and that the loss ` is given by (4), where `0
is differentiable on Rdy ×dx. For any critical point (IWj` )H=+11 Ofthe loss ',thefolloWing claims hold:
1.	If V'o(1Wh+i：i) = 0, then (IWj)H=+11 is a saddle of'.
2.	If V'o(Wh+i：i) = 0, then
(a)	(Wj)H=+11 is a local min (max) of' if IWh+i：i is a local min (max) of 'o; moreover,
(b)	(Wj)H+11 is a global min (max) of' ifand only if IWh+i：i is a global min (max) of 'o.
3.	If there exists j * ∈ [H + 1] such that IWH+1j*+1 has full row rank and Wj*-li has full
column rank, then V'o(Wh+i：i) = 0 ,so 2(a) and2(b) hold. Also,
(a) IWh+i：i is a local min (max) of 'o if(Wj` )H+11 is a local min (max) of'.
Let us paraphrase Theorem 4 in words. In particular, it states that if the hidden layers are “wide
enough” so that the product WH +1：1 can attain full rank and if the loss ` assumes the form (4) for
a differentiable loss 'o, then the type (optimal or saddle point) of a critical point (Wj )H=+11 of ' is
governed by the behavior of '0 at the product IWH+i：i.
Note that for any critical point (Wj )H=+l1 of the loss', either V'o(Wh+i：i) = 0 or V'o(Wh+i：i)=
0. Parts 1 and 2 handle these two cases. Also observe that the condition in Part 3 implies V'o = 0,
so Part 3 is a refinement of Part 2. A notable fact is that a sufficient condition for Part 3 is WH+1：1
having full rank. For example, ifdx ≥ dy, full-rank WH+1：1 implies rank(WH+1：2) = dy, whereby
the condition in Part 3 holds with j * = 1.
If IWH+i：i is not critical for '0, then (Wj` )H=+l1 must be a saddle point of '. If IWh+i：i is a local
min/max of 'o, (Wj )H=+l1 is also a local min/max of '. Notice, however, that Part 2(a) does not
address the case of saddle points; when IWh+i：i is a saddle point of 'o, the tuple (Wj)H=+l1 can
behave arbitrarily. However, with the condition in Part 3, statements 2(a) and 3(a) hold at the same
time, so that IWH+i：i is a local min/max of 'o if and only if (Wj )H=+l1 is a local min/max of '.
Observe that the same “if and only if” statement holds for saddle points due to their definition; in
summary, the types (min/max/saddle) of the critical points (Wj)H=+l1 and IWh+i：i match exactly.
Although Theorem 4 itself is of interest, the following corollary highlights its key implication for
deep linear networks.
Corollary 5. In addition to the assumptions in Theorem 4, assume that any critical point of '0 is a
global min (max). For any critical point (Wj)H=+l1 of ', if V'o(1Wh+i：i) = 0, then (Wj)H=+l1 is a
saddle of', while if V'o(1WH+i：i) = 0, then (Wj)H=+11 is a global min (max) of'.
Proof If V'o(1Wh+i：i) = 0, then IWh+i：i is a saddle point by Theorem 4.1. If V'o(1Wh+i：i)=
0, then IWH+i：i is a global min (max) of 'o by assumption. By Theorem 4.2(b), (Wjj )H=+l1 must be
a global min (max) of '.	□
Corollary 5 shows that for any differentiable loss function '0 whose critical points are global min-
ima, the loss ' has only global minima and saddle points, therefore satisfying the “local minima
are global” property. In other words, for such an '0, the multilinear re-parametrization introduced
by deep linear networks does not introduce any spurious local minima/maxima; it only introduces
saddle points. Importantly, Corollary 5 also provides a checkable condition that distinguishes global
minima from saddle points. Since ' is nonconvex, it is remarkable that such a simple necessary and
sufficient condition for global optimality is available.
Our result generalizes previous works on linear networks such as Kawaguchi (2016); Yun et al.
(2018); Zhou & Liang (2018), because it provides conditions for global optimality for a broader
range of loss functions without assumptions on datasets. Laurent & Brecht (2018b) proved that if
8
Published as a conference paper at ICLR 2019
(Wj)H=+l1 is a local min of ', then Wh+i：i is a critical point of 'o. First, observe that this result is
implied by Theorem 4.1. So our result, which was proved in parallel and independently, is strictly
more general. With additional assumption that critical points of `0 are global minima, Laurent
& Brecht (2018b) showed that “local min is global” property holds for linear neural networks; our
Corollay 5 gives a simple and efficient test condition as well as proving there are only global minima
and saddles, which is clearly stronger.
5	Discussion and future work
We investigated the loss surface of deep linear and nonlinear neural networks. We proved two the-
orems showing existence of spurious local minima on nonlinear networks, which apply to almost
all datasets (Theorem 1) and a wide class of activations (Theorem 2). We concluded by Theo-
rem 4, showing a general result studying the behavior of critical points in multilinearly parametrized
functions, which unifies other existing results on linear neural networks. Given that spurious local
minima are common in neural networks, a valuable future research direction will be investigating
how far local minima are from global minima in general, and how the size of the network affects this
gap. Another thing to note is that even though we showed the existence of spurious local minima
in the whole parameter space, things can be different in restricted sets of parameter space (e.g., by
adding regularizers). Understanding the loss surface in such sets would be valuable. Additionally,
one can try to show algorithmic/trajectory results of (stochastic) gradient descent. We hope that our
paper will be a stepping stone to such future research.
Acknowledgments
This work was supported by the DARPA Lagrange Program. Suvrit Sra also acknowledges support
from an Amazon Research Award.
References
Zeyuan Allen-Zhu, Yuanzhi Li, and Zhao Song. A convergence theory for deep learning via over-
parameterization. arXiv preprint arXiv:1811.03962, 2018.
Pierre Baldi and Kurt Hornik. Neural networks and principal component analysis: Learning from
examples without local minima. Neural networks, 2(1):53-58, l989.
Yoshua Bengio, Nicolas L Roux, Pascal Vincent, Olivier Delalleau, and Patrice Marcotte. Convex
neural networks. In Advances in neural information processing systems, pp. 123-130, 2006.
Alon Brutzkus and Amir Globerson. Globally optimal gradient descent for a ConvNet with gaussian
inputs. In International Conference on Machine Learning, pp. 605-614, 2017.
Alon Brutzkus, Amir Globerson, Eran Malach, and Shai Shalev-Shwartz. SGD learns over-
parameterized networks that provably generalize on linearly separable data. In International
Conference on Learning Representations, 2018.
Anna Choromanska, Mikael Henaff, Michael Mathieu, Gerard Ben Arous, and Yann LeCun. The
loss surfaces of multilayer networks. In Artificial Intelligence and Statistics, pp. 192-204, 2015.
Djork-Arne Clevert, Thomas Unterthiner, and SePP Hochreiter. Fast and accurate deep network
learning by exponential linear units (ELUs). arXiv preprint arXiv:1511.07289, 2015.
Simon S Du, Jason D Lee, Haochuan Li, Liwei Wang, and Xiyu Zhai. Gradient descent finds global
minima of deep neural networks. arXiv preprint arXiv:1811.03804, 2018a.
Simon S Du, Jason D Lee, Yuandong Tian, Aarti Singh, and Barnabas Poczos. Gradient descent
learns one-hidden-layer CNN: Dont be afraid of spurious local minima. In International Confer-
ence on Machine Learning, pp. 1338-1347, 2018b.
Simon S Du, Xiyu Zhai, Barnabas Poczos, and Aarti Singh. Gradient descent provably optimizes
over-parameterized neural networks. arXiv preprint arXiv:1810.02054, 2018c.
9
Published as a conference paper at ICLR 2019
Soheil Feizi, Hamid Javadi, Jesse Zhang, and David Tse. Porcupine neural networks:(almost) all
local optima are global. arXiv preprint arXiv:1710.02196, 2017.
C Daniel Freeman and Joan Bruna. Topology and geometry of half-rectified network optimization.
In International Conference on Learning Representations, 2017.
Benjamin D Haeffele and Rene Vidal. Global optimality in neural network training. In Proceedings
ofthe IEEE Conference on Computer Vision and Pattern Recognition, pp. 7331-7339, 2017.
Kenji Kawaguchi. Deep learning without poor local minima. In Advances in Neural Information
Processing Systems, pp. 586-594, 2016.
Gunter Klambauer, Thomas Unterthiner, Andreas Mayr, and Sepp Hochreiter. Self-normalizing
neural networks. In Advances in Neural Information Processing Systems, pp. 972-981, 2017.
Steven G Krantz and Harold R Parks. A primer of real analytic functions. Springer Science &
Business Media, 2002.
Thomas Laurent and James Brecht. The multilinear structure of ReLU networks. In International
Conference on Machine Learning, pp. 2914-2922, 2018a.
Thomas Laurent and James Brecht. Deep linear networks with arbitrary loss: All local minima are
global. In International Conference on Machine Learning, pp. 2908-2913, 2018b.
Yuanzhi Li and Yingyu Liang. Learning overparameterized neural networks via stochastic gradient
descent on structured data. In Advances in Neural Information Processing Systems, pp. 8168-
8177, 2018.
Yuanzhi Li and Yang Yuan. Convergence analysis of two-layer neural networks with ReLU activa-
tion. In Advances in Neural Information Processing Systems, pp. 597-607, 2017.
Shiyu Liang, Ruoyu Sun, Jason D Lee, and R Srikant. Adding one neuron can eliminate all bad
local minima. In Advances in Neural Information Processing Systems, pp. 4355-4365, 2018a.
Shiyu Liang, Ruoyu Sun, Yixuan Li, and Rayadurgam Srikant. Understanding the loss surface of
neural networks for binary classification. In International Conference on Machine Learning, pp.
2840-2849, 2018b.
Haihao Lu and Kenji Kawaguchi. Depth creates no bad local minima. arXiv preprint
arXiv:1702.08580, 2017.
Quynh Nguyen and Matthias Hein. The loss surface of deep and wide neural networks. In Pro-
ceedings of the 34th International Conference on Machine Learning, volume 70, pp. 2603-2612,
2017.
Quynh Nguyen and Matthias Hein. Optimization landscape and expressivity of deep CNNs. In
International Conference on Machine Learning, pp. 3727-3736, 2018.
Itay Safran and Ohad Shamir. Spurious local minima are common in two-layer ReLU neural net-
works. In International Conference on Machine Learning, pp. 4430-4438, 2018.
Ohad Shamir. Are ResNets provably better than linear predictors? In Advances in Neural Informa-
tion Processing Systems, pp. 505-514, 2018.
Mahdi Soltanolkotabi. Learning ReLUs via gradient descent. In Advances in Neural Information
Processing Systems, pp. 2007-2017, 2017.
Daniel Soudry and Yair Carmon. No bad local minima: Data independent training error guarantees
for multilayer neural networks. arXiv preprint arXiv:1605.08361, 2016.
Grzegorz Swirszcz, Wojciech Marian Czarnecki, and Razvan Pascanu. Local minima in training of
neural networks. arXiv preprint arXiv:1611.06310, 2016.
10
Published as a conference paper at ICLR 2019
Yuandong Tian. An analytical formula of population gradient for two-layered ReLU network and its
applications in convergence and critical point analysis. In International Conference on Machine
Learning,pp. 3404-3413, 2017.
Luca Venturi, Afonso Bandeira, and Joan Bruna. Neural networks with finite intrinsic dimension
have no spurious valleys. arXiv preprint arXiv:1802.06384, 2018.
Gang Wang, Georgios B Giannakis, and Jie Chen. Learning ReLU networks on linearly separable
data: Algorithm, optimality, and generalization. arXiv preprint arXiv:1808.04685, 2018.
Chenwei Wu, Jiajun Luo, and Jason D Lee. No spurious local minima in a two hidden unit ReLU
network. In International Conference on Learning Representations Workshop, 2018.
Bo Xie, Yingyu Liang, and Le Song. Diverse neural network learns true target functions. arXiv
preprint arXiv:1611.03131, 2016.
Xiao-Hu Yu and Guo-An Chen. On the local minima free condition of backpropagation learning.
IEEE Transactions on Neural Networks, 6(5):1300-1303, 1995.
Chulhee Yun, Suvrit Sra, and Ali Jadbabaie. Global optimality conditions for deep neural networks.
In International Conference on Learning Representations, 2018.
Xiao Zhang, Yaodong Yu, Lingxiao Wang, and Quanquan Gu. Learning one-hidden-layer ReLU
networks via gradient descent. arXiv preprint arXiv:1806.07808, 2018.
Kai Zhong, Zhao Song, Prateek Jain, Peter L Bartlett, and Inderjit S Dhillon. Recovery guarantees
for one-hidden-layer neural networks. In International Conference on Machine Learning, pp.
4140-4149, 2017.
Yi Zhou and Yingbin Liang. Critical points of neural networks: Analytical forms and landscape
properties. In International Conference on Learning Representations, 2018.
Yi Zhou, Junjie Yang, Huishuai Zhang, Yingbin Liang, and Vahid Tarokh. SGD converges to global
minimum in deep learning via star-convex path. In International Conference on Learning Repre-
sentations, 2019.
Difan Zou, Yuan Cao, Dongruo Zhou, and Quanquan Gu. Stochastic gradient descent optimizes
over-parameterized deep ReLU networks. arXiv preprint arXiv:1811.08888, 2018.
11
Published as a conference paper at ICLR 2019
A1 Notation
We first list notation used throughout the appendix. For integers a ≤ b, [a, b] denotes the set of
integers between them. We write [b], if a = 1. For a vector v, we use [v]i to denote its i-th
component, while [v][i] denotes a vector comprised of the first i components of v. Let 1d (or 0d) be
the all ones (zeros) column vector in Rd. For a subspace V ⊆ Rd, we denote by V ⊥ its orthogonal
complement.
For a matrix A, [A]i,j is the (i,j)-th entry and [A]∙,j its j-th column. Let σmaχ(A) and σmin(A)
denote the largest and smallest singular values of A, respectively; row(A), col(A), rank(A), and
kAkF denote respectively the row space, column space, rank, and Frobenius norm of matrix A. Let
null(A) := {v | Av = 0} and leftnull(A) := {v | vTA = 0} be the null space and the left-null
space of A, respectively. When A is a square matrix, let tr(A) be the trace of A. For matrices
A and B of the same size, hA, Bi = tr(ATB) denotes the usual trace inner product of A and B.
Equivalently, hA, Bi = tr(AT B) = tr(ABT). Let 0d×m be the all zeros matrix in Rd×m.
A2	Proof of Theorem 1, Step 2, Case 2
Case 2. J = 0. We start with a lemma discussing what J = 0 implies.
LemmaA.1. If J = 0, thefollowing statements hold:
1.	There are some yj S that are duplicate; i.e. for some i = j, y = j
2.	If yjj is non-duplicate, meaning that yjj-ι < y < yj+ι, yjj = y§ holds.
3.	If yj is duplicate, £%.%=§, (y - yi)=0 holds.
4.	There exists at least one duplicate yj∙ such that, for that yj-, there exist at least two different
i ,s that satisfy %=yj- and ④i = yi.
Proof We prove this by showing if any of these statements are not true, then we have J 6= 0 or a
contradiction.
1.	If all the yj's are distinct and J = 0, by definition of J, yj = yj for all j. This violates
our assumption that linear models cannot perfectly fit Y .
2.	If We have yj∙ = yj∙ for a non-duplicate yj-, at least one of the following statements must
hold: Pi≤j-ι(y - yi) =0 or Pi≤j(yi - yi) = 0, meaning that j - 1 ∈ J or j ∈J.
3.	Suppose yj is duplicate and P^i=^jj (yi — yi) = 0. Let k = min{i | yi = yj-} and l =
max{i | yi = yj∙}. Then at least one of the following statements must hold: Pi≤k-ι(yi -
yi) = 0 or Pi≤ι(yi - yi) = 0. If Pi≤k-ι(yi 一 yi) = 0, we can also see that yk-ι < 族,
so k - 1 ∈ J. Similarly, if Pi≤ι(yi - yi) = 0, then l ∈ J.
4.	Since Pi.yi=yj (yi - yi) = 0 holds for any duplicate yj-, if yji = yi holds for one i then
there must be at least two of them that satisfies Gi = yi. If this doesn,t hold for all duplicate
yi, with Part 2 this means that yj∙ = yj∙ holds for all j. This violates our assumption that
linear models cannot perfectly fit Y .
□
From Lemma A.1.4, we saw that there is a duplicate value of yj∙ such that some of the data points i
satisfy yi = yj- and Gi = yi. The proof strategy in this case is essentially the same, but the difference
is that we choose one of such duplicate yj-, and then choose a vector V ∈ Rdx to “perturb” the linear
least squares solution [WW][dx] in order to break the tie between i,s that satisfies y = yj- and yji = yi.
We start by defining the minimum among such duplicate values y* of yj∙ 's, and a set of indices j that
satisfies yj∙ = y*.
9* = min{yj∙ ∣∃i = j such that y = yj∙ and yi = yi},
12
Published as a conference paper at ICLR 2019
J* = {j ∈ [m] | yj = y*}.
Then, We define a subset of J*:
J=* = {j ∈ J* | yj = yj}.
By Lemma A.1.4, cardinality of J6=* is at least tWo. Then, We define a special index in J6=*:
j1 = argmax kxj k2 ,
j∈j=
Index j1 is the index of the “longest” xj among elements in J6=*. Using the definition ofj1, We can
partition J* into tWo sets:
J≥* ={j∈J* | hxj,xj1i ≥ kxj1k22}, J<* ={j∈J* | hxj,xj1i< kxj1k22}.
For the indices in J*, We can alWays sWitch the indices Without loss of generality. So We can assume
that j ≤ j1 = max J≥* for all j ∈ J≥* and j > j1 for all j ∈ J<* .
We now define a vector that will be used as the “perturbation" to [WW] [dx]. Define a vector V ∈ Rdx,
Which is a scaled version of xj1 :
g
V= M kxj1k2Xj1,
where the constants g and M are defined to be
g = Imin{∣yi - yj| | i,j ∈ [m],yi = yj} , M = max IEk2 .
The constant M is the largest kxi k2 among all the indices, and g is one fourth times the minimum
gap between all distinct values of y〃
Now, consider perturbing [WW][dx] by a vector -avτ. where α ∈ (0,1] will be specified later.
Observe that
(WW - [αvτ 0]) Xi = WW Xi — avTXi = yji — αvτx%.
Recall that j ≤ j1 = max J≥* for all j ∈ J≥* and j > j1 for all j ∈ J<* . We are now ready to
present the following lemma:
Lemma A.2. Define
j2 = argmax〈Xj ,XjJ , β = y* - αvT(xj + xj2).
j∈J<	2
Then,
yi — avTXi — β < 0 for all i ≤ jι,
y% — avTXi — β > 0 for all i > jι.
Also，Pi>jι (yi - yi) - Pi≤jι(yi - yi) = -2(yjι - yjι ) = 0 ∙
Proof First observe that, for any Xi, ∣αvτXi| ≤ α |同卜 ∣Ek2 ≤ M IlXiIl2 ≤ g. By definition of
g, we have 2g < yj — y% for any y% < yj. Using this, we can see that
yi < yj	=⇒	yi	— αvτXi	≤ yi	+ g <	yj	— g ≤	yj	— αvτXj.	(A.1)
In words, if yi and yj are distinct and there is an order yji < yj, perturbation of [W][dx] by —avT
does not change the order. Also, since V is only a scaled version of Xj1 , from the definitions of J≥*
and J<* ,
VT (Xj — Xj1 ) ≥ 0 forj ∈ J≥* and VT (Xj — Xj1 ) < 0 forj ∈ J<* .	(A.2)
By definition ofj2,
VT (Xj2 — Xj1 ) < 0 and VT (Xj2 — Xj) ≥ 0 for all j ∈ J<* .	(A.3)
13
Published as a conference paper at ICLR 2019
It is left to prove the statement of the lemma using case analysis, using the inequalities (A.1), (A.2),
and (A.3). For all i’s such that y < y* = j,
T	T	_*, α T
yi - av Xi - β = yi - av Xi - y + - V (xjl + Xj2)
=(yi - QVTXi) - H - QVTXji) + — vt(χj2 - Xji) < 0.
Similarly, for all i such that 为 >y* = yj2 ,
yi - QVTXi - β = (yi - QVTXi) - (y* - QVTXj2) + — vt(x^ - Xj2) > 0.
For j ∈ J≥* (j ≤ jι), We know 4=y*, so
yj - qvtXj - β =(矿-qvtXj) - (y* - — vt(Xji + Xj2))
=QVT [(Xji — Xj )] + —VT [(Xj2 — Xji )] < 0.
Also, for j ∈J< (j>jι),
yj - qvtXj - β =(矿-qvtXj) - (y* - — vt(Xji + Xj2))
=—VT [(Xji - Xj ) + (Xj2 - Xj)] > 0∙
This finishes the case analysis and proves the first statements of the lemma.
One last thing to prove is that Pi>ji (y - yi) - Pi≤ji (yi - yi)= ——坂 -yji) = 0. Recall from
Lemma A.1.2 that for non-duplicate yj∙, we have yj∙ = yj∙. Also by Lemma A.1.3 if yj is duplicate,
Pi%=% (yi -yi)=°. So,
E (yi — yi) — E (yi — yi) = E (统一yi) — E (yi — yi) .
i>ji	i≤ji	i∈J<	i∈J≥
Recall the definition of J= = {j ∈ J* | yj∙ = yj∙}. For j ∈ J*∖J=, y = yj∙. So,
E (yi — yi) — E (yi — yi) = E (统一yi) — E (统一yi) .
i∈J	i∈J	i∈J ∩J=	i∈J ∩J=
Recall the definition of jι
argmaxj∈j* IIXjll2. For any other j ∈ J= ∖{jι},
IlXjJ2 ≥ llXjl∣2 llXji k2 ≥ hXj,Xjii,
where the first ≥ sign is due to definition of jι, and the second is from Cauchy-Schwarz inequality.
Since Xji and Xj are distinct by assumption, they must differ in either length or direction, or both.
So, we can check that at least one of "≥'' must be strict inequality, so IlXj11∣2 >(Xj, XjJ for all
j ∈ J= ∖{jι}.Thus,
J= ∖{jι}=久 ∩ J= and {jι} = J≥ ∩ J=,
proving that
E (yi - yi) - E (yi - yi) = E	(yi - yi) - (yji - yjJ.
i>ji	i≤ji	j∈J ∖{ji}
Also, by Lemma A.1.3,
0 = £ (yi - yi) = E (yi - yi) = (yji - yji)+ E Iy - y/
i∈J *	i∈J*	j∈J ∖{ji}
Wrapping up all the equalities, we can conclude that
E (yi - yi) - E (yi - yi) = -2 (yji - yji ) ,
i>ji	i≤ji
14
Published as a conference paper at ICLR 2019
finishing the proof of the last statement.
□
ɪ, ∙	,	, ,ι	, ∕τrr ∖ 9	ι	∙ ∙ ι ∙ ι ∙	, ∙ , ι	11 .ι . ι
It is time to present the parameters (Wj, bj)j=1, whose empirical risk is strictly smaller than the
local minimum (Wj,bj)j=1 with a sufficiently small choice of α ∈ (0,1]. Now, let Y be a constant
such that
Y = Sign((y∙ι — y∙ι)(S+ — s-)) °v (Xj；~xj2).	(A.4)
Its absolute value is proportional to α ∈ (0,1], which is a undetermined number that will be specified
at the end of the proof. Since ∣γ∣ is small enough, We can check that
sign(yi - avτXi - β) = sign(yi - avτXi - β + Y) = sign(yi - avτXi - β - γ).
Then, assign parameter values
〜	[W⅛x] - avτ
W1 = -[W][dx]+ avτ
_	0(dι-2)×dχ .
1
W2 =--------- 1 -1
s+ + S-
With these parameter values,
~	-[W]dχ+ι- β + Y
,bi = -[W]dx + 1 + β + Y
0dι-2
θτ1-2] , b2 = β.
〜	〜	yi - QVTXi - β + γ
WiXi + bi = -yi + QVT Xi + β + γ
0dι-2
As We saw in Lemma A.2, for i ≤ ji, yi - αvτXi - β + γ < 0 and -yi + αvτXi + β + γ > 0. So
yi = W2hs 十,s— (WiXi + bi) + b2
= -------S-(yi - αvτXi - β + Y)-------s+(-yi + αvτXi + β + Y) + β
S+ + S-	S+ + S-
=yi - αvτXi - s+ - S- Y.
S+ + S-
Similarly, for i > ji, yi - αvτXi - β + y > 0 and -yi + αvτXi + β + y < 0, so
yi = W2^s+,s- (WiXi + bi) + b2 = yi - αvτXi +
S+ - S-
----1----Y
S+ + S-
Now, the squared error loss of this point is
'((Wj ,bj )2=i) = 1 kY - YkF
2
S+ - S-
—l—y - yi
S+ + S-
+
1	τ	S+ - S-
5 工 yi- αv Xi +	— y - yi
2	i>j1'	S+ + S-	)
1 二,	丁	、2L,	丁	、L,	,	、
2 £ (yi - αvτXi - yi) + E (yi - αvτXi - yi) -E (yi - QVTXi - yi)
i=i	i>jι	i≤jι
r Y+O(Y2)
=20(W) - Q
m
£绿-yi)XT V + O(Q2)+	£& - yi) - £& - yi)
i=i	i>j1	i≤j1
S+≡ γ+O(QY )+o(y2).
Recall that Pm=I (yi - yi) XT = 0 for least squares estimates y. From Lemma A.2, we saw that
∑i>j1 (yi - yi) - pi≤j1 (yi - yi) = -2(yjι - yjι). AS seen in the definition of Y (A.4), the
magnitude of Y is proportional to Q. Substituting (A.4), we can express the loss as
'((Wj,bj)2=i) = '0(W) - Q…可厂j-)∣vT(XjI-Xj2) + O(Q2).
2(s+ + S-)
Recall that vτ(XjI - Xj2) > 0 from (A.3). Then, for sufficiently small Q ∈ (0,1],
'((Wj,bj)2=i) < '0(W) = '((Wj, bj)2=i),
therefore proving that (Wj, bj)2=i is a spurious local minimum.
15
Published as a conference paper at ICLR 2019
A3 Proof of Theorem 2
A3.1 Proof of Part 1
Given v1, v2, v3, v4 ∈ R satisfying conditions (C2.1) and (C2.2), we can pick parameter values
∕τ7τ^ γz ∖ 9	,	f , 1 r' , , 1	∙	1 ,	,
(Wj , bj )j2=1 to perfectly fit the given dataset:
W1 =	V3	V2 , bl = 0，W2	=	(h(v3)h	(v1+v2)	-h(vι)h (v3+v4)) — 1	口侬)—4。1儿卜=。.
With these values, We can check that Y = [0 0 1], hence perfectly fitting Y, thus the loss
'((Wj, bj)2=1) = 0.
A3.2 Proof of Part 2
Given conditions (C2.3)-(C2.7) on v1,V2,u1 ,u2 ∈ R, we prove below that there exists a local
minimum (Wj, bj )2=1 for which the output of the network is the same as linear least squares model,
and its empirical risk is '((W7- ,bj) 2=1) = 3. If the conditions of Part 1 also hold, this local minimum
is strictly inferior to the global one.
First, compute the output Y of linear least squares model to obtain Y= [ɪ	11 3]. Now assign
parameter values
v1	v1
v2	v2
,b1 = 0 , W2 = [u1	u2], b2 = 0.
With these values we can check that Y = [3 11	11 ], under condition (C2.3): u1h(v1)+u2h(v2)=
3.	The empirical risk is '((Wj, bj)2=1) = 1 (9 + 1 + 9) = 11.
It remains to show that this is indeed a local minimum of '. To show this, we apply perturbations to
the parameters to see if the risk after perturbation is greater than or equal to '((Wj■, bj )2=1). Let the
perturbed parameters be
v1 + δ11 v1 + δ12
v2 + δ21 v2 + δ22
,b1
β1
β2
T T 7^	Γ	ɪ	Z A L、
W2 = [u1 + 1 u2 + 2] , b2 = γ, (A.5)
where δ11, δ12, δ21, δ22, β1, β2, 1, 2, and γ are small real numbers. The next lemma rearranges
the terms in '((Wj, bj)j2=1) into a form that helps us prove local minimality of (Wj, bj)j2=1. Ap-
pendix A4 gives the proof of Lemma A.3, which includes as a byproduct some equalities on poly-
nomials that may be of wider interest.
Lemma A.3. Assume there exist real numbers v1 ,v2,u1 ,u2 SuCh that conditions (C2.3)-(C2.5)
hold. Then, for perturbed parameters (Wj, bj)j2=1 defined in (A.5),
'((W7, bj)2=1 ) ≥ 1 + α1(δ11 - δ12)2 + α2(δ21 - δ22)2 + α3(δ11 -δ12)(δ21 -δ22),	(A∙6)
where α, =	uih1Fi)	+	Ui (h+ o(i) ,for i = 1,	2,	and α3	=	u1u2h(："" (v2)+	o(1),	and o(1)
contains terms that diminish to zero as perturbations vanish.
To make the the sum of the last three terms of (A.6) nonnegative, we need to satisfy α1 ≥ 0
and α23 - 4α1 α2 ≤ 0; these inequalities are satisfied for small enough perturbations because of
conditions (C2.6)-(C2.7). Thus, we conclude that '((Wj, bj)2=1) ≥ 11 = '((Wj, bj)2=1) for small
enough perturbations, proving that (Wj, bj)j2=1 is a local minimum.
A4 Proof of Lemma A.3
The goal of this lemma is to prove that
'((Wj, bj)2=1) =1 + 3(perturbations)2 +
u1h00(v1)
12
+ o(1) (δ11 - δ12)2
+
4
16
Published as a conference paper at ICLR 2019
,(u2h00(V2)	u2(h0(V2))2	∩Λ zʌ .、2
+ I --12----1----4----+ o(1) ) (δ21 - δ22)
+ (u1u2h0(，(V2)+。⑴)(δ11 - δ12)(δ21 - δ22),
where o(1) contains terms that diminish to zero as perturbations decrease.
(A.7)
Using the perturbed parameters,
W X + b 1 T =	v1	+ δ11	+	β1	v1 +	δ12	+ β1	v1	+	δ11 + δ12	+ β1
1	+ 1 m =	[v2	+ δ21	+	β2	V2 +	δ22	+ β2	V2	+	δ2⅛δ22	+ β2J	,
so the empirical risk can be expressed as
'((Wj, bj)2=ι)
=2IW2h (WIX + bιim) +b2im - YkF
12
=2 [(uι + e1)h(v1 + δ11 + βι) + (u2 + e2)h(v2 + δ21 + β2) + Y]
12
+ 2 [(uι + e1)h(v1 + δ12 + βι) +	(u2 +	e2)h(v2 + δ22	+ β2)	+ γ]
∣1L 1	∖ι δ l δ11 + δ12	1 Q、1 / l δ2	( l	δ21 + δ22	l zq ʌ	l	J 2
+ 2 (uι + eι)h I vι +-2-+ βι I	+ (u2 + e2)h	I V2 +-----2-----+ β2 I	+ Y	-	1
(A.8)
So, the empirical risk (A.8) consists of three terms, one for each training example. By expanding
the activation function h using Taylor series expansion and doing algebraic manipulations, we will
derive the equation (A.7) from (A.8).
Using the Taylor series expansion, we can express h(V1 + δ11 + β1) as
∞ h(n)(V )
h(vι + δπ + βι) = h(vι) + T —^2(διι + βι)n∙
n!
n=1
Using a similar expansion for h(V2 + δ21 + β2), the first term of (A.8) can be written as
12
2 [(uι + e1)h(v1 + δ11 + βι) + (u2 + e2)h(v2 + δ21 + β2) + Y]
1 (U1 + eι) (h(vι) + X∞ h(nnvi)(διι + βι)n) +(u2 + e2) (h(v2) + X hnηv2)(δ21 + β2)n) + Y
ɔ O + e1h(VI) +	(u1	+ e1) ^X ----]-ɪɪ (δ11	+	βI)n	+ e2h(v2)	+	(u2 + e2)	^X -T^2ɪ(δ21 + β2)n	+ Y
2 3	n!	n!
n=1	n=1
where we used u1h(v1)+u2 h(v2) = 1. To simplify notation, let us introduce the following function:
∞ h(n)(V )	∞ h(n)(V )
t(δ1, δ2) = eιh(VI) + e2h(v2) + Y +	(UI + e1)	^X ---n--(δ1	+	β1)n +	(u2 + e2) ^X -n----(δ2	+	e2尸∙
n=1	n=1
With this new notation t(δ1 , δ2 ), after doing similar expansions to the other terms of (A.8), we get
'((Wj, bj)2=ι)
=2 [ 1+t(δ11,δ21)i2+1 [ 3+t(δ12,δ22)i2+2 卜 2+1 (—,「)[
23	23	2	3	2	2
=3 + 1 [t(διι, δ21)+ t(δ12,δ22) - 2t (δ11+δ12, δ21+δ22)
2
+ 2 [t(δ11,δ21)]2 + 2 [t(δ12, δ22)]2 + 2 [t	皿,δ21+δ22)]	(A.9)
Before we show the lower bounds, we first present the following lemmas that will prove useful
shortly. These are simple yet interesting lemmas that might be of independent interest.
17
Published as a conference paper at ICLR 2019
Lemma A.4. For n ≥ 2,
an + bn — 2 (a+b) =(a - b)2Pη(a, b),
where pn is a polynomial in a and b. All terms in pn have degree exactly n - 2. When n = 2,
P2 (a, b) = 1.
Proof The exact formula for pn (a, b) is as the following:
n-2
pn (a, b) =
k=0
k+1-2-n+1X(k+1 - l)n	an-k-2bk.
Using this, we can check the lemma is correct just by expanding both sides of the equation. The
rest of the proof is straightforward but involves some complicated algebra. So, we omit the details
for simplicity.	□
Lemma A.5. For n1, n2 ≥ 1,
an1 cn2 + bn1 dn2
=(a - b)2qn1,n2(a, b, d) + (c- d)2qn2,n1(c, d, b) + (a - b)(c - d)rn1,n2 (a, b,c, d)
where qn1,n2 and rn1,n2 are polynomials in a, b, cand d. All terms in qn1,n2 and rn1,n2 have degree
exactly ni + n — 2. When nι = n = 1, q1,1(a, b,d) = 0 and r1,1(a, b, c, d) = 2.
Proof The exact formulas for qn1,n2 (a, b, d), qn2,n1 (c, d, b), and rn1,n2 (a, b,c, d) are as the fol-
lowing:
n1 -2
qn1,n2(a,b,d) =
k1=0
k1
k1+1—2-n1+1X(k1+1—l1) nl1
l1=0	1
an1-k1-2bk1dn2
n2 -2
qn2,n1 (c, d, b) =
k2=0
k2
k2 + 1 — 2-n2+1 X (k2 + 1 — l2)
l2=0
bn1cn2-k2-2dk2
n1 -1 n2 -1
rn1,n2(a,b,c,d) =
k1=0 k2=0
1 — 2-n1-n2+1 Xk1 Xk2 (nl11(nl22
l1=0 l2=0	1	2
an1
2 (中Γ
(三V
Similarly, we can check the lemma is correct just by expanding both sides of the equation. The
remaining part of the proof is straightforward, so We will omit the details.	□
Using Lemmas A.4 and A.5, we will expand and simplify the “cross terms” part and “squared terms
part of (A.9). For the “cross terms” in (A.9), let us split t(δ1, δ2) into two functions t1 and t2:
t1(δ1, δ2) =1h(v1) + 2h(v2) + γ + (u1 + 1)h0(v1)(δ1 + β1) + (u2 + 2)h0(v2)(δ2 + β2)
∞ h(n)(v )	∞ h(n)(v )
t2(δ1, δ2) =(UI + eI) ^X ----n---(δ1 + βI) + (U2 + ∈2) ^X -------n----(δ2 + β2),
n=2	n=2
so that t(δ1, δ2) = t1(δ1, δ2) + t2(δ1, δ2). It is easy to check that
t1(δ11, δ21) + t1(δ12, δ22) — 2t1
διι + δi2
2-
δ21 + δ22 ) = 0
2
Also, using Lemma A.4, we can see that
(δ11 + βI)n	+ (δ12	+ βI)n	— 2 ( 11	2——	+ βl)	=	(δ11	— δ12)2pn(δ11 +	8l, δ12	+ βI),
18
Published as a conference paper at ICLR 2019
so
(δ21 + β2)n + (δ22 + β2)n - 2 (δ21+ δ22
+ β2n
(δ21 -δ22)2pn(δ21+β2,δ22+β2),
δ11 + δ12 δ21 + δ22
-2-, -2-
t2(δ11, δ21) + t2(δ12, δ22) - 2t2
∞ h(n)(v )
= (UI + ei)(δll - δ12) V2 -------i--pn(δ11 + β1, δ12 + βI)
n!
n=2
∞ h(n)(v )
+(U2 + E2)(δ2i — δ22)2 T ---------i--Pn(δ21 + β2, δ22 + β2).
n!
n=2
Consider the summation
∞ h(n)(v )
E―卢 Pn(δ11 + β1,δ12 + βι).
n!
n=2
We assumed that there exists a constant c > 0 such that |h(n)(v1)| ≤ cnn!. From this, for small
enough perturbations δ11, δ12, and β1, we can see that the summation converges, and the summands
converge to zero as n increases. Because all the terms in pn (n ≥ 3) are of degree at least one, we
can thus write
X Spn(δ11 + β1,δ12 + βι) =中 + 0(1).
n!	4
n=2
h00(v )
So, for small enough δ11, δ12, and βι, the term -(^1) dominates the summation. Similarly, as
long as δ21, δ22, and β2 are small enough, the summation P∞=2 h nVPn(δ21 + 尸2, δ22 + 尸2) is
dominated by h 4v2). In conclusion, for small enough perturbations,
t(δ11, δ21)+ t(δ12, δ22) - 2t (δl4δ2, δ211δ2
=t2(δ11, δ21) + t2(δ12, δ22) - 2t2
δ11 + δi2
2
δ21 + δ22
2
= (ui + 0(1)) (-4^- -+ θ(1)J (δl1 — δ12)2 + (u2 + 0(1)) (-42- -+ 0(1)J (δ21 — δ22)2
=(Uh^ + o(1)) (δ11 - δ12)2 + (Uh^ +。⑴卜21 — δ22)2.	(A.10)
Now, it is time to take care of the “squared terms.” We will express the terms as
2 [t(δl1, δ21)]2 + 1 [t(δ12, δ22)]2 + 2 [t (δ11-δ12, T2)「
2	2	22	2
3	Γ, δ δ11 + δ12 δ21 + δ22λ-∣2 , 1 r,/ʌ K A12 , 1 r,/ʌ K	Γ, δ δ11 + δ12 δ21 + δ22
=2 ∏, ~^~)∖ +2[t(δ11,δ21)] +2[t(δ12,δ22)] - ∏,
(A.11)
and expand and simplify the terms in
2 [t(δl1,δ2l)]2 + 2 [t(δi2,δ22)]2 - [t (δ114δ2, δ21-δ22
This time, we splitt(δ1, δ2) in another way, this time into three parts:
t3 = 1h(v1) + 2h(v2) + γ,
∞ h(n)(v )
t4(δ1) = (UI + EI) ^X -----；----(δ1 + e1):
n=1	n!
19
Published as a conference paper at ICLR 2019
∞ h(n)(v )
t5(δ2) = (u2 + 62)X —^2)(δ2 + β2)n,
n!
n=1
so that t(δ1, δ2) = t3 + t4(δ1) + t5(δ2). With this,
2 [t(δ11, δ21)]2 + 2 [t(δ12, δ22)]2 -
=t3 t4(δ11) + t4(δ12) - 2t4
t δ δ11 + δ12 δ21 +「22
怛+δ2) + t5(δ21)+t5(δ22) - 2t5 (怛「■
+ 2 (t4(δ11))2 + (t4(δ12))2 ― 2 (t4
δl1 + δi2 ))2
+ 2 (t5(δ21))2 + (t5(δ22))2 ― 2 (t5
「21 +「22 ))2
+ t4 (δ11)t5 (δ21) + t4 (δ12)t5 (δ22) - 2t4
「11 + 「12	「21 + 「22
尸 5I
(A.12)
2
2
2
We now have to simplify the equation term by term. We first note that
t4(δll) + t4(δ12) - 2t4 (δ11+δ12) + t5(δ21)+ t5(δ22) - % (也+也
=t2 (δ11, δ21) + t2(δ12, δ22) - 2t2
δ11 + δ12 δ21 + δ22
2
2
so
t3
t4(「11) + t4(「12) - 2t4
("■逛)+ t5(δ2l)+ t5(δ22) - % (T2)]
「11 +「12「21 +「22
2	,	2
=t3 t2 (「11, 「21) + t2 (「12, 「22) - 2t2
=o(1) [(uh4(^ +。⑴)(δ11 — δ12)2 + (Uh^ +。⑴)(δ21 - δ22)2
(A.13)
as seen in (A.10). Next, we have
2
(t4(「11))2 + (t4(「12))2 - 2 t4
「11 + 「12
2
= (U1 + 61)2 X 一)("，(V[(「11 + β1)nι+n2 + (「12 + 民尸蜂一 2 (一 + βji
n1,n2=1	n1!n2!	2
= (U1 + 61)2(「11-「12)2 X	♦"：[：；G(VI)Pni+n2(「11 + 为，「12 + e1)
n1 ,n2=1	1 2
+ o(1)
(「11 - 「12)2,
(A.14)
when perturbations are small enough. We again used Lemma A.4 in the second equality sign, and
the facts that Pn1+n2 (∙) = o(1) whenever n1 + n > 2 and that p (∙) = 2. In a similar way,
(t5(「21))2 + (t5(「22))2- 2 (t5 (物产))2 = (u2("2v2"2 + o(1))(「21-「22产(A.15)
Lastly,
t4(「11)t5(「21)+ t4(「12)t5(「22)- "4 (「!！+^L5 (⅛+⅛
X	h(n1)(v1)h(n2)(V2)
= (UI + 6I)(U2 + 62)	〉，	---------；--；-----
n1!n2!
n1 ,n2=1
(「11 + 为广1(「21 + β2)n2
20
Published as a conference paper at ICLR 2019
+ (δl2 + βl)m (δ22 + β2产-2 (δl1+δl2 + 为](^f2 + B^
=(u1 + 1)(u2 + 2)
(δι1- δ12)2 XX	h(ni)(n1)n(n2)(v2)4…(必+户1,比2+β1,δ22+户2)
n1 ,n2=1	1	2
h(n,n11)n，v2) qn2,m (δ21+β2,δ22+β2,δ12+β1)
∞
+ (δ21 - δ22)2	X
n1 ,n2=1
∞
+ (δ11 - δ12)(δ21 - δ22)
n1,n2=1
h(n1)(v1)h(n2)(v2)
n1 !n2 !
1,n2 (δ11 + β1, δ12 + β1, δ21 + β2, δ22 + β2)
= (ui"2 +。⑴)(διι	—	δ12)2o⑴ +	(δ21	— δ22)2o⑴ +	(διι — δ12)(δ21	—	δ22) (―(	1；( 2)+。⑴
2 (A.16)
where the second equality sign used Lemma A.5 and the third equality sign used the facts that
qn1,n2(∙) = o(1) and。皿3 = o(1) whenever n1 + n2 > 2, and that q1,1(∙) = 0 and r1,1(∙) = 1.
If we substitute (A.13), (A.14), (A.15), and (A.16) into (A.12),
2
2 [t(δι1, δ21)]2 + 1 [t(δ12, δ22)]2 — [t (δ11+δ2,怛产)
=o(1) [(u1h4^ +。⑴)11 — δ12)2 + (uh4vl +。⑴)21 — δ22)2^
1 (u2(h0(VI))2	, Λ r	、2	1 (u2(h0(VG)2	∩Λ r..、2
+ 2 I----2-------+ O(I)J (δ11 一 δ12) + 2 I-2---+ O(I)J (δ21 一 δ22)
+ (u1 u2	+ o(1))	(δ11 — δ12)2o(1) +	(δ21	— δ22)2o(1) +	(δ11	—	δ12)(δ21	—	δ22)	(-’	1 2 ( " + o(1)
(UnhZ(VI))2 , ∩Λ /ʌ . A2 , (U (hz(v2))2 , ∩Λ /ʌ .、2
=I -----4-----+ o(1) I (δ11 — δ12) + I -4----+ o(1) I (δ21 — δ22)
+ (UM + o(1)) (δ11 — δ12)(δ21 — δ22).	(A.17)
We are almost done. If we substitute (A.10), (A.11), and (A.17) into (A.9), we can get
'((Wj, bj)2=1)
1	3
3 + 2
δ11 + δ12 δ21 + δ22
2	,	2
2
+ (u⅛^ +。⑴)(δ11 - δl2)2 + (U^ +。⑴卜21 — δ22)2
+ (u2≡< +。⑴)11 — δ12)2 + (u2≡< + O(1)) (δ21 - δ22)2
+ ( u1u*1)hZ(V2) +。⑴卜 δ11 — δ12)(δ21 — δ22)
3+2 [t(”出,物产)]2+(当2赳+u≡v<+。⑴)(δ11-δ12)2
+(当产+*巫+。⑴)321—δ22)2+( u1u2hz (V(V2)+。⑴)11-δ12)(δ21—δ22),
which is the equation (A.7) that we were originally aiming to show.
21
Published as a conference paper at ICLR 2019
A5 Proof of Corollary 3
For the proof of this corollary, We present the values of real numbers that satisfy assumptions (C2.1)-
(C2.7), for each activation function listed in the corollary: sigmoid, tanh, arctan, exponential linear
units (ELU, Clevert et al. (2015)), scaled exponential linear units (SELU, Klambauer et al. (2017)).
To remind the readers What the assumptions Were, We list the assumptions again. For (C2.1)-(C2.2),
there exist real numbers v1, v2, v3, v4 ∈ R such that
(C2.1) h(v1)h(v4) = h(v2)h(v3),
(C2.2) h(vι)h (v3+v4) = h(v3)h (v1++v2).
For (C2.3)-(C2.7), there exist real numbers v1, v2, u1, u2 ∈ R such that the folloWing assumptions
hold:
(C2.3) u1h(v1) + u2h(v2) = 3,
(C2.4) h is infinitely differentiable at v1 and v2,
(C2.5) There exists a constant c > 0 such that |h(n) (v1)| ≤ cnn! and |h(n)(v2)| ≤ cnn!.
(C2.6) (uιh0(v1))2 + u1h3(v1) > 0,
(C2.7) (uιh0(v1)u2h0(v2))2 < ((u1h0(v1))2 + u⅛1))((u2h0(v2))2 + u⅛2)).
For each function, We noW present the appropriate real numbers that satisfy the assumptions.
A5.1 Sigmoid
When h is sigmoid,
h(X)=1 + e；(-x)，h-1 (X)=l°g(τ⅛
Assumptions (C2.1)-(C2.2) are satisfied by
(v1,v2,v3,v4)
h-1 (1)，h-1 (4)，h-1
and assumptions (C2.3)-(C2.7) are satisfied by
(v1, v2, u1, u1)
Among them, (C2.4)-(C2.5) folloW because sigmoid function is an real analytic function Krantz &
Parks (2002).
A5.2 tanh
When h is hyperbolic tangent, assumptions (C2.1)-(C2.2) are satisfied by
(v1,v2,v3,v4) = f tanh-1 (2
tanh-1
tanh-1
tanh-1
and assumptions (C2.3)-(C2.7) are satisfied by
(v1, v2, u1, u1)
tanh-1
tanh-1 (4) ,1,-3
Assumptions (C2.4)-(C2.5) hold because hyperbolic tangent function is real analytic.
22
Published as a conference paper at ICLR 2019
A5.3 arctan
When h is inverse tangent, assumptions (C2.1)-(C2.2) are satisfied by
(v1,v2,v3,v4) = ftan (2
tan
tan
tan
and assumptions (C2.3)-(C2.7) are satisfied by
(v1, v2, u1, u1)
tan
Assumptions (C2.4)-(C2.5) hold because inverse tangent function is real analytic.
A5.4 Quadratic
When h is quadratic, assumptions (C2.1)-(C2.2) are satisfied by
1 1	1、
(v1,v2,v3,v4) = I 1, 2, 2, -4 I ,
and assumptions (C2.3)-(C2.7) are satisfied by
(v1, v2,u1,uI) = (1, 1, 6, 1),
Assumptions (C2.4)-(C2.5) hold because quadratic function is real analytic.
A5.5 ELU and SELU
When h is ELU or SELU,
x	x ≥ 0	1	x∕λ	x ≥ 0 h(x) = λfα(exp(x)- 1) x< 0 , h- (X) = flog (. + 1)x< 0 , λ	x≥0	0	x≥0

h0(x)= λα exp(x) x<0,	h00(x) = λα exp(x) x<0,
where α > 0, and λ = 1 (ELU) or λ > 1 (SELU). In this case, assumptions (C2.1)-(C2.2) are
satisfied by
Assumptions (C2.3)-(C2.7) are satisfied by
(V1,V2,U1,U2)= G ,log(3) ,2 ,λα),
where (C2.4)-(C2.5) are satisfied because h(x) is real analytic at v1 and v2.
A6 Proof of Theorem 2 for “ReLU-like” activation functions.
Recall the piecewise linear nonnegative homogeneous activation function
s+x x ≥ 0
hs+,s- (X)= b-X X< 0,
where s+ > 0, s- ≥ 0 and s+ 6= s-, we will prove that the statements of Theorem 2 hold for
h
s+,s-.
23
Published as a conference paper at ICLR 2019
A6.1 Proof of Part 1
In the case of S- > 0, assumptions (C2.1)-(C2.2) are satisfied by
(v1,v2,v3, v4) = 1-,-, ---, ---, -1 ).
s+	s-	s- s+
The rest of the proof can be done in exactly the same way as the proof of Theorem 2.1, provided in
Appendix A3.
For s- = 0, which corresponds to the case of ReLU, define parameters
W1 =	-2	2，b1	=	[0]，W2	=	hS+	-S+ i，b2	=0.
We can check that
021
hs+ ,s-(WιX + bιlT) = s+ [0 10 ,
so
W2hs+,s-(WιX + bιlT — = [0 0	1].
A6.2 Proof of Part 2
Assumptions (C2.3)-(C2.6) are satisfied by
(V1, v2 ,u1,uI) = ( ,—, -j-, 3, 3).
4s+ 4s+ 3 3
Assign parameter values
WI=V2	V2	, bi =	[0],W2	=	[u1	u2],	b2=0.
It is easy to compute that the output of the neural network is Y = [ ɪ ɪ 3 ] ,so ' ((Wj, b j) 2=i)=
1
3.
Now, it remains to show that this is indeed a local minimum of `. To show this, we apply perturba-
tions to the parameters to see if the risk after perturbation is greater than or equal to '((Wj■, bj )2=i).
Let the perturbed parameters be
WI =	[V1	+ δ21	v2 +	δ22]	, b1 = H2 =	[u1	+ e1	u2 + . ,	b2=γ,
where δ11, δ12, δ21, δ22, β1, β2, 1, 2, and γ are small enough real numbers.
Using the perturbed parameters,
WiX + biim
v1 + δ11	+	Bi	vi +	δ12	+	Bi	vi	+	δ11+ δ12	+ Bi
V2 + δ2i	+	β2	v2 +	δ22	+	β2	v2	+	δ21 + δ22	+ B2_	,
so the empirical risk can be expressed as
'((Wj, bj )2=i)
=2 k w2hs+,s-(wi X+bi1m)+b21m—Y IlF
12
=2 [(ui + ei)s+(vi + δii + βi) + (u2 + e2)s+(v2 + δ2i + β2) + γ]
+ 2 [(ui + ei)s+(vi + δi2 + βi) + (u2 + e2)s+(v2 + δ22 + β2) + Y]2
1
+ 2 (UI + ei)
s+ (vi + 空也 + βi) + (U2 + e2)s+(V2 + δ2i+δ22
+ B2 + γ- 1] .
24
Published as a conference paper at ICLR 2019
To simplify notation, let us introduce the following function:
t(δ1, δ2) = s+1v1 + s+2v2 + γ + s+ (u1 + 1)(δ1 + β1) + s+(u2 + 2)(δ2 + β2)
It is easy to check that
t(δl1, δ21) + t(δ12, δ22) - 2t (δl1+δl2, δ21-+δ22) = 0.
With this new notation t(δ1, δ2), we get
'((Wj, bj)2=ι)
=2 [ 1+ t(δl1,δ2l)l2 + 1 [3+ t(δi2,δ22)]2 + I >2+ t ( 丁 ,一)12
23	23	2	3	2	2
=3 + 1 [t(δ11, δ21) + t(δ12, δ22) - 2t (δ114δ2, δ21+δ22U
+ 2 [t(δ11, δ21)]2 + 2 [t(δ12, δ22)]2 + 1 [t ("■逛,δ21+δ22 J ≥ 3 = '((Wj, bj)2=1).
A7 Proof of Theorem 4
Before we start, note the following partial derivatives, which can be computed using straightforward
matrix calculus:
∂Wj =(WH+l:j+I)T V'θ(WH+1:I)(Wj-1:I)T,
for all j ∈ [H + 1].
A7.1 PROOF OF PART 1, IF dy ≥ dx
For Part 1, We must show that if V'o(WWh+i：i) = 0 then (Wj )H+ is a saddle point of '.Thus, We
show that (Wj )H+l1 is neither a local minimum nor a local maximum. More precisely, for each j, let
B(Wj) be an -Frobenius-norm-ball centered at Wj, and QjH=+11 B(Wj) their Cartesian product.
We wish to show that for every e > 0, there exist tuples (Pj)∏+l1, (Qj)H+11 ∈ QQH+l1 Be(Wj■) such
that
'((Pj)H11) > '((Wj)H11) > '((Qj)H+1).	(A.18)
To prove (A.18), we exploit '((WWj)∏+l1) = '0(Wh+i：i), and the assumption V'0(Wh+i：i) = 0.
The key idea is to perturb the tuple (Wjj )∏+l1 so that the directional derivative of '0 along Ph+1:1 —
WH+1:1 is positive. Since '0 is differentiable, ifPH+1:1 - WH+1:1 is small, then
'((Pj )H+1)= '0 (Ph+i：i)>'o(WH+1:i)= '((Wj)j=11).
Similarly, we can show '((Qj)H11) < '((Wj)H⅛1)∙ The key challenge lies in constructing these
perturbations; we outline our approach below; this construction may be of independent interest
too. For this section, we assume that dx ≥ dy for simplicity; the case dy ≥ dx is treated in
Appendix A7.2.
Since V'0(WH+i：i) = 0, col(V'0(Wh+i：i))⊥ must be a strict subspace of Rdy. Consider
∂'∕∂W1 at a critical point to see that (WH+13)τV'0(Wh+i：i) = 0, so Col(WH+i：2) ⊆
col(V'0(Wh+li))⊥ ( Rdy. This strict inclusion implies rank(Wh+i2) < dy ≤ di, so that
null(WH+i：2) is not a trivial subspace. Moreover, null(WH+13) ⊇ null( WH电)⊇ ∙∙∙ ⊇ null(W2).
We can split the proof into two cases: null(WH+1:2 ) 6= null(WH:2 ) and null(WH+1:2) =
null(WH:2).
Let the SVD of V'o(Wh+i：i) = Uι∑UT. Recall [U1]∙,1 and [UJ,i denote first columns of Ul and
Ur , respectively.
25
Published as a conference paper at ICLR 2019
Case 1: null(WH+1:2) 6= null(WH:2). In this case, null(WH+1:2) ) null(WH:2). We will per-
turb Wι and Wh+i to obtain the tuples (Pj)*1 and (Qj)*1. To create our perturbation, We
choose two unit vectors as follows:
V0 = [Ur]∙,1, v1 ∈ null(WH+1：2)∩ null(WH：2)」
Then, define ∆1 := ev1vT ∈ Rd1×dx, and V1 := W1 + ∆1 ∈ Be(W1). Since v1 lies in
null(WH+1：2), observe that
WH +1:2V1 = WH +1:1 + eWH +1:2v1v0 = WH +1:1.
With this definition of V1, We can also see that
▽'0(WH+1:I)VIT (WH :2)T = ▽%(WH+1:I)(WH:I)T + eV'θ(WH+1:I)VOvT (WH：2)T.
Note that V'o(!WH+1：1)(WH：1)T is equal to ∂'∕∂Wh+i at a critical point, hence is zero. Since
vo = [Ur]∙,1, we have V'o(Wh+i：i)vo = σmaχ(V'o(WH+L1))[Uι]∙,1, which is a nonzero column
vector, and since v1 ∈ null(WH e)⊥ = row(WH:2), VT (WH:2)T is a nonzero row vector. From this
observation, V'o(WH+1：1)v0vT(WH:2)T is nonzero, and so is V'o(Wh+i：i)ViT(WH:2)T.
We are now ready to define the perturbation on WH+1:
∆	:= eV'o(WH+1:I)VT (WH:2)T
H+1 L kV'o(WH+1:1)VT (WH:2)T kF ,
so that WH+1 + ∆H+1 ∈ Be(WH+1). Then, observe that
(δH+1wH:2V1, V'o(WH+1:1))= Qh+1, V'o(WH+1:I)VIT(WH:2)Ti > 0,
by definition of Δh+i∙ In other words, Δh+i WheH is an ascent direction of 'o at WH+1:1. Now
choose the tuples
(Pj )H11 = (V1, W2,..., W H, WH+1 + η∆H+1),
(Qj )H=11 = (½,1W2, . . . , WH, WH+1 - η∆H+1),
where η ∈ (0,1] is chosen suitably. It is easy to verify that (Pj)H+11, (Qj )*1 ∈ QH+11 Be(Wj),
and that the products
PH+1:1 = WH+1:1 + ?δH+1 WH:2V1,
QH+1:1
WH+1:1
一 η∆H+1WH:2V1.
Since 'o is differentiable, for small enough η ∈ (0,1], 'o(Ph+li) > 'o(WH+1:1) > 'o(Qh+li),
proving (A.18). This construction is valid for any e > 0, so we are done.
Case 2: null(WH+1:2) = null(WH:2). By and large, the proof of this case goes the same, except
that we need a little more care on what perturbations to make. Define
一 一 一 . .^ . ^ 、 ~
j = max{j ∈ [2,H] | null(Wj:2) ) null(Wj-L2)}.
. 一一 . …、 -

When you start from j = H down to j = 2 and compare null(Wj:2) and null(Wj-1:2), the first
iterate j at which you have null(WWj^) = null(WWj-1g) is j*. If all null spaces of matrices from
WH:2 to W2 are equal, j* = 2 which follows from the notational convention that null(W12)=
null(Idι) = {0}. According to j*, in Case 2 we perturb W1, WH+1, WH, ..., Wj* to get (Pj)31
and (Qj)jH=+11.
Recall the definition of left-null space of matrix A: leftnull(A) = {v | vTA = 0}. By definition of
j * , note that
null(WH+1:2) = null(WH:2) = .一 = null(Wj*e)
⇔ row(WH+1:2) = row(WH:2) = ∙一=row(Wj*g)
26
Published as a conference paper at ICLR 2019
⇔ rank(W_H+i：2)= rank( WH：2)= ∙∙∙ = rank(W7∙* ：2),
which means the products are all rank-deficient (recall rank( WH+1：2) < dy and all dj ≥ dy), and
hence they all have nontrivial left-null spaces IeftnUll(Wh：2),..., leftnull(Wj*：2)as well.
We choose some unit vectors as the following:
V	0 = [Ur]∙,1,
V	1 ∈ null(Wjj*：2) ∩ null(Wj*-i：2)X,
v	H+1 = [Ul]∙,1,
V	H ∈ IeftnUll(WH：2),
V	j* ∈ leftnull(Wj*：2).
Then, fora Y ∈ (0, e] whose value will be specified later, define
∆1 := γv1V(T ∈ Rd1 ×dχ,
Δh+i ：= YVh+ivH ∈ Rdy XdH,
• ∙ ∙
∆j* + 1 := γVj* + ιvT* ∈ Rdj*十1×dj*,
and Vj := Wj + ∆j accordingly for j = 1, j* + 1,..., H +1.
By definition of ∆j ’s, note that
VH+1：j* + 1Wj*：2V1
=VH+1： j*+2 Wj*+ 1：2V1 + VH+1： j*+2 ∆j* + ι Wj* ：2V1 = VH+1： j*+2 Wj* + 1：2 Vi	(A.19)
一TΛ	TΛΛ	TΛ ɪ TΛ	ʌ TΛΛ	TΛ 一 TΛ	TΛΛ	TΛ	/A GC∖
=VH+1：j*+3 Wj*+ 2：2 V1 + VH+1： j*+3∆j*+ 2 Wj*+ 1：2 V1 = &+1：/*+3卬/*+2：2 V1	(A.20)
=∙ ∙ ∙
=Wh+1：2V1 + Δh+1Wh：2V1 = WH+1：2V1	(A.21)
=Wh+1：1 + W∏+1eΔ1 = WH+1：1,	(A.22)
where in (A.19) We used the definition that Vj* ∈ IeftnUll(W7∙*e), in (A.20) that Vj*+1 ∈
IeftnUll(Wj*+1：2), in (A.21) that VH ∈ IeftnU11(Wh：2), and in (A.22) that V1 ∈ null(Wj*：2).
Now consider the following matrix product:
(VH+1：j* + 1)T V40(WH+1：1)VLT (Wj*-1：2)T
= (Wj* + 1 + ∆j* + 1)τ ∙∙∙ (WH+1 + Δh+1)t V40(WH+1：1)(W1 + Δ1)t WT ∙∙∙ WT-1. (A.23)
We are going to show that for small enough Y ∈ (0, e], this product is nonzero. If We expand (A.23),
there are many terms in the summation. However, note that the expansion can be arranged in the
following form:
(W∙* + 1 + ∆j* + 1)T ∙∙∙ (WH+1 + Δh+1 )t V40(WH+1：1)(W 1 + Δ1)t WT ∙∙∙ WT-1
=。0 + C1Y + C272 + ∙∙∙ + CH-j*+2YH-j*+2	(A.24)
where Cj ∈ Rdj* ×dj*-1 for all j and Cj doesn,t depend on 7, and specifically
C0 =呷 + 1 ∙∙∙ WH +1V40(WH+1：1) WT WT ∙∙∙ WT-1,
CH-j*+2 = YHji ∆T* + 1 ∙ ∙ ∙ ∆H+1V'0(Wh+1Q∆T WT ∙∙∙ WT-1.
Because the C° is exactly equal to 需 * evaluated at a critical point ((Wj)H⅛1), C0 = 0. Also, due
to definitions of ∆j ’s,
CH-j*+2 =(Vj*VT+ 1)(Vj* + 1Vjτ+2) ∙∙∙ (vhVH +1)V'0(WH +1：1)(V0VT)(Wj*-1：2)T
27
Published as a conference paper at ICLR 2019
=Vj* VH+1V'0(WH+i：i)vovT (W>-1:2)T
First, Vj* is a nonzero	column vector. Since	vh+i =	[U1]∙,1 and vo =	[Ur]∙,ι,
VH+1V'0(WH+1：1)V0 =	σmaχ(V'o(WH+上1)) > 0.	Also,	since	v1 ∈ row(Wj*τ2),
VT(Wj*-i：2)T will be a nonzero row vector. Thus, the product CH-j*+2 Will be nonzero.
Since CH-j*+2 6= 0, we can pick any index (α, β) such that the (α, β)-th entry of CH-j*+2,
denoted as [CH-j*+2]α,β, is nonzero. Then, the (α, β)-th entry of (A.24) can be written as
ClY + C2Y 2 +---+ CH-j*+2YH-j*+2,	(A.25)
where cj = [Cj]α,β . To show that the matrix product (A.23) is nonzero, it suffices to show that its
(α, β)-th entry (A.25) is nonzero. If ci =…=CH-j∙*+ι = 0, then with the choice of Y = e, (A.25)
is trivially nonzero. If some of Cl, . . . , CH-j* +l are nonzero, we can scale Y ∈ (0, ] arbitrarily
small, sothat	∣cιγ+ …+ CH-j* + iYH-j* + 1∣ > ∣CH-j*+2γH-j*+2∣,
and thus (A.25) can never be zero. From this, with sufficiently small Y, the matrix product (A.23) is
nonzero.
Now define the perturbation on IWj-*:
δ := e(VH+i：j*+i)T V'o (WH+i：i)ViT (Wj*-i：2)T
j* L k(VH+1:j* + 1 )TV'o(WH+1：1)V1T(Wj*-1：2)tkF ,
so that Wj* + ∆j* ∈ B(Wj* ). Then, observe that
hVH+ιj* + ι∆j*Wj*-i：2Vl, V'o(WH+i：i)i = tr((VH+ιj* + ι∆j*Wj*-1：2巳),V'o(WH+i：i))
= tr。：(VH+i:j* +I)TV'o(WH+1:I)VIT(Wj*-1：2)T) = Qj*, (VH+1:j* +I)TV'o(WH+1:I)VIT(Wj*-1:2)Ti > 0∙
This means that VH+i：j* + i∆j* Wj*-L2H and -VH+ij* + ι∆j* Wj*-L2H are ascent and descent
directions, respectively, of 'o(R) at WH+i：i. After that, the proof is very similar to the previous
case. We can define
(Pj)H:11 = (½,W2,...,Wj*-i,Wj* + η∆j*,V-*+ι,...,‰+ι) ∈ Y；1 Be(W■)
(Qj )H⅛1 = (VI, W2, ... , Wj*-1, Wj* -心/* , Vj*+1, . . . , VH+l) ∈ Yj=i Be(Wj,),
where 0 < η ≤ 1 is small enough, to show that by differentiability of 'o(R), we get '((Pj)jH=+11) >
'((Wj第1) > '((Qj第1).
A7.2 PROOF OF PART 1, IF dy ≥ dx
First, note that V'o(Wh+1∙1)(Wh∙1)t = 0, because it is ^d'- evaluated at a critical point
∂WH+1
(Wj)H+11. This equation implies row(V'o(WWh+l1))⊥ ⊇ row(WH：1). Since V'o(Wh+1：1) = 0,
row(V'o(W∏+L1))⊥ cannot be the whole Rdx, and it is a strict subspace of Rdx. Observe that
WH：1 ∈ RdH×dx and dχ ≤ dH. Since row(WH：1) ⊆ row(V'o(WH+±1))⊥ ( Rdx, this means
rank(WH:1) < dx, hence leftnull(WH:1) is not a trivial subspace.
Now observe that
.^ . ^ . ^
leftnUll(Wh：1) ⊇ leftnUll(WH:2) ⊇ ∙∙∙ ⊇ leftnUll(WH),
where some of left-null spaces in the right could be zero-dimensional. The procedure of choos-
ing the perturbation depends on these left-null spaces. We can split the proof into two cases:
leftnUll(WH:1) 6= leftnUll(WH:2) and leftnUll(WH:1) = leftnUll(WH:2). Because the former case
is simpler, we prove the former case first.
Before we dive in, again take SVD of V'o(Wh+1：1) = Uι∑UT. Since V'o(WWh+1：1) = 0, there
is at least one positive singular value, so °m&x(V'o(WH+1：1)) > 0. Recall the notation that [U1]∙,1
and [Ur]∙,1 are first column vectors of Ul and Ur, respectively.
28
Published as a conference paper at ICLR 2019
Case 1:	leftnull(WH：i) = leftnull(WH：2). In this case, leftnull(WH：i) ) leftnull(WH：2). We
will perturb W1 and Wh+i to obtain the desired tuples (Pj )*1 and (Qj )*1.
Now choose two unit vectors vH and vH+1, as the following:
Vh ∈ leftnull(Wh：i) ∩ leftnull(Whr)⊥, vh+i = [Ui]∙,1,
and then define Δh+1 ：= evH+1vH ∈ Rdy ×dH, and VH+1 ：= WH+1 + Δh+i. We can check
VH+1 ∈ B(WH+1) from the fact that vH and vH+1 are unit vectors. Since vH ∈ leftnull(WH:1),
observe that
T
VH+1WH:1 = WH+1:1 + vH+1vHWH:1 = WH+1:1.
With this definition of VH+1, we can also see that
(Wh：2)T VHT+1V'o(IWH+1:1) = (WH+1：2)T V'o(1WH+1:1 ) + E(WH：2)T VH VH +N'0(WH+1:1).
Note that (Wh+ie)tV'o(WH+1：1) is exactly equal to ∂w evaluated at (W■ )H+1, hence is zero
by assumption that (Wj` )H=+1 is a critical point. Since VH ∈ leftnUll(WHe)⊥ = Col(WH:2),
(Wh：2)tVH is a nonzero column vector, and since VH+1 = [Uι]∙,1, VH +1 V'o(WH+1:1)=
σmaχ(V'o(WH+1：1 ))([Ur]∙,1)T, WhiCh is a nonzero row vector. From this observation, We can
see that (WH:2)TVHVH +1V'o(WH+1:1) is nonzero, and so is (Wh：2)tVH+1V'o(WH+1：1).
Now define the perturbation on W1:
A	E(WH:2)T VT+1V'o(WH +1:1)
∆1 ：= -K--------—+------7--------,
k(WH:2)T VH+1V'o(WH+1:1 )kF
so that W1 + ∆1 ∈ B(W1). Then, observe that
hVH+1WH21, V'o(WH+1:1)i = tr((VH+1WH2∆1)TV'o(WH+1:1))
=tr(∆T(WH:2)TVH+1V'o(WH+1:1 )) = h∆1, (WH:2)TVH+1V'o(WH+1:1)i > 0,
by definition of ∆1. This means that V⅛+1WHg∆1 and -VH+1WH2∆1 are ascent and descent
directions, respectively, of 'o(R) at WH+1:1. Since '0 is a differentiable function, there exists small
enough 0 < η ≤ 1 that satisfies
'o(WH+1:1 + ηVH+1WHεδi) > 'o(WH+1:1),
'0(WH+1:1 - ηVH+1WH2∆1) < '0(WH+1:1).
Now define
(Pj )H=11 = (W 1 + η∆1, W2,..., W H, ‰+1),
(Qj)H+11 = (W 1 - η∆1, W2, . . . , WH, VH+1).
We can check (Pj-)H+l1, (Qj)H⅛1 ∈ QH=11 Be(Wj), and
I ʌ	TT T	I T	TT T	ʌ
PH+1:1 = WH+1:1 + ηVH+1 WH2δ1.
∕Λ	TT7^	T r	TT7^ Λ
Qh+1:1 = Wh+1:1 - ηVH+1WHE∆1.
By definition of '((Wj-)H+11), this shows that '((Pj-)H⅛1) > '((Wj)死1) > '((Qj)H⅛1). This
construction holds for any e > 0, proving that (Wj)H⅛1 can be neither a local maximum nor a local
minimum.
Case 2:	leftnull(WH:1) = leftnull(WH:2). By and large, the proof of this case goes the same,
except that we need a little more care on what perturbations to make. Define
j* = min{j ∈ [2, H] | leftnull(WHj) ) leftnull(WHj+1)}∙
29
Published as a conference paper at ICLR 2019
When you start from j = 2 up to j = H and compare leftnull(WH:j) and leftnull(WH:j+1), the
first iterate j at which you have leftnull(WHj) = leftnull(WHj+ι) is j*. If all left-null spaces of
matrices from WH：2 to WH are equal, j* = H which follows from the notational convention that
leftnUll(WH:h+i) = leftnull(IdH) = {0}. According to j*, in Case 2 We perturb WH+1, W1, W2,
...,Wj* to get (Pj )H11 and (Qj )H+1.
By definition ofj*, note that
Ieftnull(Wh：i) = Ieftnull(WH2 =…=Ieftnull(WHj*)
⇔ Col(WH:l) = Col(WH:2)=…=Col(WH j* )
⇔ rank( WH：i) = rank( WH2)=…=rank( WH j*)
which means the products are all rank-deficient (recall rank(WH:1) < dx and all dj ≥ dx), and
hence they all have nontrivial null spaces null(WH:2), . . . , null(WH:j* ) as well.
We choose some unit vectors as the following:
v0 = [Ur ]∙,1,
vi ∈ null(WH:2),
•	∙ ∙
v	j*-1 ∈ null(WH:j* )
V	H ∈ leftnull(WHj*) ∩ leftnull(WHj* + ι)⊥,
V	H +1 = [Ul ]∙,1∙
Then, for a γ ∈ (0, ] whose value will be specified later, define
∆1 := γV1V0T ∈ Rd1×dx,
•••
∆j*-1 := γVj*-1VjT*-2 ∈ Rdj*-1 ×dj*-2,
∆H+1 := γVH+1VHT ∈ Rdy ×dH,
and Vj := Wj + ∆j accordingly for j = 1,..., j* - 1, H + 1.
By definition of ∆j 's, note that
VH+1WHj* Vj*-1:1
_I/	TΛZ	T/	ɪ T/	TΛZ	ʌ	T/	— = VH+1WHj*-1V.*—2:1 + VH+1WH:j* δ/*-1Vj*-2:1 = 一TΛ	TΛΛ	TΛ	ɪ TΛ	TΛΛ	ʌ	TΛ = V⅛+1WH j*-2 V.*—3:1 + VH+1 WHj*-1∆j*-2 V.*—3:1 =♦♦♦	VH+1WH j* —1Vj*-2:1 =V⅛+1WHj*—2匕*-3:1	(A.26) (A.27)
PT	CT	PT	CT	*	PT	CT =VH+1WH:1 + V⅛+1WH3∆1 = VH+1WH:1		(A.28)
=WH+1:1 + δH+1WH:1 = WH+1:1,		(A.29)
where in (A.26) We used the definition that Vj*-1 ∈ null(WH j*), in (A.27) that Vj*-2 ∈
null(WH:j*-1), in (A.28) that V1 ∈ null(WH:2), and in (A.29) that VH ∈ leftnull(WH:j* ).
Now consider the following matrix product:
(WH：j* + 1)T VH+1V'0(WH+1：1)(Vj*-1：1 )T
=(WHj* +I)T(WH+1 + ∆H+1)TV'o(WH+1：1)(W1 + ∆1)τ …(Wj*-1 + ∆j*-I)T (A.30)
We are going to show that for small enough γ ∈ (0, ], this product is nonzero. Ifwe expand (A.30),
there are many terms in the summation. However, note that the expansion can be arranged in the
following form:
(WHj* + 1)T (WH+1 + ∆H+1)T V'o (WH+1：1)(W1 + ∆1)T ・•. (Wj*-1 + ∆j*-I)T
30
Published as a conference paper at ICLR 2019
=Co + Cιγ + C2γ2 + …+ Cj* γj*
(A.31)
where Cj ∈ Rdj* ×dj*-1 for all j and Cj doesn’t depend on γ, and specifically
Co = WT+1 …WH +ιV'o(WH+1：1)WTWT …WT-1,
Cj* = jWT+1 …WH∆H+1V40(Wff+rι)∆T …∆jT*-ι.
Because the Co is exactly equal to ∂∂'* evaluated at a critical point ((Wj)j[+ι1), Co = 0. Also, due
to definitions of ∆j ’s,
Cj* =(WH:j* + 1 )T (VH VH +l)V'o(WH +1:1)(VOvT )(viVT )…(Vj*-2VT-I)
=(WH:j* +I)T vH vH +1V'o (WH+1:I)VOvT*-1∙
First, since VH ∈ Col(WHj* + 1), (WH:j* +1)TVH is a nonzero column vector. Also, since VH+1 =
[Ui]∙,1 and vo = [Ur]∙,1, the product VH +1V'o(WH+1：1)vo = σmaχ(V'o(W^+上。)> 0. Finally,
VjT* -1 is a nonzero row vector. Thus, the product Cj* will be nonzero.
Since Cj* 6= 0, we can pick any index (α, β) such that the (α, β)-th entry of Cj* , denoted as
[Cj*]α,β, is nonzero. Then, the (α, β)-th entry of (A.31) can be written as
c1γ + c2γ2 +----+ cj* γj*,	(A.32)
where cj = [Cj]α,β . To show that the matrix product (A.30) is nonzero, it suffices to show that its
(α, β)-th entry (A.32) is nonzero. If c1 = .一= j*-1 = 0, then with the choice of Y = e, (A.32) is
trivially nonzero. If some of c1, . . . , cj*-1 are nonzero, we can scale γ ∈ (0, ] arbitrarily small, so
that
∣c1 Y +--+ Cj*-1 Yj*-1∣ > |cj*Yj*|,
and thus (A.32) can never be zero. From this, with sufficiently small γ, the matrix product (A.30) is
nonzero.
Now define the perturbation on Wj*:
ʌ .	e(WH：j*+1)T VH+1V'o(WH+1：1)(Vj*-1：1)T
Z∆ * * ： — Z	Z	.
k(WH：j* +I)T VT+1V'o(WH+L1)(V∙*-1:I)T kF
so that Wj* + ∆j* ∈ B(Wj* ). Then, observe that
hVH+1WH:j* +〔4j* Vj*-1:1, V'o(WH+1:1 )i = tr((VH+1WH:j* +〔4j* V** — 1:1)V'o(WH+1:I))
= tr(∆T;(WH:j* + 1)TVH+1V'o(WH+1:1 )(V∙*-1:I)T) = h∆j*, (WH:j* + 1)TVH+1V'o(WH+1:1 )(Vj*-1:I)Ti > 0.
This means that VH+1Wh**+1∆j* Vj-*-1:1 and -VH+1WHj*+1∆j* Vj-*-1:1 are ascent and descent
directions, respectively, of 'o(R) at WH+上1. After that, the proof is very similar to the previous
case. We can define
(P∙)H=11 = (V1,..., V∙*-1,Wj* + η∆j*,Wj*+1,...,WH,VH+1) ∈ YH+1 Be(Wj)
(Qj)H=11 = (V1,..., V∙*-1,Wj* -η∆j*,Wj*+1,...,WH,VH+1) ∈ YH+1 Be(Wj),
where 0 < η ≤ 1 is small enough, to show that by differentiability of 'o(R), We get '((Pj-)∏+l1) >
'((Wj)H11) > '((Qj)H=11).
A7.3 Proof of Part 2(a)
In this part, We show that if V'o( W以+上。=0 and Wh+±1 is a local min of 'o, then (Wj)∏+l1 is a
local min of '. The proof for local max case can be done in a very similar way.
31
Published as a conference paper at ICLR 2019
Since WH+1:1 is a local minimum of `0, there exists > 0 such that, for any R satisfying
ʌ
二 'o(Wh+i：i). We prove that (Wj)H=+l1 is a local mini-
neighborhood of (Wj )∏+l1 in which any point (Vj-)H=+l1
∣∣R - WH+i：ikF ≤ e, we have 'o(R) ≥
mum of ` by showing that there exists a
satisfies '((Vj)H+1) ≥ '((Wj)踮1).
Now define
0 < €j ≤ ----------------K-----------K----------.
2(H + 1) max {∣∣WH+ij+ι∣∣F∣∣Wjτι∣∣F, 1}
Observe that m&xaa 4 ≤ 1 for a ≥ 0. Then, forall j ∈ [H +1], Pickany Vj SUchthat ∣Vj - Wj ∣∣f ≤
Ej. Denote ∆j = V' - Wj for all j. Now, by triangle inequality and SUbmUltiplicativity ofFrobenius
norm,
H+1
Il(WH+ι + Δh+i)…(Wι + ∆ι) - Wh+i：i|f ≤ T ∣WH+ij+ι∆jWj-i:iIlF + O(max ∣∣∆j∣∣F)
j
j=1
H+1
≤ X kWH+lj + lkFlAkFkWj-LlkF + O(max j
j=1	j
≤ 2 + O (max j ≤ e,
for small enoUgh Ej ’s.
Given this, for any (Vj )*1 in the neighborhood of (Wj )H+l1 defined by Ej 's,
||VH+1：1 - WH+L1∣∣F ≤ E, so 'o(VH+Li) ≥ 'o(WH+1：1), meaning '((Vj)*1) ≥ '((Wj)H+L1).
Thus, (WZj )H+l1 is a local minimum of '.
A7.4 Proof of Part 2(b)
For this part, we want to show that if V'o(!WH+1：1) = 0, then (Wj)H=+11 is a global min (or max)
of ' if and only if WH+1：1 is a global min (or max) of 'o. We prove this by showing the following:
if dj ≥ min{dx, dy} for all j ∈ [H], for any R ∈ Rdy ×dx there exists a decomposition (Wj)jH=+11
such that R = WH+1:1.
We divide the proof into two cases: dx ≥ dy and dy ≥ dx .
Case 1:	dx ≥ dy. If dx ≥ dy, by assumption dj ≥ dy for all j ∈ [H]. Recall that W1 ∈ Rd1 ×dx .
Given R ∈ Rdy ×dx, we can fill the first dy rows of W1 with R and let any other entries be zero. For
all the other matrices W2, . . . , WH+1, we put ones to the diagonal entries while putting zeros to all
the other entries. We can check that, by this construction, R = WH+1:1 for this given R.
Case 2:	dy ≥ dx.	If dy	≥	dx,	we have dj	≥	dx	for all j ∈ [H].	Recall	WH+1 ∈ Rdy ×dH.	Given
R ∈ Rdy ×dx, we can fill the first dx columns of WH+1 with R and let any other entries be zero. For
all the other matrices W1 , . . . , WH , we put ones to the diagonal entries while putting zeros to all the
other entries. By this construction, R = WH+1:1 for given R.
Once this fact is given, by '((Wj)jH=+11) = '0(WH+1:1),
inf '0(R) = inf '0(WH+1:1) = inf '((Wj)jH=+11).
R	WH+1:1	(Wj )jH=+11	j=
Thus, any (Wj)H+l1 attaining a global min of ' must have infR 'o(R) = 'o(WH+1：1), so WH+1：1
is also a global min of 'o(R). Conversely, if 'o(WH+1：1) = inf 'o(R), then '((Wj)H+↑1)=
inf '((Wj )H+L1), so (Wj)H+11 is a global min of '. We can prove the global max case similarly.
32
Published as a conference paper at ICLR 2019
A7.5 Proof of Part 3 and 3(a)
Suppose there exists j ∈ [H + 1] such that Wa+ij* + ι has full row rank and W7∙*-li has full
column rank. For simplicity, define A := WH+ij*+ι and B := Wj*-li. Since AT has lin-
early independent columns, BT has linearly independent rows, and ∂'∕∂Wj* = 0 at (Wj)H=11,
ATV'o(1WH+i：i)BT = 0 =⇒ V'o(1Wh+i：i) = 0, hence Parts 2(a) and 2(b) are implied.
For Part 3(a), we want to prove that if (Wj)*1 is a local min of ', then Wh+i：i is a local min of
'o. By definition of local min, ∃e > 0 such that, for any (Vj-)H11 for which ∣∣Vj- - WjkF ≤ E (for
j ∈ [H + 1]), we have '((Vj)*1) ≥ '((Wj)H=+11). To show that WH+1：1 is a local min of 'o, we
have to show there exists a neighborhood of WH+1:1 such that, any point R in that neighborhood
satisfies 'o(R) ≥ 'o(WH+1：1). To prove this, we state the following lemma:
Lemma A.6. Suppose A := WH+1:j*+1 has full row rank and B := Wj*-1:1 has full column
rank. Then, any R satisfying kR - WH +1:1 kF ≤ σmin(A)σmin(B)E can be decomposed into R =
VH+1:1, where
Vj* = Wj* + AT(AAT)-1(R - WH+1:1)(BTB)TBT,
__ . ____________________ ..
and Vj = Wj for j = j . Also, ∣Vj- - Wj ∣∣f ≤ E forall j.
Proof Since A := WH+1:j*+1 has full row rank and B := Wj*-1:1 has full column rank,
σmin(A) > 0, σmin(B) > 0, and AAT and BTB are invertible. Consider any R satisfying
∣R - WH+1:1 ∣F ≤ σmin(A)σmin(B)E. Given the definitions of Vj’s in the statement of the lemma,
we can check the identity that R = VH+1:1 by
ʌ ʌ . ʌ ʌ
VH+i：i = AV-B = AWjB + (R — WH+1:1) = WH+1:1 + (R - WH+1：1) = R.
Now It is left to show that ∣Vj* - Wj* ∣∣f ≤ e, so that (Vj)H+l1 indeed satisfies IM - Wj∣∣f ≤ E
for all j . We can show that
σmaχ(AT(AAT)-1) = 1∕σmin(A), σmaχ((BTB)-1BT) = 1∕σmin(B).
Therefore,
kV∙* - Wj∙* kF =∣AT(AAT)-1(R - WH+1：1)(BTB)-1BT∣F
≤σmaχ(AT(AAT)-1)σmaχ((BTB)-1BT)∣R - WH +1：1kF
V	1
σmin(A)σmin(B)
• σmin(A)σmin(B)E = E.
□
The lemma shows that for any R = VH+1:1 satisfying ∣R - WH+1:1 ∣F ≤ σmin(A)σmin(B)E, we
have 'o(R) = 'o(Vh+li) = '((Vj)H+l1) ≥ '((Wj)H+L1) = '0(WH+1：1). We can prove the local
maximum part by a similar argument.
33