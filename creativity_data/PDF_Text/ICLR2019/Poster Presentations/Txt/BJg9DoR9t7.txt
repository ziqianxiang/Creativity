Published as a conference paper at ICLR 2019
Max-MIG: an Information Theoretic Approach
for Joint Learning from Crowds
Peng Cao", Yilun Xu*
School of Electronics Engineering and Computer Science,
Peking University
{caopeng2016,xuyilun}@pku.edu.cn
Yizhou Wang
Nat’l Eng. Lab. for Video Technology
Computer Science Dept., Peking University
Cooperative Medianet Innovation Center
PengCheng Lab
Deepwise AI Lab
Yizhou.Wang@pku.edu.cn
Yuqing Kong
The Center on Frontiers of Computing Studies
Peking University
yuqing.kong@pku.edu.cn
Ab stract
Eliciting labels from crowds is a potential way to obtain large labeled data. De-
spite a variety of methods developed for learning from crowds, a key challenge
remains unsolved: learning from crowds without knowing the information structure
among the crowds a priori, when some people of the crowds make highly correlated
mistakes and some of them label effortlessly (e.g. randomly). We propose an
information theoretic approach, Max-MIG, for joint learning from crowds, with
a common assumption: the crowdsourced labels and the data are independent
conditioning on the ground truth. Max-MIG simultaneously aggregates the crowd-
sourced labels and learns an accurate data classifier. Furthermore, we devise an
accurate data-crowds forecaster that employs both the data and the crowdsourced
labels to forecast the ground truth. To the best of our knowledge, this is the first
algorithm that solves the aforementioned challenge of learning from crowds. In
addition to the theoretical validation, we also empirically show that our algorithm
achieves the new state-of-the-art results in most settings, including the real-world
data, and is the first algorithm that is robust to various information structures.
1	Introduction
Lack of large labeled data is a notorious bottleneck of the data-driven-based machine learning
paradigm. Crowdsourcing provides a potential solution to this challenge: eliciting labels from crowds.
However, the elicited labels are usually very noisy, especially for some difficult tasks (e.g. age
estimation, medical images annotation). In the crowdsourcing-learning scenario, two problems are
raised:
(i)	how to aggregate and infer the ground truth from the imperfect crowdsourced labels?
(ii)	how to learn an accurate data classifier with the imperfect crowdsourced labels?
One conventional solution to the two problems is aggregating the crowdsourced labels using majority
vote and then learning a data classifier with the majority answer. However, this naive method will
cause biased results when the task is difficult and the majority of the crowds label randomly or always
label a particular class (say class 1) effortlessly.
Another typical solution is aggregating the crowdsourced labels in a more clever way, like spectral
method (Dalvi et al., 2013; Zhang et al., 2014), and then learning with the aggregated results. This
method avoids the above flaw that the majority vote method has, as long as their randomnesses are
* Equal Contribution.
1
Published as a conference paper at ICLR 2019
mutually independent. However, the spectral method requires that the experts’ labeling noise are
mutually independent, which often does not hold in practice since some experts may make highly
correlated mistakes (see Figure 2 for example). Moreover, the above solutions aim to train an accurate
data classifier and do not provide a method that can employ both the data and the crowdsourced labels
to forecast the ground truth.
A common assumption in the learning from crowds literature is that conditioning on the ground
truth, the crowdsourced labels and the data are independent, as shown in Figure 1 (a). Under this
assumption, the crowdsourced labels correlate with the data due to and only due to the ground
truth. Thus, this assumption tells us the ground truth is the “information intersection” between the
crowdsourced labels and the data. This “information intersection” assumption does not restrict the
information structure among the crowds i.e. this assumption still holds even if some people of the
crowds make highly correlated mistakes.
Figure 1: (a) The general information structure under the “information intersection” assumption.
(b) Possible information structures under the “information intersection” assumption, where the
crowdsourced labels are provided by several experts: (1) independent mistakes: all of the experts are
correlated with the ground truth and mutually independent of each other conditioning on the ground
truth; for (2), (3) the senior experts are mutually conditional independent and (2) naive majority: the
junior experts always label class 1 without any effort; (3) correlated mistakes: the junior experts, who
were advised by the same senior expert before, make highly correlated mistakes.
We present several possible information structures under the “information intersection” assumption in
Figure 1 (b). The majority vote will lead to inaccurate results in all cases if the experts have different
levels of expertise and will induce extremely biased results in case (2) when a large number of junior
experts always label class 1. The approaches that require the experts to make independent mistakes
will lead to biased results in case (3), when the experts make highly correlated mistakes
In this paper, we propose an information theoretic approach, Max-MIG, for joint learning from crowds,
with a common assumption: the crowdsourced labels and the data are independent conditioning on
the ground truth. To the best of our knowledge, this is the first algorithm that is both theoretically
and empirically robust to the situation where some experts make highly correlated mistakes and
some experts label effortlessly, without knowing the information structure among the experts. Our
algorithm simultaneously aggregates the crowdsourced labels and learns an accurate data classifier.
In addition, we propose a method to learn an accurate data-crowds forecaster that can employ both
the data and the crowdsourced labels.
At a high level, our algorithm trains a data classifier and a crowds aggregator simultaneously to
maximize their “mutual information”. This process will find the “information intersection” between
the data and crowdsourced labels i.e. the ground truth labels. The data-crowds forecaster can be
easily constructed from the trained data classifier and the trained crowds aggregator. This algorithm
allows the conditional dependency among the experts as long as the intersection assumption holds.
We design the crowds aggregator as the “weighted average” of the experts. This simple “weighted
average” form allows our algorithm to be both highly efficient in computing and theoretically robust
to a large family of information structures (e.g. case (1), (2), (3) in Figure 1 (b)). Particularly, our
algorithm works when there exists a subset of senior experts, whose identities are unknown, such
that these senior experts have mutually independent labeling biases and it is sufficient to only use the
seniors’ information to predict the ground truth label. For other junior experts, they are allowed to
have any dependency structure among themselves or between them and the senior experts.
2
Published as a conference paper at ICLR 2019
Figure 2: Medical image labeling example: we want to train a data classifier to classify the medical
images into two classes: benign and malignant. Each image is labeled by several experts. The experts
are from different hospitals, say hospital A, B, C. Each hospital has a senior who has a high expertise.
We assume the seniors’ labeling biases are mutually independent. However, for two juniors that were
advised by the same senior before, they make highly correlated mistakes when labeling the images.
We assume that 5 experts are from hospital A, 50 experts are from hospital B, and 5 experts are from
hospital C. If we use majority vote to aggregate the labels, the aggregated result will be biased to
hospital B. If we still pretend the experts’ labeling noises are independent and apply the approaches
that require independent mistakes, the aggregated result will still be biased to hospital B.
2	Related work
A series of works consider the learning from crowds problem and mix the learning process and the
aggregation process together. Raykar et al. (2010) reduce the learning from crowds problem to a
maximum likelihood estimation (MLE) problem, and implement an EM algorithm to jointly learn the
expertise of different experts and the parameters of a logistic regression classifier. Albarqouni et al.
(2016) extend this method to combine with the deep learning model. Khetan et al. (2017) also reduce
the learning problem to MLE and assume that the optimal classifier gives the ground truth labels
and the experts make independent mistakes conditioning on the ground truth. Unlike our method,
these MLE based algorithms are not robust to correlated mistakes. Recently, Guan et al. (2017) and
Rodrigues & Pereira (2017) propose methods that model multiple experts individually and explicitly
in a neural network. However, their works lack theoretical guarantees and are outperformed by our
method in the experiments, especially in the naive majority case. Moreover, unlike our method, their
methods cannot be used to employ both the data and the crowdsourced labels to forecast the ground
truth.
Several works focus on modeling the experts. Whitehill et al. (2009) model both expert competence
and image difficulty, but did not consider expert bias. Welinder et al. (2010) model each expert as a
multidimensional classifier in an abstract feature space and consider both the bias of the expert and
the difficulty of the image. Rodrigues et al. (2014) model the crowds by a Gaussian process. Khetan
& Oh (2016); Shah et al. (2016) consider the generalized Dawid-Skene model (Dawid & Skene, 1979)
which involves the task difficulty. However, these works are still not robust to correlated mistakes.
We model the crowds via the original Dawid-Skene model and do not consider the task difficulty, but
we believe our Max-MIG framework can be incorporated with any model of the experts and allow
correlated mistakes.
Our method differs from the works that focus on inferring ground truth answers from the crowds’
reports and then learn the classifier with the inferred ground truth (e.g. (Dawid & Skene, 1979; Zhou
et al., 2012; Liu et al., 2012; Karger et al., 2014; Zhang et al., 2014; Dalvi et al., 2013; Ratner et al.,
2016)) since our method simultaneously infers the ground truth and learns the classifier. In addition,
our method provides a data-crowds forecaster while those works do not.
Our method is also closely related to co-training. Blum & Mitchell (1998) first propose the co-training
framework: simultaneously training two classifiers to aggregate two views of data. Our method
interprets joint learning from crowds as a co-training style problem. Most traditional co-training
methods require weakly good classifier candidates (e.g. better than random guessing). We follow
the general information theoretic framework proposed by Kong & Schoenebeck (2018) that does not
have this requirement. However, Kong & Schoenebeck (2018) only provide theoretic framework and
assume an extremely high model complexity without considering the over-fitting issue, which is a too
3
Published as a conference paper at ICLR 2019
strong assumption for practice. Our work apply this framework to the learning from crowds problem
and provide the proper design for the model complexity as well as the experimental validations.
3	Method
In this section, we formally define the problem, introduce our method, Max-MIG, and provide a
theoretical validation for our method.
Notations For every set A, we use ∆A to denote the set of all possible distributions over A. For
every integer M, we use [M] to denote {1, 2, . . . , M}. For every matrix A = (Ai,j)i,j ∈ R+s×t, we
define logA as a s × t matrix such that its the (i,j)th entry is log(Ai,j). Similarly for every vector
v = (vi)i ∈ R+s, we define logv as a vector such that its the ith entry is log(vi).
Problem statement There are N datapoints. Each datapoint x ∈ I (e.g. the CT scan of a lung
nodule) is labeled by M experts y[M ] ：= {y1,y2,..., yM ∣ym ∈ C} (e.g. C = {benign, malignant}, 5
experts’ labels: {benign, malignant, benign, benign, benign}). The datapoint x and the crowdsourced
labels y[M] are related to a ground truth y ∈ C (e.g. the pathological truth of the lung nodule).
We are aiming to simultaneously train a data classifier h and a crowds aggregator g such that
h ： I ↦ ∆C predicts the ground truth y based on the datapoint x ∈ I, and g ： CM → ∆C aggregates M
crowdsourced labels y[M] into a prediction for ground truth y. We also want to learn a data-crowds
forecaster ζ ： I × CM ↦ ∆C that forecasts the ground truth y based on both the datapoint x ∈ I and
the crowdsourced labels y[M] ∈ C.
3.1	Max-MIG: an information theoretic approach
Figure 3 illustrates the overview idea of our method. Here we formally introduce the building blocks
of our method.
Data classifier h The data classifier h is a neural network with parameters Θ. Its input is a datapoint
x and its output is a distribution over C. We denote the set of all such data classifers by HNN .
Crowds aggregator g The crowds aggregator g is a “weighted average” function to aggregate
crowdsourced labels with parameters {Wm ∈ R∣C∣×∣C∣}mM=1 and b. Its input y[M] is the crowdsourced
labels provided by M experts for a datapoint and its output is a distribution over C . By representing
each ym ∈ y[M] as an one-hot vector e(ym) ：= (0,..., 1,..., 0)τ ∈ {0, 1}∣c∣ where only the ymth
entry of e(ym) is 1,
M
g(y[M]； {Wm}M=ι, b) = softmax( ∑ Wm ∙ eQm) + b)
m=1
where Wm ∙ e(ym) is equivalent to pick the ymth column of matrix Wm, as shown in Figure 3. We
denote the set of all such crowds aggregators by GWA .
Data-crowds forecaster ζ Given a data classifier h, a crowds aggregator g and a distribution
p = (pc)c ∈ ∆C over the classes, the data-crowds forecaster ζ, that forecasts the ground truth based
on both the datapoint x and the crowdsourced labels y[M], is constructed by
Z(x, y[M]； h, g, p) = Normalize ((h(X)C ；("' ')c )c)
where Normalize(v) ：= ∑vv.
f -mutual information gain MIGf f -mutual information gain MIGf measures the “mutual
information” between two hypotheses, which is proposed by Kong & Schoenebeck (2018). Given
N datapoints x1 , x2 , . . . , xN ∈ I where each datapoint xi is labeled by M crowdsourced labels
4
Published as a conference paper at ICLR 2019
Figure 3: Max-MIG overview: Step 1: finding the “information intersection” between the data and
the crowdsourced labels: we train a data classifier h and a crowds aggregator g simultaneously to
maximize their f -mutual information gain MIGf (h, g, p) with a hyperparameter p ∈ ∆C. h maps
each datapoint xi to a forecast h(xi) ∈ ∆C for the ground truth. g aggregates M crowdsourced
labels yi[M] into a forecast g(yi[M]) ∈ ∆C by “weighted average”. We tune the parameters of h and
g simultaneously to maximize their f -mutual information gain. We will show the maximum is the
f -mutual information (a natural extension of mutual information, see Appendix C) between the data
and the crowdsourced labels. Step 2: aggregating the “information intersection”: after we obtain the
best h, g, p that maximizes MIGf(h, g, p), we use them to construct a data-crowds forecaster ζ that
forecasts ground truth based on both the datapoint and the crowdsourced labels.
To calculate the f -mutual information gain, we reward them for the average “agreements” between
their outputs for the same task, i.e. h(xi) and g(yi[M]) , as shown by the black lines, and punish them
for the average “agreements” between their outputs for the different tasks, i.e. h(xi) and g(yj[M] )
where i ≠ j , as shown by the grey lines. Intuitively, the reward encourages the data classifier to agree
with the crowds aggregator, while the punishment avoids them naively agreeing with each other, that
is, both of them map everything to (1, 0, . . . , 0). The measurement of “agreement” depends on the
selection of f. See formal definition for MIGf in (1).
yi1, yi2, . . . , yiM ∈ C, the f -mutual information gain between h and g, associated with a hyperparameter
p = (pc)c ∈ ∆C, is defined as the average “agreements” between h and g for the same task minus the
average “agreements” between h and g for the different tasks, that is,
MIGf ({Xi}, {y[M]}; h,g, P) = NN ∑ ∂f (∑ h(xi)c ∙ g(y[M])c)	⑴
N i	c∈C	pc
-/ ∑fWf(∑c h(xi Yyr'C))
where f is a convex function satisfying f (1) = 0 and f * is the Fenchel duality of f. We can use
Table 1 as reference for ∂f (∙) and f * (∂f (∙)).
Table 1: Reference for common f -divergences and corresponding MIGf ’s building blocks. This
table is induced from Nowozin et al. (2016).
f -divergence	f(t	—	∂f(K)	f*(∂f(K))
KL divergence	t log t	1 + log K	K
Pearson χ2	(t -1)2	2(K-1)	K2 - 1
Jensen-Shannon	(t + 1) log t+21 +1 log t	log JK 'og 1+K	-log( 1+K)
5
Published as a conference paper at ICLR 2019
Since the parameters of h is Θ and the parameters of g is {Wm}mM=1 and b, we naturally rewrite
MIGf({xi}, {yi[M]}; h, g, p) as
M IGf ({xi}, {yi[M]}; Θ, {Wm}mM=1, b, p).
We seek {Θ, {Wm}mM=1, b, p} that maximizes MIGf. Later we will show that when the prior of
the ground truth is p* (e.g. p* = (0.8,0.2) i.e. the ground truth is benign with probability 0.8 and
malignant with probability 0.2 a priori), the best b and P are log p* and p* respectively. Thus, We
can set b as log P and only tune p. When We have side information about the prior p*, We can fix
parameter p as p* , and fix parameter b as log p* .
3.2 Theoretical justification
This section provides a theoretical validation for Max-MIG, i.e., maximizing the f -mutual infor-
mation gain over HNN and GWA finds the “information intersection” betWeen the data and the
croWdsourced labels. In Appendix E, We compare our method With the MLE method (Raykar et al.,
2010) theoretically and shoW that unlike our method, MLE is not robust to the correlated mistakes
case.
Recall that We assume that conditioning on the ground truth, the data and the croWdsourced labels
are mutually independent. Thus, We can naturally define the “information intersection” as a pair of
data classifier and croWds aggregator h*, g* such that they both fully use their input to forecast the
ground truth. Kong & Schoenebeck (2018) shoWs that When We have infinite number of datapoints
and maximize over all possible data classifiers and croWds aggregators, the “information intersection”
Will maximize MIGf (h, g) to the f -mutual information (Appendix C) betWeen the data and the
croWdsourced labels. HoWever, in practice, With a finite number of datapoints, the data classifier
and the croWds aggregator space should be not only sufficiently rich to contain the “information
intersection” but also sufficiently simple to avoid over-fitting. Later, the experiment section Will shoW
that our picked HNN and GWA are sufficiently simple to avoid over-fitting. We assume the neural
netWork space is sufficiently rich. It remains to shoW that our Weighted average aggregator space
GWA is sufficiently rich to contain g*.
Model and assumptions Each datapoint xi With croWdsourced labels provided by M experts
yi1, ..., yiM are draWn i.i.d. from random variables X, Y 1, ..., Y M.
Assumption 3.1 (Co-training assumption). X and Y [M] are independent conditioning on Y.
Note that We do not assume that the experts’ labels are conditionally mutually independent. We
define p* ∈ ∆C as the prior for Y , i.e. pc* = P (Y = c).
Definition 3.2 (Information intersection). We define h*, g* and ζ* such that
h*(x)c=P(Y =c∣X=x) g*(y[M])c=P(Y = c∣Y [M] = y[M]).
ζ*(x,y[M])c=P(Y =c∣X=x,Y[M]=y[M])
We call them Bayesian posterior data classifier / crowds aggregator / data-crowds forecaster re-
spectively. We call (h*, g*) the information intersection between the data and the crowdsourced
labels.
We also assume the neural netWork space is sufficiently rich to contain h*.
Assumption 3.3 (Richness of the neural netWorks). h* ∈ HNN.
Theorem 3.4. With assumptions 3.1, 3.3, when there exists a subset of experts S ⊂ [M] such that
the experts in S are mutually independent conditioning on Y and Y S is a sufficient statistic for Y ,
i.e. P(Y = y∣Y [M] = y[M]) = P(Y = y∣Y S = yS) for every y ∈ C, y[M] ∈ CM, then (h*, g*, p*) is a
maximizer of
max	EX Y[M]MIGf(h(X), g(Y [M]), p)
h∈HNN,g∈GWA,p∈∆C	,
and the maximum is the f -mutual information between X and Y [M]. Moreover, ζ*(x, y[M]) =
ζ(x, y[M]; h*, g*, p*) foreveryx,y[M].
6
Published as a conference paper at ICLR 2019
Our main theorem shows that if there exists a subset of senior experts such that these senior experts
are mutually conditional independent and it is sufficient to only use the information from these
senior experts, then Max-MIG finds the “information interstion”. Note that we do not need to know
the identities of the senior experts. For other junior experts, we allow any dependency structure
among them and between them and the senior experts. Moreover, this theorem also shows that
our method handles the independent mistakes case where all experts can be seen as senior experts
(Proposition D.3).
To show our results, We need to show that GWA contains g*, i.e. there exists proper weights such
that g* can be represented as a weighted average. In the independent mistakes case, we can construct
each expert’s weight using her confusion matrix. Thus, in this case, each expert’s weight represents
her expertise. In the general case, we can construct each senior expert’s weight using her confusion
matrix and make the junior experts’ weights zero. Due to space limitation, we defer the formal proofs
to Appendix D.
4	Experiment
In this section, we evaluate our method on image classification tasks with both synthesized crowd-
sourced labels in various of settings and real world data.
Our method Max-MIG is compared with: Majority Vote, training the network with the major vote
labels from all the experts; Crowd Layer, the method proposed by Rodrigues & Pereira (2017);
Doctor Net, the method proposed by Guan et al. (2017) and AggNet, the method proposed by
Albarqouni et al. (2016).
Image datasets Three datasets are used in our experiments. The Dogs vs. Cats (Kaggle, 2013)
dataset consists of 25, 000 images from 2 classes, dogs and cats, which is split into a 12, 500-image
training set and a 12, 500-image test set. The CIFAR-10 (Krizhevsky et al., 2014) dataset consists of
60, 000 32 × 32 color images from 10 classes, which is split into a 50, 000-image training set and a
10, 000-image test set. The LUNA16 (Setio et al., 2016) dataset consists of 888 CT scans for lung
nodule. We preprocessed the CT scans by generating 8106 50 × 50 gray-scale images, which is split
into a 6484-image training set and a 1622-image testing set. LUNA16 is highly imbalanced dataset
(85%, 15%).
Synthesized crowdsourced labels in various of settings For each information structure in Fig-
ure 1, we generate two groups of crowdsourced labels for each dataset: labels provided by (H) experts
with relatively high expertise; (L) experts with relatively low expertise. For each of the situation (H)
(L), all three cases have the same senior experts.
Case 4.1.	(Independent mistakes) Ms senior experts are mutually conditionally independent.
Case 4.2.	(Naive majority) Ms senior experts are mutually conditional independent, while other Mj
junior experts label all datapoints as the first class effortlessly.
Case 4.3.	(Correlated mistakes) Ms senior experts are mutually conditional independent, and each
junior expert copies one of the senior experts.
Real-world dataset The LabelMe data (Rodrigues & Pereira, 2017; Russell et al., 2008) consists
of a total of 2688 images, where 1000 of them were used to obtain labels from multiple annotators
from Amazon Mechanical Turk and the remaining 1688 images were using for evaluating the different
approaches. Each image was labeled by an average of 2.547 workers, with a mean accuracy of 69.2%.
Networks We follow the four layers network in Rodrigues & Pereira (2017) on Dogs vs. Cats and
LUNA16 and use VGG-16 on CIFAR-10 for the backbone of the data classifier h. For Labelme data,
we apply the same setting of Rodrigues & Pereira (2017): we use pre-trained VGG-16 deep neural
network and apply only one FC layer (with 128 units and ReLU activations) and one output layer on
top, using 50% dropout.
We defer other implementation details to appendix B.
7
Published as a conference paper at ICLR 2019
Table 2: Accuracy on LabelMe (real-world crowdsourced labels)
Method Majority Vote Crowd Layer Doctor Net AggNet Max-MIG
Accuracy	80.41 ± 0.56	83.65 ± 0.50	80.56 ± 0.59 85.20 ± 0.26 86.42 ± 0.36
Figure 4: Results on Dogs vs. Cats, CIFAR-10, LUNA16.
4.1	Results
We train the data classifier h on the four datasets through our method1 and other related methods. The
accuracy of the trained data classifiers on the test set are shown in Table 2 and Figure 4. We also show
the accuracy of our data-crowd forecaster and on the test set and compare it with AggNet (Table 3).
For the performances of the trained data classifiers, our method Max-MIG (red) almost outperform
all other methods in every experiment. For the real-world dataset, LabelMe, we achieve the new
state-of-the-art results. For the synthesized crowdsourced labels, the majority vote method (grey)
fails in the naive majority situation. The AggNet has reasonably good performances when the experts
are conditionally independent, including the naive majority case since naive expert is independent
with everything, while it is outperformed by us a lot in the correlated mistakes case. This matches
the theory in Appendix E: the AggNet is based on MLE and MLE fails in correlated mistakes case.
The Doctor Net (green) and the Crowd Layer (blue) methods are not robust to the naive majority
case. Our data-crowds forecaster (Table 3) performs better than our data classifier, which shows that
our data-crowds forecaster actually takes advantage of the additional information, the crowdsourced
labels, to give a better result. Like us, Aggnet also jointly trains the classifier and the aggregator, and
can be used to train a data-crowds forecaster. We compared our data-crowds forecaster with Aggnet.
1The results of Max-MIG are based on KL divergence. The results for other divergences are similar.
8
Published as a conference paper at ICLR 2019
The results still match our theory. When there is no correlated mistakes, we outperform Aggnet or
have very similar performances with it. When there are correlated mistakes, we outperform Aggnet a
lot (e.g. +30%).
Recall that in the experiments, for each of the situation (H) (L), all three cases have the same senior
experts. Thus, all three cases’ crowdsourced labels have the same amount of information. The results
show that Max-MIG has similar performances for all three cases for each of the situation (H) (L),
which validates our theoretical result: Max-MIG finds the “information intersection” between the
data and the crowdsourced labels.
5 Conclusion and discussion
We propose an information theoretic approach, Max-MIG, for joint learning from crowds, with
a common assumption: the crowdsourced labels and the data are independent conditioning on
the ground truth. We provide theoretical validation to our approach and compare our approach
experimentally with previous methods (Doctor net (Guan et al., 2017), Crowd layer (Rodrigues &
Pereira, 2017), Aggnet (Albarqouni et al., 2016)) under several different information structures. Each
of the previous methods is not robust to at least one information structure and our method is robust to
all and almost outperform all other methods in every experiment. To the best of our knowledge, our
approach is the first algorithm that is both theoretically and empirically robust to the situation where
some people make highly correlated mistakes and some people label effortlessly, without knowing
the information structure among the crowds. We also test our method on real-world data and achieve
the new state-of-the-art result.
Our current implementation of Max-MIG has several limitations. For example, we implement the
aggregator using a simple linear model, which cannot handle the case when the senior experts are
latent and cannot be linearly inferred from the junior experts. However, note that if the aggregator
space is sufficiently rich, the Max-MIG approach is still able to handle any situation as long as
the “information intersection” assumption holds. One potential future direction is designing more
complicated but still trainable aggregator space.
Acknowledgments
We would like to express our thanks for support from the following research grants NSFC-61625201
and 61527804.
9
Published as a conference paper at ICLR 2019
References
Shadi Albarqouni, Christoph Baur, Felix Achilles, Vasileios Belagiannis, Stefanie Demirci, and
Nassir Navab. Aggnet: deep learning from crowds for mitosis detection in breast cancer histology
images. IEEE transactions on medical imaging, 35(5):1313-1321, 2016.
Syed Mumtaz Ali and Samuel D Silvey. A general class of coefficients of divergence of one
distribution from another. Journal of the Royal Statistical Society. Series B (Methodological), pp.
131-142, 1966.
Avrim Blum and Tom Mitchell. Combining labeled and unlabeled data with co-training. In Pro-
ceedings of the eleventh annual conference on Computational learning theory, pp. 92-100. ACM,
1998.
Imre Csiszar, Paul C Shields, et al. Information theory and statistics: A tutorial. Foundations and
Trends® in Communications and Information Theory, 1(4):417-528, 2004.
Nilesh Dalvi, Anirban Dasgupta, Ravi Kumar, and Vibhor Rastogi. Aggregating crowdsourced binary
ratings. In Proceedings of the 22nd international conference on World Wide Web, pp. 285-294.
ACM, 2013.
Alexander Philip Dawid and Allan M Skene. Maximum likelihood estimation of observer error-rates
using the em algorithm. Applied statistics, pp. 20-28, 1979.
Melody Y Guan, Varun Gulshan, Andrew M Dai, and Geoffrey E Hinton. Who said what: Modeling
individual labelers improves classification. arXiv preprint arXiv:1703.08774, 2017.
Kaggle. Dogs vs. cats competition. https://www.kaggle.com/c/dogs-vs-cats, 2013.
David R Karger, Sewoong Oh, and Devavrat Shah. Budget-optimal task allocation for reliable
crowdsourcing systems. Operations Research, 62(1):1-24, 2014.
Ashish Khetan and Sewoong Oh. Achieving budget-optimality with adaptive schemes in crowdsourc-
ing. In Advances in Neural Information Processing Systems, pp. 4844-4852, 2016.
Ashish Khetan, Zachary C Lipton, and Anima Anandkumar. Learning from noisy singly-labeled data.
arXiv preprint arXiv:1712.04577, 2017.
Y. Kong and G. Schoenebeck. An Information Theoretic Framework For Designing Information
Elicitation Mechanisms That Reward Truth-telling. ArXiv e-prints, May 2016.
Yuqing Kong and Grant Schoenebeck. Water from two rocks: Maximizing the mutual information.
In Proceedings of the 2018 ACM Conference on Economics and Computation, pp. 177-194. ACM,
2018.
Alex Krizhevsky, Vinod Nair, and Geoffrey Hinton. The cifar-10 dataset. online: http://www. cs.
toronto. edu/kriz/cifar. html, 2014.
Qiang Liu, Jian Peng, and Alexander T Ihler. Variational inference for crowdsourcing. In Advances
in neural information processing systems, pp. 692-700, 2012.
Sebastian Nowozin, Botond Cseke, and Ryota Tomioka. f-gan: Training generative neural samplers
using variational divergence minimization. In Advances in Neural Information Processing Systems,
pp. 271-279, 2016.
Alexander J Ratner, Christopher M De Sa, Sen Wu, Daniel Selsam, and Christopher Re. Data
programming: Creating large training sets, quickly. In Advances in Neural Information Processing
Systems, pp. 3567-3575, 2016.
Vikas C Raykar, Shipeng Yu, Linda H Zhao, Gerardo Hermosillo Valadez, Charles Florin, Luca
Bogoni, and Linda Moy. Learning from crowds. Journal of Machine Learning Research, 11(Apr):
1297-1322, 2010.
Filipe Rodrigues and Francisco Pereira. Deep learning from crowds. arXiv preprint arXiv:1709.01779,
2017.
10
Published as a conference paper at ICLR 2019
Filipe Rodrigues, Francisco Pereira, and Bernardete Ribeiro. Gaussian process classification and
active learning with multiple annotators. In International Conference on Machine Learning, pp.
433-441, 2014.
Bryan C Russell, Antonio Torralba, Kevin P Murphy, and William T Freeman. Labelme: a database
and web-based tool for image annotation. International journal of computer vision, 77(1-3):
157-173, 2008.
Arnaud Arindra Adiyoso Setio, Francesco Ciompi, Geert Litjens, Paul Gerke, Colin Jacobs, Sarah J
Van Riel, Mathilde Marie Winkler Wille, Matiullah Naqibullah, Clara I Sanchez, and Bram van
Ginneken. Pulmonary nodule detection in ct images: false positive reduction using multi-view
convolutional networks. IEEE transactions on medical imaging, 35(5):1160-1169, 2016.
Nihar B Shah, Sivaraman Balakrishnan, and Martin J Wainwright. A permutation-based model for
crowd labeling: Optimal estimation and robustness. arXiv preprint arXiv:1606.09632, 2016.
Peter Welinder, Steve Branson, Pietro Perona, and Serge J Belongie. The multidimensional wisdom
of crowds. In Advances in neural information processing systems, pp. 2424-2432, 2010.
Jacob Whitehill, Ting-fan Wu, Jacob Bergsma, Javier R Movellan, and Paul L Ruvolo. Whose vote
should count more: Optimal integration of labels from labelers of unknown expertise. In Advances
in neural information processing systems, pp. 2035-2043, 2009.
Yuchen Zhang, Xi Chen, Denny Zhou, and Michael I Jordan. Spectral methods meet em: A provably
optimal algorithm for crowdsourcing. In Advances in neural information processing systems, pp.
1260-1268, 2014.
Denny Zhou, Sumit Basu, Yi Mao, and John C Platt. Learning from the wisdom of crowds by
minimax entropy. In Advances in neural information processing systems, pp. 2195-2203, 2012.
A Data-Crowds Forecaster Comparison
Table 3: Data-Crowds Forecaster Comparison: Max-MIG VS AggNet
Dataset	Method	4.1(H)	4.2(H)	4.3(H)	4.1(L)	4.2(L)	4.3(L)
	Max-MIG (d)	79.52	80.25	78.94	71.44	71.07	68.40
Dogs vs.Cats	Max-MIG (dc)	88.80	87.60	87.17	73.99	73.38	70.75
	AggNet (d)	79.36	79.53	71.97	70.46	70.07	63.85
	AggNet (dc)	88.00	88.56	75.00	71.27	70.75	61.14
	Max-MIG(d)	86.33	86.55	86.71	70.16	69.99	67.59
CIFAR-10	Max-MIG(dc)	98.10	98.18	99.06	75.55	75.11	72.47
	AggNet(d)	86.13	86.27	63.91	70.21	62.50	38.27
	AggNet(dc)	99.05	99.01	70.01	74.76	72.02	29.03
	Max-MIG(d)	90.88	91.06	91.15	88.90	89.04	88.85
LUNA16	Max-MIG(dc)	94.56	93.97	92.63	91.16	91.23	92.05
	AggNet(d)	89.56	90.23	83.47	81.42	83.53	81.68
	AggNet(dc)	91.13	91.94	65.14	70.97	74.41	61.76
Here (dc) is the shorthand for data-crowds forecaster and (d) is the shorthand for data-classifier. We
take the average of five times experiments and the variance is pretty small. Due to space limitation,
we omit the variance here.
11
Published as a conference paper at ICLR 2019
B Experiments details
B.1 Experts’ expertise
For each information structure in Figure 1, we generate two groups of crowdsourced labels for each
dataset: labels provided by (H) experts with relatively high expertise; (L) experts with relatively low
expertise. For each of the situation (H) (L), all three cases have the same senior experts.
Case B.1.	(Independent mistakes) Ms senior experts are mutually conditionally independent. (H)
Ms = 5. (L) Ms = 10.
Dogs vs. Cats In situation (H), some senior experts are more familiar with cats, while others make
better judgments on dogs. For example, expert A is more familiar with cats, her expertise for dogs/cats
is 0.6/0.8 in the sense that if the ground truth is dog/cat, she labels the image as “dog”/“cat” with
probability 0.6/0.8 respectively. Similarly, other experts expertise are B:0.6/0.6, C:0.9/0.6, D:0.7/0.7,
E:0.6/0.7.
In situation (L), all ten seniors’ expertise are 0.55/0.55.
CIFAR-10 In situation (H), we generate experts who may make mistakes in distinguishing the hard
pairs: cat/dog, deer/horse, airplane/bird, automobile/trunk, frog/ship, but can perfectly distinguish
other easy pairs (e.g. cat/frog), which makes sense in practice. When they cannot distinguish the
pair, some of them may label the pair randomly and some of them label the pair the same class. In
detail, for each hard pair, expert A label the pair the same class (e.g. A always labels the image as
“cat” when the image has cats or dogs), expert B labels the pair uniformly at random (e.g. B labels
the image as “cat” with the probability 0.5 and “dog” with the probability 0.5 when the image has
cats or dogs). Expert C is familiar with mammals so she can distinguish cat/dog and deer/hose, while
for other hard pairs, she label each of them uniformly at random. Expert D is familiar with vehicles
so she can distinguish airplane/bird, automobile/trunk and frog/ship, while for other hard pairs, she
always label each of them the same class. Expert E does not have special expertise. For each hard
pair, Expert E labels them correctly with the probability 0.6.
In situation (L), all ten senior experts label each image correctly with probability 0.2 and label each
image as other false classes uniformly with probability 098.
LUNA16 In situation (H), some senior experts tend to label the image as “benign” while others tend
to label the image as “malignant”. Their expertise for benign/malignant are: A: 0.6/0.9, B:0.7/0.7,
C:0.9/0.6, D:0.6/0.7, E:0.7/0.6.
In situation (L), all ten seniors’ expertise are 0.6/0.6.
Case B.2.	(Naive majority) Ms senior experts are mutually conditional independent, while other
Mj junior experts label all data as the first class effortlessly. (H) Ms = 5, Mj = 5. (L) Ms = 10,
Mj = 15.
For Dogs vs. Cats, all junior experts label everything as “cat”. For CIFAR-10, all junior experts label
everything as “airplane”. For LUNA16, all junior experts label everything as “benign”.
Case B.3.	(Correlated mistakes) Ms senior experts are mutually conditional independent, and each
junior expert copies one of the senior experts.(H) Ms = 5, Mj = 5. (L) Ms = 10, Mj = 2.
For Dogs vs. Cats, CIFAR-10 and LUNA16, in situation (H), two junior experts copy expert A’s
labels and three junior experts copy expert C’s labels; in situation (L), one junior expert copies expert
A’s labels and another junior expert copies expert C’s labels.
B.2 Implementation details
Networks For Dogs vs. Cats and LUNA16, we follow the four layers network in Rodrigues &
Pereira (2017). We use Adam optimizer with learning rate 1.0 × 10-4 for both the data classifier and
the crowds aggregator. Batch size is set to 16. For CIFAR-10, we use VGG-16 as the backbone. We
use Adam optimizer with learning rate 1.0 × 10-3 for the data classifier and 1.0 × 10-4 for the crowds
aggregator. Batch size is set to 64.
12
Published as a conference paper at ICLR 2019
For Labelme data, We apply the same setting of Rodrigues & Pereira (2017): we use pre-trained
VGG-16 deep neural network and apply only one FC layer (with 128 units and ReLU activations) and
one output layer on top, using 50% dropout. We use Adam optimizer with learning rate 1.0 × 10-4
for both the data classifier and the crowds aggregator.
For our method MAX-MIG’s crowds aggregator, for Dogs vs. Cats and LUNA16, we set the bias b
as log p and only tune p. For CIFAR-10 and Labelme data, we fix the prior distribution p to be the
uniform distribution p0 and fix the bias b as log p0.
Initialization For AggNet and our method Max-MIG, we initialize the parameters {Wm}m using
the method in Raykar et al. (2010):
N
∑ Q(yi = c)i(ym = c')
Wo = log -------------------- ⑵
∑ Q(yi = c)
i=1
where !(y： = c') = 1 when y： = c' and !(y： = c') = 0 when ym ≠ C and N is the total number of
1M
datapoints. We average all crowdsourced labels to obtain Q(y% = c) ：= M ∑ 1(y： = c).
M ：=1
For Crowd Layer method, we initialize the weight matrices using identity matrix on Dogs vs. Cats
and LUNA as Rodrigues & Pereira (2017) suggest. However, this initialization method leads to pretty
bad results on CIFAR-10. Thus, we use (2) for Crowd Layer on CIFAR-10, which is the best practice
in our experiments.
C f -MUTUAL INFORMATION
C.1 f-DIVERGENCE AND FENCHEL’ S DUALITY
f -divergence (Ali & Silvey, 1966; Csiszar et al., 2004) f -divergence Df ： ∆∑ × ∆∑ ↦ R is a
non-symmetric measure of the difference between distribution p ∈ ∆Σ and distribution q ∈ ∆Σ and
is defined to be
Df(D q) = ∑Σ P⑺f (黑)
where f ： R ↦ R is a convex function and f(1) = 0.
C.2 f -MUTUAL INFORMATION
Given two random variables X, Y whose realization space are ΣX and ΣY , let UX,Y and VX,Y be
two probability measures where UX,Y is the joint distribution of (X, Y ) and VX,Y is the product of
the marginal distributions of X and Y . Formally, for every pair of (x, y) ∈ ΣX × ΣY ,
UX,Y(X=x,Y =y)=Pr[X=x,Y =y]	VX,Y(X=x,Y =y)=Pr[X=x]Pr[Y =y].
If UX,Y is very different from VX,Y , the mutual information between X and Y should be high since
knowing X changes the belief for Y a lot. If UX,Y equals to VX,Y , the mutual information between
X and Y should be zero since X is independent with Y . Intuitively, the “distance” between UX,Y
and VX,Y represents the mutual information between them.
Definition C.1 (f -mutual information (Kong & Schoenebeck, 2016)). The f -mutual information
between X and Y is defined as
MIf(X,Y)=Df(UX,Y,VX,Y)
where Df is f -divergence. f -mutual information is always non-negative.
13
Published as a conference paper at ICLR 2019
Kong & Schoenebeck (2016) show that if we measure the amount of information by f -mutual
information, any “data processing” on either of the random variables will decrease the amount of
information crossing them. With this property, Kong & Schoenebeck (2016) propose an information
theoretic mechanism design framework using f -mutual information. Kong & Schoenebeck (2018)
reduce the co-training problem to a mechanism design problem and extend the information theoretic
framework in Kong & Schoenebeck (2016) to address the co-training problem.
D	Proof of Theorem 3.4
This section provides the formal proofs to our main theorem.
Definition D.1 (Confusion matrix). For each expert m, we define her confusion matrix as Cm =
(Co)c,c' ∈ R∣c∣×∣c∣ where CO = P(Ym = ClY = C)∙
We denote the set of all possible classifiers by H∞ and the set of all possible aggregators by G∞.
Lemma D.2. (Kong & Schoenebeck, 2018) With assumption 3.1, 3.3, (h*,g*, p*) is a maximizer of
max	EXY[M]MIGf(h(X),g(Y[M]),p)
h∈H∞,g∈G∞ ,p∈∆C	,
and the maximum is the f mutual information between X and Y[M], MIf (X, Y[M] ). Moreover,
Z*(x,y[M]) = Z(x,y[M]; h*,g*, p*) forevery x,y[M].
Proposition D.3. [Independent mistakes] With assumptions 3.1, 3.3, if the experts are mutually
independent conditioning on Y, then g* ∈ GWA and
g*(y[M]) =g(y[M];{logCm}mM=1,logp*)
for every y[M] ∈ CM.
This implies that (h*, g*, p*) is a maximizer of
max	EXY[M]MIGf(h(X),g(Y[M]),p)
h∈HNN,g∈GWA,p∈∆C	,
and the maximum is the f mutual information between X and Y[M], MIf (X, Y[M] ). Moreover,
ζ* (x, y[M]) = ζ(x, y[M]; h*, g*, p*) for every x, y[M].
Proof. We will show that when the experts are mutually conditionally independent, then
g*(y[M]) = g(y[M]; {log Cm}mM=1, log p*).
This also implies that g* ∈ GWA . Based on the result of Lemma D.2, by assuming that h* ∈
HNN, we can see (h*, g*, p*) is a maximizer of maxh∈HNN,g∈GWA,p∈∆C MIGf(h, g, p) and the
maximum is the f mutual information between X and Y[M] . Moreover, Lemma D.2 also implies
that ζ*(x, y[M]) = ζ(x, y[M]; h*, g*, p*) for every x, y[M].
For every C ∈ C, every y[M] ∈ CM,
(logg*(y[M]))c =logP(Y = C∣Y[M] = y[M])
=logP(Y[M] =y[M]∣Y=C)P(Y=C)-logP(Y[M] = y[M])
M
= ∑ logP(Ym =ym∣Y=C)+logP(Y=C)-logP(Y[M] = y[M])
Thus,
MM
(∑ log Cm ∙ e(ym) + log p*)c= ∑ log P (Ym = ym∣Y = c) + log P (Y = C)
=(log g*(y[M]))c + log P (Y [M] = y[M])
14
Published as a conference paper at ICLR 2019
Then,
m	e(log g*(y[M]))c+log P (Y[M]=y[M ])
(SOftmax(∑ log Cm ∙ e(y ) + log p*» = ∑c e(iog g*(y[M ]))c+iog P (Y [M]=y[M])
e(iog g*(y[M]))c
=∑c e(iogg*(y[M]))c
=(g*(y[M]))c
(since g*(y[M]) ∈ ∆c, ∑g*(y[M])c = 1)
Thus,
g*(y[M]) = Softmax(∑ log Cm ∙ e(ym) + log p*) = g(y[M]; {log Cm}M=ι, log p*).
□
We restate our main theorem, Theorem 3.4, here with more details and prove it.
Theorem 3.4 (General case). With assumption 3.1, 3.3, when there exists a subset of experts S ⊂ [M]
such that the experts in S are mutually independent conditioning on Y and Y S is a sufficient statistic
for Y, i.e. P(Y = y∣Y [M] = y[M]) = P(Y = y∣YS = yS) for every y ∈ C, y[M] ∈ CM, then
g* ∈ GWA and
g*(y[M]) = g(y[M]; {W*m}m,log p*)
for every y[M ] ∈ C M where for every m ∈ S, W*m = log Cm, for every m ∉ S, W*m = 02,
This implies that (h*,g*, p*) is a maximizer of
max	EXY[M]MIGf(h(X),g(Y[M]),p)
h∈HNN,g∈GWA,p∈∆C	,
and the maximum is the f mutual information between X and Y [M], MIf (X, Y [M]). Moreover,
Z *(x,y[M]) = Z(x,y[M]; h*,g*, p*) for every x,y[M ].
Proof. Like the proof for the above proposition, we need to show that
g*(y[M]) = g(y[M]; {W*m}m,log p*).
This also implies that g* ∈ GWA as well as the other results of the theorem.
When Y S is a sufficient statistic for Y , we have
g*(y[M]) =g*(yS).
Proposition D.3 shows that
g*(yS) = g(ys; {log Cs}s∈s, log p*).
Thus, we have
g*(y[M]) = g*(ys) = g(ys; {log Cs}s∈s, log p*) = g(y[M]; {W*m}m, log p*)
where for every m ∈ S, W*m = log Cm, for every m ∉ S, W*m = 0.
□
2We denote the matrix whose entries are all zero by 0.
15
Published as a conference paper at ICLR 2019
E Theoretical comparisons with MLE
Raykar et al. (2010) propose a maximum likelihood estimation (MLE) based method in the learning
from crowds scenario. Raykar et al. (2010) use logistic regression and Aggnet(Albarqouni et al.,
2016) extends it to combine with the deep learning model. In this section, we will theoretically show
that these MLE based methods can handle the independent mistakes case but cannot handle even
the simplest correlated mistakes case—only one expert reports meaningful information and all other
experts always report the same meaningless information—which can be handled by our method.
Therefore, in addition to the experimental results, theoretically, our method is still better than these
MLE based methods. We first introduce these MLE based methods.
Let Θ be the parameter that control the distribution over X and Y . Let Θm be the parameter that
controls the distribution over Y m and Y .
For each each x, y[M] ,
P (Y[M] = y[M]∣x = x;®, {θm }m)	⑶
=∑ P (Y = y∣X = x; Θ)P (Y [M ] = y[M ]∣Y = y; {Θm}m)
y
(conditioning on Y, X and Y[M] are independent)
= ∑P(Y = y∣X = x; Θ)ΠmM=1P(Ym = ym∣Y = y; Θm)
y
(experts are mutually conditional independent.)
The MLE based method seeks Θ and Θm that maximize
N
∑ log ∑ P (Y = c∣X = Xi； Θ)∏M=ιP (Ym = yim∣Y = c; Θm)
i=1	c
To theoretically compare it with our method, we use our language to reinterpret the above MLE based
method.
We define T as the set of all ∣C∣ × ∣C∣ transition matrices with each row summing to 1.
For each expert m, we define Wm ∈ T as a parameter that is associated with m.
Given a set of data classifiers h ∈ H where h : I ↦ ∆c, the MLE based method seeks h ∈ H and
transition matrices W1, W2,…,WM ∈ T that maximize
N
∑log∑h(xi)cΠmM=1Wcm,yim.
i=1	c
The expectation of the above formula is
EX,Y [M] log ∑ h(X)cΠmM=1Wcm,Ym .
c
Note that Raykar et al. (2010) set the data classifiers space H as all logistic regression classifiers and
Albarqouni et al. (2016) extend this space to the neural network space.
Proposition E.1 (MLE works for independent mistakes). If the experts are mutually independent
conditioning on Y then h* and C1, C2,…，CM are a maximizer of
h,wι,w2ax,wm€τEχ,Y [M ]log ∑h(X KnM=iWmY m .
16
Published as a conference paper at ICLR 2019
Proof.
EX,Y [M] log∑h(X)cΠmM=1Wcm,Ym
c
= ∑ P(X=x,Y[M] = y[M]) log ∑ h(x)cΠmM=1Wcm,ym
x,y[M]	c
=∑P(X=x) ∑ P(Y[M]=y[M]∣X=x)log∑h(x)cΠmM=1Wcm,y
x	y[M]	c
Since W1, W2,…,Wm ∈ T, thus,
∑	∑ h(x)cΠmM=1Wcm,ym =1
y[M]∈CM c∈C
which means (∑c∈C h(x)cΠmM=1Wcm,ym )y[M] can be seen as a distribution over all possible y[M] ∈ CM.
Moreover, for any two distribution vectors P and q, P ∙ log q ≤ P ∙ log p, thus
∑P(X=x) ∑ P(Y[M]=y[M]∣X=x)log∑h(x)cΠmM=1Wcm,ym
x	y[M]	c
≤∑P(X=x) ∑ P(Y[M] =y[M]∣X=x)logP(Y[M] =y[M]∣X=x)
x	y[M]
=∑ P(X = x) ∑ P(Y[M] = y[M]∣X = x) log ∑ h* (x)c∏M=1CmYm	(see equation (3))
x	y[M]	c
□
Thus, the MLE based method handles the independent mistakes case. However, we will construct
a counter example to show that it cannot handle a simple correlated mistakes case which can be
handled by our method.
Example E.2 (A simple correlated mistakes case). We assume there are only two classes C = {0, 1}
and the prior over Y is uniform, that is, P(Y = 0) = P(Y = 1) = 0.5. We also assume that X = Y.
There are 101 experts and one of the experts, say her the first expert, fully knows Y and always
reports Y 1 = Y. The second expert knows nothing and every time flips a random unbiased coin whose
randomness is independent with X, Y. She reports Y 2 = 1 when she gets head and reports Y2 = 0
otherwise. The rest of experts copy the second expert’s answer all the time, i.e. Ym = Y2, for m ≥ 2.
Note that our method can handle this simple correlated mistakes case and will give all useless experts
weight zero based on Theorem 3.4.
We define h0 as a data classifier such that h0 (x)0 = h0 (x)1 = 0.5. We will show this meaningless
data classifier ho has much higher likelihood than h*, which shows that in this simple correlated
mistakes case, the MLE based method will obtain meaningless results.
We define a data classifier h’s maximal expected likelihood as
wl,wmaχχwmeτEX,Y[M] lθg ∑ h(X ) CnM=IWmYm .
Theorem E.3 (MLE fails for correlated mistakes). In the scenario defined by Example E.2, the
meaningless classifier h0 ’s maximal expected likelihood is at least log 0.5 and the Bayesian posterior
classifier h* ’s maximal expected likelihood is 100 log 0.5 ≪ log 0.5.
The above theorem implies that the MLE based method fails in Example E.2.
Proof. For the Bayesian posterior classifier h*, since X = Y = Y1 and Y2 = … = YM, then
h* (X = c) is an one-hot vector where the cth entry is 1 and everything is determined by the
realizations of Y and Y 2 .
17
Published as a conference paper at ICLR 2019
Eχ,γ[M] log ∑ h*(X)c∏M=ι Wo
c
=∑ P(X = χ,Y[M] = y[M])log∑h*(χ)c∏M=ιWmym
x,y[M]	c
=∑ P(X = c,Y[M] = y[M]) log ∑ h*(c)c∏M=Wym
c,y[M]	c
=∑ P (Y = c)P (Y2 = c') log wC,c∏M=2WO	(X = Y = Y 1, Y2 =…=Y M)
c,c'
M
=∑ P (Y = c) log Wc1,c + ∑ ∑ P (Y = c) ∑ P (Y2 = c') log WO
C	m=2 C	c'
M
≤ ∑ ∑ P (Y = c) ∑ P (Y2 = c') log Wo
m=2 c	c'
M
≤ ∑ ∑ P (Y = c) ∑ P (Y2 = c') log P (Y2 = c')
m=2 c	c'
(Wm is a transition matrix and P ∙ log q ≤ P ∙ log p)
=100 log 0.5	(Y2 equals 0 with probability 0.5 and 1 with probability 0.5 as well)
The maximal value is obtained by setting W1 as an identity matrix and setting W2 = … = WM
0.5
as( 0.5
0.5
0.5
Thus, the Bayesian posterior data classifier h*'s maximal expected likelihood is
100 log 0.5. For the meaningless data classifier h0,
EX,Y [M] log ∑ h0(X)cΠmM=1Wcm,ym
c
= ∑ P(X=x,Y[M]=y[M])log∑h0(x)cΠmM=1Wcm,y
x,y[M]	c
= ∑ P(X=x,Y[M]=y[M])log0.5∑ΠmM=1Wcm,ym
x,y[M]	c
=∑ P (Y = c)P (Y2 = c') log0.5 ∑ ∏M=1WCmc'
c,c'	c
Note when we set every Wm as an identity matrix, the above formula equals log 0.5. Thus, the
meaningless data classifier h0’s maximal expected likelihood is at least log 0.5.
□
18