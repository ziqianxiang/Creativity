Under review as a conference paper at ICLR 2018
Optimal transport maps for distribution pre-
serving operations on latent spaces of Gener-
ative Models
Anonymous authors
Paper under double-blind review
Ab stract
Generative models such as Variational Auto Encoders (VAEs) and Generative Ad-
versarial Networks (GANs) are typically trained for a fixed prior distribution in
the latent space, such as uniform or Gaussian. After a trained model is obtained,
one can sample the Generator in various forms for exploration and understanding,
such as interpolating between two samples, sampling in the vicinity of a sample
or exploring differences between a pair of samples applied to a third sample. In
this paper, we show that the latent space operations used in the literature so far
induce a distribution mismatch between the resulting outputs and the prior distri-
bution the model was trained on. To address this, we propose to use distribution
matching transport maps to ensure that such latent space operations preserve the
prior distribution, while minimally modifying the original operation. Our exper-
imental results validate that the proposed operations give higher quality samples
compared to the original operations.
1	Introduction & Related Work
Generative models such as Variational Autoencoders (VAEs) (Kingma & Welling, 2013) and Gener-
ative Adversarial Networks (GANs) (Goodfellow et al., 2014) have emerged as popular techniques
for unsupervised learning of intractable distributions. In the framework of Generative Adversarial
Networks (GANs) (Goodfellow et al., 2014), the generative model is obtained by jointly training a
generator G and a discriminator D in an adversarial manner. The discriminator is trained to clas-
sify synthetic samples from real ones, whereas the generator is trained to map samples drawn from
a fixed prior distribution to synthetic examples which fool the discriminator. Variational Autoen-
coders (VAEs) (Kingma & Welling, 2013) are also trained for a fixed prior distribution, but this is
done through the loss of an Autoencoder that minimizes the variational lower bound of the data
likelihood. For both VAEs and GANs, using some data X we end up with a trained generator G,
that is supposed to map latent samples z from the fixed prior distribution to output samples G(z)
which (hopefully) have the same distribution as the data.
In order to understand and visualize the learned model G(z), it is a common practice in the literature
of generative models to explore how the output G(z) behaves under various arithmetic operations on
the latent samples z . In this paper, we show that the operations typically used so far, such as linear
interpolation (Goodfellow et al., 2014), spherical interpolation (White, 2016), vicinity sampling and
vector arithmetic (Radford et al., 2015), cause a distribution mismatch between the latent prior dis-
tribution and the results of the operations. This is problematic, since the generator G was trained on
a fixed prior and expects to see inputs with statistics consistent with that distribution. We show that
this, somewhat paradoxically, is also a problem if the support of resulting (mismatched) distribution
is within the support of a uniformly distributed prior, whose points all have equal likelihood during
training.
To address this, we propose to use distribution matching transport maps, to obtain analogous latent
space operations (e.g. interpolation, vicinity sampling) which preserve the prior distribution of
the latent space, while minimally changing the original operation. In Figure 1 we showcase how
our proposed technique gives an interpolation operator which avoids distribution mismatch when
interpolating between samples ofa uniform distribution. The points of the (red) matched trajectories
1
Under review as a conference paper at ICLR 2018
tion, our matched interpolation and the spherical interpola-
tion (White, 2016).
Figure 1: We show examples of distribution mismatches induced by the previous interpolation
schemes when using a uniform prior in two dimensions. Our matched interpolation avoids this with
a minimal modification to the linear trajectory, traversing through the space such that all points along
the path are distributed identically to the prior.
(b) Uniform prior distri-
bution.
(d) Matched midpoint dis-
tribution (ours)
(c) Linear midpoint distri-
bution
(e) Spherical midpoint
distribution (White, 2016)
are obtained as minimal deviations (in expectation of l1 distance) from the the points of the (blue)
linear trajectory.
1.1	Generative Models and Sample Operations
In the literature there are dozens of papers that use sample operations to explore the learned models.
Bengio et al. (2013) use linear interpolation between neighbors in the latent space to study how
well deep vs shallow representations can disentangle the latent space of Contractive Auto Encoders
(CAEs) (Rifai et al., 2011).
In the seminal GAN paper of Goodfellow et al. (2014), the authors use linear interpolation between
latent samples to visualize the transition between outputs of a GAN trained on MNIST. Dosovitskiy
et al. (2015) linearly interpolate the latent codes of an auto encoder trained on a synthetic chair
dataset.
Radford et al. (2015) also linearly interpolate between samples to evaluate the quality of the learned
representation. Furthermore, motivated by the semantic word vectors of Mikolov et al. (2013), they
explore using vector arithmetic on the samples to change semantics such as adding a smile to a
generated face.
Reed et al. (2016) use linear interpolation to explore their proposed GAN model which operates
jointly in the visual and textual domain. Brock et al. (2016) combine GANs and VAEs for a neural
photo editor, using masked interpolations to edit an embedded photo in the latent space.
1.2	Distribution Mismatch and Related Approaches
While there are numerous works performing operations on samples, most of them have ignored the
problem of distribution mismatch, such as the one presented in Figure 1d. Kingma & Welling (2013)
and Makhzani et al. (2015) sidestep the problem when visualizing their models, by not performing
operations on latent samples, but instead restrict the latent space to 2-d and uniformly sample the
percentiles of the distribution on a 2-d grid. This way, the samples have statistics that are consistent
with the prior distribution. However, this approach does not scale up to higher dimensions - whereas
the latent spaces used in the literature can have hundreds of dimensions.
Related to our work, White (2016) experimentally observe that there is a distribution mismatch
between the distance to origin for points drawn from uniform or Gaussian distribution and points
obtained with linear interpolation, and propose to use a so-called spherical linear interpolation to re-
duce the mismatch, obtaining higher quality interpolated samples. However, the proposed approach
has no theoretical guarantees.
2
Under review as a conference paper at ICLR 2018
Operation	Expression	(Gaussian) Matched Operation
2-point interpolation	y = tz1 + (1 - t)z2 , t ∈ [0, 1]	y = y∕√t2 + (1 -1)2
n-point interpolation	y = Pin=1 ti zi with Pi ti = 1	y = y∕√PE
Vicinity sampling Analogies	yj = Zi + Euj for j = 1,…，k y = z3 + (z2 - z1)	yj = yj /√l + e2 y = y/√3
Table 1: Examples of interesting sample operations which need to be adapted if we want the distri-
bution of the result y to match the prior distribution. If the prior is Gaussian, our proposed matched
operation simplifies to a proper re-scaling factor (see third column) for additive operations.
In this work, we propose a generic method to fully preserve the desired prior distribution when
using sample operations. The approach works as follows: we are given a ‘desired’ operation, such
as linear interpolation y = tz1 + (1 - t)z2, t ∈ [0, 1]. Since the distribution of y does not match
the prior distribution of z, We search for a warping f : Rd → Rd, such that y = f (y) has the
same distribution as z. In order to have the modification y as faithful as possible to the original
operation y, we use optimal transform maps (Santambrogio, 2015; Villani, 2003; 2008) to find a
minimal modification of y which recovers the prior distribution z .
This is illustrated in Figure 1a, where each point y of the matched curve is obtained by warping a
corresponding point y of the linear trajectory, while not deviating too far from the line.
2	From distribution mismatch to optimal transport
With implicit models such as GANs (Goodfellow et al., 2014) and VAEs (Kingma & Welling, 2013),
we use the data X, drawn from an unknown random variable x, to learn a generator G : Rd 7→ Rd0
with respect to a fixed prior distribution pz, such that G(z) approximates x. Once the model is
trained, we can sample from it by feeding latent samples z through G.
We now bring our attention to operations on latent samples zι, ∙∙∙ , Zk fromPz, i.e. mappings
K : Rd ×∙∙∙× Rd → Rd.	(1)
We give a few examples of such operations in Table 1.
Since the inputs to the operations are random variables, their output y = κ(zι, •…，Zk) is also a
random variable (commonly referred to as a statistic). While we typically perform these operations
on realized (i.e. observed) samples, our analysis is done through the underlying random variable y.
The same treatment is typically used to analyze other statistics over random variables, such as the
sample mean, sample variance and test statistics.
In Table 1 we show example operations which have been commonly used in the literature. As
discussed in the Introduction, such operations can provide valuable insight into how the trained
generator G changes as one creates related samples y from some source samples. The most common
such operation is the linear interpolation, which we can view as an operation
yt = tz1 + (1 - t)z2,	(2)
where z1 , z2 are latent samples from the prior pz and yt is parameterized by t ∈ [0, 1].
Now, assume z1 and z2 are i.i.d, and let Z1, Z2 be their (scalar) first components with distribution
pZ. Then the first component of yt is Yt = tZ1 + (1 - t)Z2, and we can compute:
Var[Yt] = Var[tZ1 + (1 -t)Z2] = t2Var[Z1] +(1 -t)2Var[Z2] = (1+2t(t- 1))Var[Z].	(3)
Since (1 + 2t(t - 1)) 6= 1 for all t ∈ [0, 1] \ {0, 1}, it is in general impossible for yt to have
the same distribution as z, which means that distribution mismatch is inevitable when using linear
interpolation. A similar analysis reveals the same for all of the operations in Table 1.
This leaves us with a dilemma: we have various intuitive operations (see Table 1) which we would
want to be able to perform on samples, but their resulting distribution pyt is inconsistent with the
distribution pz we trained G for.
Due to the curse of dimensionality, as empirically observed by White (2016), this mismatch can
be significant in high dimensions. We illustrate this in Figure 2, where we plot the distribution of
the squared norm kyt k2 for the midpoint t = 1/2 of linear interpolation, compared to the prior
3
Under review as a conference paper at ICLR 2018
Figure 2: Distribution of the squared norm ky k2 of midpoints for two prior distributions in 100
dimensions: (a) components uniform on [-1, 1] and (b) components Gaussian N(0, 1), for linear
interpolation, our proposed matched interpolation and the spherical interpolation proposed by White
(2016). Both linear and spherical interpolation introduce a distribution mismatch, whereas our pro-
posed matched interpolation preserves the prior distribution for both priors.
distribution kzk2. With d = 100 (a typical dimensionality for the latent space), the distributions are
dramatically different, having almost no common support. In Appendix 5.1 we expand this analysis
and show that this happens for all prior distributions with i.i.d. entries (i.e. not only Uniform and
Gaussian).
2.1	Distribution matching with optimal transport
In order to address the distribution mismatch, we propose a simple and intuitive strategy for con-
structing distribution preserving operators, via optimal transport:
Strategy 1 (Optimal Transport Matched Operations).
1.	We construct an 'intuitive' operator y = κ(zι, •一,Zk).
2.	We analytically (or numerically) compute the resulting (mismatched) distribution py
3.	We search for a minimal modification y = f (y) (in the sense that Ey [c(y, y)] is minimal
with respect to a cost C), such that distribution is brought back to the prior, i.e. Py = Pz.
The cost function in step 3 could e.g. be the euclidean distance c(x, y) = kx - yk, and is used
to measure how faithful the modified operator, y = f (κ(zι,…，Zk)) is to the original operator
k. Finding the map f which gives a minimal modification can be challenging, but fortunately it is
a well studied problem from optimal transport theory. We refer to the modified operation y as the
matched version of y, with respect to the cost C and prior distribution Pz .
For completeness, we introduce the key concept of optimal transport theory in a simplified set-
ting, i.e. assuming probability distributions are in euclidean space and skipping measure theoretical
formalism. We refer to Villani (2003; 2008) and Santambrogio (2015) for a thorough and formal
treatment of optimal transport.
The problem of step (3) above was first posed by Monge (1781) and can more formally be stated as:
Problem 1 (Santambrogio (2015) Problem 1.1). Given probability distributions Px,Py, with do-
mains X , Y respectively, and a cost function C : X × Y → R+, we want to minimize
inf {Eχ~pχ[c(x,f(x))]f ： X → Y,f (x)〜Py }	(MP)
We refer to the minimizer f *X → Y of (MP) (if it exists), as the optimal transport map from PX to
Py with respect to the cost C.
However, the problem remained unsolved until a relaxed problem was studied by Kantorovich
(1942):
4
Under review as a conference paper at ICLR 2018
Problem 2 (Santambrogio (2015) Problem 1.2). Given probability distributions px, py, with do-
mains X , Y respectively, and a cost function c : X × Y → R+, we want to minimize
inf ^E(x,y)〜px,y [c(x, y)]∣(x, y)〜Px,y, X 〜Px, y 〜Py } ,	(KP)
where (x, y)〜Pxy, X 〜px, y 〜Py denotes that (x, y) have a joint distribution Pxy which has
(previously specified) marginals Px and Py.
We refer to the joint Px,y which minimizes (KP) as the optimal transport plan from Px to Py with
respect to the cost c.
The key difference is to relax the deterministic relationship between X and f(X) to a joint prob-
ability distribution Px,y with marginals Px and Py for X and y. In the case of Problem 1, the
minimization might be over the empty set since it is not guaranteed that there exists a mapping
f such that f (x)〜 y. In contrast, for Problem 2, one can always construct a joint density Pxy
with Px and Py as marginals, such as the trivial construction where X and y are independent, i.e.
Px,y(x, y) := Px (x)Py(y).
Note that given a joint density Px,y (x, y) over X × Y, we can view y conditioned on X = x for
a fixed x as a stochastic function f(x) from X to Y, since given a fixed x do not get a specific
function value f (x) but instead a random variable f (x) that depends on x, with f (x)〜y|x = X
with density Py(y|x = x) := Papy(：)"). In this case We have (x, f (x))〜Pxy, so We can view the
Problem KP as a relaxation of Problem MP where f is allowed to be a stochastic mapping.
While the relaxed problem of Kantorovich (KP) is much more studied in the optimal transport liter-
ature, for our purposes of constructing operators it is desirable for the mapping f to be deterministic
as in (MP).
To this end, we will choose the cost function c such that the two problems coincide and where we
can find an analytical solution f or at least an efficient numerical solution.
In particular, we note that most operators in Table 1 are all pointwise, such that if the points zi have
i.i.d. components, then the result y will also have i.i.d. components.
If we combine this with the constraint for the cost c to be additive over the components of X, y, we
obtain the following simplification:
Theorem 1. Suppose Px and Py have i.i.d components andc over X × Y = Rd × Rd decomposes
as
d
c(x,y) = X C(x(i), y(i)).	(4)
i=1
Consequently, the minimization problems (MP) and (KP) turn into d identical scalar problems for
the distributions PX and PY of the components of X and y:
inf {Eχ〜PX [C(X,T(X))]∣T : R → R,T(X)〜PY0	(MP-I-D)
inf {E(x,y )〜pχ,γ [C(X, Y)] ∣(X, Y)〜Px,y , X 〜PX ,Y 〜PY } ,	(KP-I-D)
such that an optimal transport map T for (MP-1-D) gives an optimal transport map f for (MP)
by pointwise application of T, i.e. f (x)(i) := T(x(i)), and an optimal transport plan PX,Y for
(KP-1-D) gives an optimal transport plan Px,y(x, y) := Qid=1 PX,Y (x(i), y(i)) for (KP).
Proof. See Appendix.	□
Fortunately, under some mild constraints, the scalar problems have a known solution:
Theorem 2 (Theorem 2.9 in Santambrogio (2015)). Let h : R → R+ be convex and suppose the
cost C takes the form C(x, y) = h(x - y). Given an continuous source distribution PX anda target
distribution PY on R having a finite optimal transport cost in (KP-1-D), then
TXmo→n Y (x) :=FY[-1](FX(x)),	(5)
5
Under review as a conference paper at ICLR 2018
(a) Uniform prior
Figure 3: We show the monotone transport maps for linear interpolation evaluated at t ∈
{0.05, 0.25, 0.5}, to Uniform and Gaussian priors.
(b) Gaussian prior
defines an optimal transport map from pX to pY for (MP-1-D), where FX (x) := -x∞ pX (x0)dx0
is the Cumulative Distribution Function (CDF) of X and FY[-1] (y) := inf {t ∈ R|FY (t) ≥ y} is
the pseudo-inverse of FY . Furthermore, the joint distribution of (X, TXmo→n Y (X)) defines an optimal
transport plan for (KP-1-D).
The mapping TXmo→n Y (x) in Theorem 2 is non-decreasing and is known as the monotone transport
map from X to Y . It is easy to verify that TXmo→n Y (X) has the distribution of Y , in particular
Fχ(X)〜Uniform(0,1) and if U 〜Uniform(0,1) then FY-1] (U)〜Y.
Now, combining Theorems 1 and 2, we obtain a concrete realization of the Strategy 1 outlined above.
We choose the cost c such that it admits to Theorem 1, such as c(x, y) := kx - yk1, and use an
operation that is pointwise, so we just need to compute the monotone transport map in (5). That is,
if z has i.i.d components with distribution pZ, we just need to compute the component distribution
pY of the result y of the operation, the CDFs FZ , FY and obtain
TYm→onZ(y) := FZ[-1](FY (y))	(6)
as the component-wise modification of y, i.e. y(i) := TmonZ(y(i)).
In Figure 3 we show the monotone transport map for the linear interpolation y = tz1 + (1 - t)z2
for various values of t. The detailed calculations and examples for various operations are given in
Appendix 5.3, for both Uniform and Gaussian priors. The Gaussian case has a particularly simple
resulting transport map for additive operations, where it is just a linear transformation through a
scalar multiplication, summarized in the third column of Table 1.
3	Experiments
3.1	Comparison of distributions
To validate the correctness of the matched operators obtained above, we numerically simulate the
distributions for toy examples, as well as prior distributions typically used in the literature.
Priors vs. interpolations in 2-D For Figure 1, we sample 1 million pairs of points in two di-
mension, from a uniform prior (on [-1, 1]2), and estimate numerically the midpoint distribution of
linear interpolation, our proposed matched interpolation and the spherical interpolation of White
(2016). It is reassuring to see that the matched interpolation gives midpoints which are identically
distributed to the prior. In contrast, the linear interpolation condenses more towards the origin, form-
ing a pyramid-shaped distribution (the result of convolving two boxes in 2-d). Since the spherical
interpolation of White (2016) follows a great circle with varying radius between the two points, we
see that the resulting distribution has a “hole” in it, “circling” around the origin for both priors.
Priors vs. interpolations in 100-D For Figure 2, we sample 1 million pairs of points in d = 100
dimensions, using either i.i.d. uniform components on [-1, 1] or Gaussian N (0, 1) and compute the
6
Under review as a conference paper at ICLR 2018
良金6**4毫哈
的助 9。。＜99©
@ 0 0 Θ θ ∣S∣ 191IQI
❽与 D圜/图回回
❷的曾匐❷121回回
(b) LSUN dataset
(c) CelebA dataset
(a) LLD icon dataset
Figure 4:	2-point interpolation: Each example shows linear, SLERP and transport matched inter-
polation from top to bottom respectively. For LLD icon dataset (a) and LSUN (b), outputs are
produced with DCGAN using a uniform prior distribution, whereas the CelebA model (c) uses a
Gaussian prior. The output resolution for the (a) is 32 × 32, for (b) and (c) 64 × 64 pixels.
♦ @。M
❷④♦❷
日。。宓
/«心βΘ
解© ® M画
G>⅛2s固
//ZE®。Il-ID
加年@0 M
GsΞ8ffl
鳏。能M逊
Θ⅜9 0 回
QG但趣。

(a) Linear	(b) Spherical	(c) Distribution matched
Figure 5:	Midpoint sampling for linear, SLERP and uniform-matched interpolation when using the
same pairs of sample points on LLD icon dataset with uniform prior.
distribution of the squared norm of the midpoints. We see there is a dramatic difference between
vector lengths in the prior and the midpoints of linear interpolation, with only minimal overlap. We
also show the spherical (SLERP) interpolation of White (2016) which has a matching first moment,
but otherwise also induces a distribution mismatch. In contrast, our matched interpolation, fully
preserves the prior distribution and perfectly aligns. We note that this setting (d = 100, uniform or
Gaussian) is commonly used in the literature.
3.2 Qualitative results
In this section we will present some concrete examples for the differences in generator output de-
pendent on the exact sample operation used to traverse the latent space of a generative model. To
this end, the generator output for latent samples produced with linear interpolation, SLERP (spheri-
cal linear interpolation) of White (2016) and our proposed matched interpolation will be compared.
Please refer to Table 1 for an overview of the operators used in this Section.
Setup We used DCGAN (Radford et al., 2015) generative models trained on LSUN bedrooms (Yu
et al., 2015), CelebA (Liu et al., 2015) and LLD (Sage et al., 2017), an icon dataset, to qualitatively
evaluate. For LSUN, the model was trained for two different output resolutions, providing 64 × 64
pixel and a 128 × 128 pixel output images (where the latter is used in figures containing larger sample
images). The models for LSUN and the icon dataset where both trained on a uniform latent prior
distribution, while for CelebA a Gaussian prior was used. The dimensionality of the latent space is
100 for both LSUN and CelebA, and 512 for the model trained on the icon model. Furthermore we
use improved Wasserstein GAN (iWGAN) with gradient penalty (Gulrajani et al., 2017) trained on
CIFAR-10 at 32 × 32 pixels with a 128-dimensional Gaussian prior to produce the inception scores
presented in Section 3.3.
7
Under review as a conference paper at ICLR 2018
(a) Linear
(b) Spherical
(c) Distribution matched
Figure 6: Midpoint sampling for linear, SLERP and uniform-matched interpolation when using the
same pairs of sample points on LSUN (64 × 64) with uniform prior.
(a) Linear interpolation
(b) Spherical interpolation
(c) Distribution matched
Figure 7: 4-point interpolation between 4 sampled points (corners) from DCGAN trained on LSUN
(128 × 128) using a uniform prior. The same interpolation is shown using linear, SLERP and
distribution matched interpolation.
2-point interpolation We begin with the classic example of 2-point interpolation: Figure 4 shows
three examples per dataset for an interpolation between 2 points in latent space. Each example is
first done via linear interpolation, then SLERP and finally matched interpolation. In Figure 15 in the
Appendix we show more densely sampled examples.
It is immediately obvious in Figures 4a and 4b that linear interpolation produces inferior results with
generally more blurry, less saturated and less detailed output images. SLERP and matched interpo-
lation are slightly different, however it is not visually obvious which one is superior. Differences
between the various interpolation methods for CelebA (Figure 4c) are much more subtle to the point
that they are virtually indistinguishable when viewed side-by-side. This is not an inconsistency

(a) Linear interpolation
® © φ ⅛ ≠
@萼-▼辛辛
QS年车♦
庭嘉革里
©0 0聿2
©号 一▼:
SS萃辛♦
庭曹亨■ .
Ξ≡率 Hl ≡
(b) Spherical
(c) Distribution matched
SS £ OOO
■ ■ • •汆
Figure 8: 4-point interpolation between 4 sampled points (corners) from DCGAN trained on icon
dataset using a uniform prior. The same interpolation is shown using linear, SLERP and distribution
matched interpolation.
8
Under review as a conference paper at ICLR 2018
Figure 9: Vicinity sampling on LSUN dataset (128 × 128) with uniform prior. The sample in the
middle is perturbed in random directions producing the surrounding sample points.
(b) Matched vicinity sampling
(a) Vicinity sampling
(b) Matched vicinity sampling
Figure 10: Vicinity sampling on LLD icon dataset with uniform prior. The sample in the middle is
perturbed in random directions producing the surrounding sample points.
though: while distribution mismatch can cause large differences, it can also happen that the model
generalizes well enough that it does not matter.
Midpoint interpolation In all cases, the point where the interpolation methods diverge the most, is
at the midpoint of the interpolation where t = 0.5. Thus we provide 25 such interpolation midpoints
in Figures 5 (LLD icons) and 6 (LSUN) for direct comparison.
4-point interpolation An even stronger effect can be observed when we do 4-point interpolation,
showcased in Figure 7 (LSUN) and Figure 8 (LLD icons). The higher resolution of the LSUN output
Figure 11: Random walk for LLD, LSUN (64 x 64) and CelebA. The random walks consist of a
succession of steps in random directions, calculated for the same sequence of directions using (non-
matched) vicinity sampling in the upper rows and our proposed matched vicinity sampling in the
lower rows.
9
Under review as a conference paper at ICLR 2018
Dataset Model Prior Inception score	CIFAR-10 iWGAN Gaussian, 128-D 7.90 ± 0.11	LLD-icon DCGAN Uniform, 100-D 3.70 ± 0.09	LSUN DCGAN Uniform, 100-D 3.90 ± 0.08	CelebA DCGAN Gaussian, 100-D 2.05 ± 0.04
Inception Score on midpoints of interpolation operations:				
2-point linear	7.12 ± 0.08 (-10%)	3.56 ± 0.06 (-4%)	3.57 ± 0.07 (-8%)	1.71 ± 0.02 (-17%)
2-point SLERP	7.89 ± 0.09	3.68 ± 0.09	3.90 ± 0.11	2.04 ± 0.04
2-point matched	7.89 ± 0.08	3.69 ± 0.08	3.89 ± 0.08	2.04 ± 0.03
4-point linear	5.84 ± 0.08 (-26%)	3.45 ± 0.08 (-7%)	2.95 ± 0.06 (-24%)	1.46 ± 0.01 (-29%)
4-point SLERP	7.87 ± 0.09	3.72 ± 0.09	3.89 ± 0.10	2.04 ± 0.04
4-point matched	7.91 ± 0.09	3.69 ± 0.10	3.91 ± 0.10	2.04 ± 0.04
Table 2: Inception scores on LLD-icon, LSUN, CIFAR-10 and CelebA for the midpoints of various
interpolation operations. Scores are reported as mean ± standard deviation (relative change in %).
highlights the very apparent loss of detail and increasing prevalence of artifacts towards the midpoint
in the linear version, compared to SLERP compared and our matched interpolation.
Vicinity sampling Furthermore we provide two examples for vicinity sampling in Figures 9 and
10. Analogous to the previous observations, the output under a linear operator lacks definition,
sharpness and saturation when compared to both spherical and matched operators.
Random walk An interesting property of our matched vicinity sampling is that we can obtain a
random walk in the latent space by applying it repeatedly: we start at a point y0 = z drawn from the
prior, and then obtain point yi by sampling a single point in the vicinity of yi-1, using some fixed
’step size’ .
We show an example of such a walk in Figure 11, using = 0.5. As a result of the repeated applica-
tion of the vicinity sampling operation, the divergence from the prior distribution in the non-matched
case becomes stronger with each step, resulting in completely unrecognizable output images on the
LSUN and LLD icon models. Even for the CelebA model where differences where minimal be-
fore, they are quite apparent in this experiment. The random walk thus perfectly illustrates the need
for respecting the prior distribution when performing any operation in latent space, as the adverse
effects can cumulate through the repeated application of operators that do not comply to the prior
distribution.
3.3 Quantitative results
We quantitatively confirm the observations of the previous section by using the Inception
score(Salimans et al., 2016). In Table 2 we compare the Inception score of our trained models (i.e.
using random samples from the prior) with the score when sampling midpoints from the 2-point and
4-point interpolations described above, reporting mean and standard deviation with 50,000 samples,
as well as relative change to the original model scores if they are significant. Compared to the
original scores of the trained models, our matched operations are statistically indistinguishable (as
expected) while the linear interpolation gives a significantly lower score in all settings (up to 29%
lower). As observed for the quality visually, the SLERP heuristic gives similar scores to the matched
operations.
4 Conclusions
We have shown that the common latent space operations used for Generative Models induce dis-
tribution mismatch from the prior distribution the models were trained for. This problem has been
mostly ignored by the literature so far, partially due to the belief that this should not be a problem for
uniform priors. However, our statistical and experimental analysis shows that the problem is real,
with the operations used so far producing significantly lower quality samples compared to their in-
puts. To address the distribution mismatch, we propose to use optimal transport to minimally modify
(in l1 distance) the operations such that they fully preserve the prior distribution. We give analytical
formulas of the resulting (matched) operations for various examples, which are easily implemented.
The matched operators give a significantly higher quality samples compared to the originals, having
the potential to become standard tools for evaluating and exploring generative models.
10
Under review as a conference paper at ICLR 2018
References
Yoshua Bengio, Gregoire MesniL Yann Dauphin, and Salah Rifai. Better mixing via deep represen-
tations. In Proceedings of the 30th International Conference on Machine Learning (ICML-13),
pp. 552-560, 2013.
Andrew Brock, Theodore Lim, James M Ritchie, and Nick Weston. Neural photo editing with
introspective adversarial networks. arXiv preprint arXiv:1609.07093, 2016.
Alexey Dosovitskiy, Jost Tobias Springenberg, and Thomas Brox. Learning to generate chairs with
convolutional neural networks. In Proceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, pp. 1538-1546, 2015.
Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair,
Aaron Courville, and Yoshua Bengio. Generative adversarial nets. In Advances in neural infor-
mation processing systems, pp. 2672-2680, 2014.
Ishaan Gulrajani, Faruk Ahmed, Martin Arjovsky, Vincent Dumoulin, and Aaron Courville. Im-
proved training of wasserstein gans. arXiv:1704.00028v2, 2017.
Leonid Vitalievich Kantorovich. On the translocation of masses. In Dokl. Akad. Nauk SSSR, vol-
ume 37, pp. 199-201, 1942.
Diederik P Kingma and Max Welling. Auto-encoding variational bayes. arXiv preprint
arXiv:1312.6114, 2013.
Ziwei Liu, Ping Luo, Xiaogang Wang, and Xiaoou Tang. Deep learning face attributes in the wild.
In Proceedings of International Conference on Computer Vision (ICCV), 2015.
David JC MacKay. Information theory, inference and learning algorithms. Cambridge university
press, 2003.
Alireza Makhzani, Jonathon Shlens, Navdeep Jaitly, Ian Goodfellow, and Brendan Frey. Adversarial
autoencoders. arXiv preprint arXiv:1511.05644, 2015.
Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Corrado, and Jeff Dean. Dis-
tributed representations of words and phrases and their compositionality. In
C. J. C. Burges, L. Bottou, M. Welling, Z. Ghahramani, and K. Q. Weinberger
(eds.), Advances in Neural Information Processing Systems 26,	pp. 3111-3119.
Curran Associates, Inc., 2013. URL http://papers.nips.cc/paper/
5021-distributed-representations-of-words-and-phrases-and-their-compositionality.
pdf.
Gaspard Monge. Memoire SUr la theorie des deblais et des remblais. Histoire de l,Academie Royale
des Sciences de Paris, 1781.
Alec Radford, Luke Metz, and Soumith Chintala. Unsupervised representation learning with deep
convolutional generative adversarial networks. arXiv preprint arXiv:1511.06434, 2015.
Scott Reed, Zeynep Akata, Xinchen Yan, Lajanugen Logeswaran, Bernt Schiele, and Honglak Lee.
Generative adversarial text to image synthesis. arXiv preprint arXiv:1605.05396, 2016.
Salah Rifai, Pascal Vincent, Xavier Muller, Xavier Glorot, and Yoshua Bengio. Contractive auto-
encoders: Explicit invariance during feature extraction. In Proceedings of the 28th international
conference on machine learning (ICML-11), pp. 833-840, 2011.
Alexander Sage, Eirikur Agustsson, Radu Timofte, and Luc Van Gool. Lld: Large logo dataset.
2017. URL https://data.vision.ee.ethz.ch/cvl/lld/.
Tim Salimans, Ian Goodfellow, Wojciech Zaremba, Vicki Cheung, Alec Radford, and Xi Chen.
Improved techniques for training gans. In Advances in Neural Information Processing Systems,
pp. 2234-2242, 2016.
Filippo Santambrogio. Optimal transport for applied mathematicians. Birkauser NY, 2015.
11
Under review as a conference paper at ICLR 2018
Cedric Villani. Topics in optimal transportation. Number 58. American Mathematical Soc., 2003.
Cedric Villani. Optimal transport: old and new, volume 338. Springer Science & Business Media,
2008.
Tom White. Sampling generative networks. arXiv preprint arXiv:1609.04468, 2016.
Fisher Yu, Ari Seff, Yinda Zhang, Shuran Song, Thomas Funkhouser, and Jianxiong Xiao. Lsun:
Construction of a large-scale image dataset using deep learning with humans in the loop. arXiv
preprint arXiv:1506.03365, 2015.
12
Under review as a conference paper at ICLR 2018
5 Appendix
5.1	On the curse of dimensionality and geometric outliers
We note that the analysis here can bee seen as a more rigorous version of an observation made by
White (2016), who experimentally show that there is a significant difference between the average
norm of the midpoint of linear interpolation and the points of the prior, for uniform and Gaussian
distributions.
Suppose our latent space has a prior with Z = [Zι, ∙∙∙ ,Zd] ∈ [-1,1]d with i.i.d entries Zi 〜Z. In
this case, we can look at the squared norm
d
kzk2=XZi2.	(7)
i=1
From the Central Limit Theorem (CLT), we know that as d → ∞,
√d( d kzk2 - μZ2 ) → N(O, σZ 2 ),	⑻
in distribution. Thus, assuming d is large enough such that we are close to convergence, we can
approximate the distribution of ∣∣zk2 as N(dμz2, dσZ2). In particular, this implies that almost all
points lie on a relatively thin spherical shell, since the mean grows as O(d) whereas the standard
deviation grows only as O(√d).
We note that this property is well known for i.i.d Gaussian entries (see e.g. Ex. 6.14 in MacKay
(2003)). For Uniform distribution on the hypercube it is also well known that the mass is concen-
trated in the corner points (which is consistent with the claim here since the corner points lie on a
sphere).
Now consider an operator such as the midpoint of linear interpolation, y = ɪzι +11 z2, with compo-
nents Y(i) = 2Z(i) + 1 Z2i). Furthermore, let's assume the component distribution PZ is symmetric
around 0, such that E[Z] = 0.
In this case, we can compute:
E[(γ(i))2] = Var[2 Z(i) + ∣ Z?] = ∣ Var[Z] =1 μZ	⑼
Var[(γ(i))2] = Var[(∣ Z(i) + ∣ Z2i))2] = ɪ Var[Z 2] = *Z 2.	(10)
Thus, the distribution Ofkyk2 Can be approximated with N(21 dμz2, ɪ dσZ2).
Therefore, y also mostly lies on a spherical shell, but with a different radius than z . In fact, the
shells will intersect at regions which have a vanishing probability for large d. In other words, when
looking at the squared norm kyk2, kyk2 is a (strong) outlier with respect to the distribution of kzk2.
5.2	Proof of Theorem 1
Proof. We will show it for the Kantorovich problem, the Monge version is similar.
13
Under review as a conference paper at ICLR 2018
Starting from (KP), we compute
inf {E(x,y)〜Pχ,y [c(x, y)] |(x, y)〜Px,y, X 〜Px, y 〜Py }
(d
E(x,y)〜Pχ,y[XC(x(i),y"，)] I(X, y) ~ px,y, X ~ px, y ~ Py
)
)
inf ∖ Ex E(χ,y)-Pχ,y [C(x(i), yCi))] |(x, y) 〜Px,y, X 〜Pχ, y 〜Py
d
≥ X inf {E(χ,y)〜Px,y [C(x(i), y(i))] I(x, y) 〜Px,y, X 〜Pχ, V 〜Py }
i=1
d
=X inf {E(X,Y)〜px,Y[C(X, y )]∣(X, y ) ~ PX,Y,X ~ PX, Y ~ Py}
i=1
=d ∙ inf {E(X,Y)〜px,Y[C(X, Y )]∣(X, Y) ~ PX,Y,X ~ PX ,Y ~ PY O ,
(11)
(12)
(13)
(14)
(15)
(16)
(17)
where the inequality in (14) is due to each term being minimized separately.
Now let Pd(X, Y) be the set of joints Px,y withPx,y(x,y) = Qid=1 PX,Y (x(i), y(i)) where PX,Y
has marginals PX andPY. In this case Pd (X, Y) is a subset of all joints Px,y with marginals Px and
Py, where the pairs (X(1), y(1)), . . . , (X(d), y(d))) are constrained to be i.i.d. Starting again from
(13) can compute:
inf {χ E(x,y)〜Pχ,y [C(X(i), y(i))]l(X, y) 〜Px,y, X 〜Px, y 〜Py }
≤ inf
,y[C(X(i),y(i))]|||Px,y ∈ Pd(X, Y)
inf X E(x,y)
~Pχ,y[C(X(i),y(i))]|||Px,y ∈ Pd(X, Y)
inf {χ E(X,Y)〜px,y [c(x, Y)] |(X, Y) ~ Px,γ, X ~ PX, Y ~ Py j
d ∙inf {e(x,y)〜px,Y[C(X, Y)]|(X, Y) ~ Px,υ, X ~ Px, Y ~ Py },
(18)
(19)
(20)
(21)
(22)
where the inequality in (18) is due to minimizing over a smaller set.
Since the two inequalities above are in the opposite direction, equality must hold for all of the
expressions above, in particular:
inf {E(χ,y)〜Px,y [c(x, v)]∣(x, y) 〜Pxy, X 〜Px, y 〜Py}	(23)
=d ∙ inf {E(χ,γ)〜pχ,γ[C(X,Y)]∣(X,Y)〜px,y,X 〜PX,Y 〜PY}	(24)
Thus, (KP) and (KP-1-D) equal up to a constant, and minimizing one will minimize the
other. Therefore the minimization of the former can be done over PX,Y with Px,y (x, y) =
Qd=ι px,y (x(i),y(i)).	'	'	□
5.3	Calculations for Examples
In the next sections, we illustrate how to compute the matched operations for a few examples, in
particular for linear interpolation and vicinity sampling, using a uniform or a Gaussian prior. We
14
Under review as a conference paper at ICLR 2018
picked the examples where we can analytically compute the uniform transport map, but note that it
is also easy to compute FZ[-1] and (FY (y)) numerically, since one only needs to estimate CDFs in
one dimension.
Since the components of all random variables in these examples are i.i.d, for such a random vector
x we will implicitly write X for a scalar random variable that has the distribution of the components
of x.
When computing the monotone transport map TXmo→n Y , the following Lemma is helpful.
Lemma 1 (Theorem 2.5 in Santambrogio (2015)). Suppose a mapping g(x) is non-decreasing and
maps a continuous distribution pX to a distribution pY , i.e.
g(X)〜Y,	(25)
then g is the monotone transport map TXmo→n Y .
According to Lemma 1, an alternative way of computing TXmo→n Y is to find some g that is non-
decreasing and transforms pX to pY .
Example 1:	Uniform Linear Interpolation
Suppose Z has uniform components Z 〜Uniform(-1,1). In this case, PZ (Z) = 1/2 for -1 <z<
1.
Now let yt = tz1 + (1 - t)z2 denote the linear interpolation between two points z1, z2, with
component distribution pYt. Due to symmetry we can assume that t > 1/2, since pYt = pY1-t. We
then obtain PYt as the convolution of PtZ and p(i-t)z, i.e. PYt = PtZ * p(i-t)z. First We note that
ptZ = 1/(2t) for -t < z < t and p(1-t)Z = 1/(2(1 - t)) for -(1 - t) < z < 1 - t. We can then
compute:
PYt (y) = (PtZ * P(1-t)Z)(y)
0
1
2(1 - t)(2t)
y + 1
2-2t
-y + 1
0
ify < -1
if - 1 < y < -t+ (1 -t)
if - t+ (1 - t) < y < t- (1 - t)
ift- (1 -t) < y < 1
if 1 < y
(26)
(27)
(28)
The CDF FYt is then obtained by computing
FYt(y)
Zy
∞
PYt (y0)dy0
1
2(1 - t)(2t)
1 (y +1)(y +1)
2(1 -t)(y+t)
2(1 - t)(3t - I) + (-21y2 + y + 1 (2t - I)2 - (2t - I))
,2(1 - t)(2t)
(29)
ify< -1
if - 1 < y < 1 - 2t
if1 - 2t< y < 2t- 1
if 2t- 1 < y < 1
if 1 < y
(30)
0
SincePZ(z) = 1/2 for |z| < 1, we have FZ(z) = ɪZ + 2 for |z| < 1. This gives FZ-1](p)=
2(P - 21).
Now, we just compose the two mappings to obtain TYmo→n Z(y) = FZ[-1] (FYt (y)).
Example 2:	Uniform Vicinity Sampling and Random Walk
Let z again have uniform components on [-1, 1]. For vicinity sampling, we want to obtain new
points z1, ∙, Zk which are close to z. We thus define
zi0 := z + ui,	(31)
15
Under review as a conference paper at ICLR 2018
where ui also has uniform components, such that each coordinate of zi0 differs at most by from z .
By identifying tZi0 = tZ + (1 - t)Ui with t = 1/(1 + ), we see that tZi0 has identical distribution
to the linear interpolation Yt in the previous example. Thus gt(Zi0) := TYmo→n Z (tZi0) will have the
distribution of Z, and by Lemma1 is then the monotone transport map from Zi0 to Z.
Example 3:	Gaussian Linear Interpolation, Vicinity Sampling and Analogies
Suppose Z has components Z 〜N(0,σ2). In this case, We can compute linear interpolation as
before, yt = tzι + (1 -埒z2. Since the sum of Gaussians is Gaussian, we get, Yt 〜 N (0, t2σ2 +
(1 - t)2 σ2 ). Now, it is easy to see that with a proper scaling factor, we can adjust the variance of
Yt back to σ2. That is, √t2+(1-t)2 Yt 〜N(0,σ2), so by Lemma 1 gt(y) := √t2+(1-t)2 y is the
monotone transport map from Yt to Z.
By adjusting the vicinity sampling operation to
zi0 := z + ei,	(32)
where ei 〜N(0,1), we can similarly find the monotone transport map ge(y) = √1^y.
Another operation which has been used in the literature is the “analogy”, where from samples
z1 , z2 , z3, one wants to apply the difference between z1 and z2, to z3. The transport map is then
g(y) = √3y
16
Under review as a conference paper at ICLR 2018
5.4 Additional experiments
(a) Linear interpolation
(b) Spherical linear interpolation
(c) Distribution matched
Figure 12: 4-point interpolation between 4 sampled points (corners) from DCGAN trained on
CelebA with Gaussian prior. The same interpolation is shown using linear, SLERP and distribution
matched interpolation.
(a) Linear	(b) Spherical	(c) Distribution matched
Figure 13: Midpoint sampling for linear, SLERP and uniform-matched interpolation when using the
same pairs of sample points on CelebA with Gaussian prior.
(a) Vicinity sampling	(b) Matched vicinity sampling
Figure 14: Vicinity sampling on CelebA dataset with Gaussian prior. The sample in the middle is
perturbed in random directions producing the surrounding sample points.
17
Under review as a conference paper at ICLR 2018
◎❺①守，鹤W •〃力
©◎©Bee ⑦力，
(a) LLD icon dataset
(b) LSUN dataset
Figure 15: 2-point interpolation in detail: Each example shows linear, SLERP and transport matched
interpolation from top to bottom respectively, with 16 points taken from the path, produced with
DCGAN using a uniform prior distribution.
18