Under review as a conference paper at ICLR 2018
On Optimality Conditions for Auto-Encoder
Signal Recovery
Anonymous authors
Paper under double-blind review
Ab stract
Auto-Encoders are unsupervised models that aim to learn patterns from observed
data by minimizing a reconstruction cost. The useful representations learned
are often found to be sparse and distributed. On the other hand, compressed
sensing and sparse coding assume a data generating process, where the observed
data is generated from some true latent signal source, and try to recover the
corresponding signal from measurements. Looking at auto-encoders from this
signal recovery perspective enables us to have a more coherent view of these
techniques. In this paper, in particular, we show that the true hidden representation
can be approximately recovered if the weight matrices are highly incoherent with
unit `2 row length and the bias vectors takes the value (approximately) equal
to the negative of the data mean. The recovery also becomes more and more
accurate as the sparsity in hidden signals increases. Additionally, we empirically
also demonstrate that auto-encoders are capable of recovering the data generating
dictionary when only data samples are given.
1	Introduction
Recovering hidden signal from measurement vectors (observations) is a long studied problem in
compressed sensing and sparse coding with a lot of successful applications. On the other hand, auto-
encoders (AEs) (Bourlard and Kamp, 1988) are useful for unsupervised representation learning for
uncovering patterns in data. AEs focus on learning a mapping x → h → x, where the reconstructed
vector X is desired to be as close to X as possible for the entire data distribution. What we show
in this paper is that if we consider x is actually generated from some true sparse signal h by some
process (see section 3), then switching our perspective on AE to analyze h 7→ x 7→ h shows that
AE is capable of recovering the true signal that generated the data and yields useful insights into the
optimality of model parameters of auto-encoders in terms of signal recovery. In other words, this
perspective lets us look at AEs from a signal recovery point of view where forward propagating x
recovers the true signal h. We analyze the conditions under which the encoder part of an AE recovers
the true h from x, while the decoder part acts as the data generating process. Our main result shows
that the true sparse signal h (with mild distribution assumptions) can be approximately recovered by
the encoder of an AE with high probability under certain conditions on the weight matrix and bias
vectors. Additionally, we empirically show that in a practical setting when only data is observed,
optimizing the AE objective leads to the recovery of both the data generating dictionary W and the
true sparse signal h, which together is not well studied in the auto-encoder framework, to the best of
our knowledge.
2	Sparse Signal Recovery Perspective
While it is known both empirically and theoretically, that useful features learned by AEs are usually
sparse (Memisevic et al., 2014; Nair and Hinton, 2010; Arpit et al., 2016). An important question that
has not been answered yet is whether AEs are capable of recovering sparse signals, in general. This is
an important question for Sparse Coding, which entails recovering the sparsest h that approximately
satisfies x = WTh, for any given data vector x and overcomplete weight matrix W. However, since
this problem is NP complete (Amaldi and Kann, 1998), it is usually relaxed to solving an expensive
optimization problem (Candes et al., 2006; Candes and Tao, 2006),
arg minkx-WThk2+λkhk1	(1)
h
1
Under review as a conference paper at ICLR 2018
where W ∈ Rm×n is a fixed overcomplete (m > n) dictionary, λ is the regularization coefficient,
x ∈ Rn is the data and h ∈ Rm is the signal to recover. For this special case, Makhzani and Frey
(2013) analyzed the condition under which linear AEs can recover the support of the hidden signal.
The general AE objective, on the other hand, minimizes the expected reconstruction cost
JAE = min Ex [L(x,sd (WTSe(WX + be) + bd))]	(2)
W,be,bd
for some reconstruction cost L, encoding and decoding activation function se(.) and sd(.), and bias
vectors be and bd . Notice however, in the case of auto-encoders, the activation functions can be
non-linear in general, in contrast to the sparse coding objective. In this paper we consider linear
decoding activation sd because it is a more general case 1. In addition, in case of AEs we do not have a
separate parameter h for the hidden representation corresponding to every data sample X individually.
Instead, the hidden representation for every sample is a parametric function of the sample itself. This
is an important distinction between the optimization in eq. 1 and our problem - the identity of h in
eq. 1 is only well defined in the presence of `1 regularization due to the overcompleteness of the
dictionary. However, in our problem, we assume a true signal h generates the observed data X as
X = WTh + bd, where the dictionary W and bias vector bd are fixed. Hence, what we mean by
recovery of sparse signals in an AE framework is that if we generate data using the above generation
process, then can the estimate h = se (WX + be) indeed recover the true h for some activation
functions se(.), and bias vector be? And if so, what properties of W, be, se(.) and h lead to good
recovery? However, when given an X and the true overcomplete W, the solution h to X = WT h is
not unique. Then the question arises about the possibility of recovering such an h. However, as we
show, recovery using the AE mechanism is strongest when the signal h is the sparsest possible one,
which from compressed sensing theory, guarantees uniqueness of h if W is sufficiently incoherent 2.
3	Data Generation Process
We consider the following data generation process:
X=WTh+bd+e	(3)
where X ∈ Rn is the observed data, bd ∈ Rn is a bias vector, e ∈ Rn is a noise vector, W ∈ Rm×n
is the weight matrix and h ∈ Rm is the true hidden representation (signal) that we want to recover.
Throughout our analysis, we assume that the signal h belongs to the following class of distribution,
Assumption 1. Bounded Independent Non-negative Sparse (BINS): Every hidden unit hj is an
independent random variable with the following density function:
f(h )	(1 - pj)δ0(hj)	if	hj	= 0	(4)
j	pjfc(hj)	if	hj	∈ (0, lmaxj]
where fc(.) can be any arbitrary normalized distribution bounded in the interval (0, lmaxj], mean
μhj, and δ0(.) is the Dirac Delta function at zero. As a short hand, we say that hj follows the
distribution BINS(p, fc,μh, Imax). Notice that E% [hj] = Pjμ%.
The above distribution assumption fits naturally with sparse coding, when the intended signal is
non-negative sparse. From the AE perspective, it is also justified based on the following observation.
In neural networks with ReLU activations (i.e. fc(x) = max(0, x)), hidden unit pre-activations have
a Gaussian like symmetric distribution (Hyvarinen and Oja, 2000; Ioffe and Szegedy, 2015). If We
assume these distributions are mean centered3, then the hidden units’ distribution after ReLU has
a large mass at 0 while the rest of the mass concentrates in (0, lmax] for some finite positive lmax,
because the pre-activations concentrate symmetrically around zero. As we show in the next section,
ReLU is indeed capable of recovering such signals. On a side note, the distribution from assumption 1
can take shapes similar to that of Exponential or Rectified Gaussian distribution4 (which are generally
used for modeling biological neurons) but is simpler to analyze. This is because we allow fc(.) to be
1 Linear decoding activation covers numerical range for commonly used non-linear decoding activations
2	|WT Wj |
Coherence is defined as maxWi ,Wj,i=j kw∕∣kWj ∣∣
3 This happens for instance as a result of the Batch Normalization (Ioffe and Szegedy, 2015) technique, which leads to significantly faster
convergence. It is thus a good practice to have a mean centered pre-activation distribution.
4depending on the distribution fc(.)
2
Under review as a conference paper at ICLR 2018
any arbitrary normalized distribution. The only restriction assumption 1 has is that to be bounded.
However, this does not change the representative power of this distribution significantly because: a)
the distributions used for modeling neurons have very small tail mass; b) in practice, we are generally
interested in signals with upper bounded values.
The generation process considered in this section (i.e. eq. 3 and assumptions 1) is justified because:
1. This data generation model finds applications in a number of areas (Yang et al., 2009; Kavukcuoglu
et al., 2010; Wright et al., 2009). Notice that while x is the measurement vector (observed data),
which can in general be noisy, h denotes the actual signal (internal representation) because it reflects
the combination of dictionary (WT) atoms involved in generating the observed samples and hence
serves as the true identity of the data.
2. Sparse distributed representation (Hinton, 1984) is both observed and desired in hidden represen-
tations. It has been empirically shown that representations that are truly sparse (i.e. large number
of true zeros) and distributed usually yield better linear separability and performance (Glorot et al.,
2011; Wright et al., 2009; Yang et al., 2009).
Decoding bias (bd): Consider the data generation process (exclude noise for now) x = WT h + bd.
Here bd is a bias vector which can take any arbitrary value but similar to W, it is fixed for any
particular data generation process. However, the following remark shows that if an AE can recover
the sparse code (h) from a data sample generated as x = WT h, then it is also capable of recovering
the sparse code from the data generated as x = WT h + bd and vice versa.
Remark 1. Let x1 = WTh where x1 ∈ Rn, W ∈ Rm×n and h ∈ Rm. Let x2 = WTh + bd
where bd ∈ Rn is a fixed vector. Let h1 = se(Wx1 + b) and h2 = se(Wx2 + b - Wbd). Then
^ ^
hl = h iff h2 = h.
Thus without any loss of generality, we will assume our data is generated from x = WT h + e.
4	Signal Recovery Analysis
We analyse two separate classes of signals in this category- continuous sparse, and binary sparse
signals that follow BINS. For notational convenience, we will drop the subscript of be and simply
refer this parameter as b since it is the only bias vector (we are not considering the other bias bd due
to remark 1). The Auto-Encoder signal recovery mechanism that we analyze throughout this paper is
defined as,
Definition 1. Let a data sample x ∈ Rn be generated by the process x = WTh + e where
W ∈ Rm×n is a fixed matrix, e is noise and h ∈ Rm. Then we define the Auto-Encoder signal
recovery mechanism as hse (x; W, be) that recovers the estimate h = se(Wx + be) where se(.) is
an activation function.
4.1	Binary Sparse S ignal Analysis
First we consider the noiseless case of data generation,
Theorem 1. (Noiseless Binary Signal Recovery): Let each element of h follow BINS(p, δι, μh, lmaχ)
and let h ∈ Rm be an auto-encoder signal recovery mechanism with Sigmoid activation function and
bias b for a measurement vector x ∈ Rn such that x = WTh. Ifwe set bi = - j aij pj ∀i ∈ [m],
then ∀ δ ∈ (0, 1),
1 1	、	m (	—2 (δ0 + Piaii)2	— 2 (δ0 + (1-Pi)aii)2 ∖
Pr ( —∣∣h — hkι ≤ δ) ≥ 1—	^X ( (1 — Pi)e Pm=l,j=iaj + Pie	Pm=ι,j=iaj 1
i=1	(5)
where ai7- = WTWj, δ0 = ln( ɪ-δ) and Wi is the ith row of the matrix W cast as a column vector.
Analysis: We first analyse the properties of the weight matrix W that results in strong recovery
bound. Notice the terms (δ0 +piaii)2 and (δ0 + (1 — pi)aii)2 need to be as large as possible, while
simultaneously, the term Pjm=1,j6=i ai2j needs to be as close to zero as possible. For the sake of
analysis, lets set5 δ0 = 0 (achieved when δ = 0.5). Then our problem gets reduced to maximizing the
5 Setting δ = 0.5 is not such a bad choice after all because for binary signals, we can recover the exact true signal with high probability
by simply binarize the signal recovered by Sigmoid with some threshold.
3
Under review as a conference paper at ICLR 2018
ratio PmIii=i % = Pm=Ij=WWTWj)2 = Pm=Ij=Wkj k2 COS2j , where θij is the angle between Wi
and Wj . From the property of coherence, if the rows of the weight matrix are highly incoherent, then
cos θij is close to 0. Again, for the ease of analysis, lets replace each cos θij with a small positive
number e. Then PmIjL aj ≈ 声 Pm=W=ikWj k2 =声 Pm=Ij=ikWj k2/∣Wik2. FinalIy, SinCe We
would want this term to be maximized for each hidden unit hi equally, the obvious choice for each
weight length kWi k (i ∈ [m]) is to set it to 1.
Finally, lets analyse the bias veCtor. NotiCe we have instantiated eaCh element of the enCoding bias bi
to take value - Pj aij pj . SinCe pj is essentially the mean of eaCh binary hidden unit hi , we Can say
that bi = -PjaijEhj[hj] = -WiT WT Eh [h] = -WiT Eh [x].
Signal reCovery is strong for binary signals when the reCovery meChanism is given by
hi，SigmOid(WT (X - Eh [x]))	(6)
where the rows of W are highly inCoherent and eaCh hidden weight has length ones (kWi k2 = 1),
and eaCh dimension of data x is approximately unCorrelated (see theorem 3).
Now we state the reCovery bound for the noisy data generation sCenario.
Proposition 1. (Noisy Binary Signal Recovery): Let each element of h follow BINS(p, δι, μh, lmaχ)
and let h ∈ Rm be an auto-encoder signal recovery mechanism with Sigmoid activation function and
bias b for a measurement vector x = WT h + e where e ∈ Rn is any noise vector independent of h.
If we set bi = - Pj aij pj - WiT Ee [e] ∀i ∈ [m], then ∀ δ ∈ (0, 1),
1 I	、	m (	—2 (60 —WT (e-Ee [eD + Piaii)2
Pr( — ∣∣h — hkι ≤ δ) ≥ 1 — ^X ( (1 — pi)e	Pm=Ij=iaj
-2 (60 —WT (e —Ee [e]) + (1 —Pi)aii )2 ∖
+pie	Pm=Ij=iaj	I
(7)
(8)
where ai7- = WT Wj, δ0 = ln( ɪ—-δ) and Wi is the ith row of the matrix W cast as a column vector.
We have not assumed any distribution on the noise random variable e and this term has no effeCt on
reCovery (Compared to the noiseless Case) if the noise distribution is orthogonal to the hidden weight
veCtors. Again, the same properties of W lead to better reCovery as in the noiseless Case. In the
Case of bias, we have set eaCh element of the bias bi , — Pj aij pj — WiT Ee [e] ∀i ∈ [m]. NotiCe
from the definition of BINS, Ehj [hj] = pj . Thus in essenCe, bi = — Pj aij Ehj [hj] — WiT Ee [e].
Expanding aij, we get, bi , —WiT WT Eh [h] — WiT Ee [e] = —WiT Eh [x]. Thus the expression of
bias is unaffeCted by error statistiCs as long as we Can Compute the data mean.
In this seCtion, we will first Consider the Case when data (x) is generated by linear proCess x =
WT h + e, and if W and enCoding bias b have Certain properties, then the signal reCovery bound
(∣h — h∣) is strong. We will then Consider the Case when data generated by a non-linear proCess
x = sd(WTh + bd + e) (for Certain Class of funCtions sd(.)) Can be reCovered as well by the same
meChanism. For deep non-linear networks, this means that forward propagating data to hidden layers,
suCh that the network parameters satisfy the required Conditions, implies eaCh hidden layer reCovers
the true signal that generated the Corresponding data. We have moved all the proofs to appendix for
better readability.
4.2 Continuous Sparse S ignal Recovery
Theorem 2. (Noiseless Continuous Signal Recovery): Let each element of h ∈ Rm follow
BINS(p, fc, μh, lmax) distribution and let hReLU(x; W, b) be an auto-encoder signal recovery
mechanism with Rectified Linear activation function (ReLU) and bias b for a measurement vector
4
Under review as a conference paper at ICLR 2018
x ∈ Rn such that x = WTh. If we set bi，一 Ej ajPj μ% ∀i ∈ [m], then ∀ δ ≥ 0,
Prukh 一 hkι ≤ δ∖ ≥ 1 一
m
XX (e-2
i=1
(δ+Pj (1-Pj )(Imaxj -2Pjμhj ) max(0,aij ))2
Pj aij lmaxj
2 (δ + Pj (I-Pj )(lmaxj-2Pjμhj ) max(0,-aij ))2
+ e	Pj ajlmiaxj
(9)
where ais are vectors such that
aij
一1
if
if
i 6= j
i=j
(10)
Wi is the ith row of the matrix W cast as a column vector.
Analysis: We first analyze the properties of the weight matrix that results in strong recovery bound.
We find that for strong recovery, the terms (δ + Pj(1 一 Pj)(lmaχj∙ — 2pjμhj)max(0, aj))2 and
(δ+Pj(1-pj)(lmaxj∙ -2pjμhj )max(0, -aj))2 shouldbe as large as possible, while simultaneously,
the term Pj ai2j lm2 axj needs to be as close to zero as possible. First, notice the term (1 一 pj )(lmaxj 一
2pjμhj). Since μ% < lmaχj∙ by definition, We have that both terms containing (1 一 Pj )(lmaχj∙ 一
2pjμhj) are always positive and contributes towards stronger recovery if Pj is less than 50% (sparse),
and becomes stronger as the signal becomes sparser (smaller Pj).
Now ifwe assume the rows of the weight matrix W are highly incoherent and that each row ofW has
unit `2 length, then it is safe to assume each aij (∀i, j ∈ [m]) is close to 0 from the definition of aij
and properties of W we have assumed. Then for any small positive value of δ, we can approximately
(δ + Pj (I-Pj)(Imaxj -2pjμhj ) max(0,aij ))2	δ2	iʌ	1	i ,	TL
say-----j------P j 2 ι2——j---------≈ P—δ72——where each aj is very close to zero. The
j aij lmaxj	j aij lmaxj
same argument holds similarly for the other term. Thus we find that a strong signal recovery bound
would be obtained if the weight matrix is highly incoherent and all hidden vectors are of unit length.
In the case of bias, we have set each element of the bias b，一 Pj ajpj∙ μhj∙ ∀i ∈ [m]. Notice from
the definition ofBINS, Ehj∙ [hj] = Pjμ%. Thus in essence, b = 一 Pj ajE/ [hj]. Expanding aj,
we get bi = -WTWTEh[h] + E^ [hi] = -WTEh[x]+ EhJhi].
The recovery bound is strong for continuous signals when the recovery mechanism is set to
hi，ReLU(WT(X — Eχ[x]) + E^[hi])	(11)
and the rows of W are highly incoherent and each hidden weight has length ones (kWi k2 = 1).
Now we state the recovery bound for the noisy data generation scenario.
Proposition 2. (Noisy Continuous Signal Recovery): Let each element of h ∈ Rm follow
BINS(p,fc,μh, lmaχ) distribution and let hReLu(x; W, b) be an auto-encoder signal recovery
mechanism with Rectified Linear activation function (ReLU) and bias b for a measurement vector
x ∈ Rn such that x = WTh + e where e is any noise random vector independent of h. If we set
bi , — Pj ajPj μhj — WT Ee[e] ∀i ∈ [m] ,then ∀ δ ≥ 0,
Pr(Lkh 一 hkι ≤ δ
m
(δ-WT (e—Ee [e])+Pj(I-Pj )(lmaxj - 2pjμh.j )max(0,aij))2
XX (e-2
i=1
≥ 1 一
Pj aij lmaxj
(δ-WT (e —Ee [e]) + Pj (I-Pj )(lmaxj -2Pjahjl max(0, —aij ))2
-2
+e
Pj aijlmaxj
(12)
where ais are vectors such that
WiT Wj
aij =	WiT Wi 一 1
if i 6= j
if i = j
(13)
5
Under review as a conference paper at ICLR 2018
Wi is the ith row of the matrix W cast as a column vector.
Notice that we have not assumed any distribution on variable e, which denotes the noise. Also,
this term has no effect on recovery (compared to the noiseless case) if the noise distribution is
orthogonal to the hidden weight vectors. On the other hand, the same properties of W lead to better
recovery as in the noiseless case. However, in the case of bias, we have set each element of the bias
bi，- Pj aijPj μhj - WT Ee[e] ∀i ∈ [m]. From the definition of BINS, E% [hj ] = Pj μ%. Thus
bi = -PjaijEhj[hj] - WiT Ee[e]. Expandingaij, we get, bi , -WiT WT Eh[h] + Ehi [hi] -
WiTEe[e] = -WiTEh [x] + Ehi [hi]. Thus the expression of bias is unaffected by error statistics as
long as we can compute the data mean (i.e. the recovery is the same as shown in eq. 11).
4.3	Properties of Generated Data
Since the data we observe results from the hidden signal given by x = WTh, it would be interesting
to analyze the distribution of the generated data. This would provide us more insight into what kind
of pre-processing would ensure stronger signal recovery.
Theorem 3. (Uncorrelated Distribution Bound): If data is generated as x = WTh where h ∈ Rm
has covariance matrix diag(ζ), (ζ ∈ R+m) and W ∈ Rm×n (m > n) is such that each row of W
has unit length and the rows of W are maximally incoherent, then the covariance matrix of the
generated data is approximately spherical (uncorrelated) satisfying,
mina -αIkF ≤ J1(mkζ k2-kζ 响
(14)
where Σ = Ex[(x - Ex[x])(x - Ex[x])T] is the covariance matrix of the generated data.
Analysis: Notice that for any vector v ∈ Rm, mkvk22 ≥ kvk21, and the equality holds when each
element of the vector v is identical.
Data x generated using a maximally incoherent dictionary W (with unit `2 row length) as
x = WTh guarantees x is highly uncorrelated if h is uncorrelated with near identity covariance.
This would ensure the hidden units at the following layer are also uncorrelated during training.
Further the covariance matrix of x is identity, if all hidden units have equal variance.
This analysis acts as a justification for data whitening where data is processed to have zero mean and
identity covariance matrix. Notice that although the generated data does not have zero mean, the
recovery process (eq. 11) subtracts data mean and hence it does not affect recovery.
4.4	Connections with existing work
Auto-Encoders (AE): Our analysis reveals the conditions on parameters of an AE that lead to strong
recovery of h (for both continuous and binary case), which ultimately implies low data reconstruction
error.
However, the above arguments hold for AEs from a recovery point of view. Training an AE on data
may lead to learning of the identity function. Thus usually AEs are trained along with a bottle-neck
to make the learned representation useful. One such bottle-neck is the de-noising criteria given by,
JDAE=WinkX -WT Se(Wx+b)k2
(15)
where Se(.) is the activation function and X is a corrupted version of x. It has been shown that the Tay-
lor,s expansion ofDAE (Theorem 3 of Arpit et al.,2016) has the term Pmk=1 (等 dhk (WTWk )21.
,	∂ a∂ a j
j 6=k	j k
If we constrain the lengths of the weight vectors to have fixed length, then this regularization term
minimizes a weighted sum of cosine of the angle between every pair of weight vectors. As a result,
the weight vectors become increasingly incoherent. Hence we achieve both our goals by adding
one additional constraint to DAE- constraining weight vectors to have unit length. Even if We do
not apply an explicit constraint, we can expect the weight lengths to be upper bounded from the
basic AE objective itself, which would explain the learning of incoherent weights due to the DAE
regularization.On a side note, our analysis also justifies the use of tied weights in auto-encoders.
6
Under review as a conference paper at ICLR 2018
Sparse Coding (SC): SC involves minimizing kx - WT hk2 using the sparsest possible h. The
analysis after theorem 2 shows signal recovery using the AE mechanism becomes stronger for sparser
signals (as also confirmed experimentally in section 5). In other words, for any given data sample
and weight matrix, as long as the conditions on the weight matrix and bias are met, the AE recovery
mechanism recovers the sparsest possible signal; which justifies using auto-encoders for recovering
sparse codes (see Henaff et al., 2011; Makhzani and Frey, 2013; Ng, 2011, for work along this line).
Independent Component Analysis(ICA): ICA (Hyvarinen and Oja, 2000; Arora et al., 2012) as-
sumes we observe data generated by the process x = WT h where all elements of the h are
independent and W is a mixing matrix. The task of ICA is to recover both W and h given data.
This data generating process is precisely what we assumed in section 3. Based on this assumption,
our results show that 1) the properties of W that can recover such independent signals h; and 2)
auto-encoders can be used for recovering such signals and weight matrix W.
k-Sparse AEs : Makhzani and Frey (2013) propose to zero out all the values of hidden units smaller
than the top-k values for each sample during training. This is done to achieve sparsity in the learned
hidden representation. This strategy is justified from the perspective of our analysis as well. This
is because the PAC bound (theorem 2) derived for signal recovery using the AE signal recovery
mechanism shows we recover a noisy version of the true sparse signal. Since the noise in each
recovered signal unit is roughly proportional to the original value, de-noising such recovered signals
can be achieved by thresholding the hidden unit values (exploiting the fact that the signal is sparse).
This can be done either by using a fixed threshold or picking the top k values.
Data Whitening: Theorem 3 shows that data generated from BINS and incoherent weight matrices
are roughly uncorrelated. Thus recovering back such signals using auto-encoders would be easier if
we pre-process the data to have uncorrelated dimensions.
5	Empirical Verification
We empirically verify the fundamental predictions made in section 4 which both serve to justify the
assumptions we have made, as well as confirm our results. We verify the following: a) the optimality
of the rows of a weight matrix W to have unit length and being highly incoherent for AE signal
recovery; b) effect of sparsity on AE signal recovery; and c) in practice, AE can recover not only the
true sparse signal h, but also the dictionary W that used to generate the data.
5.1	Optimal Properties of Weights and Bias
Our analysis on signal recovery in section 4 (eq. 11) shows signal recovery bound is strong when
a) the data generating weight matrix W has rows of unit `2 length; b) the rows of W are highly
incoherent; c) each bias vector element is set to the negative expectation of the pre-activation; d)
signal h has each dimension independent. In order to verify this, we generate N = 5, 000 signals
h ∈ Rm=200 from BINS(P=0.02,fc=uniform, μh=0.5,lmaχ=1) with fc(.) set to uniform distribution
for simplicity. We then generate the corresponding 5, 000 data sample x = cWTh ∈ R180 using
an incoherent weight matrix W ∈ R200×180 (each element sampled from zero mean Gaussian, the
columns are then orthogonalized, and `2 length of each row rescaled to 1; notice the rows cannot be
orthogonal). We then recover each signal using,
hi，ReLU(CWT(X - Eh[x]) + E%,[hi] + ∆b)	(16)
where c and ∆b are scalars that we vary between [0.1, 2] and [-1, +1] respectively. We also generate
N = 5, 000 signals h ∈ {0, 1}m=200 from BINS(0.02,δ1, 0.02,1) with fc(.) set to Dirac delta
function at 1. We then generate the corresponding 5, 000 data sample x = cWTh ∈ R180 following
the same procedure as for the continuous signal case. The signal is recovered using
hi，σ(cWT(x - Eh[x]) + ∆b)	(17)
where σ is the sigmoid function. For the recovered signals, we calculate the Average Percentage
Recovery Error (APRE) as,
100 N,m
APRE = N- E whj1(∖hj - hj|〉E)	(18)
Nm i=1,j=1
7
Under review as a conference paper at ICLR 2018
where we set to 0.1 for continuous signals and 0 for binary case, 1(.) is the indicator operator, hij
denotes the jth dimension of the recovered signal corresponding to the ith true signal and,
hij > 0
hij = 0
(19)
is weighted with whi
The error
so that the recovery error for both zero and non-zero hij s are penalized
equally. This is specially needed in this case, because hij is sparse and a low error can also be achieved
by trivially setting all the recovered hij s to zero. Along with the incoherent weight matrix, we also
generate data separately using a highly coherent weight matrix that we get by sampling each element
randomly from a uniform distribution on [0, 1] and scaling each row to unit length. According to
our analysis, we should get least error for c = 1 and ∆b = 0 for the incoherent matrix while the
coherent matrix should yield both higher recovery error and a different choice of c and b (which is
unpredictable). The error heat maps for both continuous and binary recovery6 are shown in fig. 1. For
the incoherent weight matrix, we see that the empirical optimal is precisely c = 1 and ∆b = 0 (which
is exactly as predicted) with 0.21 and 0.0 APRE for continuous and binary recovery, respectively. It
is interesting to note that the binary recovery is quite robust with the choice of c and ∆b, which is
because 1) the recovery is denoised through thresholding, and 2) the binary signal inherently contains
less information and thus is easier to recover. For the coherent weight matrix, we get 45.75 and 32.63
APRE instead (see fig. 5).
Figure 1: Error heatmap showing optimal values
of c and ∆b for recovering continous (left) and
binary (right) signal using inchoherent weights.
Noise std.
Figure 2: Average percentage recovery error of
noisy signal recovery.
We also experiment on the noisy recovery case, where we generate the data using incoherent weight
matrix with c = 1 and ∆b = 0. For each data dimension we add independent Gaussian noise with
mean 100 with standard deviation varying from 0.001 to 1. Both signal recovery schemes are quite
robust against noise (see fig. 2). In particular, the binary signal recovery is very robust, which
conforms with our previous observation.
5.2	Effect of Sparsity on S ignal Recovery
We analyze the effect of sparsity of signals on their recovery using the mechanism shown in section
4. In order to do so, We generate incoherent matrices using two different methods- Gaussian7 and
orthogonal (Saxe et al., 2013). In addition, all the generated weight matrices are normalized to
have unit `2 row length. We then sample signals and generate data using the same configurations
as mentioned in section 5.1; only this time, we fix c = 1 and ∆b = 0, vary hidden unit activation
probability p in [0.02, 1], and duplicate the generated data while adding noise to the copy, which
we sample from a Gaussian distribution with mean 100 and standard deviation 0.05. According
to our analysis, noise mean should have no effect on recovery so the mean value of 100 shouldn’t
have any effect; only standard deviation affects recovery. We find for all weight matrices, recovery
error reduces with increasing sparsity (decreasing p, see fig. 3). Additionally, we find that both
recovery are robust against noise. We also find the recovery error trend is almost always lower for
orthogonal weight matrices, especially when the signal is sparse. 8 Recall theorem 2 suggests stronger
recovery for more incoherent matrices. So we look into the row coherence of W ∈ Rm×n sampled
from Gaussian and Orthogonal methods with m = 200 and varying n ∈ [100, 300]. We found that
6We use 0.55 as the threshold to binarize the recovered signal using sigmoid function.
7
Gaussian and Xavier (Glorot and Bengio, 2010) initialization becomes identical after weight length normalization
8 notice the rows of W are not orthogonal for overcomplete filters, rather the columns are orthogonalized, unless W is undercomplete
8
Under review as a conference paper at ICLR 2018
orthogonal initialized matrices have significantly lower coherence even though the orthogonalization
is done column-wise (see fig. 6.). This explains significantly lower recovery error for orthogonal
matrices in figure 3.
Cont, Recovery Error vs. Sparsity
0.0 0.2 0.4 0.6 0.8 1.0
Unit Activation Probability (p)
Oooooo
5 4 3 2 1
Hd4
Figure 3: Effect of signal sparseness on con-
tinuous (left) and binary (right) signal recovery.
Noise in parenthesis indicate the generated data
was corrupted with Gaussian noise. Sparser sig-
nals are recovered better.
Figure 4: Cosine similarity between greedy
paired rows of W and W for continuous (left)
and binary (right) recovery. The upper, mid and
lower bar denotes the 95th, 50th and 5th per-
centile.
5.3	Recovery of Data Dictionary
We showed the conditions on W and b for good recovery of sparse signal h. In practice, however,
one does not have access to W, in general. Therefore, in this section, we empirically demonstrate
that AE can indeed recover both W and h through optimizing the AE objective. We generate 50, 000
signals h ∈ Rm=200 with the same BINS distribution as in section 5.1. The data are then generated
as x = WTh using an incoherent weight matrix W ∈ R200×180 (same as in section 5.1). We then
recover the data dictionary W by:
W = argminEx [∣∣x - WTSe(W(X - Ex[x]))∣∣2] , WherekWi∣∣2 = 1∀i (20)
Notice that although given sparse signal h the data dictionary W is unique (Hillar and Sommer,
2015), there are m! number of equivalent solutions for W, since we can permute dimension of h
in AE. To check if the original data dictionary is recovered, we therefore pair up the rows of W
and W by greedily selecting the pairs that result in the highest dot product value. We then measure
the goodness of the recovery by looking at the values of all the paired dot products. In addition,
since we know the pairing, we can calculate APRE to evaluate the quality of recovered hidden signal.
As can be observed from fig. 4, by optimizing the AE objective we can recover the original data
dictionary W (almost all of the cosine distances are 1). The final achieved 1.61 and 0.15 APRE
for continuous and binary signal recovery, which is a bit less than what we achieved in section 5.1.
However, one should note that for this set of experiments we only observed data X and no other
information regarding W is exposed. Not surprisingly, we again observed that the binary signal
recovery is more robust as compared to the continuous counterpart, which may attribute to its lower
information content. We also did experiments on noisy data and achieved similar performance as in
section 5.1 when the noise is less significant (see supplementary materials for more details). These
results strongly suggests that AEs are capable of recovering the true hidden signal in practice.
6 Conclusion
In this paper we looked at the sparse signal recovery problem from the Auto-Encoder perspective
and provide novel insights into conditions under which AEs can recover such signals. In particular,
1) from the signal recovery stand point, if we assume that the observed data is generated from
some sparse hidden signals according to the assumed data generating process, then, the true hidden
representation can be approximately recovered if a) the weight matrices are highly incoherent with
unit `2 row length, and b) the bias vectors are as described in equation 11 (theorem 2)9. The recovery
also becomes more and more accurate with increasing sparsity in hidden signals. 2) From the
data generation perspective, we found that data generated from such signals (assumption 1) have
the property of being roughly uncorrelated (theorem 3), and thus pre-processing the data to have
9For binary recovery, the bias equation is described in 6
9
Under review as a conference paper at ICLR 2018
uncorrelated dimensions may encourage stronger signal recovery. 3) Given only measurement data,
we empirically show that the AE reconstruction objective recovers the data generating dictionary,
and hence the true signal h. 4) These conditions and observations allow us to view various existing
techniques, such as data whitening, independent component analysis, etc., in a more coherent picture
when considering signal recovery.
References
E. Amaldi and V. Kann. On the approximability of minimizing nonzero variables or unsatisfied
relations in linear systems. Theoretical Computer Science, 209(1):237-260, 1998.
Sanjeev Arora, Rong Ge, Ankur Moitra, and Sushant Sachdeva. Provable ica with unknown gaussian
noise, with implications for gaussian mixtures and autoencoders. In Advances in Neural Information
Processing Systems, pages 2375-2383, 2012.
D. Arpit, Y. Zhou, H. Ngo, and V. Govindaraju. Why regularized auto-encoders learn sparse
representation? In ICML, 2016.
H. Bourlard and Y. Kamp. Auto-association by multilayer perceptrons and singular value decomposi-
tion. Biological Cybernetics, 59(4-5):291-294, 1988. ISSN 0340-1200.
E. J Candes and T. Tao. Near-optimal signal recovery from random projections: Universal encoding
strategies? Information Theory, IEEE Transactions on, 52(12):5406-5425, 2006.
E. J Candes, J. K. Romberg, and T. Tao. Stable signal recovery from incomplete and inaccurate
measurements. Communications on pure and applied mathematics, 59(8):1207-1223, 2006.
X. Glorot and Y. Bengio. Understanding the difficulty of training deep feedforward neural networks.
In International conference on artificial intelligence and statistics, pages 249-256, 2010.
X. Glorot, A. Bordes, and Y. Bengio. Deep sparse rectifier neural networks. In AISTATS, pages
315-323, 2011.
M. Henaff, K. Jarrett, K. Kavukcuoglu, and Y. LeCun. Unsupervised learning of sparse features for
scalable audio classification. ISMIR, 11:445. 2011, 2011.
C. J. Hillar and F. T. Sommer. When can dictionary learning uniquely recover sparse data from
subsamples? IEEE Transactions on Information Theory, 61(11):6290-6297, 2015.
G. E. Hinton. Distributed representations. 1984.
A. Hyvarinen and E. Oja. Independent component analysis: algorithms and applications. Neural
networks, 13(4):411-430, 2000.
S. Ioffe and C. Szegedy. Batch normalization: Accelerating deep network training by reducing
internal covariate shift. In Francis R. Bach and David M. Blei, editors, ICML, volume 37 of JMLR
Proceedings, pages 448-456. JMLR.org, 2015.
K. Kavukcuoglu, M. Ranzato, and Y. LeCun. Fast inference in sparse coding algorithms with
applications to object recognition. arXiv preprint arXiv:1010.3467, 2010.
A. Makhzani and B. Frey. k-sparse autoencoders. CoRR, abs/1312.5663, 2013. URL http:
//arxiv.org/abs/1312.5663.
R. Memisevic, K. R. Konda, and D. Krueger. Zero-bias autoencoders and the benefits of co-adapting
features. In ICLR, 2014.
V. Nair and G. E. Hinton. Rectified linear units improve restricted boltzmann machines. In Pro-
ceedings of the 27th International Conference on Machine Learning (ICML-10), pages 807-814,
2010.
Andrew Ng. Sparse autoencoder. CSE294 Lecture notes, 2011.
A. M. Saxe, J. L. McClelland, and S. Ganguli. Exact solutions to the nonlinear dynamics of learning
in deep linear neural networks. arXiv preprint arXiv:1312.6120, 2013.
10
Under review as a conference paper at ICLR 2018
J. Wright, A.Y. Yang, A. Ganesh, S.S. Sastry, and Y. Ma. Robust face recognition via sparse
representation. IEEEE TPAMI, 31(2):210 -227, Feb. 2009.
J. Yang, K. Yu, Y. Gong, and T. Huang. Linear spatial pyramid matching using sparse coding for
image classification. In CVPR, pages 1794-1801, 2009.
11
Under review as a conference paper at ICLR 2018
Appendix: On Optimality Conditions for Auto-Encoder Signal Recovery
1 Proofs
Remark 1. Let x1 = WTh where x1 ∈ Rn, W ∈ Rm×n and h ∈ Rm. Let x2 = WTh +bd
where bd ∈ Rn is a fixed vector. Let hi = Se(Wxι + b) and I12 = Se(Wx2 + b - Wb d). Then
^ ^
hi = hiff ^2 = h.
1Λ r -r . Λ	1 EI 1	/ɪɪ T	.	1 ∖	z-ι .1	. 1	1	1 T^^	/ɪɪ T	.	1	Tl Tl ∖
Proof: Let hi	= h. Thus h =	se(Wxi +	b).	On the other hand, h2	= se(Wx2 + b - Wbd)	=
se(WWTh+Wbd+b -Wbd) = se(WWTh+b) = se(Wxi +b) = h. The other direction
can be proved similarly.
Theorem 1.	Let each element of h follow BINS(p, δι,μh, lmaχ) and let h ∈ Rm be an auto-encoder
signal recovery mechanism with Sigmoid activation function and bias b for a measurement vector
x ∈ Rn such that x = WTh. Ifwe set bi = - Pj aij pj ∀i ∈ [m], then ∀ δ ∈ (0, 1),
1 ι	、	m (	—2 (δ +piaii)2	— 2 (δ0 + (1-pi)aii)2 ∖
Pr (—∣∣h — hkι ≤ δ) ≥ 1 — ɪ2 ((1 — Pi)e	Pm=1,j=iaij + Pie	Pm=1,j=iaij ∖ (21)
where ai7- = WTWj, δ0 = ln( ɪ-δ) and Wi is the ith row of the matrix W cast as a column vector.
Proof. Notice that,
Pr(∣h^i — hi| ≥ δ) = Pr(∣h^i — hi∣ ≥ δ∣ hi = 0)Pr(hi = 0) + Pr(∣h^i — hi∣ ≥ δ∣hi = 1)Pr(hi = 1)
(22)
and from definition 1,
h = σ(X ajhj + bi)	(23)
Thus,
Pr(∣hi - hi| ≥ δ) = (1 — pi) Pr(σ(X ajhj + bi) ≥ δ ∣ hi =0)
j
+Pi Pr(σ(. X ajhj — bi) ≥ δ ∣ hi = 1)	(24)
j
Notice that Pr(σ(Pj ajhj + bi) ≥ δ ∣ hi = 0) = Pr(Pj ajhj + bi ≥ ln(ɪ-δ) ∣ hi = 0). Let
Zi = Pj aijhj + bi and δ0 = ln( 1—δ)∙ Then，setting bi = —Eh[Pj ajhj] = - Pj ajPj, using
Chernoff’s inequality, for any t > 0,
∣	E [ tzi]	Eh et Pj6=i aij(hj—pj)—tpiaii
Pr(Zi ≥ δ0 ∣ hi =0) ≤ )tδ'- =	etδ0
_ Eh hQj=i etaij(hj-pj)i _ Qj=i Eg Hai"，-pj)]
et(δ0 +piaii)	et(δ0 +piaii)	()
Let Tj = Ehj etaij(hj—pj). Then,
Tj = (1 — Pj)e—tpj aij + Pj et(i—pj)aij = e—tpjaij (1 — Pj + Pj etaij )	(26)
1
Under review as a conference paper at ICLR 2018
Let eg(t) , Tj , thus,		
g(t) = -tPj aij + ln(1 - Pj + Pj etaij )	=⇒ g(O) = O	(27)
d(t) = - ,α. .+	Pjaijeta",	.	=⇒ g0(O) = O	(28)
g ()=	Pj aij + 1 - Pj + Pjetaij 一		
00(t) = Pj (1	-Pj )ɑjetaij	(29)
g (t)=(1-	Pj + Pj etaij )2	
00o (t) = Pj (1 - Pj )a⅞ etaij (1 - Pj + Pjetaij )(1 -	Pj - Pj etaij )	(30)
g	(1 — Pj + Pj etaij )4		
		(31)
Setting g000 (t) = 0, We get t* = aj ln( 1-j). Thus, g00(t)	2 ≤ g(t*)=号.By Taylor’s theorem,	
∃c ∈ [0, t]∀t > 0 s.t.,		
2	t2α2 g⑴=g(O) +tg(O) + Wg(C) ≤ 28		(32)
Thus We can upper bound Tj as,		
t2α2j Tj ≤ e ɪ		(33)
Hence We can Write Pr(zi ≥ δ0) as		
t2α2j Pr(Zi ≥ δ0) ≤ eQfe-⅛) = Qj=+1Pi) = ejj-t(aiipi+δ0)		(34)
On the other hand, notice Pr(σ(- Pj αij hj - bi) ≥ δ JJ ln(i-δ) I hi = 1) = Pr(—zi ≥ δ0 I hi = 1).	hi = 1) = Pr(- Pj αij hj	- bi ≥
Eh e-t Pj6=i aij (hj -pj )-t(1-pi )aii
eδ0
Pr(-zi ≥ δ0 J hi = 1) ≤ Ehe:
Eh Qj6=i e-taij (hj-pj )
et(δ0 + (1-pi)aii)
Qj=i Ehj [e-taij(hj-pj)]
et (δ0 + (1 -pi)aii )
(35)
(36)
(37)
Let Tj = Ehj e-taij (hj -pj) . Then we can similarly bound Pr(-zi ≥ δ0) by effectively flipping
the sign of aij ’s in the previous derivation,
Pr(-zi ≥ δ0) ≤
∏j=i T
et (δ0 + aii (1 -Pi ))
t aij
Hj=i e 8	= e t Pj=iaij -t(aii (1-Pi) + δ0)
et(δ0 + aii (1 -Pi ))
(38)
Minimizing both 34 and 38 with respect to t and applying union bound, we get,
-2SiiPi + δ0)2	-2(aii(I-Pi)+ δ0)2
Pr(∖hi — hi| ≥ δ) ≤ (1 — Pi)e	Pj=Waij	+ Pie	Pj=Waij
(39)
Since the above bound holds for all i ∈ [m], applying union bound on all the units yields the desired
result.	□
Proposition 1. Let each element of h follow BINS(p, δι,μh, lmaχ) and let h ∈ Rm be an auto-
encoder signal recovery mechanism with Sigmoid activation function and bias b for a measurement
2
Under review as a conference paper at ICLR 2018
vector x = WT h + e where e ∈ Rn is any noise vector independent of h. If we set bi
-Pjaijpj - WiT Ee[e] ∀i ∈ [m], then ∀ δ ∈ (0, 1),
1 1	、	m (	-2 ⑹- WrT (e-Ee[e]) + Piaii)2
Pr mmIlh-h∣∣ι≤δ ≥I-E(1 — pi)e	Pm=1,j=i a2j	(40)
-2 (δ0-WT (e-Ee [e]) + (1-pi)aii )2 ∖
+pie	Pm=1,j=i a2j	I	(41)
where ai7- = WTWj, δ0 = ln( 1⅛) and Wi is the ith row of the matrix W cast as a column vector.
Proof. Notice that,
Pr(∣h^i —	hi∣	≥ δ) = Pr(∣h^i —	hi∣	≥ δ	∣	hi	= 0) PMhi	= 0)	(42)
+ Pr(Ihi-	hi∖	≥ δ	J	hi	= I) PMhi	= 1)	(43)
and from definition 1,
hi = σ(X aijhj + b + WT e)	(44)
Thus,
Pr(Ihi- hi∖ ≥ δ) = (1 — pi)Pr(σ(Xaij hj + bi + WiT e) ≥ δ JJJ hi = 0)
j
+pi Pr(σ(-Xaijhj -bi -WiTe) ≥ δJJJ hi = 1)	(45)
j
Notice that Pr(σ(Pj ajhj +bi+WTe) ≥ δ∣hi =0) = Pr(Pj ajhj +bi+WTe ≥ ln(金)∣ hi =
0). Let Zi = Pj- aijhj + b + WTe and δ0 = ln(ɪ-^). Then, setting bi = -Eh[Pj- ajhj]-
WiTEe[e] = -Pjaij pj , using Chernoff’s inequality on random variable h, for any t > 0,
∣	E	[etzi]	Eh et Pj6=i aij (hj -pj )-tpiaii
Pr(Zi ≥ 6 ∣ Ai	θ) ≤≥ etδ0 -tWT(e-Ee [e])	etδ0-tWT(e-Ee[e])
_ Eh hQj=i etai"j-Pj)i	_ Qj=i Eg [eta”.Sj-Pj)]
et(δ0-tWT (e-Ee[e])+piaii)	et(δ0-tWT (e-Ee[e])+praii)
(46)
Setting δ := δ0 - WT(e - Ee[e]), We can rewrite the above inequality as
∣	Q Eh [etaij (hj -Pj) ]
Pr(zi ≥ δ0∣ hi =0) ≤ Uj=i 京]~：------------------ɪ	(47)
∣	et(δ+Pi aii )
Since the above inequality becomes identical to equation 25, the rest of the proof is similar to theorem
2.	□
Theorem 2.	Let each element of h ∈ Rm follow BINS(p, fc,μh, Imax) distribution and let
hReLU (x; W, b) be an auto-encoder signal recovery mechanism with Rectified Linear activation
function (ReLU) and bias b for a measurement vector x ∈ Rn such that x = WT h. If we set
bi , -〉Pj aijpj μhj ∀i ∈ [m], then ∀ δ ≥ 0,
Pr (mIlh - h∣∣ι ≤ δ) ≥ 1 - X 1-2
(δ+Pj (I-Pj )(Imaxj-2Pjμhj ) max(0,aij ))2
Pj a2j lmaxj
-2
+e
(δ+Pj (I-Pj )(Imaxj -2pjμhj) max(0,-aij ))2
Pj aijlmaxj
(48)
3
Under review as a conference paper at ICLR 2018
where ais are vectors such that
aij
if	i 6= j
- 1 if	i = j
(49)
Wi is the ith row of the matrix W cast as a column vector.
Proof. From definition 1 and the definition of aij above,
hi = max{0, E ajhj + h + bi}
j
hi — hi = max{-hi, E aij hj + bi}
j
(50)
Let Zi = Pj aijhj + bi. Thus, hi — hi = max{-hi, zi}. Then, conditioning upon zi,
ʌ
ʌ
Pr(∣h^i- hi∣ ≤ δ) = Pr 伍
- hi|
δ hi > 0, |zi |
δ Pr(|zi| ≤ δ, hi > 0)
(51)
+ Pr (∖hi
- hi|
δ hi > 0, |zi |
δ Pr(|zi| > δ, hi > 0)
(52)
+ Pr (∖hi
- hi|
hi = 0, |zi |
δ Pr(|zi| ≤δ,hi =0)
(53)
+ Pr (∖hi
- hi|
hi = 0, |zi |
δ Pr(|zi| > δ, hi = 0)
(54)
≤
≤
≤
>
≤
≤
δ
δ
≤
>
Since Pr (∖h^i - hi∖ ≤ δ I ∖zi∖ ≤ δ) = 1, we have,
,.ʌ	… .
Pr(∣hi- hi| ≤ δ) ≥ Pr(∣zi| ≤ δ)
(55)
The above inequality is obtained by ignoring the positive terms that depend on the condition |zi | > δ
and marginalizing over hi . For any t > 0, using Chernoff’s inequality,
Pr(Zi ≥ δ) ≤ EheP
(56)
Setting bi = - PPj aijμj, Where μj = Ehj [hj] = pjμhj,
Pr(zi ≥ δ) ≤
Eh [etPjaij(hj-μj)]	Eh [Qj etaij(hj-μj)]	QJ Eh [etaij(hj-μj)
etδ
etδ
etδ
(57)
Let Tj = Ehjktaij(hj-μj)]. Then,
Tj = (1 - Pj )e-taijμj + PjEv 〜fc(0+,lmaχ,μh) Paij (V-μj )]
(58)
where fc(a, b, μh denotes any arbitrary distribution in the interval (a, b] with mean μh If aj ≥ 0,
let α = -μj∙ and β = lmaχj∙ - μj- which essentially denote the lower and upper bound of hj - μj∙.
Then,
Tj = (1 - Pj )etaij α + PjEv 〜fc(0+,imaxj,μh∕etaij (v-μj)]
(59)
≤ (1 - Pj )etaij α + PjEv
β 一 (V - μj)
β-α
etaij α + (V - μj ) - α etaij β
β-α
(60)
(1 - Pj )etaij α +
β 一 (I - Pj)μhj
β-α
Pj etaij α +
(I - Pj)μhj -
β-α
αPjetaijβ
(61)
(1 - Pj)etaijα + I
—
Pj (1 - Pj )〃hj (etaij a _ etaij β ) _ Pj α etaij β
(β - α)	(	) β - α
(62)
4
Under review as a conference paper at ICLR 2018
where the first inequality in the above equation is from the property of a convex function. Define
U = taij (β - α), Y = - β-α . Then,
Tj ≤ e-uγ
1 - pj + j - Pj(I- PjM (1 - eU) - Jpaeu
3 β - a (β - a)	β - a
e-uγ
1 + Pja - Pj(I - PjHhj - ( Pja - Pj(I - Pj Whj ∖ eU
β — a	(β — a)	Ie — a	(β — a)	J
e-uγ
1 - Pj γ +
Pj(1 - Pj )〃hj
(e - a)
+ Pj γ +
Pj(1 - Pj Mhj ∖ U
(β - a)	e .
(63)
(64)
(65)
(66)
Define φ = PjY + %(；--O),hjʃ and let eg(U)，Tj = e-uγ(1 — φ + φeu). Then,
g(u) = -uY + ln(1 - φ + φeU) =⇒ g(0) = 0	(67)
0/、	l φeu
g (U) = -Y +1-φ + φeu
=⇒ g0(0)
、人 p -P(I - P)μh
-γ + φ=-γ(1- P)+ (e-a)
g00(U)
φ(1 - φ)eu
(1 - φ + φeu)2
g000(U)
φ(1 - φ)(1 - φ + φeu)eu(1 - φ - φeu)
(1 - φ + φeu)4
(68)
(69)
(70)
Thus, for getting a maxima for g00(U), we set g000(U) = 0 which implies 1 - φ - φeU = 0, or,
eu = 1-φ. Substituting this U in g00(U) ≤ 1/4. By Taylor’s theorem, ∃c ∈ [0, U]∀U > 0 such that,
g(U) =	g(0) +	UgO(O)	+	u-g'0(C)	≤ 0 - UY(I -	Pj)	+ UPj(：	IpThj	+ u2∕8	(71)
2	(β - a)
Thus we can upper bound Tj as,
T V USj )- jjj ) _ t2a2j (β-α)2∕8+taij	" + j1-jh ) S
Tj ≤ e	= e	(72)
Substituting for a, β, we get,
t2a2 l2
T . ≤ et2 aij Lmaxj /8 + taij (I-Pj )( —μj +pj μhj ) = e--zjgɪɪɪ&Xj
(73)
On the other hand, if aj < 0, then We can set a = μj- - lmaχj and β = μj∙ and proceeding similar to
equation 59, we get,
T. ≤ et2aij lmaxj /8 + t∖aij I(I-Pj )(μj - lmaxj+pj μhj )
t2ajim；
e	8^
ax
-t|ajT(I-Pj )(Imaxj - 2pj μhj ) (74)
Then, collectively, We can Write Pr(zi ≥ δ) as
Pr(zi
T
≥ δ) ≤ Y etδ
j
et2 Pj a2j lmmax； ∕8-t(δ +(I-Pj )(lmaxj -2Pj μhj ) max(0,-aij ))
(75)
We similarly bound Pr(-zi ≥ δ) by effectively flipping the sign of aij’s,
Pr(-z∙ ≥ δ) ≤ et2 Pj a2j lmaxj /8-t(δ + (1-Pj )(lmaxj∙-2Pj μhj ) maχ(0,aij ))
Minimizing both 75 and 76 With respect to t and applying union bound, We get,
2 ('+Pj (I-Pj Mlmaxj -2Pjμhj ) max(O,aij ))2
Pr(∣hi - hi| ≥ δ) ≤ e	Pj a2jlmaxj
2 (δ+Pj (I-Pj )(lmaxj -2Pjμhj ) max(0,-aij ))2
+e	Pjaijlmaxj	∀ i ∈ [m]
(76)
(77)
(78)
Since the above bound holds for all i ∈ [m], applying union bound on all the units yields the desired
result.
□
5
Under review as a conference paper at ICLR 2018
ɪʌ _ . . .	. _ /ʌ ɪ	1	1	.	/■ ι r 11 ɪ-ɪ m/ c	1	∖ 7 ∙ . ∙ι	11 . ^Γ - τmm τ
Proposition 2. Let each element of h follow BINS(p, fc, μh, lmaχ) distribution and let h ∈ Rm be
an auto-encoder signal recovery mechanism with Rectified Linear activation function and bias b
for a measurement vector x ∈ Rn such that x = WT h + e where e is any noise random vector
independent of h. If we set bi，一 Ej ajPj μ% — WT Ee [e] ∀i ∈ [m], then ∀ δ ≥ 0,
Pr
-1 ∣∣h — h∣∣ι ≤ δ
m
m
≥ 1 — X
i=1
-2
+e
(δ-WT (e-Ee [e])+Pj (1-pj )(lmaxj - 2pjμhj ) max(0,aij ))2
Pj a2j lmaxj
(δ-WT (e-Ee [e]) + Pj (1-Pj )(lmaxj -2Pjμhj ) max(0,-aij ))2
Pj aijlmaxj
(79)
where ais are vectors such that
WiT Wj	if	i 6= j
WiT Wi — 1 if	i = j
(80)
Wi is the ith row of the matrix W cast as a column vector.
Proof. Recall that,
h^i = max{0, X ajhj + h + WTe + bi}	(81)
j
T
hi — hi = max{—hi,	aij hj + WiTe + bi}	(82)
j
Let zi =	j aij hj + bi + WiT e. Then, similar to theorem 2, conditioning upon zi,
Pr(|hi — hi| ≤ δ) = Pr (∣h⅛ — h/ ≤ δ
+ Pr (|hi — hi∖ ≤ δ
+ Pr (|hi — hi∖ ≤ δ
+ Pr (∖hi - hi∖ ≤ δ J
Since Pr (∖hi — hi∖ ≤ δ ∣ ∖zi∖ ≤ δ) = 1, We have,
,.ʌ …
Pr(∖^ — hi∖ ≤ δ) ≥ Pr(∖zi∖ ≤ δ)
hi >	0,	∖zi∖	≤	δ	Pr(∖zi∖	≤ δ,	hi	>	0)	(83)
hi >	0,	∖zi∖	>	δ	Pr(∖zi∖	> δ,	hi	>	0)	(84)
hi =	0,	∖zi∖	≤	δ	Pr(∖zi∖	≤ δ,	hi	=	0)	(85)
hi =	0,	∖zi∖	>	δ	Pr(∖zi∖	> δ,	hi	=	0)	(86)
(87)
For any t > 0, using Chernoff’s inequality for the random variable h,
Pr(Zi ≥ δ) ≤ E⅛P
(88)
Setting bi = — Pj aj〃j — WTEe[e], where μj = EhJhj] = Pjμ%,
Eh [etPj a"j(h>-μj)^∣
Pr(Zi ≥ δ) ≤	etδ-tWT(e-Ee[e])
Eh [Qj etaij(hj-μj J	Qj Ehjietaij(hj-μj)]
etδ-tWT (e-Ee[e])~ = ~etδ-tWT (e-Ee[e])~
(89)
Setting δ := δ — WT(e — Ee [e]), we can rewrite the above inequality as
Pr(Zi ≥ δ) ≤
Qj Ehj [eta". (hj-"j)
etδ
(90)
Since the above inequality becomes identical to equation 57, the rest of the proof is similar to theorem
2.	□
6
Under review as a conference paper at ICLR 2018
Theorem 3.	(Uncorrelated Distribution Bound): If data is generated as x = WTh where h ∈ Rm
has covariance matrix diag(ζ), (ζ ∈ R+m) and W ∈ Rm×n (m > n) is such that each row of W
has unit length and the rows of W are maximally incoherent, then the covariance matrix of the
generated data is approximately spherical (uncorrelated) satisfying,
mink∑ - αIkF ≤ ∖/1 (m∣∣Zk2-∣∣Zk1)	(91)
αn
where Σ = Ex[(x - Ex[x])(x - Ex[x])T] is the covariance matrix of the generated data.
Proof. Notice that,
Ex[x] = WT Eh[h]	(92)
Thus,
Ex[(x - Ex[x])(x - Ex[x])T] = Eh[(WT h - WT Eh[h])(WT h - WT Eh[h])T] (93)
=Eh[WT(h-Eh[h])(h-Eh[h])TW] (94)
= WTEh[(h - Eh[h])(h - Eh[h])T]W (95)
Substituting the covariance of h as diag(ζ),
Σ=Ex[(x-Ex[x])(x-Ex[x])T] = WT diag(ζ)W	(96)
Thus,
∣∣Σ - aIkF = tr ((WTdiag(Z)W - aI)(WTdiag(Z)W - αI)T)	(97)
=tr (WT diag(Z)WWT diag(Z)W + α2I - 2αWT diag(Z)W)	(98)
Using the cyclic property of trace,
∣∣Σ - αI∣F = tr (WWTdiag(Z)WWTdiag(Z) + α2I - 2αWWTdiag©)	(99)
m
= ∣WWTdiag(ζ)∣2F+α2n-2αXζi	(100)
mm
≤ (X Z2)(1 + μ2(m - 1))+ α2n - 2α X Zi	(101)
Finally minimizing w.r.t α, We get ɑ* = -1 Pm=I Zi. Substituting this into the above inequality, We
get,
min∣Σ - αI∣2F ≤
α
(X Zi2)(1 + μ2(m- 1)) + 1(X Zi)2-n(X Zi)2
i=1	i=1	i=1
mm
(X ζ2)(1 + μ2(m -1)) —(X (Zi))
i=1	n i=1
(102)
(103)
(104)
Since the weight matrix is maximally incoherent, using Welch bound, we have that, μ ∈
[ʌ/nmm-ni)，1. Plugging the lower bound of μ (maximal incoherence) for any fixed m and n
into the above bound yields,
m mαin∣Σ - αI∣2F ≤ (XZi2)(1 i=1	m-n + n(m - 1) (m -	m i)) - nX Zi)2 i=1	(105)
=	m (X Zi2)(i+mi	m -)-n(X Zi)2	(106)
	i=1	n	n i=1	
	1 =一 n	(m∣Z k2 -kZ k2)	(107)
□
7
Under review as a conference paper at ICLR 2018
2 Supplementary Experiments
2.1	Supplementary Experiments for Section 5.1
Here we show the recovery error (APRE) for signals generated with coherent weight matrix, and as
expected the recovery result is poor and the values of c and ∆b are unpredictable. The minimum
average percentage recovery error we got for continous signal is 45.75, and for binary signal is 32.63.
Figure 5: Error heatmap showing optimal values of c and ∆b for recovering continous (left) and
binary (right) signal using coherent weights.
Binary Signal Recovery
40.33
2.2	Supplementary Experiments for Section 5.2
Fig. 6 shows that the coherence of orthogonal initialized weight matrix is more incoherent as
compared to the ones that using Gaussian based initialization.
0.09p
。皿*
0.07
g0.06
Comparison of Incoherence
Sθ.O5
效.04
^0.03
0.02
0.01
o∙θ⅛o
150
200
1 I orthogonal
f I gaussian
250
n
f-
Figure 6: Coherence of orthogonal and Gaussian weight matrix with varying dimensions.
2.3 Supplementary Experiments for Section 5.3
For noisy signal recovery we add independent Gaussian noise to data with mean 100 and standard
deviation ranging from 0.01 to 0.2. Note that the data is normally within the range of[-1, 1], so the
noise is quite significant when we have a standard deviation > 0.1. It is clear that even in noisy case
AE can recover the dictionary (see fig. 7). However, the recovery is not very strong when the noise
is large > 0.1 for continous signals, which is because 1) the precise value in this case is continous
and thus is more influenced by the noise, 2) the dictionary recovery is poor, which result poor signal
recovery. On the other hand, the recovery is robust in case of recovering binary signals. Similar
results were found on the APRE of recovered hidden signals. The reason for more robust recovery for
binary signal is that 1) the information content is lower and 2) we binarize the recovered hidden signal
by thresholding it, which further denoised the recovery. When optimizing the AE objective for binary
8
Under review as a conference paper at ICLR 2018
singal recovery case, we did a small trick to simulate the binarization of the signal. From our analysis
(see Theorem 1), a recovery error δ = 0.5 is reasonable as we can binarize the recovery using some
threshold. However, when optimizing the AE using gradient based method we are unable to do this.
To simulate this effect, we offset the pre-activation by a constant k and multiply the pre-activation by
a constant c, so that it signifies the input and push the post-activation values towards 0 and 1. In other
words, we optimize the following objective when doing binary signal recovery:
WW = argminEx [∣∣x - WTσ (C{W(x - Ex[x]) + k})∣∣2] ,	WherekWik2 = 1∀i (108)
where σ is the sigmoid function. We find set c = 6 and k = -0.6 is sufficient to saturate the sigmoid
and simulate the binarization of hidden signals.
enpωd Ioa
0	50	100
Epoch
Figure 7: Cosine similarity between greedy paired rows of W and W for noisy binary (upper) and
continous (lower) recovery. From left to right the noise stand deviations are 0.01, 0.02, 0.05, 0.1, 0.2,
respectively. The upper, mid and lower bar represent the 95th, 50th and 5th percentile.
0	50	100
Epoch
0	50	100
Epoch
50
Epoch
100
enpωd Ioa
50
Epoch
100
0	50	100
Epoch
0.40
0.35
0.30
髀.25-
加.20
0.15
0.10
0	50	100
Epoch
Table 1: Average percentage recovery error for noisy AE recovery.
Noise std.	0.01	0.02	0.05	0.1	0.2
Continous APRE	2.06	1.63	9.48	34.16	56.79
Binary APRE	0.15	0.16	0.18	1.56	4.00
9