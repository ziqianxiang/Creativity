Table 1: Evolution of the Reluplex algorithm. Red cells cor-responds to value violating Linear constraints, and orange cellscorresponds to value violating ReLU constraints. Resolution ofviolation of linear constraints are prioritised.
Table 2: Dimensions of all the data sets. For PCAMNIST, we use a base network with 10 inputs,4 layers of 25 hidden units and a margin of 1000. We generate new problems by changing onehyperparameter at a time, using the values inside the brackets.
Table 3: Results on the ACAS data set. Note that 23 of the properties were not solved by any of themethods and are therefore not present in the SAT/UNSAT breakdowns. Reluplex and BaB/reluBaBboast comparable success rate but the BaBs finish significantly faster, especially for SAT.
Table 4: Results on the CollisionDetection data set. All solvers finished on all test cases but evenadjusting the hyperparameters, Reluplex erroneously classified one properties as True. For 17 prop-erties, the difference between the two fastest methods was inferior to 1% of their runtime so wedidnâ€™t count any Win.
Table 5: Results on the PCAMNIST data set. 11 properties were not solved by any of the methods.
Table 6: Accuracies of the network trained for the PCAMNIST dataset.
