Figure 1:	A simplified overview of pricing function.
Figure 2:	A simplified transaction overview under pricing function. The events happen from topdown. Before the transaction, the model is only used to set up a pricing function, while the data isonly used to get the resulting price.
Figure 3: OpenMined architecture, which aims to democratize data by making it easier to exchangeuser data. It consists of federated learning server Sonar running on the blockchain, Capsule forhandling encrypted key exchange, Mine with user data, and Syft, which contains neural networksthat can be trained in an encrypted state (et al., 2017)remain secret, yet it can be inferred from the model improvements. To mitigate that, a smart ag-gregator is designed to rely on the other usersâ€™ data to mix up the updates, so that such informationregarding data detail is differentially private. However, making strong assumptions about the distri-bution of other data not in our control is impractical, as we deal with a single transaction betweena model owner and a data owner. In the case of training data transaction, we want the data to bepreferably visible to maximize their flexibility. Absolute security of the data is also less relevantin the pricing case, as we hope to guard the data against its use case; that is, we aim to prevent itsspecific model improvements to known while still demonstrating that the model is improved by thedata.
