Table 1: DataSet StatiSticS	Size	Mean # Vars	Mean # Ops	Mean Length	Mean 2# VarsTrain	100,000	4.5	5.3	11.3	52.2Validate	5,000	5.1	6.8	13.0	75.7Test (easy)	5,000	5.2	6.9	13.1	81.0Test (hard)	5,000	5.8	17.4	31.5	184.4Test (big)	5,000	8.0	20.9	38.7	3310.8Test (massive)	2,230	18.4	49.4	88.8	848,570.0Test (exam)	100	2.4	3.9	8.6	5.8To generate these 4-tuples, we first generate pairs (A, B) such that A B. (To test if A B, we testwhether A ∧ B iS SatiSfiable, uSing minisat (SorenSSon & Een, 2005)). Then we Search throughthe Set of pairS, looking for pairS of pairS, (A1, B1) and (A2, B2), Such that A1 2 B2 and A2 2 B1.
Table 2: Propositional Logic Model Accuracy.
Table 3: Requirement violations in the naive approach, with |D| = 50,000	A+	A-	X	χ2 df	B+	B-	χ2	χ2 dflength(.)	6.62	6.45	70.6	9	8.33	8.28	304.9	16num(∙,—)	1.47	1.33	309.4	8	1.77	1.91	139.0	9num(∙, ∧)	1.52	1.33	308.6	8	1.70	1.94	134.0	11num(∙, ∨)	1.30	1.40	86.9	8	1.95	1.69	127.0	10num_at(., 0,—)	0.31	0.22	532.4	1	0.18	0.30	350.9	1num_at(., 1,—)	0.32	0.31	7.5	2	0.39	0.41	3.2	2num_at(., 2,—)	0.31	0.31	8.8	4	0.56	0.54	5.3	4num_at(., 0, ∧)	0.35	0.2	1382.9	1	0.13	0.33	1076.4	1num_at(., 1, ∧)	0.32	0.31	36.5	2	0.39	0.40	6.5	2num_at(., 2, ∧)	0.31	0.32	3.2	4	0.56	0.53	16.5	4num_at(., 0, ∨)	0.16	0.28	1070.3	1	0.34	0.16	752.4	1num_at(., 1, ∨)	0.30	0.32	66.0	2	0.42	0.34	141.1	2num_at(.,2, ∨)	0.32	0.31	12.9	4	0.57	0.52	39.7	4#sat(：)	3.7	10.3	11265	174	22.1	11.7	3702.8	24114Published as a conference paper at ICLR 2018A.2.2 Our preferred approach to dataset generationIn order to satisfy our requirements above, we took a different approach to dataset generation. In
Table 4: Statistics for the preferred approach that generates 4-tuples, with |D| = 50, 000									A+	A-	χ2	χ2	df B+	B-	χ2	χ2 dflength(.)	6.33	6.33	0.0	9	6.38	6.38	0.0	16num(∙,—)	1.42	1.42	0.0	9	1.26	1.26	0.0	8num(∙, ∧)	1.63	1.63	0.0	7	1.16	1.16	0.0	7num(∙, ∨)	1.14	1.14	0.0	7	1.53	1.53	0.0	8num.at(∙, 0,—)	0.33	0.33	0.0	1	0.16	0.16	0.0	1num_at(., 1,—)	0.29	0.29	0.0	2	0.32	0.32	0.0	2num_at(., 2,—)	0.30	0.30	0.0	3	0.31	0.31	0.0	4num_at(., 0, ∧)	0.49	0.49	0.0	1	0.1	0.1	0.0	1num_at(., 1, ∧)	0.34	0.34	0.0	2	0.31	0.31	0.0	2num_at(., 2, ∧)	0.30	0.30	0.0	4	0.30	0.30	0.0	4num_at(., 0, ∨)	0.08	0.08	0.0	1	0.39	0.39	0.0	1num.at(∙, 1, ∨)	0.27	0.27	0.0	2	0.35	0.35	0.0	2num_at(., 2, ∨)	0.29	0.29	0.0	3	0.29	0.29	0.0	3#SatS	3.86	3.86	0.0	86	14.42	14.42	0.0	157A.3 Dataset Example								Our method generates 4-tuples such as the following:										p∨p			(r → c) →	((r → v	) ∨ p)	((g ∨p) ∨ s) → (g → g) ∧ r					r ∧ (r → r)			
