Table 1: Qualitative comparison of CNPI with NPI and RNPI.
Table 2: % accuracy of learning new programs/combi-nators and remembering old ones with a fixed core. Themaximum accuracy obtained when training on new setare 100% and 97.7% for RNPI and CNPI respectively.
Table 3: Curriculum for training CNPI for the sorting task using RL. The programs to be learned (in-eluding detectors) are bolded and colored. Several ACTs are added to help learn the tasks: OUT_x:write the element at pointer X to position pointed by P3 and advanced P3 one step. CLEAR_x: setthe element at pointer x to -1.OUTCLEAR_x: output then clear x. For the sort task, instead ofsorting in-place, the max element found in each pass is written to a second array pointed to by P3.
Table 5: Comparison of % successof training CNPI with RL with othermodels.
Table 4: % success of training the core+combinators withRL. The three figures in brackets represent % success oflearning the seq, cond or linrec combinator respectively.
Table 6: Built-ins to support tree recursion. The state can Figure 6: Built-in Combinator _mapselfbe seen as arguments for a recursive call.	used by treerec.
