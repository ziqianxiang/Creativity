Published as a conference paper at ICLR 2018
The Role of Minimal Complexity Functions in
Unsupervised Learning of Semantic Mappings
Tomer Galanti
The Blavatnik School of Computer Science
Tel Aviv University
Tel Aviv, Israel
tomerga2@post.tau.ac.il
Lior Wolf
Facebook AI Research &
The Blavatnik School of Computer Science
Tel Aviv University
Tel Aviv, Israel
wolf@fb.com
wolf@cs.tau.ac.il
Sagie Benaim
The Blavatnik School of Computer Science
Tel Aviv University
Tel Aviv, Israel
sagieb@mail.tau.ac.il
Ab stract
We discuss the feasibility of the following learning problem: given unmatched
samples from two domains and nothing else, learn a mapping between the two,
which preserves semantics. Due to the lack of paired samples and without any defi-
nition of the semantic information, the problem might seem ill-posed. Specifically,
in typical cases, it seems possible to build infinitely many alternative mappings
from every target mapping. This apparent ambiguity stands in sharp contrast to the
recent empirical success in solving this problem.
We identify the abstract notion of aligning two domains in a semantic way with
concrete terms of minimal relative complexity. A theoretical framework for mea-
suring the complexity of compositions of functions is developed in order to show
that it is reasonable to expect the minimal complexity mapping to be unique. The
measured complexity used is directly related to the depth of the neural networks
being learned and a semantically aligned mapping could then be captured simply by
learning using architectures that are not much bigger than the minimal architecture.
Various predictions are made based on the hypothesis that semantic alignment can
be captured by the minimal mapping. These are verified extensively. In addition, a
new mapping algorithm is proposed and shown to lead to better mapping results.
1	Introduction
Multiple recent reports (Xia et al., 2016; Kim et al., 2017; Zhu et al., 2017; Yi et al., 2017) convincingly
demonstrated that one can learn to map between two domains that are each specified merely by a set
of unlabeled examples. For example, given a set of unlabeled images of horses, and a set of unlabeled
images of zebras, CycleGAN (Zhu et al., 2017) creates the analog zebra image for a new image of a
horse and vice versa.
These recent methods employ two types of constraints. First, when mapping from one domain
to another, the output has to be indistinguishable from the samples of the new domain. This is
enforced using GANs (Goodfellow et al., 2014) and is applied at the distribution level: the mapping
of horse images to the zebra domain should create images that are indistinguishable from the training
images of zebras and vice versa. The second type of constraint enforces that for every single sample,
transforming it to the other domain and back (by a composition of the mappings in the two directions)
results in the original sample. This is enforced for each training sample from either domain: every
training image of a horse (zebra), which is mapped to a zebra (horse) image and then back to the
source domain, should be as similar as possible to the original input image.
1
Published as a conference paper at ICLR 2018
In another example, taken from DiscoGAN (Kim et al., 2017), a function is learned to map a handbag
to a shoe of a similar style. One may wonder why striped bags are not mapped, for example, to shoes
with a checkerboard pattern. If every striped pattern in either domain is mapped to a checkerboard
pattern in the other and vice-versa, then both the distribution constraints and the circularity constraints
might hold. The former could hold since both striped and checkerboard patterned objects would
be generated. Circularity could hold since, for example, a striped object would be mapped to a
checkerboard object in the other domain and then back to the original striped object.
One may claim that the distribution of striped bags is similar to those of striped shoes and that the
distribution of checkerboard patterns is also the same in both domains. In this case, the alignment
follows from fitting the shapes of the distributions. This explanation is unlikely, since no effort is
being made to create handbags and shoes that have the same distributions of these properties, as well
as many other properties.
Our work is dedicated to the alternative hypothesis that the target mapping is implicitly defined
by being approximated by the lowest-complexity mapping that has a low discrepancy between
the mapped samples and the target distribution, i.e., the property that even a good discriminator
cannot distinguish between the generated samples and the target ones. In Sec. 2 we explore the
inherent ambiguity of cross domain mapping. In Sec. 3, we present the hypothesis and two verifiable
predictions, as well as a new unsupervised mapping algorithm. In Sec. 4, we show that the number
of minimal complexity mappings is expected to be small. Sec. 5 verifies the various predictions.
Some context to our work, including classical ideas such as Occam’s Razor, MDL, and Kolmogorov
complexity are discussed in Sec. 6.
2	The Unsupervised Alignment Problem
The learning algorithm is provided with only two unlabeled datasets: one includes i.i.d samples from
the first distribution and the second includes i.i.d samples from the other distribution (all notations
are listed in Appendix B, Tab. 5).
xi ∈ XA for i = 1 . . . m where xi
i.i.d
〜
xj ∈ XB for j = 1 . . . n where xj
i.i.d
〜
DA and XA denotes the space of domain A = (XA, DA)
DB and XB denotes the space of domain B = (XB, DB )
(1)
To semantically tie the two distributions together, a generative view can be taken. This view is well
aligned with the success of GAN-based image generation, e.g., (Radford et al., 2015), in mapping
random input vectors into realistic-looking images. Let z ∈ X be a random vector that is distributed
according to the distribution DZ and which we employ to denote the semantic essence of samples in
XA and XB . We denote DA = yA ◦ DZ and DB = yB ◦ DZ, where the functions yA : X → XA
and yB : X → Xb (see Fig. 1), and f ◦ D denotes the distribution of f (x), where X 〜D. Following
the circularity-based methods (Xia et al., 2016; Kim et al., 2017; Zhu et al., 2017; Yi et al., 2017), we
assume that both yA and yB are invertible.
The assumption of invertibility is further justified by the recent success of supervised pre-image
computation methods (Dosovitskiy & Brox, 2016). In unsupervised learning, given training samples,
one may be expected to be able to recover the underlying properties of the generated samples, even
with very weak supervision (Chen et al., 2016). However, if the target function between domains A
and B is not invertible, because for each member of A there are a few possible members of B (or
vice versa), we can add a stochastic component to A that is responsible for choosing which member
in B to take, given a member of A. For example, if A is a space of handbag images and B is a space
of shoes, such that for every handbag, there are a few analogous shoes, then a stochastic variable can
be added such that given a handbag, one shoe is selected among the different analog shoes.
We denote by yAB = yB ◦ yA-1, the function that maps the first domain to the second domain. It is
semantic in the sense that it goes through the shared semantic space X . The goal of the learner is to
fit a function h ∈ H, for some hypothesis class H that is closest to yAB,
hi∈nHf RDA[h,yAB],
(2)
where RD[fι, f2] = Ex~d'(f1(χ),f2(χ)), for a loss function ' : R X R → R and a distribution D.
2
Published as a conference paper at ICLR 2018
Figure 1: The mappings between the domains A, B, and Z.
It is not clear that such fitting is possible without further information. Assume, for example, that there
is a natural order on the samples in XB. A mapping that transforms an input sample x ∈ XA to the
sample that is next in order to yAB (x), could be just as feasible. More generally, one can permute the
samples in XA by some function Π that replaces each sample with another sample that has a similar
likelihood (see Def. 1 below) and learn h that satisfies h = yAB ◦ Π. We call this difficulty “the
alignment problem” and our work is dedicated to understanding the plausibility of learning despite
this problem.
In multiple recent contributions (Xia et al., 2016; Kim et al., 2017; Zhu et al., 2017; Yi et al.,
2017) circularity is employed. Circularity requires the recovery of both yAB and yBA = yA ◦ yB-1
simultaneously. Namely, functions h and h0 are learned jointly by minimizing the risk:
discC(h ◦ DA,DB) + discC (h0 ◦ DB,DA)
inf
h,h0∈H
+ Rd a [h0 ◦ h,IdA] + RDB [h ◦ h0, IdB ]
(3)
where discC(D1, D2) = supc1,c2∈C |RD1 [c1, c2] - RD2 [c1, c2]| denotes the discrepancy between
distributions D1 and D2 that is implemented with a GAN (Ganin et al., 2016).
The first term in Eq. 3 ensures that the samples generated by mapping domain A to domain B follow
the distribution of samples in domain B. The second term is the analog term for the mapping in the
other direction. The last two terms ensure that mapping a sample from one domain to the second and
back, results in the original sample.
While the circularity constraints, expressed as the last two terms in Eq. 3, are elegant and do not
require additional supervision, for every invertible permutation Π of the samples in domain B (not
to be confused with a permutation of the vector elements of the representation of samples in B) we
have
(h0 ◦ Π-1) ◦ (Π ◦ h) = h ◦ h0 ≈ IdA, and
(Π ◦ h) ◦ (h0 ◦ Π-1) = Π ◦ (hoh0) ◦ Π-1 ≈ Π ◦ IdB ◦ Π-1 = IdB.
(4)
Therefore, every circularity preserving pair h and h0 gives rise to many possible solutions of the form
h = h ◦ Π and h0 = Π-1 ◦ h0. If Π happens to satisfy DB(x) ≈ DB(Π(x)), then the discrepancy
terms in Eq. 3 also remain largely unchanged. Circularity by itself cannot, therefore, explain the
recent success of unsupervised mapping.
3	The Simplicity Hypothesis
Despite the availability of a large number of alternative hypotheses h0 that satisfy the constraints of
Eq. 3, the methods of Xia et al. (2016); Kim et al. (2017); Zhu et al. (2017); Yi et al. (2017) enjoy
empirical success, Why?
Our hypothesis is that the small-discrepancy mapping of the lowest complexity approximates the
alignment of the target function. We further hypothesize that when performing research in unsuper-
vised mapping, goldilock architectures are selected. These architectures are complex enough to allow
small discrepancies but not complex enough to support mappings that are not minimal in complexity.
By doing so, one of the minimal-complexity low-discrepancy mappings is learned.
3
Published as a conference paper at ICLR 2018
Figure 2: An illustrative example where the two domains are line segments in R2 . There are infinitely
many mappings that preserve the uniform distribution on the two segments. However, only two stand
out as “semantic”. These are exactly the two mappings that can be captured by a neural network with
only two hidden neurons and Leaky ReLU activations, i.e., by a function h(x) = σa(Wx + b), for a
weight matrix W and the bias vector b.
3.1	An Illustrative Example
In order to illustrate our hypothesis, we present a very simple toy example, depicted in Fig. 2.
Consider the domain A of uniformly distributed points (x1 , x2)> ∈ R2, where 0 ≤ x1 < 1 and
x2 = 0.5. Let B be a similar domain, except x2 = 2. We are interested in learning the mapping
yA2DB ((x1, 0.5)>) = (x1, 2)>. We note that there are infinitely many mappings from domain A to B
that satisfy the constraints of Eq. 3.
However, when we learn the mapping using a neural network with one hidden layer of size 2, and
Leaky ReLU activations1 (Maas et al., 2013), yA2DB is one of only two options. In this case h(x) =
σa(Wx + b), for W ∈ R2×2,b ∈ R2 and where σa is applied per coordinate. The only admissible
solutions are of the form Wb =	1	-2b1 or Wb0 =	-1 1 - 2b1 and b = (b1, b2)>,
0 4 - 2b2	b 0	4 - 2b2
which are identical, for every b, to yA2DB or to an alternative yA2DB0 ((x1, 0.5)>) = (1 - x1, 2)>. Exactly
the same situation holds for any pair of line segments in Rd+ .
Therefore, by restricting the hypothesis space of h, we eliminate all alternative solutions, except two.
These two are exactly the two mappings that would commonly be considered “more semantic” than
any other mapping, and can be expressed as the simplest possible mapping through a shared one
dimensional space. While this is an extreme example, we believe that the principle is general since
limiting the complexity of the admissible solutions eliminates the solutions that are derived from
yAB by permuting the samples in the space XA , because such mixing requires added complexity.
3.2	A Complexity Measure for Functions
In this work, we focus on functions of the form
f := F[Wn+1, ..., W1] = Wn+1 ◦ σ ◦ ... ◦ σ ◦ W2 ◦ σ ◦ W1	(5)
here, W1 , ..., Wn+1 are invertible linear transformations from RM to itself. In addition, σ is a
non-linear element-wise activation function. We will mainly focus on σ that is Leaky ReLU with
parameter 0 < a 6= 1. In addition, for any function f, we define the complexity of f, denoted by
1σa (x) = Ind[x < 0]ax + Ind[x ≥ 0]x, for the indicator function Ind[q] which maps a true value to one,
zero otherwise.
4
Published as a conference paper at ICLR 2018
C(f) as the minimal number n such that there are invertible linear transformations W1, ..., Wn+1
that satisfy f = F [Wn+1 , ..., W1].
Our function complexity framework, therefore, measures the complexity of a function as the depth of
a neural network which implements it, or the shallowest network, if there are multiple such networks.
In other words, we use the number of layers of a network as a proxy for the Kolmogorov complexity
of functions, using layers in lieu of the primitives of the universal Turing machines, which is natural
for studying functions that can be computed by feedforward neural networks.
Note that capacity is typically controlled by means of norm regularization, which is optimized during
training. Here, the architecture is bounded to a certain number of layers. This measure of complexity
is intuitive and provides a clear and stable stratification of functions.
Norm capacity (for norms larger than zero) are not effective in comparing functions of different
architectures. In Sec. 5, we demonstrate that the L1 and L2 norms of the desired mapping are within
the range of norms that are obtained when employing bigger or smaller architectures. Other ways to
define the complexity of functions, such as the VC-dimension (Vapnik & Chervonenkis, 1971b) and
Rademacher complexity (Bartlett & Mendelson, 2003), are not suitable for measuring the complexity
of individual functions, since their natural application is in measuring the capacity of classes of
functions.
3.3	Consequences of the Simplicity Hypothesis
The simplicity hypothesis leads to concrete predictions, which are verified in Sec. 5. The first one
states that in contrast to the current common wisdom, one can learn a semantically aligned mapping
between two spaces without any matching samples and even without circularity.
Prediction 1. When learning with a small enough network in an unsupervised way a mapping
between domains that share common characteristics, the GAN constraint in the target domain is
sufficient to obtain a semantically aligned mapping.
The strongest clue that helps identify the alignment of the semantic mapping from the other mappings
is the suitable complexity of the network that is learned. A network with a complexity that is too low
cannot replicate the target distribution, when taking inputs in the source domain (high discrepancy).
A network that has a complexity that is too high, would not learn the minimal complexity mapping,
since it could be distracted by other alignment solutions.
We believe that the success of the recent methods results from selecting the architecture used in an
appropriate way. For example, DiscoGAN (Kim et al., 2017) employs either eight or ten layers,
depending on the dataset. We make the following prediction:
Prediction 2. When learning in an unsupervised way a mapping between domains, the complexity of
the network needs to be carefully adjusted.
This prediction is also surprising, since in supervised learning, extra depth is not as detrimental, if
at all. As far as we know, this is the first time that this clear distinction between supervised and
unsupervised learning is made 2.
3.4	Alignment with Non-minimal Architectures
If the simplicity hypothesis is correct, then in order to capture the target alignment, one would need
to learn with the minimal complexity architecture that supports a small discrepancy. However, deeper
architectures can lead to even smaller discrepancies and to better outcomes.
In order to enjoy both the alignment provided by our hypothesis and the improved output quality, we
propose to find a function h of a non-minimal complexity k2 that minimizes the following objective
function
min	disc(h ◦ DA, DB) + λ inf RDA [h, g]	(6)
h s.t C (h)=k2	g s.t C(g)=k1
2The MDL literature was developed when people believed that small hypothesis classes are desired for both
supervised and unsupervised learning.
5
Published as a conference paper at ICLR 2018
where k1 is the minimal complexity for mapping with low discrepancy between domain A and
domain B . In other words, we suggest to find a function h that is both a high complexity mapping
from domain A to B and is close to a function of low complexity that has low discrepancy.
There are alternative ways to implement an algorithm that minimizes the objective function presented
in Eq. 6. Assuming, based on this equation, that for h that minimizes the objective function, the
corresponding g* = arg inf RDA [h, g] has a (relatively) small discrepancy, leads to a two-step
g s.t C(g)=k1
algorithm. The algorithm first finds a function g that has small complexity and small discrepancy
and then finds h of a larger complexity that is close to g. This is implemented in Alg. 1. Note that
in the first step, k1 is being estimated, for example, by gradually increasing its value, until g with a
discrepancy lower than a threshold 0 is found. We suggest to use a liberal threshold, since the goal
of the network g is to provide alignment and not the lowest possible discrepancy.
Algorithm 1 Complexity Based Regularization Alignment
Require: Unlabeled training sets SA i% Dm and SB i% DB, a desired complexity k2, and a
trade-off parameter λ
1	: Identify a complexity k1, which leads to a small discrepancy min	disc(g ◦ DA, DB).
g s.t: C(g)=k1
2	: Train g of complexity k1 to minimize disc(g ◦ DA, DB).
3	: Train h of complexity k2 to minimize disc(h ◦ DA, DB) + λRDA [h, g].
4	Counting Minimal Complexity Mappings
Recall, from Sec. 2, that disc is the discrepancy distance, which is based on the optimal discriminator.
Also discussed were the functions Π, that switches between members in the domain B that have
similar probabilities. These are defined using the discrepancy distance as follows (simplified version;
the definitions and results of this section are stated more broadly in Appendix A):
Definition 1 (Density preserving mapping). Let X = (X, DX) be a domain. A 0-density preserving
mapping over X (or an 0-DPMfor short) is a function Π such that
disc(Π ◦ DX,DX) ≤ 0
(7)
We denote the set of all 0 -DPMs of complexity k by DPM0 (X; k)	:=
{∏∣disc(Π ◦ DX,Dχ) ≤ βo and C(Π) = k}.
Below, we define a similarity relation between functions that reflects whether the two are similar. In
this way, we are able to bound the number of different (non-similar) minimal complexity mappings
by the number of different DPMs.
Definition 2. Let D be a distribution. We denote f D g, if C(f) = C(g) and there are mini-
0
mal decompositions: f = F [Wn+1, ..., W1] and g = F [Vn+1, ..., V1] such that: ∀i ∈ [n + 1] :
disc(F [Wi,..., W1] ◦ D, F [Vi,..., V1] ◦ D) ≤0.
Put differently, two functions of the same complexity have this relation, if for every step of their
processing, the activations of the matching functions are similar.
The defined relation is reflexive and symmetric, but not transitive. Therefore, there are many different
ways to partition the space of functions into disjoint subsets such that in each subset, any two functions
have the closeness property. We count the number of functions as the minimal number of subsets
required in order to cover the entire space. This quantity is denoted by N(U,〜U) where U is the set
and 〜U is the closeness relation. The formal presentation is in Def. 9, which slightly generalizes the
notion of covering numbers (Anthony & Bartlett, 2009).
Informally, the following theorem states that the number of minimal low-discrepancy mappings is
upper bounded by both the number of DPMs of a certain size over DA and over DB . This result
is useful, since DPMs are expected to be rare in real-world domains. When imagining mapping a
space to itself, in a way that preserves the distribution, one first considers symmetries. Near-perfect
symmetries are rare in natural domains, and when these occur, e.g., (Kim et al., 2017), they form well-
understood ambiguities. Another option that can be considered is that of replacing specific samples
6
Published as a conference paper at ICLR 2018
in domain B with other samples of the same probability. However, these very local discontinuous
mappings are of very high complexity, since this complexity is required for reducing the modeling
error for discontinuous functions. One can also consider replacing larger sub-domains with other
sub-domains such that the distribution is preserved. This could be possible, for example, if the
distribution within the sub-domains is almost uniform (unlikely), or if it is estimated inaccurately due
to the limitations of the training set.
We, therefore, make the following prediction.
Prediction 3. The number of DPMs of low complexity is small.
Given two domains A and B, there is a certain complexity CA0,B, which is the minimal
complexity of the networks needed in order to achieve discrepancy smaller than 0 for map-
ping the distribution DA to the distribution DB . The set of minimal complexity mappings,
i.e., mappings of complexity CA0,B that achieve 0 discrepancy is denoted by H0 (A, B) :=
h C(h) ≤ CA0,B and disc(h ◦ DA, DB) ≤ 0 . The following theorem shows that the cover-
ing number of this set is similar to the covering number of the DPMs. Therefore, if prediction 3
above holds, the number of minimal low-discrepancy mappings is small.
Theorem 1 (Informal). Let σ be a Leaky ReLU with parameter 0 < a 6= 1 and assume identifiability.
Let 0, 1 and 2 < 1 be three positive constants and A = (XA, DA) and B = (XB, DB) are two
domains. Then,
D	D、	(n(dpm6	(A;2CA,b )	, DA)
N Heo (A,B), DA ≤ min{	〉	X	(8)
'	Q	IN(DPMe0	(B；2CA,b)	T)
Proof. See Appendix D.
The theorem assumes identifiability. In the context of neural networks, the general question of
uniqueness up to invariants, also known as identifiability, is an open question. Several authors have
made progress in this area for different neural network architectures. The most notable work has
been done by Fefferman & Markel (1993) that proves identifiability for σ = tanh. Furthermore,
the representation is unique up to some invariants. Other works (Williamson & Helmke, 1995;
F. Albertini & Maillot, 1993; Kurkovg & Kainen, 2014; Sussmann, 1992) prove such uniqueness for
neural networks with only one hidden layer and various activation functions. Similarly, in Lem. 3 in
the Appendix, we show that identifiability holds for Leaky ReLU networks with one hidden layer.
5	Experiments
The first group of experiments is dedicated to test the validity of the three predictions made, in order
to give further support to the simplicity hypothesis. Next, we evaluate the success of the proposed
algorithm in comparison to the DiscoGAN method of Kim et al. (2017).
We chose to experiment with the DiscoGAN architecture since it focuses on semantic tasks that
contain a lesser component of texture or style transfer. The CycleGAN architecture of Zhu et al. (2017)
inherits much from the style transfer architecture of Pix2Pix Isola et al. (2017), and the discrepancy
term is based on a patch-based analysis, which introduces local constraints that could mask the added
freedom introduced by adding layers. In addition, the U-net architecture of Ronneberger et al. (2015)
used by Isola et al. (2017) deviates from the connectivity pattern of our model.
Experiments in this architecture and with the architecture of DualGAN (Yi et al., 2017), which
focuses on tasks similar to CycleGAN, and shares many of the architectural choices, including U-nets
and the use of patches, are left for future work.
5.1	Empirical Validation of The Predictions
Prediction 1 states that since the unsupervised mapping methods are aimed at learning minimal
complexity low discrepancy functions, GANs are sufficient. In the literature (Zhu et al., 2017; Kim
et al., 2017), learning a mapping h : XA → XB, based only on the GAN constraint on B, is presented
7
Published as a conference paper at ICLR 2018
as a failing baseline. In (Yi et al., 2017), among many non-semantic mappings obtained by the GAN
baseline, one can find images of GANs that are successful. However, this goes unnoticed.
In order to validate the prediction that a purely GAN based solution is viable, we conducted a series
of experiments using the DiscoGAN architecture and GAN loss only. We consider image domains A
and B, where XA = XB = R3×64×64.
In DiscoGAN, the generator is built of: (i) an encoder consisting of convolutional layers with 4 × 4
filters followed by Leaky ReLU activation units and (ii) a decoder consisting of deconvolutional
layers with 4 × 4 filters followed by a ReLU activation units. Sigmoid is used for the output layer.
Between four to five convolutional/deconvolutional layers are used, depending on the domains used
in A and B (we match the published code architecture per dataset). The discriminator is similar to
the encoder, but has an additional convolutional layer as the first layer and a sigmoid output unit.
The first set of experiments considers the CelebA face dataset. Transformations are learned between
the subset of images labeled as male and those labeled as female, as well as from blond to black hair
and eyeglasses to no eyeglasses. The results are shown in Fig. 3, 4, and 5, (resp.). It is evident that
the output image is highly related to the input images.
In the case of mapping handbags to shoes, as seen in Fig. 6, the GAN does not provide a meaningful
solution. However, in the case of edges to shoes and vice versa (Fig. 7), the GAN solution is
successful.
In Prediction 2, we predict that the selection of the right number of layers is crucial in unsupervised
learning. Using fewer layers than needed, will not support the modeling of the target alignment
between the domains. In contrast, adding superfluous layers would mean that more and more
alternative mappings obscure the target transformation.
In (Kim et al., 2017), 8 or 10 layers are employed (counting both convolution and deconvolution)
depending on the experiment. In our experiment, we vary the number of layers and inspect the
influence on the results. The experiments are also repeated for the Wasserstein GAN loss (using the
same architecture) in Appendix E.
These experiments were done on the CelebA gender conversion task, where 8 layers are employed in
the experiments of (Kim et al., 2017). Using the public implementation and adding and removing
layers, We obtain the results in Fig. 8- 13. Note that since the encoder and the decoder parts of the
learned network are symmetrical, the number of layers is always even. As can be seen, changing the
number of layers has a dramatic effect on the results. The best results are obtained at 6 or 8 layers
With 6 having the best alignment and 8 having better discrepancy. The results degrade quickly, as one
deviates from the optimal value. Using feWer layers, the GAN fails to produce images of the desired
class. Adding layers, the semantic alignment is lost, just as expected.
Note that Kim et al. (2017) have preferred loW discrepancy over alignment in their choice. In other
Words, the selected architecture of size k = 8 presents acceptable images at the price of loWer
alignment compared to an architecture of size k - 2. This is probably a result of ambiguity that is
already present at the size k architecture. On the other hand, the smaller architecture of size k - 2
does not produce images of extremely loW discrepancy, and there is no architecture that benefits both,
an extremely loW discrepancy and high alignment. This is observed for example in Fig. 8 Where
females are translated to males. For 4 layers the discrepancy is too loW and the mapping fails to
produce images of males. For 6 layers, the discrepancy is relatively loW and the alignment is at its
highest. For 8 layers, the discrepancy is at its loWest value, nevertheless, the alignment is Worse.
While our discrete notion of complexity seems to be highly related to the quality of the results, the
norm of the Weights do not seem to point to a clear architecture, as shoWn in Tab. 2(a). Since the
table compares the norms of architectures of different sizes, We also approximated the functions
using netWorks of a fixed depth k = 18 and then measured the norm. These results are presented in
Tab. 2(b). In both cases, the optimal depth, Which is 6 or 8, does not appear to have a be an optimum
in any of the measurements.
Prediction 3 states that there are only a handful of DPMs, except for the identity function. In order
to verify it, We trained a DiscoGAN from a distribution A to itself With an added loss of the form
- Px∈A |x - h(x)|. In our experiment, testing netWork complexities from 2 to 12, We could not find
a DPM, see Fig. 16 and Tab. 3. For loWer complexities, the identity Was learned despite the added
8
Published as a conference paper at ICLR 2018
loss. For higher complexities, the network learned the identity while changing the background color.
For even higher complexities, other mapping emerged. However, these mappings did not satisfy the
circularity constraint, and are unlikely to be DPMs.
5.2	Results for Alg. 1
The goal of Alg. 1 is to find a well-aligned solution with higher complexity than the minimal solution
and potentially smaller discrepancy. It has two stages. In the first one, k1, which is the minimal
complexity that leads to a low discrepancy, is identified. This follows a set of experiments that are
similar to the one that is captured, for example, by Fig. 2. To demonstrate robustness, we select a
single value of k1 across all experiments. Specifically, we use k1 = 6, which, as discussed above,
typically leads to a low (but not very low) discrepancy, while the alignment is still unambiguous.
Once g is trained, we proceed to the next step of optimizing a second network of complexity k2 . Note
that while the first function (g) uses the complete DiscoGAN architecture, the second network (h)
only employs a one-directional mapping, since alignment is obtained by g. Figs. 21- 29 depict the
obtained results, for a varying number of layers. First, the result obtained by the DiscoGAN method
with k1 is displayed. The results of applying Alg. 1 are then displayed for a varying k2.
As can be seen, our algorithm leads to more sophisticated mappings. Kim et al. (2017) have noted
that their solutions are, at many times, related to texture or style transfer and, for example, geometric
transformations are not well captured. The new method is able to better capture such complex
transformations. Consider the case of mapping male to female in Fig. 20, first row. A man with a
beard is mapped to a female image. While for g the beard is still somewhat present, it is not so for
h with k2 > k1 . On the female to male mappings in Fig. 21 it is evident in most mappings that g
produces a more blurred image, while h is more coherent for k2 > k1 . Another example is in the
blond to black hair mapping in Fig. 22. In the 5th row, the style transfer nature of g is evident, since it
maps a red object behind the head together with the whole blond hair, producing an unrealistic black
hair. h of complexity k2 = 8 is able to separate that object from the hair, and in k2 > 8 it produces
realistic looking black hair. This kind of transformation requires more than a simple style transfer.
On the edges to shoes and edges to handbags mappings of Fig. 26 and Fig. 28, while the general
structure is clearly present, it is significantly sharpened by mapping h with k2 > k1.
For the face datasets, we also employ face descriptors in order to learn whether the mapping is
semantic. Namely, we can check if the identity is preserved post mapping by comparing the VGG
face descriptors of Parkhi et al. (2015). One can assume that two images that match will have many
similar features and so the VGG representation will be similar. The cosine similarities are used, as is
commonly done.
In addition, we train a linear classifier in the space of the VGG face descriptors in order to distinguish
between Male/Female, Eyeglasses/No-eyeglasses, and Blond/Black. This way, we can check, beyond
discrepancy, that the mapping indeed transforms between the domains. The training samples in
domains A and B are used to train this classifier, which is then applied to a set of test images before
and after mapping, measuring the accuracy. The higher the accuracy, the better the separation.
Tab. 4 presents the results for both the k1 layers network g, alternative networks g of higher complexity
(shown as baseline only), and the network h trained using Alg. 1. We expect the alignment of g to
be best at complexity k1, and worse due to the loss of discrepancy for alternative network g with
complexity k > k1 . We expect this loss of alignment to be resolved for networks h trained with
Alg. 1.
In the experiments of black to blond hair and blond to black hair mappings, we note that h with
k2 = 8 has the best descriptor similarity, and very good separation accuracy and discrepancy. Higher
values of k2 are best in terms of separation accuracy and discrepancy, but lose somewhat in descriptor
similarity. A similar situation occurs for male to female and female to male mappings and in
eyeglasses to non-eyeglasses, where k2 = 8 results in the best similarity score and higher values of
k2 result in better separation accuracy and discrepancy.
It is interesting to note, that the distance between g and h is also minimal for k2 = 8. Perhaps, with
more effective optimization, higher complexities could also maintain similarity, while delivering
lower discrepancies.
9
Published as a conference paper at ICLR 2018
6	Discussion
Our stratified complexity model is related to structural risk minimization (SRM) by Vapnik &
Chervonenkis (1971a), which employs a hierarchy of nested subsets of hypothesis classes in order of
increasing complexity. In our stratification, which is based on the number of layers, the complexity
classes are not necessarily nested. A major emphasis in SRM is the dependence on the number of
samples: the algorithm selects the hypothesis from one of the nested hypothesis classes depending
on the amount of training data. In our case, one can expect higher values of k2 to be beneficial as
the number of training samples grows. However, the exact characterization of this relation is left for
future work.
Alg. 1 can be seen as a form of distillation. The first step of the algorithm finds the minimal complexity
for mapping between the two domains and obtains the first generator. Then, a second generator, with
a large complexity, is trained while being encouraged to output images which are close to the output
of the first generator. This resembles the distillation methods proposed by Hinton et al. (2015) and
later analyzed by Hand & Voroninski (2017).
Since the method depicted in Alg. 1 optimizes, among other things, the architecture of the network, our
method is somewhat related to work that learn the network’s structure during training, e.g., (Saxena
& Verbeek, 2016; Wen et al., 2016; Liu et al., 2015; Feng & Darrell, 2015; Lebedev & Lempitsky,
2016). This body of work, which deals exclusively with supervised learning, optimizes the networks
loss by modifying both the parameters and the hyperparameters. For GAN based loss, this would not
work, since with more capacity, one can reduce the discrepancy but quickly lose the alignment.
Indeed, we point to a key difference between supervised learning and unsupervised learning. While
in the former, deeper networks, which can learn even random labels, work well (Zhang et al., 2017),
unsupervised learning requires a careful control of the network capacity. This realization, which
echoes the application of MDL for model selection in unsupervised learning (Zemel, 1994), was
overshadowed by the overgeneralized belief that deeper networks lead to higher accuracy.
The limitations of unsupervised based learning that are due to symmetry, are also a part of our model.
For example, the mapping of cars in one pose to cars in the mirrored pose that sometimes happens
in (Kim et al., 2017), is similar in nature to the mapping of x to 1 - x in the simple example given in
Sec. 3.1. Such symmetries occur when we can divide yAB into two functions yAB = y2 ◦ y1 such
that a function W is a linear mapping and also a DPM of y1 ◦ DA and, therefore, DB ≈ y2 ◦ W ◦ y1 .
While we focus on unsupervised learning, the emergence of semantics when learning with a restricted
capacity is widely applicable, such as with autoencoders, transfer learning, semi-supervised learning
and elsewhere. As an extreme example, Sutskever et al. (2015) present empirical evidence that a
meaningful mapper can be learned, even from very few examples, if the network trained is kept small.
7	Conclusion
The recent success in mapping between two domains in an unsupervised way and without any existing
knowledge, other than network hyperparameters, is nothing less than extraordinary and has far
reaching consequences. As far as we know, nothing in the existing machine learning or cognitive
science literature suggests that this would be possible.
We provide an intuitive definition of function complexity and employ it in order to identify minimal
complexity mappings, which we conjecture play a pivotal role in this success. If our hypothesis is
correct, simply by training networks that are not too complex, the target mapping stands out from all
other alternative mappings.
Our analysis leads directly to a new unsupervised cross domain mapping algorithm that is able
to avoid the ambiguity of such mapping, yet enjoy the expressiveness of deep neural networks.
The experiments demonstrate that the analogies become richer in details and more complex, while
maintaining the alignment.
We show that the number of low-discrepancy mappings that are of low-complexity is expected to
be small. Our main proof is based on the assumption of identifiability, which constitutes an open
question. We hope that there would be a renewed interest in this problem, which has been open for
10
Published as a conference paper at ICLR 2018
decades for networks with more than a single hidden layer and is unexplored for modern activation
functions.
Acknowledgments
This project has received funding from the European Research Council (ERC) under the European
Union’s Horizon 2020 research and innovation programme (grant ERC CoG 725974). The authors
would like to thank Etai Littwin, MoustaPha Cisse, Leon Bottou, Arthur Szlam, and Ofir Yakovian for
insightful discussions. The contribution of Tomer Galanti is part of Ph.D. thesis research conducted
at Tel Aviv University.
References
Martin Anthony and Peter L. Bartlett. Neural Network Learning: Theoretical Foundations. Cambridge
University Press, New York, NY, USA, 1st edition, 2009. ISBN 052111862X, 9780521118620.
Martin Arjovsky, Soumith Chintala, and Leon Bottou. Wasserstein generative adversarial networks.
In International Conference on Machine Learning, pp. 214-223, 2017.
Peter L. Bartlett and Shahar Mendelson. Rademacher and gaussian comPlexities: Risk bounds and
structural results. J. Mach. Learn. Res., 3:463-482, March 2003.
Xi Chen, Yan Duan, Rein Houthooft, John Schulman, Ilya Sutskever, and Pieter Abbeel. InfoGAN:
Interpretable representation learning by information maximizing generative adversarial nets. In
NIPS. 2016.
Alexey Dosovitskiy and Thomas Brox. Inverting visual representations with convolutional networks.
In The IEEE Conference on Computer Vision and Pattern Recognition (CVPR), June 2016.
E.D. Sontag F. Albertini and V. Maillot. Uniqueness of weights for neural networks. In R. Mammone,
editor, Artificial Neural Networks for Speech and Vision, 1993.
Charles Fefferman and Scott Markel. Recovering a feed-forward net from its output. In NIPS, 1993.
J. Feng and T. Darrell. Learning the structure of deep convolutional networks. In 2015 IEEE
International Conference on Computer Vision (ICCV), pp. 2749-2757, Dec 2015. doi: 10.1109/
ICCV.2015.315.
Yaroslav Ganin, Evgeniya Ustinova, Hana Ajakan, Pascal Germain, Hugo Larochelle, FrangOiS
Laviolette, Mario Marchand, and Victor Lempitsky. Domain-adversarial training of neural networks.
J. Mach. Learn. Res., 17(1):2096-2030, 2016.
Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair,
Aaron Courville, and Yoshua Bengio. Generative adversarial nets. In NIPS, pp. 2672-2680. 2014.
Paul Hand and Vladislav Voroninski. Global guarantees for enforcing deep generative priors by
empirical risk. CoRR, abs/1705.07576, 2017.
Geoffrey Hinton, Oriol Vinyals, and Jeffrey Dean. Distilling the knowledge in a neural network. In
NIPS Deep Learning and Representation Learning Workshop, 2015.
Phillip Isola, Jun-Yan Zhu, Tinghui Zhou, and Alexei A Efros. Image-to-image translation with
conditional adversarial networks. In CVPR, 2017.
Taeksoo Kim, Moonsu Cha, Hyunsoo Kim, Jungkwon Lee, and Jiwon Kim. Learning to discover
cross-domain relations with generative adversarial networks. arXiv preprint arXiv:1703.05192,
2017.
Vera KUrkOVg and Paul C. Kainen. Comparing fixed and variable-width gaussian networks. Neural
Networks, 2014.
Vadim Lebedev and Victor Lempitsky. Fast convnets using group-wise brain damage. In The IEEE
Conference on Computer Vision and Pattern Recognition (CVPR), June 2016.
11
Published as a conference paper at ICLR 2018
Baoyuan Liu, Min Wang, Hassan Foroosh, Marshall Tappen, and Marianna Pensky. Sparse convolu-
tional neural networks. In Proceedings of the IEEE Conference on Computer Vision and Pattern
Recognition, pp. 806-814, 2015.
Andrew L Maas, Awni Y Hannun, and Andrew Y Ng. Rectifier nonlinearities improve neural network
acoustic models. In in ICML Workshop on Deep Learning for Audio, Speech and Language
Processing, 2013.
O. M. Parkhi, A. Vedaldi, and A. Zisserman. Deep face recognition. In British Machine Vision
Conference, 2015.
Alec Radford, Luke Metz, and Soumith Chintala. Unsupervised representation learning with deep
convolutional generative adversarial networks. arXiv preprint arXiv:1511.06434, 2015.
O. Ronneberger, P.Fischer, and T. Brox. U-net: Convolutional networks for biomedical image
segmentation. In Medical Image Computing and Computer-Assisted Intervention (MICCAI),
volume 9351 of LNCS, pp. 234-241. Springer, 2015. (available on arXiv:1505.04597 [cs.CV]).
Shreyas Saxena and Jakob Verbeek. Convolutional Neural Fabrics. In Advances in Neural Information
Processing Systems (NIPS), Barcelona, Spain, December 2016.
Shai Shalev-Shwartz and Shai Ben-David. Understanding Machine Learning: From Theory to
Algorithms. Cambridge University Press, New York, NY, USA, 2014. ISBN 1107057132,
9781107057135.
Hector J. Sussmann. Uniqueness of the weights for minimal feedforward nets with a given input-
output map. Neural Networks, 1992.
Ilya Sutskever, Rafal Jdzefowicz, Karol Gregor, Danilo Jimenez Rezende, Timothy P. Lillicrap, and
Oriol Vinyals. Towards principled unsupervised learning. arXiv preprint arXiv:1511.06440, 2015.
V. N. Vapnik and A. Y. Chervonenkis. On the uniform convergence of relative frequencies of events
to their probabilities. Theory of Probab. and its Applications, 16(2):264-280, 1971a.
V. N. Vapnik and A. Ya. Chervonenkis. On the uniform convergence of relative frequencies of events
to their probabilities. Theory of Probability and its Applications, 16(2):264-280, 1971b.
Wei Wen, Chunpeng Wu, Yandan Wang, Yiran Chen, and Hai Li. Learning structured sparsity in
deep neural networks. In Advances in Neural Information Processing Systems, pp. 2074-2082,
2016.
Robert C. Williamson and Uwe Helmke. Existence and uniqueness results for neural network
approximations. IEEE Trans. Neural Networks, 6(1):2-13, 1995.
Yingce Xia, Di He, Tao Qin, Liwei Wang, Nenghai Yu, Tie-Yan Liu, and Wei-Ying Ma. Dual learning
for machine translation. arXiv preprint arXiv:1611.00179, 2016.
Zili Yi, Hao Zhang, Ping Tan, and Minglun Gong. Dualgan: Unsupervised dual learning for
image-to-image translation. arXiv preprint arXiv:1704.02510, 2017.
Richard S Zemel. A minimum description length framework for unsupervised learning. University of
Toronto, 1994.
Chiyuan Zhang, Samy Bengio, Moritz Hardt, Benjamin Recht, and Oriol Vinyals. Understanding
deep learning requires rethinking generalization. In ICLR, 2017.
Jun-Yan Zhu, Taesung Park, Phillip Isola, and Alexei A Efros. Unpaired image-to-image translation
using cycle-consistent adversarial networkss. arXiv preprint arXiv:1703.10593, 2017.
12
Published as a conference paper at ICLR 2018
Table 1: Comparing the VGG descriptor similarity, separation accuracy and discrepancy for varying
complexity k
		k=4	k=6	k=8	k = 10	k = 12	k = 14
Male to Female	Discrepancy	0.527	0.203	0.091	0.094	0.083	0.086
	Similarity	0.301	0.269	0.103	0.106	0.089	0.100
	Separation	0.938	0.932	0.940	0.940	0.940	0.938
Female to Male	Discrepancy	0.882	0.122	0.150	0.075	0.076	0.091
	Similarity	0.303	0.260	0.110	0.105	0.093	0.100
	Separation	0.798	0.865	0.860	0.87	0.857	0.866
Blond to Black Hair	Discrepancy	0.467	0.214	0.092	0.097	0.094	0.081
	Similarity	0.365	0.287	0.240	0.106	0.091	0.0870
	Separation	0.903	0.925	0.922	0.917	0.922	0.923
Black to Blond Hair	Discrepancy	0.663	0.264	0.073	0.094	0.084	0.076
	Similarity	0.337	0.270	0.240	0.106	0.087	0.085
	Separation	0.941	0.941	0.911	0.916	0.915	0.917
Eyeglasses to Non-Eyeglasses	Discrepancy	0.323	0.159	0.071	0.082	0.083	0.081
	Similarity	0.470	0.391	0.347	0.114	0.125	0.146
	Separation	0.786	0.785	0.828	0.843	0.849	0.828
Non Eyeglasses to Eyeglasses	Discrepancy	0.577	0.518	0.236	0.263	0.093	0.085
	Similarity	0.452	0.373	0.364	0.105	0.108	0.127
	Septation	0.748	0.749	0.766	0.848	0.832	0.840
Table 2: (a) Norms of the various mappings h for mapping Males to Females using the DiscoGAN
architecture. (b) Norms of 18-layer networks that approximates the mappings obtained with a varying
number of layers.
Norm	—— 4		Number of layers				
		6	8	10	12
A to B L1 norm	6382	23530	36920	44670	71930
Average L1 norm per layer	1064	2353	2637	2482	3270
L2 norm	18.25	29.24	28.44	31.72	36.57
Average L2 norm per layer	7.084	8.353	7.154	6.708	7.009
B to A L1 norm	6311	21240	31090	37380	64500
Average L1 norm per layer	1052	2124	2221	2077	2932
L2 norm	18.36	26.79	25.85	28.36	34.99
Average L2 norm per layer	7.161	7.757	6.552	6.058	6.771
(a)
Norm	— 4		Number of layers				
		6	8	10	12
A to B L1 norm	317200	228700	356500	247200	164200
Average L1 norm per layer	9329	6726	10485	7271	4829
L2 norm	528.1	401.7	559.6	410.1	346.8
Average L2 norm per layer	3.031	2.284	3.242	2.257	1.890
B to A L1 norm	316900	194500	353900	171500	228900
Average L1 norm per layer	9323	5719	10410	5045	6733
L2 norm	523.2	375.9	555.7	346.5	373.3
Average L2 norm per layer	3.003	2.029	3.210	1.921	2.289
(b)
13
Published as a conference paper at ICLR 2018
Table 3: Seeking DPMs: the distance from the identity and the discrepancy (GAN loss) for various
numbers of layers, where training a DiscoGAN from a dataset to itself.
Dataset	loss	———- Number of layers: ———-					
		4	6	8	10	12	14
Males	Px∈A |x - h(x)|	0.09	0.42	0.45	0.45	0.45	0.45
	Discrepancy	0.37	0.60	0.27	0.20	0.17	0.10
Females	Px∈A |x - h(x)|	0.06	0.36	0.43	0.42	0.44	0.45
	Discrepancy	0.32	0.40	0.15	0.11	0.11	0.11
Handbags	Px∈A |x - h(x)|	0.10	0.28	0.37	0.37	0.38	0.37
	Discrepancy	0.13	0.28	0.24	0.14	0.15	0.20
Shoes	Px∈A |x - h(x)|	0.06	0.15	0.29	0.30	0.30	0.30
	Discrepancy	0.15	0.28	0.20	0.15	0.10	0.10
Edges of handbags	Px∈A |x - h(x)|	0.28	0.55	0.51	0.52	0.50	0.49
	Discrepancy	0.18	0.28	0.58	0.47	0.40	0.35
Edges of shoes	Px∈A |x - h(x)|	0.23	0.50	0.59	0.55	0.49	0.43
	Discrepancy	0.17	0.21	0.65	0.46	0.45	0.45
14
Published as a conference paper at ICLR 2018
(a)
Input
(b)
Output
(Male to female)
(Female to male)
Figure 3: Results for celebA Male to Female transfer (a) Input (b) The mapping obtained by the
GAN loss without additional losses.
(a)
Input
(b)
Output
(Blond to black hair)
(Black to blond hair)
Figure 4: Same as Fig. 3 for black to blond hair conversion.
(a)
Input
(b)
Output
(With to without eyeglasses)
(Without to with eyeglasses)
Figure 5: Same as Fig. 3 for eyeglasses to no eyeglasses conversion.
(a)
Input
(b)
Output
(Handbags to shoes)
(Shoes to handbags)
Figure 6: Same as Fig. 3 for handbag to shoes and shoes to handbag mapping.
-W	图"
Outpu/ Jl j d”6⅜⅛&行 J:
(Edges to shoes)	(Shoes to edges)
Figure 7: Same as Fig. 3 for edges to shoes and shoes to edges conversion.
15
Published as a conference paper at ICLR 2018
Table 4: Results for Alg. 1 for different datasets. VGG Similarity is given in the first column. The
second column gives the separation value using the linear classifier. In the third column, we measure
the discrepancy of the mapping. The last column provides the distance of h to g, where applicable.
Dataset	f	Complexity		Descriptor Similarity	Separation Accuracy	Discrepancy disc(f ◦ DA, DB)	Distance RDA [h, g]
Male to Female	g	k1	=6	0.267	0.928	0.230	-
	g	k	8	0.280	0.938	0.077	-
	g	k=	10	0.106	0.940	0.094	-
	g	k=	12	0.089	0.940	0.083	-
	h	k2	=8	0.316	0.933	0.087	0.054
	h	k2 =	10	0.204	0.937	0.109	0.075
	h	k2 =	12	0.197	0.941	0.127	0.077
Female to Male	g	k1	=6	0.268	0.848	0.310	-
	g	k	8	0.260	0.848	0.107	-
	g	k=	10	0.105	0.870	0.075	-
	g	k=	12	0.093	0.857	0.076	-
	h	k2	=8	0.304	0.878	0.107	0.056
	h	k2 =	10	0.215	0.884	0.082	0.083
	h	k2 =	12	0.214	0.883	0.073	0.082
Blond to	g	k1	=6	0.287	0.925	0.214	-
Black Hair	g	k	8	0.24	0.922	0.092	-
	g	k=	10	0.106	0.917	0.097	-
	g	k=	12	0.091	0.922	0.094	-
	h	k2	=8	0.293	0.926	0.136	0.152
	h	k2 =	10	0.197	0.926	0.225	0.161
	h	k2 =	12	0.199	0.928	0.092	0.161
Black to	g	k1	=6	0.270	0.941	0.264	-
Blond Hair	g	k	8	0.24	0.911	0.073	-
	g	k=	10	0.106	0.916	0.094	-
	g	k=	12	0.087	0.915	0.084	-
	h	k2	=8	0.287	0.938	0.077	0.146
	h	k2 =	10	0.179	0.946	0.165	0.149
	h	k2 =	12	0.180	0.952	0.168	0.152
Eyeglasses to							
Non-Eyeglasses	g	k1	=6	0.391	0.785	0.159	-
	g	k	8	0.347	0.828	0.071	-
	g	k=	10	0.114	0.843	0.082	-
	g	k=	12	0.125	0.849	0.083	-
	h	k2	=8	0.391	0.786	0.097	0.058
	h	k2 =	10	0.283	0.847	0.180	0.083
	h	k2 =	12	0.274	0.860	0.148	0.081
Non-Eyeglasses							
to Eyeglasses	g	k1	=6	0.373	0.749	0.518	-
	g	k	8	0.364	0.766	0.236	-
	g	k=	10	0.105	0.848	0.263	-
	g	k=	12	0.108	0.832	0.093	-
	h	k2	=8	0.389	0.780	0.300	0.063
	h	k2 =	10	0.272	0.807	0.370	0.083
	h	k2 =	12	0.282	0.803	0.409	0.081
16
Published as a conference paper at ICLR 2018
Figure 8: Results for celebA Male to Female transfer for networks with different number of layers.
17
Published as a conference paper at ICLR 2018
Figure 9: Results for celebA Female to Male transfer for networks with different number of layers.
The case of 4 layers failed to produce acceptable results.
18
Published as a conference paper at ICLR 2018
Figure 10: Results for celebA Blond to Black Hair transfer for networks with different number of
layers.
19
Published as a conference paper at ICLR 2018
Figure 11: Results for celebA Black Hair to Blond transfer for networks with different number of
layers.
20
Published as a conference paper at ICLR 2018
Number of layers: ———————-
Figure 12: Results for celebA Eyeglasses to Non-Eyeglasses transfer for networks with different
number of layers.
21
Published as a conference paper at ICLR 2018
Number of layers: ———————-
Figure 13: Results for celebA Non-Eyeglasses to Eyeglasses transfer for networks with different
number of layers.
22
Published as a conference paper at ICLR 2018
Input
Number of layers:
Figure 14:	Results for mapping Males to itself (B=A) using a DiscoGAN architecture and enforcing
that the mapping is not the identity mapping. The odd rows present the learned mapping h, and the
even rows present the full cycle h0 ◦ h.
23
Published as a conference paper at ICLR 2018
Input
Number of layers:
Figure 15:	Results for mapping the Females to itself (B=A) using a DiscoGAN architecture and
enforcing that the mapping is not the identity mapping. The odd rows present the learned mapping h,
and the even rows present the full cycle h0 ◦ h.
24
Published as a conference paper at ICLR 2018
Input
Number of layers:
Figure 16:	Results for mapping shoe edges to itself (B=A) using a DiscoGAN architecture and
enforcing that the mapping is not the identity mapping. The odd rows present the learned mapping h,
and the even rows present the full cycle h0 ◦ h.
25
Published as a conference paper at ICLR 2018
Number of layers:
Figure 17:	Results for mapping handbag edges to itself (B=A), using a DiscoGAN architecture and
enforcing that the mapping is not the identity mapping. The odd rows present the learned mapping h,
and the even rows present the full cycle h0 ◦ h.
26
Published as a conference paper at ICLR 2018
Number of layers:
Input
4
6
8
10
12
14
op
h ◦ h
h ◦ h
h ◦ h
h ◦ h
h ◦ h
Figure 18:	Results for mapping handbags to itself (B=A), using a DiscoGAN architecture and
enforcing that the mapping is not the identity mapping. The odd rows present the learned mapping h,
and the even rows present the full cycle h0 ◦ h.
27
Published as a conference paper at ICLR 2018
h ◦ h
h
h ◦ h
Figure 19:	Results for mapping shoes to itself (B=A) using a DiscoGAN architecture and enforcing
that the mapping is not the identity mapping. The odd rows present the learned mapping h, and the
even rows present the full cycle h0 ◦ h.
28
Published as a conference paper at ICLR 2018
g of
h of complexity:
Figure 20:	Results for Alg. 1 on Male2Female dataset for mapping male to female. Shown is a
minimal complexity mapping g that has low discrepancy, and various mappings h obtained by the
method.
29
Published as a conference paper at ICLR 2018
Figure 21:	Results for Alg. 1 on Male2Female dataset for mapping female to male. Shown is a
minimal complexity mapping g that has low discrepancy, and various mappings h obtained by the
method.
30
Published as a conference paper at ICLR 2018
g of ————- h of complexity: ————-
Input k1 = 6	k2 = 8	k2 = 10	k2 = 12

Figure 22:	Results for Alg. 1 on celebA dataset for mapping blond to black. Shown is a minimal
complexity mapping g that has low discrepancy, and various mappings h obtained by the method.
31
Published as a conference paper at ICLR 2018
Figure 23: Results for Alg. 1 on celebA dataset for mapping black to blond. Shown is a minimal
complexity mapping g that has low discrepancy, and various mappings h obtained by the method.
32
Published as a conference paper at ICLR 2018
Input
g of-----------------h of complexity:----------
k1 = 6	k2 = 8	k2 = 10 k2 = 12
Figure 24:	Results for Alg. 1 on Eyeglasses dataset for mapping eyeglasses to no eyeglasses. Shown
is a minimal complexity mapping g that has low discrepancy, and various mappings h obtained by
the method.
33
Published as a conference paper at ICLR 2018
Figure 25:	Results for Alg. 1 on Eyeglasses dataset for mapping no eyeglasses to eyeglasses. Shown
is a minimal complexity mapping g that has low discrepancy, and various mappings h obtained by
the method.
34
Published as a conference paper at ICLR 2018
g of
Input
- h of complexity:
k2
OtiiaiaflBW
Figure 26:	Results for Alg. 1 on Edges2Handbags dataset for mapping edges to handbags. Shown is
a minimal complexity mapping g that has low discrepancy, and various mappings h obtained by the
method.
35
Published as a conference paper at ICLR 2018
Input
g of -------------------------h of complexity:---------------
k1 = 6	k2 = 8 k2 = 10	k2 = 12	k2 = 14
Figure 27:	Results for Alg. 1 on Edges2Handbags dataset for mapping handbags to edges. Shown
are a minimal complexity mapping g that has low discrepancy, and various mappings h obtained by
the method.
36
Published as a conference paper at ICLR 2018
Input
g of	—————- h of complexity: —————-
k1 = 6	k2 = 8	k2 = 10	k2 = 12 k2 = 14
Figure 28:	Results for Alg. 1 on Edges2Shoes dataset for mapping edges to shoes. Shown are a
minimal complexity mapping g that has low discrepancy, and various mappings h obtained by the
method.
37
Published as a conference paper at ICLR 2018
Input
g of -------------------------h of complexity:---------------
k1 = 6	k2 = 8 k2 = 10	k2 = 12	k2 = 14
Figure 29:	Results for Alg. 1 on Edges2Shoes dataset for mapping shoes to edges. Shown are a
minimal complexity mapping g that has low discrepancy, and various mappings h obtained by the
method.
38
Published as a conference paper at ICLR 2018
A A Generalized and Formal S tatement of the Results
For brevity, we have not presented our results in the most general way. For example, in Def. 1, we
did not bound the complexity of the discriminators. For the same reason, some of our terms were
described and not yet formally defined.
A.1 A Complexity Measure for Functions
In order to model the composition of neural networks, we define a complexity measurement that
assigns a value based on the number of simple functions that make up a complex function.
Definition 3 (Stratified complexity model (SCM)). A stratified complexity model N := SCM[C] is a
hypothesis class of functions p : RM → RM specified by a set of functions C. Every function p in N
has an appropriate decomposition:
•	N = Sn∞=0 Cn (where, Cn = {pn ◦ ... ◦ p1|p1, ..., pn ∈ C} andC0 = {Id}).
•	Every function in C is invertible.
A SCM partitions a set of invertible functions into disjoint complexity classes,
C0 := p ∈ N ∀ n ∈ N, q ∈ Cn : p ◦ q, q ◦ p, p-1 ◦ q, q ◦ p-1 ∈ Cn
n-1	(9)
Cn :=Cn \	Ci ∪C0
i=0
When considering simple functions pi that are layers in a neural network, each complexity class
contains the functions that are implemented by networks of n hidden layers. In addition, we denote
the complexity of a function p:
C(p) :=	arg {p ∈ Cn}	(10)
n∈N∪{0}
If the complexity of a function p equals n, then any appropriate decomposition p = pn ◦ ... ◦ p1 will
be called a minimal decomposition of p. According to this measurement, the complexity of a function
p is determined by the minimal number of primitive functions required in order to represent it.
In this work, we focus our attention on SCMs that represent the architectures of fully connected
neural networks with layers of a fixed size, i.e.,
Definition 4 (NN-SCM). A NN-SCM is a SCMN = SCM[C] that satisfies the following conditions:
•	C = { W2 O σ O W1∣W1,W2 ∈ RM×M and W1,W2 are invertible}. Here, W1, W2 denote
both linear transformations and the associated matrix forms.
•	σ is a non-linear element-wise activation function.
For brevity, we denote N := SCM[σ] to refer to a NN-SCM with the activation function σ.
The NN-SCM with the Leaky ReLU activation function is of a particular interest, since (Kim
et al., 2017; Zhu et al., 2017) employ it as the main activation function (plain ReLUs and tanh
are also used). In the NN-SCM framework, to specify the function obtained by a decomposition
Wn O σ O Wn-1 O σ O ... O σ O W1 we simply write:
F [Wn , ..., W1 ] := Wn O σ O Wn-1 O σ O ... O σ O W1	(11)
It is useful to characterize the effect of inversion on the complexity of functions, since, for example,
we consider both h0 = Π O h and h = Π-1 O h0. The following lemma states that, in the case of
NN-SCM with σ that is the Leaky ReLU, the complexity of the inverse function is the same as that of
the original function.
Lemma 1. LetN = SCM[σ] be a NN-SCM with σ that is the Leaky ReLU with parameter 0 < a 6= 1.
Then, for any u ∈ N, C(u-1) = C (u).
39
Published as a conference paper at ICLR 2018
Proof. First, we denote C0 (p) the minimal number n such that there are invertible linear mappings
W1, ..., Wn+1 such that p = F [Wn+1, ..., W1] (if p = Id then C0(p) = 0). This complexity
measure is similar to the complexity measure C. For a function p such that C(p) 6= 0, we have,
C(p) = C0(p). Nevertheless, for p such that C(p) = 0, it is not necessarily true that C0(p) = 0.
For example, if p 6= Id is an invertible linear mapping, we have, C(p) = 0 and C0 (p) = 2. Let
p = F [W2, W1] = W2 ◦ σ ◦ W1 be any function such that C(p) = 1. We consider that:
σ-1 = -Id ◦ σ ◦ -Id/a = F [-Id, -Id/a]	(12)
Therefore,
F [W2, Wi ]-1 = -W-1 ◦ σ ◦ -W-1∕a = F [-W-1, -W-1∕a]	(13)
In particular, C0(p-1) ≤ 1. If C0(p-1) = 0, then, Id = -W1-1 ◦ σ ◦ -W2-1/a and, therefore, σ is a
linear mapping - in contradiction. Thus, C0(p-1) = 1.
Next, we would like to show that for any u ∈ N, C0(u-1) = C0(u). Let u such that C0 (u) = 0.
Then, u = u-1 = Id and therefore, C0(u-1) = 0. Let u = F[Wn+1, ..., W1] be a function such that
C0 (u) = n > 0. Then,
U = F [Wn+i,Wn] ◦ F [Id, Wn-i] ◦…◦ F [Id, Wi ]	(14)
In particular,
u-1 = F [Id, W1]-1 ◦... ◦ F [Id, Wn-1]-1 ◦ F [Wn+1, Wn]-1	(15)
or,
u-1 = F[-W1-1,W2-1/a,...,Wn-1/a,-Wn-+11/a]	(16)
Therefore, by Lem. 7,
C0(u-1) ≤C0(F[Id,W1]-1)+...+C0(F[Id,Wn-1]-1)+C0(F[Wn+1,Wn]-1)=n (17)
On the other hand, if v = u-1, n = C0 (u) = C0(v-1) ≤ C0 (v) = C0(u-1) ≤ n and C0(u-1) =
C0(u). Finally, we would like to show that for every u ∈ N, we have: C(u-1) = C(u). If C(u) = 0,
then, by Lem. 11, C(u-1) = 0. On the other hand, if C(u) 6= 0, then, by Lem. 11, C(u-1) 6= 0 and
by the above: C(U) = C0(u) = C0(u-i) = C(U).	□
A.2 Minimal Complexity Mappings
Based on our simplicity hypothesis, we present a definition of a minimal complexity mapping that is
both intuitive and well-defined in concrete complexity terms. Given two distributions DA and DB,
a minimal complexity mapping f : XA → XB between domains A and B is a mapping that has
minimal complexity among the functions h : XA → XB that satisfy h ◦ DA ≈ DB .
Consider, again, the example of a line segment in RM (Sec. 3.1) and the semantic space of the
interval, [0, 1] ⊂ R. The two linear mappings, which map either segment ends to 0 and the other to 1
are minimal, when using f that are ReLU based neural networks. Other mappings to this segment are
possible, simply by permuting points on the segment in RM. However, these alternative mappings
have higher complexity, since the two mappings above are the only ones with the minimal possible
complexity.
In order to measure the distance between h ◦ DA and DB, we use the discrepancy distance, discD.
In this work, we focus on classes of discriminators D of the form Dm := {U|C(U) ≤ m} for some
m ∈ N. In addition, for simplicity, we will write discm := discDm.
Definition 5 (Minimal complexity mappings). Let N = SCM[C]. Let A = (XA, DA) and B =
(XB, DB) be two domains. We define the (m, 0)-minimal complexity between A and B as:
CAm,B0 := min {∃h s.t C(h) = i and discm(h ◦ DA, DB) ≤ 0}	(18)
A,B	i∈N∪{0}
The set of (m, 0)-minimal complexity mappings between A and B is:
Heo(A, B; m) ：= {"C(h) ≤ CAB anddiscm(h◦ Da,Db) ≤ s}	(19)
40
Published as a conference paper at ICLR 2018
We note that for any fixed 0 > 0, the sequence {CAm,,B0}m∞=0 is monotonically increasing as m tends
to infinity. In addition, we assume that for every two distributions of interest, DI and DJ, and an error
rate 0 > 0, there is a function h of finite complexity such that disc∞ (h ◦ DI , DJ) ≤ 0 . Therefore,
the sequence {CAm,,B0 }m∞=0 is upper bounded by C(h) for all m ∈ N ∪ {0}. In particular, there is a
minimal value m0 > 0 such that CAm,,B0 = CAm,0B,0 for all m ≥ m0. We denote: EA0,B := m0 and
CA0B := CAm0B,0. For simplicity, sometimes we will assume that m = ∞. In this case, we will write
Heo (A,B):= Heo (A, B; ∞).
A.3 Identifiability
Every neural network implementation gives rise to many alternative implementations by performing
simple operations, such as permuting the units of any hidden layer, and then permuting back as part
of the linear mapping in the next layer. Therefore, it is first required to identify and address the set of
transformations that could be inconsequential to the function which the network computes.
Definition 6 (Invariant set). LetN = SCM[σ] be a NN-SCM. The invariant set Invariant(N) is the
set of all τ : RM → RM that satisfy the following conditions:
•	τ : RM → RM is an invertible linear transformation.
•	σ ◦ τ = τ ◦ σ.
Functions in Invariant(N) are called invariants or invariant functions.
For example, for neural networks with the tanh activation function, the set of invariant functions
contains the linear transformations that take vectors, permute them and multiply each coordinate by
±1. Formally, each T = [s ∙ e∏(i),..., EM ∙ e∏(M)] where ei is the i,th standard basis vector, ∏ is a
permutation over [M] and i ∈ {±1} (Fefferman & Markel, 1993).
In the following lemma, we characterize the set of all invariant functions for σ that is Leaky ReLU
with parameter 0 < a 6= 1.
Lemma 2. Let N = SCM[σ] with σ be Leaky ReLU with parameter 0 < a 6= 1. Then,
Invariant(N) = {τ ∈ RM×m ∣ τ = [ci ∙ e∏(i),…,CM ∙ e∏(M)], where ∀i ∈ [M] : Ci > 0 and π ∈ SymM}
(20)
Here, ei denotes the i’th standard basis vector in RM and SymM is the set of permutations of [M].
Proof. Let τ be an invertible linear mapping satisfying σ ◦ τ = τ ◦ σ. We consider that for all
i ∈ [M] and vector x; σ(hτi, xi) = hτi, σ(x)i, where τi is the i’th row of τ and τi,j is the (i, j) entry
of τ . For x = ej , we have:
τi,j = σ(τi,j)	(21)
For x = -ej , we have:
-aτi,j = σ(-τi,j)	(22)
If τi,j < 0, then the first equation leads to contradiction. Otherwise, the equations are both satisfied.
Finally, for x = ej - ek, we have:
τi,j - aτi,k = σ(τi,j - τi,k)	(23)
If τi,j - τi,k = 0, then, τi,j-aτi,k = 0 and since a 6= 1, 0, we have, τi,j = τi,k = 0. Ifτi,j-τi,k ≥ 0,
then, τi,j - τi,k = τi,j - aτi,k that gives τi,k = 0. If τi,j - τi,k ≤ 0, then, a(τi,j - τi,k ) = τi,j - aτi,k
that yields τi,j = 0. Therefore, for each i ∈ [M] there is at most one entry τi,j that is not 0. If for all
j ∈ [M], τi,j = 0, then the mapping τ is not invertible, in contradiction. Therefore, for each i ∈ [M]
there is exactly one entry τi,j > 0 (it is non-negative as shown above). Finally, if there are i1 6= i2
such that τi1,j, τi2,j 6= 0 then the matrix is invertible. Therefore, τ is a member of the set defined in
Eq. 20. In addition, it is easy to see that every member of the noted set satisfies the conditions of the
invariant set. Thus, we obtain the desired equation.	□
41
Published as a conference paper at ICLR 2018
Our analysis is made much simpler, if every function has one invariant representation up to a sequence
of manipulations using invariant functions that do not change the essence of the processing at each
layer.
Assumption 1 (Identifiability). Let N = SCM[σ] with σ that is Leaky ReLU with parameter
0 < a 6= 1. Then, every function p ∈ N is identifiable (with respect to Invariant(N)), i.e., for
any two minimal decompositions, p = F [Wn+1, ..., W1] = F [Vn+1, ..., V1], there are invariants
τ1, ..., τn ∈ Invariant(N) such that:
V1 =	τ1	◦	W1,	∀i = 2, ..., n :	Vi = τi	◦ Wi	◦ τi--11	and Vn+1	=	Wn+1 ◦	τn-1	(24)
Uniqueness up to invariants, also known as identifiability, forms an open question. Fefferman &
Markel (1993) proved identifiability for the tanh activation function. Other works (Williamson &
Helmke,1995; F. Albertini & Maillot,1993; Kurkova & Kainen, 2014; Sussmann,1992) prove such
uniqueness for neural networks with only one hidden layer and various classical activation functions.
In the following lemma, we show that identifiability holds for Leaky ReLU networks with only one
hidden layer.
Lemma 3. LetN = SCM[σ] with σ that is Leaky ReLU with parameter 0 < a 6= 1. Any function
p such that C(p) = 1 is identifiable, i.e, if p = F [W2, W1] = F [V2, V1], then, W1 = τ ◦ V1 and
W2 = V2 ◦ τ -1 for some τ ∈ Invariant(N ).
Proof. An alternative representation of the equation is:
(σ ◦ Wi ◦ VT) = (W-1o V2 ◦ σ)	(25)
We would like to prove that if σ ◦ U = V ◦ σ then V = U . We have:
σ ◦ U(x) = V ◦ σ(x)	(26)
In particular, if vi is the i’th row of V (similarly ui) and x = ej:
σ (ui,j) = σ(hui, ej i) = hvi, σ(ej )i = vi,j	(27)
where vi,j is the (i, j) entry of V (similarly ui,j). Similarly, for x = -ej:
σ(-ui,j ) = σ(hui, -ej i) = hvi, σ(-ej )i = -avi,j	(28)
If ui,j is negative, we obtain: aui,j = vi,j (the first equation) and -ui,j = -avi,j (the second
equation) that yields a = 1 in contradiction. Therefore, ui,j ≥ 0 and ui,j = vi,j (the second
equation).
We conclude that W1 ◦ V1-1 = W2-1 ◦ V2 := τ. Finally, since (σ ◦ W1 ◦ V1-1) = (W2-1 ◦ V2 ◦ σ)
we have σ ◦ τ = τ ◦ σ and τ is invertible linear mapping. Differently said, W1 = τ ◦ V1 and
W2 = V2 ◦ TT such that T ∈ Invariant(N).	□
As far as we know, there are no other results continuing the identifiability line of work for activation
functions such as Leaky ReLU. Uniqueness, which is stronger than identifiability, since it means
that even multiple representations with different number of layers do not exist, does not hold for
these activation functions. To see this, note that for every M × M invertible linear mapping W, the
following holds:
U ◦ σ ◦ W = U ◦ σ ◦ W ◦ σ ◦ -Id ◦ σ ◦ -Id/a	(29)
where σ is the Leaky ReLU activation function with parameter a. We conjecture that for networks
with Leaky ReLU activations identifiability holds, or at least for networks with a fixed number of
neurons per layer. In addition to identifiability, we make the following assumption, which states that
almost all mappings are non-degenerate.
Assumption 2. LetN = SCM[σ] with σ that is Leaky ReLU with parameter 0 < a 6= 1. Assume that
the set of (W1, ..., Wn+1) ∈ RM×M×m such that C(F [Wn+1, ..., W1]) = n is dense in RM×M×m.
42
Published as a conference paper at ICLR 2018
A.4 Counting Minimal Complexity Mappings
In the unsupervised alignment problem, the algorithms are provided with only two unmatched datasets
of samples from the domains A and B and the task is to learn a well-aligned function between them.
Since we hypothesize that the alignment of the target mapping is typically captured by the lowest
complexity low-discrepancy mapping, we develop the machinery needed in order to show that such
mappings are rare.
Recall that discm is the discrepancy distance for discriminators of complexity up to m. In Sec. 2, we
have discussed the functions Π which replaces between members in the domain B that have similar
probabilities. Formally, these are defined using the discrepancy distance.
Definition 7 (Density preserving mapping). Let N = SCM[C] and X = (X , DX) a domain. A
(m, 0)-density preserving mapping over X (or an (m, 0)-DPM for short) is a function Π such that
discm(Π ◦ DX, DX) ≤ 0	(30)
We denote the set of all (m, 0)-DPMs of complexity k by DPM0 (X; m, k)	:=
{∏∣discm(∏ ◦ DX,Dχ) ≤ βo and C(Π) = k}.
We would like to bound the number of mappings that are both low-discrepancy and low-complexity by
the number of DPMs. We consider that there are infinitely many DPMs. For example, if we slightly
perturb the weights of a minimal representation of a DPM, Π, we obtain a new DPM. Therefore, we
define a similarity relation between functions that reflects whether the two are similar. In this way, we
are able to bound the number of different (non-similar) minimal-complexity mappings by the number
of different DPMs.
Definition 8 (Closeness between pairs of distributions or functions). Let N = SCM[σ].
•	We denote Di 〜D? ^⇒ disCm(D1,D2) ≤ €0.
m,0
•	We denote f D g, if C (f) = C (g) =: n and there are minimal decompositions: f =
m,0
F[Wn+1,…，Wi] andg = F[Vn+i,…，V1] such that∀i ∈ [n +1]: F[Wi,…，Wi] ◦ D 〜
m,0
FM,∙∙∙,V1] ◦ D.
The defined relation is reflexive and symmetric, but not transitive. Therefore, there are many different
ways to partition the space of functions into disjoint subsets such that in each subset, any two functions
are similar. We count the number of functions up to the similarity as the minimal number of subsets
required in order to cover the entire space. This idea is presented in Def. 9, which slightly generalizes
the notion of covering numbers (Anthony & Bartlett, 2009).
Definition 9 (Covering number). Let (U,〜U) be a Set and a reflexive and SymmetriC relation. A
covering of (U,〜U), is a tuple (U, ≡u ) such that: ≡u is an equivalence relation and ui ≡u u2 =⇒
ui 〜U u2. The covering number of (U,〜U), denoted by N(U,〜U), is:
min ∣U/ ≡u ∣ s.t: the minimum is taken over (U, ≡u) that is a covering of (U,〜U)	(31)
Here, U/ ≡U is the quotient set ofU by ≡U .
Thm. 1 below states that the number of low discrepancy mappings of complexity CA0,B is upper
bounded by the number of DPMs of size 2CA0,B. By prediction 3, the number of such DPMs is small.
The theorem employs the following weak assumption. In Lem. 19, we prove that this assumption
holds for the case of a continuous risk if the discriminators have bounded weights.
Assumption 3. LetN = SCM[σ] with σ that is Leaky ReLU with parameter 0 < a 6= 1. For every
m > 0 (possibly ∞) and n > 0, the function discm(F[Wn, ∙∙∙, W1] ◦ D1, D2) is continuous as a
function of the weights ofW1, ∙∙∙, Wn ∈ RM×M.
43
Published as a conference paper at ICLR 2018
Theorem 1. Let N = SCM[σ] with σ that is Leaky ReLU with parameter 0 < a = 1. Assume
Assumptions 1, 2 and 3. Let €0, eɪ and e? be three constants such that €0 < s/4 and €2 < ∈1 一 4s
be three positive constants and A = (Xa, DA) and B = (XB, Db ) are two domains. Then,
/	D	∖	(N(DPM2eo+e	(A；2C£b) , DA)
N 及o(A,B), -A ≤ Iimmin<	〉	X	(32)
'	eij	e→° I N(DPM2εo+ε(B;2CA0 B) , θB∖
Proof. See Sec. D.
44
Published as a conference paper at ICLR 2018
B	S ummary of Notation
Tab. 5 lists the symbols used in our work.
Table 5: Summary of Notation
Symbol	Explanation
X	A feature space
XA , XB	The sample spaces of A and B (resp.)
DA, DB	Distributions over XA and XB (resp.)
A, B	Two domains; Specified by (XA, DA) and (XB, DB) (resp.)
yA , yB	Functions from the feature space to the domains, yA : X → XA and yB : X → XB
DZ	A distribution over a feature space X
yAB, yBA	yAB = yB ◦ yA-1 and yBA = yA ◦ yB-1
`	Loss function ` : R × R → R
RD[f1,f2]	The risk function RD[fi, f2] = Ex〜D'(fι(χ), f2(χ)) where ' is a loss function and D is a distribution
discD(D1,D2)	The discrepancy between two distributions D1 and D2, i.e, discD(D1,D2) = supc1,c2∈D |RD1[c1,c2] - RD2[c1,c2]|
σ	A non-linear element-wise activation function
C	A class of functions; in most cases C = {W2 ◦ σ ◦ W1 | W1, W2 ∈ RM ×M are invertible linear transformation}
F[Wn,...,W1]	F [Wn, ..., W1] = Wn ◦ σ ◦ Wn ◦ σ ◦ ... ◦ σ ◦ W2 ◦ σ ◦ W1
N = SCM[C]	A SCM specified by a class of functions C (see Def. 3)
N = SCM[σ]	A NN-SCM specified by the activation function σ (see Def. 4)
C(p)	The complexity of a function p (see Eqs. 9, 10)
Invariant(N)	The invariant set of N (see Def. 6)
τ	An invariant function (see Def. 6)
Dm	Dm = {u|C (u) ≤ m}
discm , disc	discm := discDm and disc := discD∞
m,0 CA,B	The (m, 0)-minimal complexity between A and B (see Def. 5)
0	0 CA,B , EA,B	CA0,B = maxm≥1 CAm,,B0 and EA0,B = arg minm[CAm,,B0 =CA0,B]
H0 (A, B; m)	The set of (0, m)-minimal complexity mappings between A and B (see Def. 5)
H0 (A, B)	Heo (A, B)= Heo (A, B; ∞)
S1 ◦ S2	A composition of sets, S1 ◦ S2 = {s1 ◦ s2|s1 ∈ S1 and s2 ∈ S2}
Dl 〜D2, Di 〜。2 m,	discm(D1, D2) ≤ and disc(D1, D2) ≤ (see Def. 8)
DD f〜g, f〜g m,	discm (f ◦ D, g ◦ D) ≤ and disc(f ◦ D, g ◦ D) ≤ (see Def. 8)
N(U,〜U)	The covering number of U with respect to relation 〜U on U (see Def.9)
X :《-X	x is assigned to X
45
Published as a conference paper at ICLR 2018
C Lemmas
In this section, we prove various lemmas that are used in the proof of Thm. 1. In Sec. C.1 we present
the assumptions taken in various lemmas in the appendix. In Sec. C.2 we prove useful inequalities
involving the discrepancy distance. Sec. C.3 provides lemmas concerning the defined complexity
measure and invariant functions. The lemmas in Sec. C.4 concern the properties of inverse functions.
C.1 Assumptions
We list the assumptions employed in our proofs. Assumptions 1 and 2 were already presented and
are heavily used. Assumptions 3 and its relaxation 4 are mild assumptions that were taken for
convenience.
Assumption 1 (Identifiability). Let N = SCM[σ] with σ that is Leaky ReLU with parameter
0 < a 6= 1. Then, every function p ∈ N is identifiable (with respect to Invariant(N)), i.e., for
any two minimal decompositions, p = F [Wn+1, ..., W1] = F [Vn+1, ..., V1], there are invariants
τ1, ..., τn ∈ Invariant(N) such that:
V1 = τ1 ◦ W1, ∀i = 2, ..., n : Vi = τi ◦ Wi ◦ τi--11 and Vn+1 = Wn+1 ◦ τn-1	(24)
Assumption 2. LetN = SCM[σ] with σ that is Leaky ReLU with parameter 0 < a 6= 1. Assume that
the set of (W1, ..., Wn+1) ∈ RM×M×m such that C(F [Wn+1, ..., W1]) = n is dense in RM×M×m.
Assumption 3. LetN = SCM[σ] with σ that is Leaky ReLU with parameter 0 < a 6= 1. For every
m > 0 (possibly ∞) and n > 0, the function discm(F [Wn, ..., W1] ◦ D1, D2) is continuous as a
function of the weights of W1, ..., Wn ∈ RM×M.
In the case that the norm of the discriminator is bounded, Lem 19, it follows from the following
assumption, which is well-justified, (cf. Shalev-Shwartz & Ben-David (2014), page 162, Eq.14.13).
Assumption 4. Let N = SCM[σ] with σ that is Leaky ReLU with parameter 0 < a 6= 1.
For all m > 0, the function RD [F [Vm, ..., V1], F [Wm, ..., W1]] is continuous as a function of
Vm,...,V1,Wm,...,W1.
C.2 Properties of Discrepancies
Lemma 4. Let D1 and D2 be two classes of functions and D1 , D2 two distributions. Assume that
D1 ◦ {p} ⊂ D2, then,
disc。1(P ◦ Dι,p ◦ D2) ≤ disc。？(D1,D2)	(33)
In particular, if m ≥ k + C (p), then,
disck(P ◦ D1,P ◦ D2) ≤ disCm(D1,D2)	(34)
Proof. By the definition of discrepancy:
diSCDι (p ◦ Dl,P ◦ D2) = sup ∣RpoDι[ci,C2] - RpoD2[ci,C2]∣
c1,c2∈D11	I
= sup	RD1 [c1 ◦P, c2 ◦P] - RD2 [c1 ◦P, c2 ◦P]
c1,c2∈D1 I
Since D1 ◦ {P} ⊂ D2 we have:
discD1 (p ◦ Dι,p ◦ D2) = sup ∣Rdi [ci ◦ P,c2 ◦ p] - Rd2 [ci ◦ P,c2 ◦ p]l
c1,c2∈D11	I
≤ sup	∣Rdi [u1,u2] — Rd2 [u1,u2] l = discD2(Di, D2)
u1,u2∈D2 '	'
The second inequality is a special case for Di = Dk and D2 = Dm .
Lemma 5. Let A = (Xi, Di) and B = (X2, D2) be two domains and DZ a distribution.
(35)
(36)
□
46
Published as a conference paper at ICLR 2018
1.	Assume that m ≥ k + C (p). Then,
disck(p ◦ D1,D3) ≤ discm(D1,D2) + disck (p ◦ D2,D3)	(37)
2.	Let y1, y2 and y = y2 ◦ y1-1 be three functions and m ≥ k + C(y2). Then,
disc®(y ◦ Di, D2) ≤ disCm(Dz,y-1 ◦ Di) + disc®(y2 ◦ DZ, D2)	(38)
3.	Let h be any function and m ≥ k + C (h-1). Then,
diSCk(Dl, h-i ◦ D2) ≤ discm(h ◦ D1,D2)	(39)
Proof. 1. Follows from Lem. 4, since m ≥ k + C(p), we have:
disck(P ◦ Dι,P ◦ D2) ≤ disCm(D1,D2)	(40)
Therefore, by the triangle inequality,
disck(p ◦ Di, D3) ≤ disck(p ◦ Di,p ◦ D2) + disck(p ◦ D2, D3)	(41)
≤ discm(Di, D2) + disck (p ◦ D2, D3)
2.	We use Lem. 4 with P :— y2, Di :— Dk, and D2 :— Dm and Dk ◦ {y2} ⊂ D2：
disck(y2 ◦ DZ,y ◦ Di) = disck(y2 ◦ DZ,y2 ◦ yi-i ◦ Di) ≤ discm(DZ,yi-i ◦ Di)	(42)
Therefore, by the triangle inequality,
disck(y ◦ Di,D2) ≤ disck(y2 ◦ DZ, D2) + disck(y2 ◦ DZ,y ◦ Di)
≤ disck(y2 ◦ DZ, D2) + discm(DZ,yi-i ◦ Di)
(43)
3.	Follows immediately from Lem. 4 for P :— h-i and Dk ◦ {h-1} ⊂ Dm,.	□
C.3 Properties of the Complexity Measure and Invariants
Lemma 6. Let N = SCM[C]. In addition, let u, v be any two functions. Then,
max{C(u) - C(VT), C(V) - C(UT)} ≤ C(U。V) ≤ C(U) + C(V)	(44)
Proof. We begin with the case C(v) = 0. In this case, C(u ◦ v) = C(u) = C(u) + C(v).
By definition, C(V) = 0 implies that C(V-i) = 0 and C(U ◦ V) = C(U) - C(V-i). Finally,
C(U) - C(V-i) = C(U) = C(U ◦ V). The case C(U) = 0 is analogous. Next, we assume that
C(U) = n > 0 and C(V) = m > 0. Let U = Un ◦ ... ◦ Ui and V = Vm ◦ ... ◦ Vi be minimal
decompositions of U and V (resp.). Therefore, we can represent, U ◦ V = Un ◦ ... ◦ Ui ◦ Vm ◦ ... ◦ Vi.
In particular, C(U ◦ V) ≤ n + m = C(U) + C(V).
The lower bound follows immediately from the upper bound：
C(u) = C(u ◦ v ◦ VT) ≤ C(u ◦ v) + C(VT) =⇒ C(U) - C(VT) ≤ C(U。V)	(45)
By similar considerations, we also have: C(v) - C(u-1) ≤ C(U ◦ v).	□
For a given function U ∈ N = SCM[C], we define,
C0(U) = argn{U ∈ Cn}	(46)
Lemma 7. Let N = SCM[C]. In addition, let U, V be any two functions. Then,
max{C0(U) - C0(V-i), C0(V) - C0(U-i)} ≤ C0(U ◦ V) ≤ C0(U) + C0(V)	(47)
Proof. We begin by proving the upper bound. We assume C0(U) = n and C0(V) = m. Let
U = Un ◦ ... ◦ Ui and V = Vm ◦ ... ◦ Vi be minimal decompositions of U and V (resp.). Therefore, we
can represent, U ◦V = Un ◦ ... ◦Ui ◦ Vm ◦ ... ◦Vi. In particular, C0(U ◦ V) ≤ n + m = C0(U) + C0(V).
The lower bound follows immediately from the upper bound:
C0(u) = C0(u ◦ v ◦ VT) ≤ C0(u ◦ v) + C0(VT) =⇒ C0(u) - C0(VT) ≤ C0(u ◦ v)	(48)
By similar considerations, C0(V) - C0(U-i) ≤ C0(U ◦ V).
□
47
Published as a conference paper at ICLR 2018
Lemma 8. Invariant(N ) is closed under inverse and composition, i.e,
T ∈ Invariant(N) ^⇒ T-1 ∈ Invariant(N)	(49)
And,
τι, T2 ∈ Invariant(N) =⇒ τι ∙ τ? ∈ Invariant(N)
(50)
Proof. Inverse: Let τ ∈ Invariant(N). Then, by definition, τ is an invertible linear mapping and
τ ◦ σ = σ ◦ τ. In particular, τ-1 is also an invertible linear mapping and τ-1 ◦ σ = σ ◦ τ-1. Thus,
τ-1 ∈ Invariant(N).
Composition: Let τ1,τ2 ∈ Invariant(N). Then, Ti is an invertible linear mapping and Ti ◦ σ = σ ◦ Ti
for i = 1, 2. In particular, τ1 ◦ τ2 is also an invertible linear mapping and τ1 ◦ τ2 ◦ σ = τ1 ◦ σ ◦ τ2 =
σ ◦ Ti ◦ T2. Thus, Ti ◦ T2 ∈ Invariant (N).	□
Lemma 9. Let N = SCM[σ] with σ that is Leaky ReLU with 0 < a 6= 1. Assume that p
obeys identifiability, i.e., that Assumption 1 holds. Then, for any two minimal decompositions
p = F[Wn+i, ..., Wi] = F[Vn+i, ..., Vi], we have:
∀i ∈ [n+ 1] :F[Wi,...,Wi] ◦F[Vi,...,Vi]-i ∈ Invariant(N)
and F [Wn+i, ..., Wi] ◦ F [Vn+i, ..., Vi]-i ∈ Invariant(N)
(51)
Proof. We prove that F [Wi, ..., Wi] ◦ F [Vi, ..., Vi]-i ∈ Invariant(N). If i = n + 1, then,
F[Wi, ..., Wi] ◦ F[Vi, ..., Vi]-i = Id ∈ Invariant(N). Otherwise, by minimal identifiability,
Vi = Ti ◦	Wi,	∀i	=	2, ..., n :	Vi	=	Ti	◦	Wi	◦ Ti--ii and Vn+i = Wn+i	◦ Tn-i	(52)
In addition,
F[Wi,…,Wi] = Wi ◦ σ ◦ Wi-ι ◦ ... ◦ σ ◦ Wi
F[Vi, ..., Vi] = (Ti ◦ Wi ◦ Ti--ii) ◦ σ ◦ (Ti-i ◦ Wi-i ◦ Ti--i2) ◦ ... ◦ σ ◦ (Ti ◦ Wi)
(53)
Since each for all k ∈ [i], Tk commutes with σ, we have,
F[Vi,...,Vi]= Ti ◦ F[Wi,...,Wi]	(54)
and
F[Wi, ..., Wi] ◦ F[Vi, ..., Vi]-i = Ti-i ∈ Invariant(N)	(55)
By similar considerations, F[Wn+i,..., Wi] ◦ F[K，+i,…，¼]-i ∈ Invariant(N).	□
Lemma 10. LetN = SCM[σ] with σ that is Leaky ReLU with parameter 0 < a 6= 1. Then, every
invertible linear mapping W is a member of C0.
Proof. Let p ∈ Cn. Then, p = F[Wn+i, ..., Wi], for invertible linear mappings Wi, ..., Wn+i. In
particular, W ◦ P = F [W ∙ Wn,+i,..., Wi] ∈ Cn, P ◦ W = F [Wn+i,..., Wi ∙ W ] ∈ Cn and similarly,
W-i ◦ p,p ◦ W-i ∈ Cn. Therefore, W ∈ C0.	□
Lemma 11. C0 is closed under inverse and composition, i.e,
U ∈ Co ^⇒ u-i ∈ Co	(56)
and,
ui , u2 ∈ Co =⇒	ui ◦ u2	∈ Co	(57)
Proof. Inverse: By definition, u ∈ Co iff for all n	∈	N and q	∈ Cn,	we have:	u	◦ q, q ◦u, u-i ◦ q, q ◦
u-i ∈ Cn iff u-i ∈ Co.
Decomposition: Let f ∈ Cn . Then, g = ui ◦ f	∈	Cn and	u2 ◦ ui	◦ f	=	u2	◦ g	∈	Cn .	Similarly,
U-i ◦ U-i ◦ f,f ◦ U-i ◦ U-i, f ◦ U2 ◦ Ui ∈ Cn.	□
48
Published as a conference paper at ICLR 2018
C.4 Properties of Inverses
Lemma 12. Let N = SCM[σ] where σ is the Leaky ReLU activation function, with parameter
0 < a 6= 1. Let f = F [Wn+1, ..., W1] be a minimal decomposition. Then, for all i ∈ [n], we have:
F[Wi+1∕a,..., Wn:1∕a, -Wn-1ι∕a] ◦ f = -1/a ∙ σ ◦ F[W” ..., W1]	(58)
Proof. We prove this statement by induction on i from i = n backwards to i = 1.
Case i = n: Then, F[Wi-+11∕a, ..., -Wn-+11∕a] = F[-Wn-+11∕a] = -Wn-+11∕a. In addition,
F[-Wγ-+ι∕a] ◦ f = —1/a ∙ σ ◦ Wn ◦ σ ◦ Wn1-1 ◦ σ ◦ ... ◦ σ ◦ Wi
=—1/a ∙ σ ◦ F[Wn,..., Wi]	(59)
=—1/a ∙ F [Id, Wn, ∙∙∙, Wi]
Induction hypothesis: We assume that:
F [Wi+1/a,…,Wn-1/。, -Wn+1/a] ◦ f = -1/a ∙ F [Id, Wi,…,Wi]	(60)
Case i — 1: We consider that by the induction hypothesis:
F [Wi-i/a,..., Wn-i/a, —Wn-+ii/a] ◦ f = Wi-i/a ◦ F [Id, Wi-+ii/a,..., Wn-i/a, —Wn-+ii/a] ◦ f
= Wi-i/a ◦ σ ◦ F [Wi-+ii/a, ...,Wn-i/a, —Wn-+ii/a] ◦f
= Wi-i/a ◦ σ ◦ —1/a ◦ σ ◦ F[Wi, ..., Wi]
=-WiT/a ◦ F[Wi,..., Wi]
=-1/a ∙ F[Id,Wi-i,…,Wi]
(61)
Finally, we conclude that:
F[Wi+i/a,…,Wn^/a, -W-i/a] ◦ f = -1/a ∙ σ ◦ F[Wi,…,Wi]	(62)
□
Lemma 13. LetN = SCM[σ] with σ that is Leaky ReLU with parameter 0 < a 6= 1. Then, for all
0 > 0, we have CB0,A = CA0,B.
Proof. Let k ≥ EA0,B, EB0,A and m ≥ k + CB0,A. We take y ∈ H0 (A, B; m). Then, C(y) =
CA0b . In addition, discm (y ◦ Da, DB) ≤ e。. By the third part of Lem. 5, for h :— y, We have:
disck(y-i ◦ DB,DA ) ≤ discm(y ◦ DA ,DB) ≤ 0	(63)
In particular, CB0,A ≤ C(y-i). In addition, by Lem. 1, C(y-i) = C(y). Therefore, CB0,A ≤ CA0,B.
By symmetric arguments (sWitching betWeen A and B) We also have the opposite side and thus,
心一i0	口
cb,a = ca,b .	LJ
D Proof of Thm. 1 and Its Generalization Thm. 2
D.1 Covering Numbers
Definition 10 (Set embedding). Let (U,〜U) and (V,〜V) be two tuples ofsets and symmetric and
reflexive relations on them (resp.). Afunction G : U → V is an embedding of (U,〜U) in (V,〜V)
and we denote (U,〜U) W (V,〜V) if:
∀ui, u2 ∈ U : G(ui)〜V G(u2) =⇒ ui 〜U u	(64)
Lemma 14. Let (U,〜U) and (V,〜V) be two tuples ofsets and reflexive and symmetric relations on
them (resp.). If (U,〜U) W (V,〜V) then N(U,〜U) ≤ N(V,〜V).
49
Published as a conference paper at ICLR 2018
Proof. Assume that (U,〜U) W (V,〜V). Then, by definition, there is an embedding function
G : U → V such that:
∀Ul, U2	∈ U :	G(uι)〜V	G(U2)	=⇒	Ui	〜U	U2	(65)
Let (V, ≡v) be a covering of (V,〜V). We define a covering (U, ≡u) of (U,〜U) as follows:
ui ≡u u2 ^⇒ G(ui) ≡v G(u2)	(66)
Part 1: We would like to prove that (U, ≡u) is a covering of (U,〜U). It is easy to see that ≡u
is an equivalence relation since ≡V is an equivalence relation. Next, we would like to prove that
ui ≡u u2 =⇒ ui 〜U U2. By the definition of ≡u:
u1 ≡U u2 =⇒ G(u1) ≡V G(u2)	(67)
In addition, since (V, ≡v) is a covering of (V,〜V):
G(ui) ≡v G(u2) =⇒ G(ui)〜V G(u2)	(68)
Finally, since G is an embedding:
G(ui)〜V G(u2) =⇒ ui 〜U U2	(69)
We conclude:
Ui ≡u u2 =⇒ Ui 〜U U2	(70)
Therefore, (U, ≡u) is indeed a covering of (U,〜U).
Part 2: We would like to prove that |U/ ≡U | ≤ |V/ ≡V |. Let ui, u2 ∈ U such that ui 6≡U u2.
Then, by definition of ≡U we have: G(ui) 6≡V G(u2). Therefore, if we take ui, ..., un ∈ U
representations of n different equivalence classes in (U, ≡U) then, G(ui), ..., G(un) ∈ V are n
representations of n different equivalence classes in (V, ≡V). In particular, |U/ ≡U | ≤ |V/ ≡V |.
Therefore, the covering number of (U,〜U) is at most the covering number of (V,〜V).	□
Lemma 15. Let (U, ≡i) and (U, ≡2) be two coverings of (U,〜U). Then, (U2, ≡i X ≡2) is a
CoVeringof (U2,〜U). Where U2 = U × U and the relation 〜U is defined asfollows:
(a, b)〜U (c, d) Q⇒ a 〜U C and b 〜U d	(71)
and ≡i × ≡2 is defined as:
(a, b) ≡i × ≡2 (c, d) Q⇒ a ≡i C and b ≡2 d	(72)
Proof. We have to prove that ≡i × ≡2 is an equivalence relation and that (ui, u2) ≡i × ≡2
(vi,v2) =⇒ (ui,u2)〜U (vi,v2).
Reflexivity:
(ui,U2) ≡i × ≡2 (ui,u2) ^⇒ Ui ≡i Ui andu2 ≡i u2	(73)
The RHS is true since ≡i and ≡2 are reflexive relations.
Symmetry:
(Ui,U2) ≡i × ≡2 (vi,v2) ^⇒ Ui ≡i vi andU2 ≡2 V	(74)
Since ≡i and ≡2 are symmetric, we have:
Ui ≡i Vi and U2 ≡2 v2 ^⇒ Vi ≡i Ui and v2 ≡2 U2	(75)
In addition,
(vi,v2) ≡i × ≡2 (ui, U2) ^⇒ Vi ≡i Ui and v2 ≡2 U2	(76)
Therefore,
(Ui,U2)≡i X ≡2 (vi, v2) ^⇒ (vi, v2) ≡i X ≡2 (Ui,U2)	(77)
Transitivity: follows from similar arguments.
Covering:
(Ui,U2) ≡i x ≡2 (vi,v2) ^⇒ Ui ≡i Vi andu2 ≡2 v2	(78)
50
Published as a conference paper at ICLR 2018
Since (U, ≡i) is a covering of (U,〜U), for i = 1, 2, we have:
uι ≡ι vι and u2 ≡2 v2 =⇒ uι 〜U vι and u2 〜U v2	(79)
By the definition of 〜U We have:
uι 〜U vι andu 〜U v2 ^⇒ (u1,u2)〜U (v1,v2)	(80)
Therefore,
(u1,u2) ≡ι X ≡2 (v1,v2) =⇒ (u1,u2)〜U (v1,v2)	(81)
□
Lemma 16. Let (U,〜U) be a tuple ofa set and a reflexive and symmetric relation on it (resp.). Then,
N(U2,〜U) ≤ N(U,〜u)2	(82)
Proof. Let ≡u be an equivalence relation such that (U, ≡u) is a covering of (U,〜U). By Lem. 15,
(U2, ≡U) is a covering of (U2,〜U). In addition,
|U2/ ≡2U | = |U/ ≡U |2	(83)
Thus, for every covering (U, ≡u) of (U,〜U), there is a covering of (U2,〜U) of size |U/ ≡u |2. In
particular, N(U2,〜U) ≤ N(U,〜U)2.	□
Lemma 17. Let (U,〜U) be a tuple ofa set and a reflexive and symmetric relation on it (resp.). Then,
N(U,〜U) ≤ N(U2,〜U)	(84)
Proof. We define an embedding from (U,〜U) to (U2,〜U) as follows F(u) = (u, u). This is an
embedding, because, F(u)〜U F(v) =⇒ (u, u)〜U (v, v) =⇒ U 〜U v.	□
Lemma 18. Let (U,〜U) and (V,〜V) be two tuples of sets and reflexive and symmetric relations on
them (resp.). Assume thatU ⊂ V and 〜U：=(〜V)∣u, i.e,
∀u, V ∈ U : U 〜U V Q⇒ U 〜V V	(85)
Then,
N(U,〜U) ≤ N(V,〜V)	(86)
Proof. Let (V, ≡v) be a covering of (V,〜V). Then, it is easy to see that (U, ≡u) is a covering
of (U,〜U), where ≡u：= (≡v)∣u. In addition, we have: |U/ ≡u | ≤ |V/ ≡v |. Thus, for
every covering of (V,〜V), we can find a smaller covering for (U,〜U). In particular, N(U,〜U) ≤
N(V ,〜V).	□
D.2 Perturbations and Discrepancy
Thm. 1 employs assumption 3. In Lem. 19 we prove that this assumption holds for the case of a
continuous risk (assumption 4) if the discriminators have bounded weights.
Assumption 3. LetN = SCM[σ] with σ that is Leaky ReLU with parameter 0 < a 6= 1. For every
m > 0 (possibly ∞) and n > 0, the function discm(F[Wn, ..., W1] ◦ D1, D2) is continuous as a
function of the weights ofW1, ..., Wn ∈ RM×M.
Assumption 4. Let N = SCM[σ] with σ that is Leaky ReLU with parameter 0 < a 6= 1.
For all m > 0, the function RD [F[Vm, ..., V1], F[Wm, ..., W1]] is continuous as a function of
Vm, ..., V1, Wm, ..., W1.
Lemma 19. Let N = SCM[σ] with σ that is Leaky ReLU with parameter 0 < a 6= 1 and assume
Assumption 4 for D :— Di. Let discm,E := discCm,E for
Cm,E = {F[Wm,...,Wi] I ∀i ∈ [m] ： ||Wi|| ≤ E}	(87)
Then, for all m > 0, n > 0 and E > 0, the function discm,E (F [Wn, ..., W1] ◦ D1, D2) is continuous
as a function ofWn, ..., W1.
51
Published as a conference paper at ICLR 2018
Proof. Let Wn, ..., W1 and Wnk, ..., W1k be any invertible matrices in RM×M such that for all i ∈ [n],
Wik → Wi. We denote GE = {W ∈ RM×M ∣ ||W|| ≤ E}. By the triangle inequality,
(88)
(89)
(90)
discm,E(D1,D2) ≤ discm,E (D1, D3) +discm,E(D3,D2)
=⇒ discm,E(D1,D2) - discm,E(D3,D2) ≤ discm,E(D1,D3)
Similarly,
discm,E(D3,D2) ≤ discm,E (D1, D3) +discm,E(D1,D2)
=⇒ discm,E(D3,D2) - discm,E(D1,D2) ≤ discm,E(D1,D3)
therefore,
|discm,E(D3,D2) -discm,E(D1,D2)| ≤discm,E(D1,D3)
In particular,
discm,E(F[Wn,...,W1] ◦D1,D2) - discm,E (F [Wnk,..., W1k] ◦D1,D2)
≤discm,E(F[Wn,...,W1] ◦D1,F[Wnk,...,W1k] ◦D1)
≤ sup	∣Rdi [ci	◦ F[Wn,…,W1],c2 ◦ F [Wn,...,Wι]]	-	Rdi	[ci	◦ F [Wk,...,Wk ],C2	◦ F [Wk,…,Wk ]]∣
c1,c2∈Cm,E
≤	sup	∣∣∣RD1[F[Vm,...,Vi] ◦F[Wnk,...,Wik],F[Um,...,Ui] ◦F[Wn,...,Wi]]
V1 ,..,Vm ,U1 ,...,Um ∈GE
- RD1[F[Vm,...,Vi] ◦F[Wnk,...,Wik],F[Um,...,Ui] ◦F[Wnk,...,Wik]]∣∣∣
≤	SuP	∣RDi [F [Vm,...,V2,V1 ∙ Wn,Wn-i,...,Wi],F [Um,...,U2 ,Ui ∙ Wn,Wn-1,...,Wi]]
V1 ,..,Vm ,U1 ,...,Um ∈GE
-Rdi [F[Vm,...,V2,Vi∙ Wk,Wk-ι,...,Wk],F[Um,...,U2,U1∙ Wk,W7k-i,...,Wk]] I
(91)
Assume by contradiction that the last expression does not converge to 0. Therefore, there is a
sequence (V1k, ..., Vmk , U1k, ..., Umk ) such that V1k, .., Vmk , U1k, ..., Umk ∈ GE and
Qk = ∣RDι ∣F[Vm ,…,Vk,Vik ∙ Wn,Wn-1,...,Wi],F [Um ,…,U2,U1 ∙ Wn,Wn-1,…,Wl]]
-Rdi [F[Vm,…,Vk,Vik ∙ Wk ,Wkk-i,…,Wk],F[Um,…,Uk,Uk∙ Wk ,Wk-i,…,Wk]] ∣ → 0
(92)
In particular, there is some > 0 and an increasing sequence {kj }j∞=1 ⊂ N such that Qkj >
for all j ∈ N. With no loss of generality, we can assume that kj = j (otherwise, we replace the
original sequence with the new one). Since (V1kj , ..., Vmkj , U1kj , ..., Umkj ) ∈ G2Em and G2Em is compact
in RM ×M ×2m , by the Bolzano-Weierstrass theorem, it has a converging subsequence. With no loss
of generality, we can assume that (V1kj , ..., Vmkj , U1kj , ..., Umkj) converges (otherwise, we replace it
with a converging sub-sequence):
(V1kj,..., Vmkj, U1kj,..., Umkj) → (V1,...,Vm,U1,...,Um) ∈ G2Em	(93)
In particular,
(Vmj,..., Vkj, Vkj ∙ Wnkj ,Wnk-1,…,Wkj) → (Vm,...,V2,VI ∙ Wn,Wn-1 ,∙.∙,W1)	(94)
(Um,...,U2j,Uk ∙ Wnkj ,Wnk- 1,∙∙∙,Wkj ) → (Um,…,U2,Ul ∙ W„, Wn-1, ..., Wl )
By Assumption 4, the function RD1 [F [Xm+n , ..., X1], F [Ym+n , ..., Y1]] is continuous. Therefore,
∣RDι	∣F[Vmj,…,Vkj,Vkj	∙ Wk,Wk-i,..., Wi],F [Um,...,	Ukj,	Ukj	∙ Wk,Wk-i,…,Wi]]
-Rdi [F[Vm,...,⅞,¼ ∙ Wk,Wk-i,…,Wi],F[Um,…,U2,Ui ∙ Wk,Wk-i,…,Wi]] I → 0
(95)
and,
∣Rdi [F[Vm,...,V2,Vi ∙ Wk,Wk-i,...,Wi],F[Um,...,U2,Ui ∙ Wk,Wk-i,...,Wi]]
-Rdi hF[Vkj,...,Vkj,Vikj ∙ W7kj ,Wkk- i,...,Wkj ],F [U⅛ ,...,Ukj ,Ukj ∙ W7kj ,W7k- i,...,Wkj]] ∣ → 0
(96)
52
Published as a conference paper at ICLR 2018
Therefore, by the triangle inequality,
Qkj = IRDIhF[Vmkj,…,V2kj,Vkj ∙ Wn,Wn-1,…,Wl],F[U% …,Ukj,Ukj ∙ Wn,Wn-1,...,Wl]i
-RDIhF[Vmkj,…,V2kj,Vkj ∙ wXw：- 1,…,Wkj],F[U%…Ukj,Ukj ∙ wXw：- 1,…,Wkj]] I → 0
(97)
in contradiction. Thus, we conclude that:
lim discm,E(F[Wn,...,W1] ◦D1,D2) -discm,E(F[Wnk,...,W1k] ◦D1,D2) =0	(98)
k→∞
□
Lemma 20. Let N = SCM[σ] with σ that is Leaky ReLU with parameter 0 < a 6= 1. In addition,
let f = F [Wn+1, ..., W1] and g = F [Vn+1, ..., V1] be two minimal decompositions. Assume As-
sumptions 2 and 3. Then, there are functions f = F [Wn+ι,…，Wι] and g = F [%+ι,…，匕]such
that:
•	C (/◦ g) = 2n.
•	∀j	∈	[n	+1]: disCm(F[W7∙,∙∙∙,Wι]	◦ D,F[W∙,...,Wι] ◦	D) ≤	匕
•	∀j	∈	[n	+1]: disCm(F[Vj,…,匕]◦	D,F[Vj, ∙∙∙, V1] ◦ D)	≤ 匕
Proof. We consider that f ◦ g = F[Wn+ι,…，W^2, Wi ∙ Vn+ι, %,…，Vι]. By Assumption 2, for each
δ > 0, there are f = F[Wn+ι,…Wι] and g = F[Vn+ι,…，匕]such that C(f ◦ g) = 2n and for
all j ∈ [n + 1]: ||Wj - WjIIjVj - VM ≤ δ. By Assumption. 3, for each e > 0, there is a small
enough δ > 0 such that: f = F[Wn +ι,…，Wι] and g = F[Vn+ι,…，匕]SUCh that for all j ∈ [n + 1]:
∣∣ Wj- WjIIjV' - Vj || ≤ δ,we have:
•	∀j ∈ [n +1]: discm(F[Wj,∙∙∙,Wι] ◦ D,F[Wj,∙∙∙,Wι] ◦ D) ≤ e.
•	∀j ∈ [n +1]: discm(F[Vj,∙∙∙,½] ◦ D,F[Vj,∙∙∙,V1] ◦ D) ≤ e.
In particular, for any > 0, there are functions fg = F[Wgn+1, ∙∙∙, Wg 1] and gg = F[Vgn+1, ∙∙∙, Vg1] with
the desired properties.	□
Lemma 21. Let N = SCM[σ] with σ that is Leaky ReLU with parameter 0 < a 6= 1. Assume
Assumption 1. Let f D g. Then, for every minimal decomposition f = F[Wnn +ι,…,W] there is a
m,
minimal decomposition g = F [Vn0+1, ∙∙∙, V10] such that:
∀i ∈ [n + 1]: F[W；,∙∙∙,W1] ◦ D 〜F[W,∙∙∙,Vl ◦ D	(99)
m,
Proof. Since f 〜 g there are minimal decompositions f = F[Wn+ι,…，Wι] and g
m,
F [Vn+1, ∙∙∙, V1] such that:
∀i ∈ [n+ 1] : F[Wi, ∙∙∙, W1] ◦D 〜 F[Vi, ∙∙∙,V1] ◦D	(100)
m,
By Assumption 1, W0 = τι ◦ Wι, for all i = 2,…，n: W0 = Ti ◦ Wi ◦ τ-∖ and Wn+1=Wn+ι ◦ τ-1.
Therefore, we define a minimal decomposition for g as follows: g = F[Vn0+1, ∙∙∙, V10] such that
V10 = τ1 ◦ V1, for all i = 2, ∙∙∙, n: Vi0 = τi ◦ Vi ◦ τi--11 and Vn0+1 = Vn+1 ◦ τn-1. This is a minimal
decomposition of g , since each invariant function is an invertible linear mapping and commutes with
σ. By Lem. 9 we have:
∀i ∈ [n] : F[W；, ∙∙∙, W0] = Ti ◦ F[Wi,∙∙∙, Wι] and F[Vi0, ∙∙∙, V] = Ti ◦ F[Vi, ∙∙∙, V1]
Therefore, by Lem. 4, since C(τi) = 0, we have:
∀i ∈ [n] :discm(F[Wi0, ∙∙∙, W10] ◦D,F[Vi0, ∙∙∙,V10] ◦D)
≤ discm(Ti ◦ F[Wi, ∙∙∙, W1] ◦ D,Ti ◦ F[Vi, ∙∙∙, V1] ◦ D) ≤
(101)
(102)
53
Published as a conference paper at ICLR 2018
Alternatively,
∀i ∈ [n]: F[W，...，W1] ◦ D 〜F[Vi0,...,V10] ◦ D	(103)
m,
SinceF[Wn0+1,...,W10] = f = F[Wn+1,...,W1] andF[Vn0+1,...,V10] = g = F[Vn+1,..., V1] we
also have F[Wn； +ι,∙∙∙,W] ◦ D 〜F[匕+〜-匕]◦ D.	□
m,
Lemma 22. Let N = SCM[σ] with σ that is Leaky ReLU with parameter 0 < a 6= 1. We have:
f DV f,f D f and f D f
k,	k,
k,1
DA
=⇒ f 〜f
k,1 -2
(104)
Proof. Assume by contradiction that f D f Then, there are decompositions f =
k,1 -2
F[Wn+ι,∙∙∙, W1] and f = F[W；+1,∙∙∙,1W°] such that:
∀j ∈ [n + 1] ： disck(F[Wj,…,Wι] ◦ DA, F[W0,…,W1 ] ◦ DA) ≤ ∈ι — 2e (105)
By Lem. 21, since f DA f and f D f0, there are minimal decompositions f = F[Wn+ι, ∙∙∙, Wι]
k,	k,
and f0 = F[Wn0+1, ∙∙∙, W10] such that:
∀j ∈	[n +1]	:disCk(F[W∙,∙∙∙,Wι]	◦ Da, F[W∙,∙∙∙,Wι]	◦	DA)	≤ C
disck(F[明，∙∙∙，W1 ]	◦ Da, F[叼,∙∙∙, W0]	◦	DA)	≤ c
(106)
DA
Since f 〜 f0, there is an index i ∈ [n + 1] such that:
k,1
disck(F[Wi, ∙∙∙, W1] ◦ Da, F[W] ∙∙∙, W[◦ DA) > e1	(107)
Therefore, by the triangle inequality, we arrive to a contradiction:
disck(F [Wi,∙∙∙, Wι] ◦ Da, F [W/,…,W1◦ DA)
≤disck(F[Wi,∙∙∙, Wι] ◦ Da, F [W/, ∙∙∙, W1 ] ◦ DA)
+ disck(F[Wi, ∙∙∙, Wι] ◦ Da, F[Wi,…,Wι] ◦ DA)
≤disck(F[Wi,∙∙∙, Wι] ◦ Da, F [TV0,…,W1 ] ◦ DA)	(108)
+ disck(F[Wi, ∙∙∙, Wι] ◦ Da, F[Wi,…,Wι] ◦ DA)
+ disck(F[W0,∙∙∙, W0] ◦ Da, F[W；,…,W] ◦ DA)
≤(C1 - 2C) + C + C = C1
□
Lemma 23. Let N = SCM[σ] with σ that is a Leaky ReLU with parameter 0 < a 6= 1. Let
A = (XA, DA) and B = (XB, DB) are two domains. We have:
N (H…，J2j
≤N
(He°(B,A), D)
(109)
Proof. We would like to show that the function G(h) = h-1 is an embedding of
(H(A,wɪɔ
into
(He° (B, A), D)
First, we consider that if h ∈ H0 (A, B), then,
disc(G(h) ◦ DB, DA) = disc(h-1 ◦ DA, DB) ≤ disc(h ◦ DA, DB) ≤ C0	(110)
and by Lem. 1 and Lem. 13, C(G(h)) = C(h-1) = C(h) = CA0,B = CB0,A. Therefore, G(h) ∈
H∈o (B, A). Next, we would like to prove that for all h1,h2 ∈ H^ (A, B): G(hι) D G(h2) =⇒
1
h1 DDA h2 .
1 +20
54
Published as a conference paper at ICLR 2018
Let h1,h2 ∈ Heo (A, B) such that G(hι) DB G(h2). Then, there are minimal decompositions
∈1
G(hι) = F[Wn+ι,…,Wι] and G(h2) = F[%+1,…,½] such that:
Vi ∈ [n] : disc(F [W,,..., Wι]。Da, F [%,..., V1]。DA) ≤ S
and: disc(G(hι)。Da, G(h2)。DA) ≤ ei
(111)
We consider that by Lem. 1, G(h1) = F[-W-1, W-1/a,..., W-1∕a, -W7-l1∕α] and G(h2)=
F[-V-1, V-1∕a,..., V- 1∕α, -Vn-Iι∕a] are minimal decompositions. In addition, by Lem. 12, We
have:
Vi ∈ [n] :F ∖W-+11∕a,...W-1∕a, -W-+1∕a]。G(h1) = -1∕a ∙ σ。F [Wi,..., W1]
F[V+1∕a, ...V-1∕a, -V-11∕a]。G(h2) = -1∕a ∙ σ。F[%,...,匕]
Bythe first item of Lem. 5, for D1 := Db , D2 := h1。Da, D3 := F[Vi+1∕a,…V-I ∕a, -VJ-∣11∕a] o
Db andP := F[Wi∣1l∕a,…Wj71∕a, -Wn⅛∕a],
disc(F[W+1∕a, ...W-1∕a, -W-11/a]。DB ,F∖V-X∕a, ...V-1/a,-Vn-l1∕a]。DB)
≤disc(F[W+1∕a, ...W-1∕a, -W-+ι∕a]。所。Da, F[%+√a,...VlrI∕a, -⅞+ι∕a]。DB)
+ disc(hι。Da, Db)
≤disc(F[W+1∕a, ...W-1∕a, -W-+ι∕a]。hi。Da, F[V[1∕a,...VIrI∕a, -⅞+ι∕a]。DB) + S
Similarly (by the first item of Lem. 5), we have:
disc(F[W-1 ∕a, ...W771∕a, - W-1ι∕a]。DB, F[V+1∕a, ...V-1∕a, - V-1ι∕a]。DB)
≤disc(F[Wi+1 ∕a, ...Wn 1∕a, -Wn+1ι∕a∣。hi。da, F[V+1/a, ... Vl 1∕a, -Vn+i/a]。h2。DA) + 2^Q
=disc(-1∕a ∙ σ。F [Wi,..., Wi]。Da, - 1/a ∙ σ。F [V,..., Vi]。DA) + 2g
≤disc(F[Wj,..., Wi]。Da, F[V,…,Vi]。DA) + 2cq ≤ 气 + 2cq
(114)
Therefore, We conclude that h1 DA h2.	□
e1 +2e0
D.3 PROOF OF THM. 1
Theorem 2. Let N = SCM[σ] with σ that is a Leaky ReLU with parameter 0 < a = 1. Assume
Assumptions 1, 2 and 3. Let eg, €1 and €2 such that eg < 61∕2 and €2 < ∈1 — 2∈q be three positive
constants and A = (Xa,Da) and B = (XB, Db ) are two domains. Assume that m ≥ k+2C4 b +2.
Then,
N(Heo(A, B; m),DA) ≤ limN(DPM2e0+e(B; k, 2。胃B),悠)	(115)
∖	k,eι )	e→Q ∖	∖	, / m,e2)
Proof. Let e be any positive constant such that: e < min{(e1 - 2eg - e2)∕4, ez∕2}. For such e, we
have 2eg ≤ €1 - 4e and €2 ≤ €1 - 2eg - 4e. In addition, let t := k + CAlB + 1. We would like to
find an embedding mapping:
G : (Heo (A, B; m))2 → DPM2e0+e(B; k, 2C£B + 2)	(116)
Part 1:	In this part, we show how to construct G. Let (f, g) ∈ (He。(A, B; m))2. We denote:
f = F[Wn∣1,…，W1] and g = F[%∣1,…，q minimal decompositions of f and g (resp.). By
Lem. 20, there are functions f = F[W∣1,..., W1] and g = F[V∣1,..., V] such that:
•	C(f。g-1) = 2n.
•	Vj ∈ [n +1] : discm(F[Wj,...,W1]。Da, F[W7-,...,W1]。DA) ≤ €.
•	Vj ∈ [n +1] : discm(F[V,∙∙∙,V]。Da, F[Vj-,…,V1]。DA) ≤ €.
55
Published as a conference paper at ICLR 2018
We define G(f, g) = f ◦ g-1.
Part 2:	In this part, We show that:
(f,g) ∈ (HeO(A, B； m))2 =⇒ G(f,g) ∈ DPM2ec,+2e (DB； k, 2。胃用)	(117)
By Part 1, C (f o g-1) = 2n = 2。曾石∙ In addition, by the first item of Lem. 5, for D1 :^ g-1 Q DB,
D2 :― Da, D3 :— DB, P ■ f , t ≥ k + CTB we have:
discfc(f og-1 o DB,Db) ≤ disct(f o Da,Db) + disct(!7 -1 o DB,Da)	(118)
Since f ∈ He0 (A, B； m):
disct(f o Da,Db ) ≤ discm(f o Da,Db )+ discm(f o Da,/o DA) ≤ c + E (119)
In addition, by the third item of Lem. 5, for h :— g and m ≥ t + CA B ≥ t + C(g-1), we have:
disct(g-1o DB,Da) ≤ discm(g o Da, Db)
≤ discm(g o Da, DB) + discm(g o Da, g o DA) ≤ s + e
Finally, disck (f o g-1 o DB, Db ) ≤ 2e0 + 2e and we conclude that:
G(f,g) ∈ DPM2e0+2e (B; k, 2CA0,B)
(120)
(121)
Part 3:	In this part, we show that G is an embedding. It requires showing that
G(f,g) E G(f',g') =⇒ (f,g) (DA J (f,力	(122)
DB	DA
Assume by contradiction that G(f,g) 〜 G(f0,g0) and that (f, g) / (f0, g0). Then, we have
m,e2	k,eι
Da	Da
f + f or g + g'
k , eι	k,eι
We denote G(f, g) = f o g-1 and G(f, g') = f o (g')-1 (see Part 1).
(123)
Da	_ Da _
Assume that f + f': By Lem. 22, f + f'. In particular, for every two decompositions:
k,eι	k,eι -2e
f = F[Wn+1,…,W1] and ∕' = F[W山...,W1]	(124)
there is an index i ∈ [n + 1] such that:
disck (F[W,…,W1] o da, F[Wi■I...■) w'] o DA) > e1 - 2e	(125)
The option i = n + 1 is not a possibility, since:
disck (f o Da,J, o DA) ≤disck(f o Da, Db) + disck(f o Da,f o DA)
+ disck (Db ,f' o DA) + disck (f'o Da,/ ' o DA)	(126)
≤26o + 2e ≤ ∈1 — 2e
By the first item of Lem. 5, for D1 :一 Da, D2 :一 g-1 o DB, D3 :一 F[Wi,,..., W] o Da,
p :一 F∖Wi,..., W1] and t ≥ k + CeAIB ≥ k + C(F∖Wi,…，W1]), we have:
disck(F[ Wi,..., Wι]。Da, F [!Wi',..., W1]。DA)
≤ disct(F[Wi,...,	Wι]。g-1 ◦	Db , F[W/,...,IW1 ]。Da)+ disc”。-1。DB ,Da)	(127)
≤ disct(F[Wi,..., W1]。g-1。Db , F[W/,..., W1 ]。DA) + e0
Again, by the first item of Lem. 5, for D1 :一 Da, D2 :一 (g')-1 o Db, D3 :一 F[Wi,…，W1] o
g-1 o Db , p :一 F [Wi,,…,W] and m ≥ t + C*B ≥ t + C (F [Wi/,..., W']), We have:
disct (F[Wi,..., W1]。g-1。Db , F[W；,..., W1]。DA)
≤discm(F[Wi,..., W1]。g-1。Db , F[Wi,..., W1 ]。0)-1。DB) + discm((g,)-1 o DB,Da) (128)
≤discm(F[Wi,...,W1]。g-1。Db , F[Wi0,...,W1 ]。(g')-1。DB) + S
56
Published as a conference paper at ICLR 2018
Therefore, We conclude that:
S- 2E0 - 2e< discm(F[Wi,..., W1]。UT。DB,F[*,..., W0]。(g0)T。DB)	(129)
Alternatively, for any minimal decompositions f。g-1 = F [Wn+ι,..., Wι]。g-1 and f。(gr)-1 =
F [WTn+ι,…，W0]。(g0)-1 there are right partial functions F [Wi,…，Wι]。g-1 and F [W[,…,W0 ]。
(g0)-1 such that:
∈1 - 2f0 - 2e < discm(F [Wn+1, ..., W1]。g-1。DB, F [Wil …,W1]。(g')-1。DB )	(13O)
in contradiction to F(f, g) DB F(f0, g0).
m,e2
Da	_ Da _
Assume that g + g0: By Lem. 22, g + g0. Let
k,eι	k,e∖-2e
g-1 = F[-V1, VT/ɑ,…,V-1∕α, -Cl1ι∕α]
and (g1-1 = FHH)T, (%)-1∕α,...,(匕)-1∕α, -(%"-1∕α]
(131)
be any two minimal decompositions of g-1 and (gz)-1 (resp.). Then, by Lem. 12, there are minimal
decompositions g = F [W+1,…，匕]and g' = F [匕+1,…，%] such that:
∀j ∈ [n]：F[V+1/a, ...,^R-1∕α, -Vn-1ι∕α] ◦ g ◦ DA = -1/a ∙ σ ◦ F[Vj,…,Vι] ◦ DA
and: F[(V0+ι厂 1∕0, ∙∙∙,(匕)-1∕α,-(‰)-1∕α] ◦ g! ◦ DA = -1/a ∙ σ ◦ F[号,...,匕]◦ DA
(132)
_	Da	_
Since g +	g0, there is an index i ∈ [n + 1] such that:
k,eι-2e
disck(FM,..., X]。Da, F[%,...,匕]。DA) > 5-2	(133)
The case i = n + 1 is not a possibility, similarly to Eq. 126. Therefore, there is i ∈ [n] such that
Eq. 133 holds. In addition,
discfc+ι(-1∕ɑ ∙ σ。FM,…,Z]。Da, -1∕α ∙ σ。F[匕,…,匕]。DA)
=disck+ι FM+1∕α, ∙∙∙, Vn-1∕α, -C+ι∕α]。g。Da,
F[(½+ι)-1∕α,∙∙∙, (W厂 1∕α, -(W+ι厂 1∕α]。g' ◦ DA
By Lem. 4, for P :‹-1∕α ∙ σ of complexity 1 we have:
e1 - 2e < disck(FM,…,VI]。DA, FMZ,…,VIl。DA)
≤ disck+1(-1∕α ∙ σ。FM,..., ½]。Da,-1∕α ∙ σ。F[%,...,匕]。DA)
(134)
(135)
In addition, by Lem. 5, for D1	:— g。Da,	D2	■	DB,	D3	:―
F [(¾1)-1∕α,..∙,(匕)-1∕α,-(%+1)T∕α]。gz。Da, t	≥	(k +	1) +	C‰	≥
(k +1) + C (F [%+1∕α,..., MI∕α, -V⅛∕α]), We have:
disck+ι (F[%+1∕α,…,索 1∕α, -C+1∕α]。g。Da,
F[(⅛,+1)-1∕a,∙∙∙,(匕)-1∕α, -(^+ι)T∕α]。g'。DA)
≤ disct (FM+1∕α, ∙∙∙, Vn-1∕α, -C+ι∕α]。DB,
(136)
F[(½+ι)-1∕α,∙∙∙, (W厂 1∕α, -(W+1)-1∕α]。g'。DA) + disct(g。Da, Db)
≤ disct (F[%+1∕α, ∙∙∙,Vn-1∕α,-Vg-+1∕α]。DB,
F[(V'+ι)T∕a, ∙∙∙, (V)-1∕a, -(V+ι)-1∕a]。g'。DA) + S + e
57
Published as a conference paper at ICLR 2018
Again, by Lem. 5, for D1 :^ g0 ◦ Da, D :— DB, D3 ♦- F[匕]/生…,/1/。,-V^/a] ◦ DB,
m ≥ t + CA,b ≥ t + C[F[(%+ι)-1∕α,..., (%)-1∕α, -(%+ι)-1∕α]), We have:
disct(F[%+；/a,…，Vn-1∕α, -Vn+1/a]。DB,
F[(V+1 厂 1∕a,…,(V厂 1∕a, -(V+1 厂 1∕a]。9 ◦ DA)
≤ discm (可匕+1/a,..., Vn-1∕a, - V+ι∕a]。DB,
F [(⅛+ι)-1∕a,..∙, (V 厂 1∕a, -(V+ι 厂 1∕a]。DB) + discm(g, ◦ Da, Db )
≤ discm (FM+1∕a,...,Vn1∕a,-Vn+ι∕a]。DB,
F[(V+ι)-1∕a,..., (V)-1∕a, -(V+ι)-1∕a]。DB) + S + e
Finally,
61 - 2e< discfc(-1∕a ∙ σ。F[V,..., V]。Da,-1∕a ∙ σ。F [V,..., V ]。DA)
≤ disct(F[V+1∕a,...,^V-1∕a,-V+1ι∕a]。DB,
F[(V+ι)-1∕a,..., (V)-1∕a, -(V+ι)-1∕a]。90。DA) + S + e
≤ discm (τ[V+1∕a,..., V-1∕a, - V+1∕a]。DB,
F[(V+ι)-1∕a,..., (V)-1∕a, -(V+ι)-1∕a]。DB) + 2s + 2e
In particular,
62 ≤ 61 - 260 - 4e < discm (F[VV+1∕a, ..., V 1∕a, - V+1∕a]。dB ,
F[(V+ι)-1∕a,..., (V)-1∕a, -(V+ι)-1∕a]。DB)
Alternatively, for any minimal decompositions
f ɔ 9 -1 = F [Wn+1,...,W2,-W1 ∙ V,VT∕a,..., VrI∕a,-V+ι∕a]
and f。(90)T = F[Wn+1,...,W2,-W1∙(V)T,(V)T∕0,..., (V)-1∕α,-(V+ι)-1∕α]
(137)
(138)
(139)
(140)
there are right partial functions
F[匕+1/a,…,V-1 /a, -⅛∕α] and F[(‰)-1∕α,..., (¾)-1∕α,-(¾+1)-1∕α]	(141)
such that Eq. 139 holds, in contradiction to F (f, g) DB F (f ,g0).
m,e2
Part 3: Finally, by Lem. 17 and Lem. 14,
N (HeO (A, B; m), DA) ≤ N ((HeO(A,B； m))2, (DA))
≤ N(DPM2eo+2e(B； k, 2C£b) , jDB2
Alternatively, for all s,气，s,七 such that E < min{(61 - 2e0 - s"4, s∕2},
N(Heo (A, B; m), DA) ≤ N(DPM2e0+2e(B； k, 2C£b) , D2
(142)
(143)
58
Published as a conference paper at ICLR 2018
In particular, we can replace with /2 in the inequality. By Lem. 18, the function q
N(DPM2eo+e(B; k, 2CA0b) , DB) is monotonically decreasing as E tends to 0 and is lower
bounded by N (DPM2e0 (B; k, 2。旌),DB ). Therefore, by the monotone convergence theorem,
the limit lim→0 q exists and upper bounds N
(A, B; m), D
k,1
□
Theorem 1. Let N = SCM[σ] with σ that is Leaky ReLU with parameter 0 < a 6= 1. Assume
Assumptions 1, 2 and 3. Let E0, E1 and E2 be three constants such that E0 < E1/4 and E2 < E1 - 4E0
be three positive constants and A = (XA , DA ) and B = (XB, DB) are two domains. Then,
N H0(A,B),
IN(DPM26o+6 (A； 2CA0,b ),
≤ lim min
→0
N DPM2e0+e (B; 2CA0,b),
(32)

Proof. By Lem. 2, with m = k = ∞, we have:
N
(A,B),DDA ≤ li→m0 N DPM20+ B;2CA0,B) , DDB
(144)
Similarly,
N
(B,A),1D-DB20 ≤ li→m0 N DPM20+B;2CA0,B),DD2B
(145)
By Lem. 23,
N H0(A,B),DDA ≤N
(B,A),1D-DB20
(146)
Since the limits in the RHS of Eqs. 144 and 145 are limits of positive integers, we have:
D	D、	I lime→0 N DPM26o+6 (B; 2CA0b),
N H60(A,B),耳 ≤ min(	〉	'
'	W	I lime→o N DPM260+6 (A； 2CA0b),
(147)
IN(DPM2e0 +6 (B；2CA,b),
≤ lim min
→0

N DPM2e0 +6 (A; 2CA0,b),
□
E	Wasserstein GAN results
It is interesting to check whether the predictions made are valid for other forms of discrepancy such
as the one used in the Wasserstein GAN Arjovsky et al. (2017) (WGAN). This is done below for
Prediction 2, which predicts that the selection of the right number of layers is crucial in unsupervised
learning. In the WGAN experiment, we employ the architecture of (Kim et al., 2017) and vary
the number of layers and inspect the influence on the results. For the generator, the architecture is
identical while for WGAN’s critic, the last sigmoid layer is removed. These experiments were done
on the CelebA dataset, obtaining the results in Fig. 30- 35.
Note that since the encoder and the decoder parts of the learned network are symmetrical, the number
of layers is always even. As can be seen, changing the number of layers has a dramatic effect on the
results. The best overall results are obtained at 6 layers. Using fewer layers, WGAN often fails to
produce images of the desired class. Adding layers, the semantic alignment is lost, as expected.
59
Published as a conference paper at ICLR 2018
F	CycleGAN results
While most of our experiments have focused on the DiscoGAN architecture of Kim et al. (2017), an
additional experiment was conducted in order to verify that these extend to the CycleGAN architecture
of Zhu et al. (2017).
The results are shown in Fig. 36. As can be seen running an experiment on the Aerial images to Maps
dataset, we found that 8 layers produces an aligned solution. Using 10 layers produces unaligned
map images with low discrepancy. For fewer than 8 layer, the discrepancy is high and the images are
not very detailed.
Table 6: Numerical results for the experiment of Cityscapes to Image Segmentation. Standard metrics
are used to evaluate the segmentation accuracy for different number of layers.
	k=2	k=4	k=6	k=8	k = 10	k = 12
Mean pixel accuracy	0.52	0.54	0.53	0.60	0.63	0.51
Mean class accuracy	0.16	0.16	0.19	0.15	0.18	0.11
Mean class IoU	0.10	0.11	0.11	0.10	0.13	0.08
60
Published as a conference paper at ICLR 2018
12
Input 4
6
8
10
Figure 30: Results for celebA Male to Female transfer for WGAN with different number of layers.
61
Published as a conference paper at ICLR 2018
Figure 31: Results for celebA Female to Male transfer for WGAN with different number of layers.
62
Published as a conference paper at ICLR 2018
Number of layers:
Input 4
6	8	10	12
Figure 32: Results for celebA Blond to Black transfer for WGAN with different number of layers.
63
Published as a conference paper at ICLR 2018
Number of layers:
Figure 33: Results for celebA Black to Blond transfer for WGAN networks with different number of
layers.
64
Published as a conference paper at ICLR 2018
Number of layers:
Figure 34: Results for celebA Eyeglasses to Non-Eyeglasses transfer for WGAN with different
number of layers.
65
Published as a conference paper at ICLR 2018
Number of layers:
Figure 35: Results for celebA Non-Eyeglasses to Eyeglasses transfer for WGAN with different
number of layers.
66
Published as a conference paper at ICLR 2018
Number of layers:
Input 2	4	6	8	10
Figure 36: Results for Aerial View Images to Maps transfer for CycleGAN with different number of
layers.	67
Published as a conference paper at ICLR 2018
Figure 37: Results for Segmentations to Images transfer for CycleGAN with different number of
layers.
68