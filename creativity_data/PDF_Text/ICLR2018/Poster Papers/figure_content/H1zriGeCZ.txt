Figure 1: Compressed sensing over the Fourier domain: Harmonica recovers the Fourier coefficients ofa sparse low degree polynomial PS αSΨS (xi) from observations f (xi) of randomly chosen points xi ∈{-1, 1}n.
Figure 2: Distribution of the best results and running time of different algorithmsHarmonica-3Harmonica-3-LcngHaπnonica-2-L0ngHarmonica-2Hannonica-I-Random-SearchHarmonica-ISuccessive halvingHannoniCa∙2-Random-SearChFigure 3: Comparing different variants of Harmonica with SH on test error and running timerate, etc. Table 1 (Section C.1) details the hyperparameters considered. We also include 21 dummyvariables to make the task more challenging. Notice that Hyperband, SH, and Random Searchare agnostic to the dummy variables in the sense that they just set the value of dummy variablesrandomly, therefore select essentially the same set of configurations with or without the dummyvariables. Only Harmonica and Spearmint are sensitive to the dummy variables as they try to learnthe high dimensional function space. To make a fair comparison, we run Spearmint without anydummy variables.
Figure 3: Comparing different variants of Harmonica with SH on test error and running timerate, etc. Table 1 (Section C.1) details the hyperparameters considered. We also include 21 dummyvariables to make the task more challenging. Notice that Hyperband, SH, and Random Searchare agnostic to the dummy variables in the sense that they just set the value of dummy variablesrandomly, therefore select essentially the same set of configurations with or without the dummyvariables. Only Harmonica and Spearmint are sensitive to the dummy variables as they try to learnthe high dimensional function space. To make a fair comparison, we run Spearmint without anydummy variables.
Figure 4: Average test error drops.
Figure 5: Optimization time comparisonTable 3: Stable ranges for parameters in LassoParameter	Stage 1	Stage 2	Stage 3λ	[0.01,4.5]	[。1, 2.5]	[05,1.1]#SamPles	≥ 250	≥ 180	≥ 150C.3 Generalizing from small networks to big networksIn our experiments, Harmonica first runs on a small network to extract important features and thenuses these features to do fine tuning on a big network. Since Harmonica finds significantly bettersolutions, it is natural to ask whether other algorithms can also exploit this strategy to improveperformance.
Figure 6: The estimation error of Harmonica is linear in noise level.
