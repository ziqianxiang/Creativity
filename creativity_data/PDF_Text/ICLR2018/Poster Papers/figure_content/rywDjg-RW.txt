Figure 1: An example input-output spec; the goal is to learn aprogram that maps the given inputs to the corresponding outputsand generalizes well to new inputs. Both programs belowsatisfy the spec: (i) Concat(1st letter of 1st word, 2nd word), (ii)Concat(4th-last letter of 1st word, 2nd word). However, program(i) clearly generalizes better: for instance, its output on “YoshuaBengio” is “Y Bengio” while program (ii) produces “s Bengio”.
Figure 2: A subset of the FlashFill DSL (Gulwani, 2011), used as a running example in this paper.
Figure 3: A portion of the search DAG from Example 2. Only the output parts of the respective specsare shown in each node, their common input state is a single string “Yann". Dashed arrows showrecursive Learn calls on a corresponding DSL symbol.
Figure 4: LSTM-based model for predicting the score of a candidate production for a given spec 夕.
Figure 5:	The controllers for guiding the search process to construct a most generalizable 夕-SatiSfyingprogram set S of size k given the f -predicted best scores s1, . . . , sn of the productions F1, . . . , Fn.
Figure 6:	Neural-guided deductive search over L, parameterized with a branch selection controller C .
