Figure 1: Architectural variants used for each domain. The left-most set illustrates the actor networkand critic torso used for the standard control and manipulation domains. The full critic architectureis completed by feeding the output of the critic torso into a relevant distribution, e.g. the categoricaldistribution, as defined in Section A. The right half of the figure similarly illustrates the architectureused by the parkour domains.
Figure 2: Experimental results across domains in the control suite.
Figure 3: Experimental results for tasks in the manipulation domain.
Figure 4: Example frames taken from trained agents running in the two parkour domains.
Figure 5:	Experimental results for the two-dimensional (walker) parkour domain when comparedfirst versus wall-clock time (top) and versus actor steps (bottom).
Figure 6:	Experimental results for the three-dimensional (humanoid) parkour domain.
Figure 7: Output layers corresponding to different distribution parameterizations. From left to rightthese include the Categorical, Mixture of Gaussians, and finally the standard scalar value function.
Figure 8: Results for using a mixture of Gaussians distribution on select control suite tasks. Shownare two learning rates as denoted in the legends as well as Categorical.
Figure 9: Control Suite domains used for benchmarking. Top: acrobot, cartpole, cheetah, finger,fish, hopper. Bottom: humanoid, manipulator, pendulum, reacher, swimmer6, swimmer15, walker.
Figure 10: Sequences of frames illustrating the dexterous manipulation tasks we attempt to solveusing D4PG. Top to bottom: ‘catch’, ‘pick-up-and-orient’, ‘rotate-in-hand’. The translucent objectsshown in ‘pick-up-and-orient’ and ‘rotate-in-hand’ represent the goal states.
