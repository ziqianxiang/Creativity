Published as a conference paper at ICLR 2020
B-Spline CNNs on Lie Groups
Erik J. Bekkers *
Amsterdam Machine Learning Lab	∙	Centre for Analysis and Scientific Computing
Informatics Institute	∙	Applied Mathematics and Computer Science
University of Amsterdam	∙	Eindhoven University of Technology
e.j.bekkers@uva.nl
Ab stract
Group convolutional neural networks (G-CNNs) can be used to improve classi-
cal CNNs by equipping them with the geometric structure of groups. Central
in the success of G-CNNs is the lifting of feature maps to higher dimensional
disentangled representations in which data characteristics are effectively learned,
geometric data-augmentations are made obsolete, and predictable behavior under
geometric transformations (equivariance) is guaranteed via group theory. Cur-
rently, however, the practical implementations of G-CNNs are limited to either
discrete groups (that leave the grid intact) or continuous compact groups such as
rotations (that enable the use of Fourier theory). In this paper we lift these lim-
itations and propose a modular framework for the design and implementation of
G-CNNs for arbitrary Lie groups. In our approach the differential structure of
Lie groups is used to expand convolution kernels in a generic basis of B-splines
that is defined on the Lie algebra. This leads to a flexible framework that enables
localized, atrous, and deformable convolutions in G-CNNs by means of respec-
tively localized, sparse and non-uniform B-spline expansions. The impact and
potential of our approach is studied on two benchmark datasets: cancer detection
in histopathology slides in which rotation equivariance plays a key role and facial
landmark localization in which scale equivariance is important. In both cases, G-
CNN architectures outperform their classical 2D counterparts and the added value
of atrous and localized group convolutions is studied in detail.
1 Introduction
Group convolutional neural networks (G-CNNs) are a class of neural networks that are equipped
with the geometry of groups. This enables them to profit from the structure and symmetries in
signal data such as images (Cohen & Welling, 2016). A key feature of G-CNNs is that they are
equivariant with respect to transformations described by the group, i.e., they guarantee predictable
behavior under such transformations and are insensitive to both local and global transformations on
the input data. Classical CNNs are a special case of G-CNNs that are equivariant to translations and,
in contrast to unconstrained NNs, they make advantage of (and preserve) the basic structure of signal
data throughout the network (LeCun et al., 1990). By considering larger groups (i.e. considering
not just translation equivariance) additional geometric structure can be utilized in order to improve
performance and data efficiency (see G-CNN literature in Sec. 2).
Part of the success of G-CNNs can be attributed to the lifting of feature maps to higher dimen-
sional objects that are generated by matching kernels under a range of poses (transformations in
the group). This leads to a disentanglement with respect to the pose and together with the group
structure this enables a flexible way of learning high level representations in terms of low-level acti-
vated neurons observed in specific configurations, which we conceptually illustrate in Fig. 1. From
a neuro-psychological viewpoint, this resembles a hierarchical composition from low- to high-level
features akin to the recognition-by-components model by Biederman (1987), a viewpoint which is
also adopted in work on capsule networks (Hinton et al., 2011; Sabour et al., 2017). In particular in
(Lenssen et al., 2018) the group theoretical connection is made explicit with equivariant capsules that
provide a sparse index/value representation of feature maps on groups (Gens & Domingos, 2014).
* Work done at Eindhoven University of Techology
1
Published as a conference paper at ICLR 2020
Roto-translation
2D feature map
group
G feature map (activation for oriented
structures at each position and rotation)
Using a set of transformed
G-conv kernels
G feature map (activation for faces 2D feature map
at each position and rotation)
Using a set of transformed c
Scale-translation /
Activation for circles at each
position and scale
Figure 1: In G-CNNs feature maps are lifted to the high-dimensional domain of the group G
in which features are disentangled with respect to pose/transformation parameters. G-convolution
kernels then learn to recognize high-level features in terms of patterns of relative transformations,
described by the group structure. This is conceptually illustrated for the detection of faces, which in
the SE(2) case are considered as a pattern of lines in relative positions and orientations, or in the
R2 o R+ case as blobs/circles in relative positions and scales.
G-feature maps are equivariant
w.r.t. translatioιi, and rotation
of the input
Projection over sub-group H
guarantees local invariance
Projection layer
Representing low-level features via features maps on groups, as is done in G-CNNs, is also moti-
vated by the findings of Hubel & Wiesel (1959) and Bosking et al. (1997) on the organization of
orientation sensitive simple cells in the primary visual cortex V1. These findings are mathematically
modeled by sub-Riemannian geometry on Lie groups (Petitot, 2003; Citti & Sarti, 2006; Duits et al.,
2014) and led to effective algorithms in image analysis (Franken & Duits, 2009; Bekkers et al.,
2015b; Favali et al., 2016; Duits et al., 2018; Baspinar, 2018). In recent work Montobbio et al.
(2019) show that such advanced V1 modeling geometries emerge in specific CNN architectures and
in Ecker et al. (2019) the relation between group structure and the organization of V1 is explicitly
employed to effectively recover actual V1 neuronal activities from stimuli by means of G-CNNs.
G-CNNs are well motivated from both a mathematical point of view (Cohen et al., 2018a; Kondor
& Trivedi, 2018) and neuro-psychological/neuro-mathematical point of view and their improvement
over classical CNNs is convincingly demonstrated by the growing body of G-CNN literature (see
Sec. 2). However, their practical implementations are limited to either discrete groups (that leave
the grid intact) or continuous, (locally) compact, unimodular groups such as roto-translations (that
enable the use of Fourier theory). In this paper we lift these limitations and propose a framework for
the design and implementation of G-CNNs for arbitrary Lie groups.
The proposed approach for G-CNNs relies on a definition of B-splines on Lie groups which we
use to expand and sample group convolution kernels. B-splines are piece-wise polynomials with
local support and are classically defined on flat Euclidean spaces Rd . In this paper we generalize
B-splines to Lie groups and formulate a definition using the differential structure of Lie groups in
which B-splines are essentially defined on the (flat) vector space of the Lie algebra obtained by the
logarithmic map, see Fig. 2. The result is a flexible framework for B-splines on arbitrary Lie groups
and it enables the construction of G-CNNs with properties that cannot be achieved via traditional
Fourier-type basis expansion methods. Such properties include localized, atrous, and deformable
convolutions in G-CNNs by means of respectively localized, sparse and non-uniform B-splines.
Although concepts described in this paper apply to arbitrary Lie groups, we here concentrate on
the analysis of input data that lives on Rd and consider G-CNNs for affine groups G = Rd o H
2
Published as a conference paper at ICLR 2020
Figure 2: The Log-map allows us to
map elements from curved manifolds
such as the 2-sphere to a flat Euclidean
tangent space. For Lie groups the Log-
map is analytic, globally defined, and
it provides us with a flexible tool to de-
fine group convolution kernels via B-
splines. In our Lie group context the
2-sphere is treated as a quotient group
SO(3)/SO(2). Technical details are
given in Sec. 3 and App. B.
that are the semi-direct product of the translation group with a Lie group H . As such, only a few
core definitions about the Lie group H (group product, inverse, Log, and action on Rd) need to be
implemented in order to build full G-CNNs that are locally equivariant to the transformations in H .
The impact and potential of our approach is studied on two datasets in which respectively rotation
and scale equivariance plays a key role: cancer detection in histopathology slides (PCam dataset)
and facial landmark localization (CelebA dataset). In both cases G-CNNs out-perform their classical
2D counterparts and the added value of atrous and localized G-convolutions is studied in detail.
2	Related work
G-CNNs The introduction of G-CNNs to the machine learning community by Cohen & Welling
(2016) led to a growing body of G-CNN literature that consistently demonstrates an improvement
of G-CNNs over classical CNNs. It can be roughly divided into work on discrete G-CNNs (Co-
hen & Welling, 2016; Dieleman et al., 2016; Winkels & Cohen, 2018; Worrall & Brostow, 2018;
Hoogeboom et al., 2018), regular continuous G-CNNs (Oyallon & Mallat, 2015; Bekkers et al.,
2015a; 2018b; Weiler et al., 2018a; Zhou et al., 2017; Marcos et al., 2017) and steerable contin-
uous G-CNNs (Cohen et al., 2018b; Worrall et al., 2017; Kondor & Trivedi, 2018; Thomas et al.,
2018; Weiler et al., 2018a; Esteves et al., 2018a; Andrearczyk et al., 2019). Since 3D rotations can
only be sampled in very restrictive ways (without destroying the group structure) the construction
of 3D roto-translation G-CNNs is limited. In order to avoid having to sample all together, steer-
able (G-)CNNs can be used. These are specialized G-CNNs in which the kernels are expanded in
circlar/spherical harmonics and computations take place using the basis coefficients only (Chirikjian
& Kyatkin, 2000; Franken, 2008; Almsick, 2007; Skibbe & Reisert, 2017). The latter approach is
however only possible for unimodular groups such as roto-translations.
Scale equivariance In this paper we experiment with scale-translation G-CNNs, which is the first
direct application of G-CNNs to achieve equivariance beyond roto-translations. Scale equivariance
is however addressed in several settings (Henriques & Vedaldi, 2017; Esteves et al., 2018b; Marcos
et al., 2018; Tai et al., 2019; Worrall & Welling, 2019; Jaderberg et al., 2015; Li et al., 2019), of
which (Worrall & Welling, 2019) is most related. There, scale-space theory and semi-group theory
is used to construct scale equivariant layers that elegantly take care of moving band-limits due to
rescaling. Although our work differs in several ways (e.g. non-learned lifting layer, discrete group
convolutions via atrous kernels, semi-group theory), the first two layers of deep scale-space networks
relate to our lifting layer by treating our B-splines as a superposition of dirac deltas transformed un-
der the semi-group action of (Worrall & Welling, 2019), as we show in App. C.1. Li et al. (2019)
achieve scale invariance by sharing weights among kernels with different dilation rates. Their ap-
proach can be considered a special case of our proposed B-spline G-CNNs with kernels that do not
encode scale interactions. Related work by Tai et al. (2019) and Henriques & Vedaldi (2017) relies
on the same Lie group principles as we do in this paper (the Log map) to construct convenient co-
ordinate systems, such as log-polar coordinates Esteves et al. (2018b), to handle equivariance. Such
methods are however generally not translation equivariant and do not deal with local symmetries as
they act globally on feature maps, much like spatial transformer networks (Jaderberg et al., 2015).
B-splines and vector fields in deep learning The current work can be seen as a generalization of
the B-spline based SE(2) CNNs of Bekkers et al. (2015a; 2018b), see Sec. 3.3. Closely related is
also the work of Fey et al. (2018) in which B-splines are used to generalize CNNs to non-Euclidean
3
Published as a conference paper at ICLR 2020
data (graphs). There it is proposed to perform convolution via B-spline kernels on Rd that take as
inputs vectors u(i, j) ∈ Rd that relate any two points i, j ∈ G in the graph to each other. How
u(i, j) is constructed is left as a design choice, however, in (Fey et al., 2018) this is typically done
by embedding the graph in an Euclidean space where points relate via offset vectors. In our work
on Lie G-CNNs, two points g, g0 ∈ G in the Lie group G relate via the logarithmic map u(g, g0) =
Log g-1g0. Another related approach in which convolutions take place on manifolds in terms of
”offset vectors” is the work by Cohen et al. (2019). There, points relate via the exponential map
with respect to gauge frames rather than the left-invariant vector fields as in this paper, see App. C.2.
3	Lie group CNNs
3.1	Preliminaries and notation
The following describes the essential tools required for deriving a generic framework G-CNNs.
Although we treat groups mostly in an abstract setting, we here provide examples for the roto-
translation group and refer to App. B for more details, explicit formula’s, and figures for several
groups. Implementations are available at https://github.com/ebekkers/gsplinets.
Group A group is defined by a set G together with a binary operator ∙, the group product, that
satisfies the following axioms: Closure: For all h, g ∈ G we have h ∙ g ∈ G; Identiy: There exists
an identity element e; Inverse: for each g ∈ G there exists an inverse element g-1 ∈ G such that
g-1 ∙ g = g ∙ g-1 = e; and Associativity: For each g,h,i ∈ G We have (g ∙ h) ∙ i = g ∙ (h ∙ i).
Lie group and Lie algebra If furthermore the group has the structure of a differential manifold
and the group product and inverse are smooth, it is called a Lie group. The differentiability of the
group induces a notion of infinitesimal generators (see also the exponential map below), which are
elements of the Lie algebra g. The Lie algebra consists of a vector space (of generators), that is
typically identified with the tangent space Te(G) at the identity e, together with a bilinear operator
called the Lie bracket. In this work the Lie bracket is not of interest and we simply say g = Te(G).
Exponential and logarithmic map We expand vectors in g in a basis {Ai }in=1 and write A =
Pin aiAi ∈ g, with components a = (a1, . . . , an) ∈ Rn. This allows us to identify the Lie algebra
with Rn . Lie groups come with a logarithmic map that maps elements from the typically non-flat
manifolds G to the flat Euclidean vector space g via A = Log g (conversely g = Exp A), see Fig. 2.
Semi-direct product groups In this paper we specifically consider (affine) Lie groups of type G =
Rd o H that are the semi-direct product of the translation group Rd with a Lie group H that acts on
Rd. Let hx denote the action of h ∈ H on x ∈ Rd; it describes how a vector in Rd is transformed
by h. Then the group product of Rd o H is given by
gι ∙ g2 = (xι, hi) ∙ (x2, h2) = (xι + hi Θ x2, hi ∙ h2),	(1)
with g1 = (x1, h1), g2 = (x2, h2) ∈ G, x1, x2 ∈ Rd and h1, h2 ∈ H. For example the special
Euclidean motion group SE(2) is constructed by choosing H = SO(2), the group of 2 × 2 rotation
matrices with matrix multiplication as the group product. The group product of G is then given by
(Xi, Rθι) ∙ (X2, Rθ2 ) = (Xi + Rθι .X2, Rθ1.Rθ2 ),
with xi , x2 ∈ R2 and Rθ1 , Rθ2 ∈ SO(2) rotation matrices parameterized by a rotation angle θi,
and in which rotations act on vectors in R2 simply by matrix vector multiplication.
Group representations We consider linear transformations LgG→L2 (X) : L2 (X) → L2 (X) that
transform functions (or feature maps) f ∈ L2(X) on some space X as representations ofa group G
if they share the group structure via
(LG1→L2(X) oLG→L2(χ)f)(x) = (LG→L2(χ)f)(χ),
with ◦ denoting function composition. Thus, a concatenation of two such transformations, param-
eterized by gi and g2, can be described by a single transformation parameterized by gi ∙ g2. For
semi-direct product groups G = Rd o H such a representation can be split into
G→L2 (X)
Lg
Rd→L2 (X)	H→L2(X)
Lx	◦ Lh
(2)
Equivariance An operator Φ : L2(X) → L2(Y ) is said to be equivariant to G when it satisfies
∀g∈G :	LgG→L2(Y) ◦ Φ = Φ ◦ LgG→L2(X).
(3)
4
Published as a conference paper at ICLR 2020
3.2	Group convolutional neural networks
Equivariance of artificial neural networks (NNs) with respect to a group G is a desirable property as it
guarantees that no information is lost when applying transformations to the input, the information is
merely shifted to different locations in the network. It turns out that if we want NNs to be equivariant,
then our only option is to use layers whose linear operator is defined by group convolutions. We
summarize this in Thm. 1. To get there, we start with the traditional definition of NN layers via
y = Φ(Kwx + b),
with x ∈ X the input vector, KW : X → Y a linear map parameterized by a weight vector w, with
b ∈ Y a bias term, and φ a point-wise non-linearity. In classical neural networks X = RNx and
Y = RNy are Euclidean vector spaces and the linear map KW = RNy × Nx is a weight matrix. In this
work we instead focus on structured data and consider feature maps on some domain X as functions
f : X → RN, the space of which we denote with (L2(X ))N. In this case X = (L2 (X ))Nx and Y =
(L2(Y))Ny are the spaces of multi-channel feature maps, b ∈ RNy, and KW : X → Y is a kernel
operator. Now when we constrain the linear operator KW to be equivariant under transformations in
some group G we arrive at group convolutional neural networks. This is formalized in the following
theorem on equivariant maps between homogeneous spaces (see (Duits & Burgeth, 2007; Kondor &
Trivedi, 2018; Cohen et al., 2018a) for related statements).
Theorem 1. Let operator K : L2(X) → L2 (Y) be linear and bounded, let X, Y be homogeneous
spaces on which Lie group G act transitively, and dμχ a Radon measure on X, then
1.	K is a kernel operator, i.e., ∃^∈l1 (Y×χ) : (Kf )(y) = JX k(y, x)f (x)dμχ,
2.	under the equivariance constraint of Eq. (3) the map is defined by a one-argument kernel
…=dμ⅞X⅛P)Mg- ® x)	(4)
for any gy ∈ G such that y = gy	y0 for some fixed origin y0	∈ Y,
3.	if Y ≡ G/H is the quotient of G	with H = StabG(y0) = {g	∈ G|g	y0	= y0}	then the
kernel is constrained via
∀h∈H, ∀χ∈χ :	MX) = d"χμχ⅞x)MhT θ x),	(5)
Proof. See App. A
□
Corollary 1. If X = Rd isa homogeneous space ofan affine Lie group G = Rd o H and dμχ (x)=
dx is the Lebesgue measure on Rd then the kernel front-factor simplifies to d*X(g(x；X)=京品
with | det h| denoting the determinant of the matrix representation ofh, for any g = (x, h) ∈ G. If
X = G and dμχ (x) is a Haar measure on G then d/jg(jX) = 1.
In view of Thm. 1 we see that standard CNNs are a special case of G-CNNs that are equivariant
to translations. In this case the domain of the feature maps X = Rd coincides with the space of
translation vectors in the translation group G = (Rd, +). It is well known that if we want the
networks to be translation and rotation equivariant (G = Rd o SO(d)), but stick to planar feature
maps, then the kernels should be rotation invariant, which of course limits representation power.
This constraint is due Thm. 1 item 3, since the domain of such features maps is a quotient group
Rd ≡ G/{0} × SO(d) in which rotations (SO(d)) are factored out of the roto-translation group
G = Rd o SO(d). Thus, in order to maximize representation power (without constrains onk ) the
feature maps should be lifted to the higher dimensional domain of the group itself (i.e. Y = G). We
therefore propose to build G-CNNs with the following 3 types of layers (illustrated in Fig. 1):
•	Lifting layer (X = Rd , Y = G): In this layer K is defined by lifting correlations
(Kf Xg)=施f Xg) := 1⅛ (LG-L2(Rd)k,f工您,dχ),
with g = (x, h), which by splitting of the representation (Eq. (2)) can be written as
(Kf)(g) = (k?f)(g) = (kh ?Rdf)(x),
(6)
5
Published as a conference paper at ICLR 2020
with kh(x) = । d2 h∣ (LH→L2(R )k) (χ) the transformed kernel. Lifting correlations thus
match a kernel with the input feature map under all possible transformations in G.
•	Group correlation layer (X = G, Y = G): In this case K is defined by group correlations
(KF)(g)=(K?F)(g):=
(LG-L2(G)K，F U")=/ K(OTg)F ⑼",
with dμ(g) a Haar measure on G. We can again split this cross-correlation into a transfor-
mation of K followed by a spatial cross-correlation via
(KF)(g)=(K?F)(g)=(Kh?RdF)(x),
(7)
• .1 T√- / ~ T^ ∖ T7∕7 一 1 ~ 7 — 1 T ∖ .1	1	1	1 . Γ∙	1 1 7 -TT Λ
with Kh(x, h) = K( h 1 Θ X, h 1 ∙ h) the convolution kernel transformed by h ∈ H and
in which we overload ?Rd to indicate cross-correlation on the Rd part of G = Rd o H.
•	Projection layer (X = G, Y = Rd): In this case K is a linear projection defined by
(KF)(X) =
H
F(x, h)dμ(h),
(8)
where we simply integrate over H instead of using a kernel that would otherwise be con-
stant over H and spatially isotropic with respect to H.
App. B provides explicit formula’s for these layers for several groups. E.g., in the SE(2) we get:
SE(2)-lifting:
(k?f )(x,θ) = k k(R-1.(x0- x))f (x0)dx0,
R2
SE(2)-correlation: (K ?F)(x, θ) =	K (Rθ-1.(x0 - x), θ0 - θ mod 2π)F(x0, θ0)dx0dθ0.
R2 S1
3.3 B-Splines on Lie groups
Central in our formulation of G-CNNs is the transformation of convolution kernels under the action
of H as described above in Eqs. (6) and (7) in the continuous setting. For the implementation of
G-CNNs the kernels and their transformations need to be sampled on a discrete grid. We expand
on the idea’s in (Bekkers et al., 2015a; 2018b; Weiler et al., 2018b) to express the kernels in an
analytic form which we can then sample under arbitrary transformations in G to perform the actual
computations. In particular we generalize the approach of Bekkers et al. (2015a; 2018b) to expand
group correlation kernels in a basis of shifted cardinal B-splines, which are localized polynomial
functions on Rd with finite support. In (Bekkers et al., 2015a; 2018b), B-splines on Rd could be used
to construct kernels on SE(2) by identifying the group with the space of positions and orientations
and simply using periodic splines on the 1D orientation axis S1. However, in order to construct
B-splines on arbitrary Lie groups, we need a generalization. In the following we propose a new
definition of B-splines on Lie groups H which enables us to construct the kernels on Rd o H that
are required in the G-correlations (Eq. (7)).
Definition 1 (Cardinal B-spline on Rn). The 1D cardinal B-Spline of degree n be is defined as
Bn(X) = (1[-2,1 ] *(n) 1[-1,2)⑺，	⑼
where *(n) denotes n -fold convolution ofthe indicator function 1[-1 i『The multi-variate cardinal
B-spline on Rd, with coordinates x = (x0, . . . , xd)T ∈ Rd, is defined via the tensor product
BRd,n(x):=(Bn 0∙∙∙0 Bn)(x) = Bn(xo)Bn (xι)... Bn (xd).	(10)
、--------V--------}
d times
Cardinal B-splines are piece-wise polynomials and are localized on support [- n++1, n+1 ]. Functions
can be expanded in a basis of shifted cardinal B-splines, which we simply refer to as B-splines.
6
Published as a conference paper at ICLR 2020
x - xi
(11)
Definition 2 (B-splines on Rn). A B-spline is a function f : Rd → R expanded in a basis that
consists of shifted and scaled copies of the cardinal B-spline
N
f(x) :=XciBRd,n
i=1
and is fully characterized by spline degree n, scale sx, set of centers {xi }iN=1 with xi ∈ Rd and
corresponding coefficients c = (c1, c2, . . . , cN)T ∈ RN. The B-spline is called uniform if the set of
centers {xi}iN=1 forms a uniform grid on Rd, in which the distance kxj - xik between neighbouring
centers xi , xj ∈ Rd is constant along each axis and equal to sx.
Definition 3 (B-splines on Lie group H). A B-spline on H is a function f : H → R expanded in a
basis that consists of shifted (by left multiplication) and scaled copies of the cardinal B-spline
f(h) ：= X CiBRd，n (Logsh-Ih),	(12)
i=1	h
with h ∈ H and Log : H → h the logarithmic map on H. The B-spline is fully characterized by
the spline degree n, scale sh, set of centers {hi }iN=1 with hi ∈ H and corresponding coefficients
c = (c1, c2, . . . , cN)T ∈ RN. The spline is called uniform if the distance kLog hi-1 hj k between
neighbouring centers hi , hj ∈ H is constant.
Examples of B-splines on Lie groups H are given in Fig. 3. In this paper we choose to expand
convolution kernels on G = Rd o H as the tensor product of B-splines on Rd and H respectively
and obtain functions f : Rd × H via
f (X, h) ：= Xx CiBRd，n (^-X ) BRd,n ( LOgSh-Ih ) .	(13)
Note that that one could also directly define B-splines on G via (12), however, this splitting ensures
we can use a regular Cartesion grid on the Rd part. In our experiments we use B-splines as in (13)
and consider the coefficients c as trainable parameters and the centers (Xi and/or hi) and scales (sx
and/or sh) are fixed by design. Some design choices are the following (and illustrated in Fig. 4).
Global vs localized uniform B-splines The notion of a uniform B-spline globally covering H exists
only for a small set of Lie groups, e.g. for any 1D group and abelian groups, and it is not possible to
construct uniform B-splines on Lie groups in general due to non-zero commutators. Nevertheless,
we find that it is possible to construct approximately uniform B-splines on compact groups either by
constructing a grid of centers {hi}iN=1 on H that approximately uniformly covers H, e.g. by using a
repulsion model in which ∣∣Log h-1 ∙ hj ∣∣ between any two grid points hi, hj ∈ H is maximized (as
is done in Fig. 3), or by specifying a uniform localized grid on the lie algebra h and obtaining the
centers via the exponential map. The latter approach is in fact possible for any Lie group and leads
to a notion of localized convolution kernels that have a finite support on H, see Fig. 4.
Atrous B-splines Atrous convolutions, i.e. convolutions with sparse kernels defined by weights
interleaved with zeros (Holschneider et al., 1990), are commonly used to increase the effective
receptive field size and add a notion of scale to deep CNNs (Yu & Koltun, 2016; Chen et al., 2018).
Atrous convolution kernels can be constructed with B-splines by fixing the scale factors sx and sh,
e.g. to the grid size, and increasing the distance between the center points Xi and hi .
Non-uniform/deformable B-splines In non-uniform B-splines the centers Xi and hi do not neces-
sarily need to lie on a regular grid. Then, deformable CNNs, first proposed by Dai et al. (2017), are
obtained by treating the centers as trainable parameters. For B-spline CNNs on Rd of order n = 1
this in fact leads to the deformable convolution layers as defined in (Dai et al., 2017).
Modular design The design of G-correlation layers (Eqs. (6-8)) using B-spline kernels (Eqs. (11-
13)) results in a generic and modular construction of G-CNNs that are equivariant to Lie groups G
and only requires a few group specific definitions (see examples in App. B): The group structure of
H (group product ∙ and inverse), the action Θ of H on Rd (together with the group structure of H
this automatically defines the structure of G = Rd o H), and the logarithmic map Log : H → h.
7
Published as a conference paper at ICLR 2020
Partition of unity
一人.
B-Spline
S1 ≡ SO(2), N=8
+
+...
{
(R+,∙),N=6
+
+..
S2 ≡ SO(3)/SO(2), N=50
+
N=500
N=5000
+..
Figure 3: Left: The sum of all B-spline basis functions add up to one, illustrating partition of unity
on the 2D rotation group SO(2) (row 1), SCaling/dilation group (R+, ∙) (row 2), and the sphere S2
treated as the quotient group SO(3)/SO(2), with B-spline centers indicated with green dots (row
3-5). Right: A random B-SPline on SO(2) (row 1) and (R+, ∙) (row 2) and reconstruction of a color
texture on the sphere S2 at several sCales (row 3-5) to illustrate multi-sCale properties.
+... =
+... =
Figure 4: A B-Spline on R2
(row 1), sampled on a grid
(row 2), and a B-spline on
the sphere (row 3). From
left to right: a localized ker-
nel, scaled kernel by increas-
ing sx and sh , atrous kernel,
deformable kernel. A green
circle is drawn around each B-
spline center with radius 2 sx
or 2 sh to indicate the individ-
ual basis functions.
8
Published as a conference paper at ICLR 2020
4	Experiments
4.1	Roto-translation CNNs
Data The PatchCamelyon (PCam) dataset (Veeling et al., 2018) consists of 327,680 RGB patches
taken from histopathologic scans of lymph node sections and is derived from Camelyon16 (Ehte-
shami Bejnordi et al., 2017). The patches are binary labeled for the presence of metastasis. The
classification problem is truly rotation invariant as image features appear under arbitrary rotations at
all levels of abstraction, e.g. from edges (low-level) to individual cells to the tissue (high-level).
Experiments G-CNNs ensure roto-translation equivariance both locally (low-level) and globally
(high-level) and invariance is achieved by means of pooling. In our experiments we test the perfor-
mance of roto-translation G-CNNs (with G = R2 o SO(2)) against a 2D baseline and investigate
the effect of different choices (local, global, atrous) for defining the kernels on the SO(2)-part of the
network, cf. Eq. (13) and Fig. 4. Each network has the same architecture (detailed in App. D) but
the kernels are sampled with varying resolution on H = SO(2), denoted with Nh, and with varying
resolution of the B-splines, which is achieved by varying sh and the number of basis functions on H,
denoted with Nk. Each network has approximately the same number of trainable weights. Each net-
work is trained with data-augmentation (see App. D for details), but for reference we also compare
to a 2D and a SE(2) model (Nk = Nh = 12) which are trained without 90° rotation augmentation.
The results are summarized in Fig. 5. Here Nh = 1 means the kernels are transformed for only one
rotation, which coincides with standard 2D convolutions (our baseline). A result labeled ”dense”
with Nh = 16 and Nk = 8 means the convolution kernels are rotated 16 times and the kernels are
expanded in a B-spline basis with 8 basis functions to fully cover H . The label ”local” means the
basis is localized with Nk basis functions with a spacing of Sh =需 between them, with Sh equal
to the grid resolution. Atrous kernels are spaced equidistantly on H and have Sh《 N∏.
Nh
Results We generally observe that a finer sampling ofSO(2) leads to better results up until Nh = 12
after which results slightly degrade. This is line with findings in (Bekkers et al., 2018a). The
degradation after this point could be explained by overfitting; there is a limit on the resolution of the
signal generated by rotating 5x5 convolution kernels; at some point the splines are described in more
detail than the data and thus an unnecessary amount of coefficients are trained. One could still benefit
from sampling coarse kernels (low Nk) on a fine grid (high Nh), e.g. compare the cases Nh > Nk
for fixed Nk. This is in line with findings in (Weiler et al., 2018b) where a fixed circular harmonic
basis is used. Generally, atrous kernels tend to outperform dense kernels as do the localized kernels
in the low Nk regime. Finally, comparing the models with and without 90° augmentation show that
such augmentations are crucial for the 2D model but hardly affect the SE(2) model. Moreover,
the SE(2) model without outperforms the 2D model with augmentation. This confirms the theory:
G-CNNs guarantee both local and global equivariance by construction, whereas with augmentations
valuable network capacity is spend on learning (only) global invariance. The very modest drop in
the SE(2) case may be due to the discretization of the network on a grid after which it is no longer
purely equivariant but rather approximately, which may be compensated for via augmentations.
4.2	Scale-translation CNNs
Data The CelebA dataset (Liu et al., 2015) contains 202,599 RGB images of varying size of celebri-
ties together with labels for attributes (hair color, glasses, hat, etc) and 5 annotated facial landmarks
(2 eyes, 1 nose, 2 corners of the mouth). We reformatted the data as follows. All images are isotrop-
ically scaled to a maximum width or height of 128 and if necessary padded in the other dimension
with zeros to obtain a size of 128x128. For each image we took the distance between the eyes as a
reference for the size of the face and categorized each image into above and below average size. For
each unique celebrity with at least 1 image per class, we randomly sampled 1 image per class. The
final dataset consists of 17,548 images of 128x128 of 8,774 celebrities with faces at varying scales.
Each image is labeled with 5 heatmaps constructed by sampling a Gaussian with standard deviation
1.5 centered around each landmark.
Experiments We train a scale-translation G-CNN (with G = R2 o R+) with different choices for
kernels. The ”dense” networks have kernels defined over the whole discretization of H = R+
and thus consider interactions between features at all scales. The ”local” networks consider only
9
Published as a conference paper at ICLR 2020
0.880
0.875
0.870
0.865
0.860
0.855
0.850
0.845
Figure 5: Left: results of roto-translation G-CNNs on tumor classification (PCam dataset). Right:
results of scale-translation G-CNNs on landmark localization (CelebA dataset).
interaction between neighbouring scales via localized kernels (Nk = 3) or no scale interaction at all
(Nk = 1). Either way, each G-CNN is a multi-scale network in which kernels are applied at a range
of scales. We compared against a 2D baseline with fixed-scale kernels which we tested for several
scales separately. In the G-CNNs, H is uniformly sampled (w.r.t. to the metric on H) on a fixed scale
range, generating the discrete sets Hd = {e(i-1)sh }iN=h1
with Sh = 2 ln 2. Each G-CNN is sampled
with the same resolution in H with sh, and each B-spline basis function is centered on the discrete
grid (i.e. hi ∈ Hd). We note that the discretization of H is formally no longer a group as it is not
closed, however, the group structure still applies locally. The result is that information may leak out
of the domain in a similar way as happens spatially in standard zero-padded 2D CNNs (translational
G-CNNs), in which the discretized domain of translations is also no longer (locally) compact. This
information leak can be avoided by using localized kernels of size Nk = 1 along the H axis, as
is also done in (Worrall & Welling, 2019; Li et al., 2019). The networks are trained without data-
augmentation, except for the 2D network, which for reference we train with and without random
scale augmentations at train-time. Augmentations were done with a random scale-factor between 1
and 1.4. We found that scale augmentations beyond 1.4 did not improve results.
Results Fig. 5 summarizes the results. By testing our 2D baseline at several scales we observe that
there is an optimal scale (h = 2) that gives a best trade off between the scale variations in the data.
This set of experiments is also used to rule out the idea that G-CNNs outperform the 2D baseline
simply because they have a larger effective receptive field size. For large scale ranges the G-CNNs
start to outperform 2D CNNs as these networks consider both small and large scale features simul-
taneously (multi-scale behavior). Comparing different G-CNN kernel specifications we observe that
enabling interactions between neighbouring scales, via localized kernels on H (”local”, Nh = 3),
outperforms both all-scale interactions (”dense”) and no-scale interaction at all (Nh = 1). This
finding is in line with those in (Worrall & Welling, 2019). Finally, although 2D CNNs moderately
benefit from scale augmentations, it is not possible to achieve the performance of G-CNNs. It seems
that a multi-scale approach (G-CNNs) is essential.
5	Conclusion
This paper presents a flexible framework for building G-CNNs for arbitrary Lie groups. The pro-
posed B-spline basis functions, which are used to represent convolution kernels, have unique prop-
erties that cannot be achieved by classical Fourier based basis functions. Such properties include the
construction of localized, atrous, and deformable convolution kernels. We experimentally demon-
strated the added value of localized and atrous group convolutions on two different applications,
considering two different groups. In particular in experiments with scale-translation G-CNNs, ker-
nel localization was important. The B-spline basis functions can be considered as smooth pixels on
Lie groups and they enable us to design G-CNNs using familiar notions from classical CNN design
(localized, atrous, and deformable convolutions). Future work will focus on exploring these options
further in new applications that could benefit from equivariance constraints, for which the tools now
are available for a large class of transformation groups via the proposed Lie group B-splines.
10
Published as a conference paper at ICLR 2020
Acknowledgments
Remco Duits (Eindhoven University of Technology (TU/e)) is gratefully acknowledged for his con-
tributions to the formulation and proof of Thm. 1 and for helpful discussions on Lie groups. I thank
Maxime Lafarge (TU/e) for advice on setting up the PCam experiments. This work is part of the
research programme VENI with project number 17290, which is (partly) financed by the Dutch
Research Council (NWO).
References
M.A. Almsick, van. Context models of lines and contours. PhD Thesis, Department of Biomedical
Engineering, 2007.
Vincent Andrearczyk, Julien Fageot, Valentin Oreiller, Xavier Montet, and Adrien Depeursinge. Ex-
ploring local rotation invariance in 3d {CNN}s with steerable filters. In International Conference
on Medical Imaging with Deep Learning Full Paper Track, London, United Kingdom, July 2019.
URL https://openreview.net/forum?id=H1gXZLzxeE.
Wolfgang Arendt and Alexander V Bukhvalov. Integral representations of resolvents and semi-
groups. In Forum Mathematicum, volume 6, pp. 111-136. Walter de Gruyter, Berlin/New York,
1994.
Emre Baspinar. Minimal Surfaces in Sub-Riemannian Structures and Functional Geometry of the
Visual Cortex. PhD Thesis, alma, 2018. URL http://amsdottorato.unibo.it/8661/.
Erik J Bekkers, Remco Duits, and Marco Loog. Training of Templates for Object Recognition in In-
vertible Orientation Scores: Application to Optic Nerve Head Detection in Retinal Images. In X-C
Tai, E Bae, TF Chan, and M Lysaker (eds.), Energy Minimization Methods in Computer Vision and
Pattern Recognition, volume 8932 of Lecture Notes in Computer Science, pp. 464-477. Springer
InternationalPublishing, 2015a.ISBN978-3-319-14611-9. doi:10.1007/978-3-319-14612-6_34.
URL http://dx.doi.org/10.1007/978-3-319-14612-6_34.
Erik J Bekkers, Remco Duits, Alexey P Mashtakov, and Gonzalo R Sanguinetti. A PDE Approach
to Data-Driven Sub-Riemannian Geodesics in SE(2). SIAM Journal on Imaging Sciences, 8
(4):2740-2770, 2015b. doi: 10.1137/15M1018460. URL https://doi.org/10.1137/
15M1018460.
Erik J Bekkers, Maxime W Lafarge, Mitko Veta, Koen A J Eppenhof, Josien P W Pluim, and
Remco Duits. Roto-Translation Covariant Convolutional Networks for Medical Image Analysis.
In Alejandro F. Frangi, Julia A. Schnabel, Christos Davatzikos, Carlos Alberola-Lpez, and Gabor
Fichtinger (eds.), Medical Image Computing and Computer Assisted Intervention MICCAI 2018,
pp. 440-448, Cham, 2018a. Springer International Publishing. ISBN 978-3-030-00928-1. URL
https://arxiv.org/pdf/1804.03393.pdf.
Erik J Bekkers, Marco Loog, Bart M ter Haar Romeny, and Remco Duits. Template matching
via densities on the roto-translation group. IEEE transactions on pattern analysis and machine
intelligence, 40(2):452-466, 2018b. doi: 10.1109/TPAMI.2017.2652452. URL https://doi.
org/10.1109/TPAMI.2017.2652452.
Irving Biederman. Recognition-by-components: a theory of human image understanding. Psycho-
logical review, 94(2):115, 1987.
William H Bosking, Ying Zhang, Brett Schofield, and David Fitzpatrick. Orientation selectivity and
the arrangement of horizontal connections in tree shrew striate cortex. Journal of neuroscience,
17(6):2112-2127, 1997.
Henri Bouma, Anna Vilanova, Javier Olivn Bescs, Bart M ter Haar Romeny, and Frans A Gerritsen.
Fast and accurate Gaussian derivatives based on B-splines. In International Conference on Scale
Space and Variational Methods in Computer Vision, pp. 406-417. Springer, 2007.
11
Published as a conference paper at ICLR 2020
L. Chen, G. Papandreou, I. Kokkinos, K. Murphy, and A. L. Yuille. DeepLab: Semantic Image
Segmentation with Deep Convolutional Nets, Atrous Convolution, and Fully Connected CRFs.
IEEE Transactions on Pattern Analysis and Machine Intelligence, 40(4):834-848, April 2018.
ISSN 0162-8828. doi: 10.1109/TPAMI.2017.2699184.
Gregory S Chirikjian and Alexander B Kyatkin. Engineering applications of noncommutative har-
monic analysis: with emphasis on rotation and motion groups. CRC press, 2000.
Giovanna Citti and Alessandro Sarti. A cortical based model of perceptual completion in the roto-
translation space. Journal of Mathematical Imaging and Vision, 24(3):307-326, 2006.
Taco Cohen, Mario Geiger, and Maurice Weiler. A General Theory of Equivariant CNNs on Homo-
geneous Spaces. arXiv preprint arXiv:1811.02017, 2018a.
Taco Cohen, Maurice Weiler, Berkay Kicanaoglu, and Max Welling. Gauge Equivariant Convolu-
tional Networks and the Icosahedral CNN. In International Conference on Machine Learning,
pp. 1321-1330, 2019.
Taco S Cohen and Max Welling. Group equivariant convolutional networks. In Int. Conf. on Machine
Learning, pp. 2990-2999, 2016.
Taco S Cohen, Mario Geiger, Jonas Khler, and Max Welling. Spherical CNNs. In Proceedings of
the 6th International Conference on Learning Representations (ICLR), 2018b.
Jifeng Dai, Haozhi Qi, Yuwen Xiong, Yi Li, Guodong Zhang, Han Hu, and Yichen Wei. Deformable
convolutional networks. In International Conference on Computer Vision (ICCV), 2017.
Sander Dieleman, Jeffrey De Fauw, and Koray Kavukcuoglu. Exploiting cyclic symmetry in convo-
lutional neural networks. In Proceedings of the International Conference on Machine Learning,
2016.
R. Duits. Perceptual organization in image analysis. PhD thesis, Eindhoven University of Technol-
ogy, the Netherlands, 2005.
R. Duits, S. P. L. Meesters, J.-M. Mirebeau, and J. M. Portegies. Optimal Paths for Variants of
the 2d and 3d ReedsShepp Car with Applications in Image Analysis. Journal of Mathematical
Imaging and Vision, February 2018. ISSN 1573-7683. doi: 10.1007/s10851-018-0795-z. URL
https://doi.org/10.1007/s10851-018-0795-z.
Remco Duits and Bernhard Burgeth. Scale spaces on Lie groups. In International Conference on
Scale Space and Variational Methods in Computer Vision, pp. 300-312. Springer, 2007.
Remco Duits, Ugo Boscain, Francesco Rossi, and Yuri Sachkov. Association fields via cuspless sub-
Riemannian geodesics in SE (2). Journal of mathematical imaging and vision, 49(2):384-417,
2014.
Alexander S. Ecker, Fabian H. Sinz, Emmanouil Froudarakis, Paul G. Fahey, Santiago A. Cadena,
Edgar Y. Walker, Erick Cobos, Jacob Reimer, Andreas S. Tolias, and Matthias Bethge. A rotation-
equivariant convolutional neural network model of primary visual cortex. In International Confer-
ence on Learning Representations, 2019. URL https://openreview.net/forum?id=
H1fU8iAqKX.
Babak Ehteshami Bejnordi, Mitko Veta, Paul Johannes van Diest, Bram van Ginneken, Nico
Karssemeijer, Geert Litjens, Jeroen A. W. M. van der Laak, and and the CAMELYON16 Con-
sortium. Diagnostic Assessment of Deep Learning Algorithms for Detection of Lymph Node
Metastases in Women With Breast CancerMachine Learning Detection of Breast Cancer Lymph
Node MetastasesMachine Learning Detection of Breast Cancer Lymph Node Metastases. JAMA,
318(22):2199-2210, 2017. ISSN 0098-7484. doi: 10.1001/jama.2017.14585. URL https:
//doi.org/10.1001/jama.2017.14585.
Carlos Esteves, Christine Allen-Blanchette, Ameesh Makadia, and Kostas Daniilidis. Learning
SO(3) Equivariant Representations with Spherical CNNs. 2018a. URL https://arxiv.
org/pdf/1711.06721v2.pdf.
12
Published as a conference paper at ICLR 2020
Carlos Esteves, Christine Allen-Blanchette, Xiaowei Zhou, and Kostas Daniilidis. Polar Transformer
Networks. In International Conference on Learning Representations, 2018b. URL https:
//openreview.net/forum?id=HktRlUlAZ.
Marta Favali, Samaneh Abbasi-Sureshjani, Bart ter Haar Romeny, and Alessandro Sarti. Analysis
of vessel connectivities in retinal images by cortically inspired spectral clustering. Journal of
Mathematical Imaging and Vision, 56(1):158-172, 2016.
Matthias Fey, Jan Eric Lenssen, Frank Weichert, and Heinrich Mller. SplineCNN: Fast geomet-
ric deep learning with continuous B-spline kernels. In Proceedings of the IEEE Conference on
Computer Vision and Pattern Recognition, pp. 869-877, 2018.
Erik Franken and Remco Duits. Crossing-preserving coherence-enhancing diffusion on invertible
orientation scores. International Journal of Computer Vision, 85(3):253, 2009.
Erik M Franken. Enhancement of crossing elongated structures in images. PhD thesis, Eindhoven
University of Technology, Eindhoven, The Netherlands, 2008.
Robert Gens and Pedro M Domingos. Deep symmetry networks. In Advances in neural information
processing systems, pp. 2537-2545, 2014.
Joao F Henriques and Andrea Vedaldi. Warped convolutions: Efficient invariance to spatial trans-
formations. In Proceedings of the 34th International Conference on Machine Learning-Volume
70, pp. 1461-1469. JMLR. org, 2017.
Geoffrey E Hinton, Alex Krizhevsky, and Sida D Wang. Transforming auto-encoders. In Interna-
tional Conference on Artificial Neural Networks, pp. 44-51. Springer, 2011.
Matthias Holschneider, Richard Kronland-Martinet, Jean Morlet, and Ph Tchamitchian. A real-time
algorithm for signal analysis with the help of the wavelet transform. In Wavelets, pp. 286-297.
Springer, 1990.
Emiel Hoogeboom, Jorn WT Peters, Taco S Cohen, and Max Welling. HexaConv. In Proceedings
of the International Conference on Learning Representations (ICLR), 2018.
D. H. Hubel and T. N. Wiesel. Receptive fields of single neurones in the cat’s striate cortex. The
Journal of Physiology, 148(3):574-591, 1959. ISSN 1469-7793. doi: 10.1113/jphysiol.1959.
sp006308. URL http://dx.doi.org/10.1113/jphysiol.1959.sp006308.
Max Jaderberg, Karen Simonyan, Andrew Zisserman, and others. Spatial transformer networks. In
Advances in neural information processing systems, pp. 2017-2025, 2015.
L. V. Kantorovich and G. P. Akilov. Functional analysis. English transl.: Pergamon Press, Oxford,
Moscow (1977) (Russian), 2nd rev. ed, ’nauka’ edition, 1982.
Risi Kondor and Shubhendu Trivedi. On the Generalization of Equivariance and Convolution in
Neural Networks to the Action of Compact Groups. In Jennifer Dy and Andreas Krause (eds.),
Proceedings of the 35th International Conference on Machine Learning, volume 80 of Proceed-
ings of Machine Learning Research, pp. 2747-2755, Stockholmsmssan, Stockholm Sweden, July
2018. PMLR. URL http://proceedings.mlr.press/v80/kondor18a.html.
Yann LeCun, Bernhard E Boser, John S Denker, Donnie Henderson, Richard E Howard, Wayne E
Hubbard, and Lawrence D Jackel. Handwritten digit recognition with a back-propagation net-
work. In Advances in neural information processing systems, pp. 396-404, 1990.
Jan Eric Lenssen, Matthias Fey, and Pascal Libuschewski. Group equivariant capsule networks. In
Advances in Neural Information Processing Systems, pp. 8844-8853, 2018.
Yanghao Li, Yuntao Chen, Naiyan Wang, and Zhaoxiang Zhang. Scale-Aware Trident Networks for
Object Detection. In The IEEE International Conference on Computer Vision (ICCV), October
2019.
Ziwei Liu, Ping Luo, Xiaogang Wang, and Xiaoou Tang. Deep Learning Face Attributes in the Wild.
In Proceedings of International Conference on Computer Vision (ICCV), December 2015.
13
Published as a conference paper at ICLR 2020
Diego Marcos, Michele Volpi, Nikos Komodakis, and Devis Tuia. Rotation Equivariant Vector Field
Networks. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,
pp. 5048-5057, 2017.
Diego Marcos, Benjamin Kellenberger, Sylvain Lobry, and Devis Tuia. Scale equivariance in CNNs
with vector fields. arXiv preprint arXiv:1807.11783, 2018.
Noemi Montobbio, Giovanna Citti, and Alessandro Sarti. From receptive profiles to a metric model
of V1. Journal of computational neuroscience, 46(3):257-277, 2019.
Edouard Oyallon and Stphane Mallat. Deep roto-translation scattering for object classification. In
Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pp. 2865-
2873, 2015.
Jean Petitot. The neurogeometry of pinwheels as a sub-Riemannian contact structure. Journal of
Physiology-Paris, 97(2-3):265-309, 2003.
Jorg Portegies, Gonzalo Sanguinetti, Stephan Meesters, and Remco Duits. New approximation of a
scale space kernel on SE (3) and applications in neuroimaging. In International Conference on
Scale Space and Variational Methods in Computer Vision, pp. 40-52. Springer, 2015.
Sara Sabour, Nicholas Frosst, and Geoffrey E Hinton. Dynamic routing between capsules. In
Advances in neural information processing systems, pp. 3856-3866, 2017.
Henrik Skibbe and Marco Reisert. Spherical Tensor Algebra: A Toolkit for 3d Image Pro-
cessing. Journal of Mathematical Imaging and Vision, 58(3):349-381, 2017. doi: 10.1007/
s10851- 017- 0715- 7. URL https://doi.org/10.1007/s10851-017-0715-7.
Kai Sheng Tai, Peter Bailis, and Gregory Valiant. Equivariant Transformer Networks. arXiv preprint
arXiv:1901.11399, 2019.
Nathaniel Thomas, Tess Smidt, Steven Kearnes, Lusann Yang, Li Li, Kai Kohlhoff, and Patrick
Riley. Tensor Field Networks: Rotation-and Translation-Equivariant Neural Networks for 3d
Point Clouds. arXiv preprint arXiv:1802.08219, 2018.
Bastiaan S. Veeling, Jasper Linmans, Jim Winkens, Taco Cohen, and Max Welling. Rotation Equiv-
ariant CNNs for Digital Pathology. In Alejandro F. Frangi, Julia A. Schnabel, Christos Davatzikos,
Carlos Alberola-Lpez, and Gabor Fichtinger (eds.), Medical Image Computing and Computer As-
sisted Intervention MICCAI 2018, pp. 210-218, Cham, 2018. Springer International Publishing.
ISBN 978-3-030-00934-2.
Maurice Weiler, Mario Geiger, Max Welling, Wouter Boomsma, and Taco Cohen. 3d Steerable
CNNs: Learning Rotationally Equivariant Features in Volumetric Data. In Advances in Neu-
ral Information Processing Systems 31: Annual Conference on Neural Information Processing
Systems 2018, NeurIPS 2018, 3-8 December 2018, Montral, Canada., pp. 10402-10413, 2018a.
Maurice Weiler, Fred A Hamprecht, and Martin Storath. Learning Steerable Filters for Rotation
Equivariant CNNs. In International Conference on Computer Vision and Pattern Recognition,
2018b.
Marysia Winkels and Taco S Cohen. 3d G-CNNs for Pulmonary Nodule Detection. In Internation
Conference on Medical Imaging with Deep Learning (MIDL), 2018.
Daniel Worrall and Gabriel Brostow. CubeNet: Equivariance to 3d Rotation and Translation. In
Vittorio Ferrari, Martial Hebert, Cristian Sminchisescu, and Yair Weiss (eds.), Computer Vision
ECCV 2018, pp. 585-602, Cham, 2018. Springer International Publishing. ISBN 978-3-030-
01228-1.
Daniel E Worrall and Max Welling. Deep Scale-spaces: Equivariance Over Scale. arXiv preprint
arXiv:1905.11697, 2019.
Daniel E Worrall, Stephan J Garbin, Daniyar Turmukhambetov, and Gabriel J Brostow. Harmonic
networks: Deep translation and rotation equivariance. In Proc. IEEE Conf. on Computer Vision
and Pattern Recognition (CVPR), volume 2, 2017.
14
Published as a conference paper at ICLR 2020
Fisher Yu and Vladlen Koltun. Multi-Scale Context Aggregation by Dilated Convolutions. In ICLR,
2016.
Yanzhao Zhou, Qixiang Ye, Qiang Qiu, and Jianbin Jiao. Oriented response networks. In 2017 IEEE
Conference on Computer Vision and Pattern Recognition (CVPR),pp. 4961-4970. IEEE, 2017.
15
Published as a conference paper at ICLR 2020
A Proof of Theorem 1
The following proofs the three sub-items of Thm. 1.
1.	It follows from Dunford-Pettis Theorem, see e.g. (Arendt & Bukhvalov, 1994, Thm 1.3),
(Kantorovich & Akilov, 1982, Ch 9, Thm 5), or (Duits, 2005, Thm 1), that if K is linear
and bounded it is an integral operator.
2.	The left-equivariance constraint then imposes bi-left-invariance of the kernel k as follows,
where ∀g∈G and ∀f∈L2(X) :
(K ◦ LgG→L2(X))(f) = (LgG→L2(Y) ◦ K)(f)	⇔
k k(y,x)f (g-1x)dx = k' KgTy,x)f(x)dx inms.inte⇔l x—g x XX / k(y,x)f(g-1x)dx = / k(g-1 y, g-1x)f (g-1x)d(g-1x)⇔ ZX k(y, x)f (g-1x)dx = ZX k(g-1 y, g-1x)f (g-1x) PetgT dx.	(14)
Since (14) should hold for all f ∈ L2(X) we obtain	
∀g∈G :	k(y,χ) = p⅛k(gTy,gTχ).	(15)
Furthermore, since G acts transitively on Y we have that ∀y,y0∈Y ∃gy∈G such that y and thus	gyy0
ky X) = Kgyyo,X) (=) ∣detgy∣My。,g-1X) =: ∣detgy∣Mg-IX)
for every gy ∈ G such that y = gy y0 with arbitrary fixed origin y0 ∈ Y .
3.	Every homogeneous space Y of G can be identified with a quotient group G/H. Choose
an origin y0 ∈ Y s.t. ∀h∈H : hy0 = y0, i.e., H = StabG y0, then
11
k(yo,x) = k(hyo,x) ⇔ k(x) = Idet 加 k(h	x).
We further remark that When Y ≡ G = G/{e}, with e ∈ G the identify element of G, the symmetry
constraint of Eq. (5) vanishes. Thus, in order to construct equivariant maps without constraints on
the kernel the functions should be lifted to the group G.
B	Examples of Lie groups
In the following sub-sections some explicit examples of Lie groups H are given, together with their
actions on Rd and the Log operators. The required tools for building B-spline based G-CNNs for
Lie groups of the form G = Rd o H are then automatically derived from these core definitions.
E.g., the action of H on a space X defines a left-regular representation on functions on X via
(LgH→L2(X)f)(X) = f (g-1	X).
When X = G is the group itself, the action equals the group product. The group structure of semi-
direct product groups G = Rd o H is automatically derived from the action of H on Rd, see Eq. (1)
and is in turn used to define the representations (see Eq. (2)). Some examples are given below.
B.1	TRANSLATION GROUP G = (Rd, +)
The group of translations is given by the space of translation vectors Rd with the group product and
inverse given by
g ∙ g0 = (X + x0)
g-1 = (-x),
16
Published as a conference paper at ICLR 2020
with g = (x), g0 = (x0) ∈ G with x, x0 ∈ Rd. The identity element is e = (0). The left-regular
representation on d-dimensional functions f ∈ L2(Rd) produces translations of f via
(LG-L2(Rd)f )(g0) = f(g-1 ∙ g0) = f (x0 - x).
Now, since the space of translations can be identified with Rd, the lifting (Eq. (6)) and group corre-
lations (Eq. (7)) coincide with the standard definition of cross-correlation. I.e.,
(k?f)(x) = (k?f)(x) = [ k(x0 — x)f(x0)dx0.
R2
The logarithmic map is simply given by
Log g = x,
so the convolution kernels can be defined by regular splines on Rd, cf. Eq. (11).
B.2	THE 2D ROTATION GROUP H = SO(2)
The special orthogonal group SO(2) consists of all orthogonal 2 × 2 matrix with determinant 1, i.e.,
rotation matrices of the form
cos θ - sin θ
θ = sin θ cos θ ,
and the group product and inverse is given by the matrix product and matrix inverse:
h ∙ h0 = (Rθ.Rθ0) = (Rθ+θ0)
h 1 = (Rθ 1),
with h = (Rθ), h0 = (Rθ0) ∈ SO(2) with θ, θ0 ∈ S1. The identity element is e = (R0) = (I). The
action of H on R2 is given by matrix vector multiplication:
h © x = Rθ.x,
with x ∈ R2 .
Combining the group structure of 2D translations with rotations in SO(2) as a semi-direct product
group gives us the roto-translation group SE(2) = R2 o SO(2), also known as the special Euclidean
motion group. The group structure of SE(2) is automatically derived from that of SO(2), see
Sec. 3.1 for details.
The left-regular representation of SO(2) are given by
(LhSO(2)→L2(R2)f)(x0) = f(h-1	x0) =f(Rθ-1.x0),
(LSO⑵→L2(SOR))F)(h0) = F(h-1 ^ h0) = F(Rθo-θ),
(LSO⑵→L2(SE(2))F)(χ0, h0) = F(h-1 © χ0, h-1 ∙ h0) = F(R-1.x0, Rθo-θ).
Note that the latter two representations in terms of the rotation parameters θ, θ0 ∈ S 1 represents
the periodic shift θ0 - θ mod 2π along the rotation axis. See Fig. 6 for an illustration for the trans-
formation of SE(2) convolution kernels via the representation LhSO(2)→L2(SE(2)). The determinant
of the Jacobian of the action of H on Rd, see corollary 1, is | det h| = 1. Using the above group
structure we can write out the explicit forms for the lifting (Eq. (6)) and group correlations (Eq. (7))
as follows:
SE(2)-lifting:
(k?f )(x,θ) = k k(R-1.(x0- x))f (x0)dx0,
R2
SE(2)-correlation: (K ?F)(x, θ)
K (Rθ-1.(x0 - x), θ0 - θ mod 2π)F (x0, θ0)dx0dθ0.
R2 S1
The logarithmic map on H is given by the matrix logarithm
LogRθ=	θ mo0d 2π -θm0od2π	∈ Te(SO(2)) = span {A1}
17
PUbHShed as a COnferenCePaPersICLR 2020
nio(2)→Γ(SE(2))κ
A descriptor -n fmrms Of a Co--ection Of group eφmenfs
A descriptor as a funcf-on (COnVo-Ution kerne-) On SE(2)
nio(2)→Γ(SE(2))κ
PTanaLXPCation
κmr(SE(2))
-SO (2)→r(SE(2))κ
h U R-i4 h U RTr、2 h U R37Γ-4
FigUre TOP rowiIn group theoretical terms we CandeSCribe a SmiIey face via a collection
Of group elements S CSE(2LWhiCh eg represenfs the IOCatiOnS and OrientatiOnS OfIOW—lev
features SUCh as edgesnines* SUCh a ciection Of points transforms Via Ieff multiicatioF eg
h * S .1h)gS h With h m SO (2)∙ BOttOm row In a group COnVUtional Setting We
Can WOrk With COnVUtion kems WhiCh are functions On SE(2) thassign WeightS to location!!
WhiCh locally Oriented features are expected SUCh kems transform Via tlιe group representatiop
WhiCh in terms Of the Lie algebra basis(41) With 4一 ” (〉OI) gives a VeCtOr With COeffiCiem
口IU emod2TΓ∙ The B—sine bascentered around each FU (RQ) m H With SCaIe Sh m 晟 as
depicted in Fi3“ is thus COmPUted Via
¾5 fLoghΓ∙'⅛H ¾5 e q mod2ττ
「 Sh J 「 Sh
B∙3 SCALlNG GROUP EU (巴)×)
We Ca= the POSitiVe realHne 田+9 together With multiicatioF the SCaHng group∙ The group PrOdUCf
and inverse are given by
h *'U (S')
:(好
With hu(s)"u () m H With 3m IR+∙ The identityemem is e U (IThe action Of H On
IRd -S given by SCalar multiplication
h。XUSX"
WithXIRBy COmbining 2D translations with SCaHng as a Semi—direct: PrOdUCf group We Obtain
the SCaIe—translation group" which We denote with 而2 × 田+ The Ieft—regular representation Of the
SCaHng group are given by
一十→M(')
÷→r(羽+)
s(x;j(hL0x;sx、L
F)(3UF(h—二5UF⅛一
jE?%) F) (53" F(h—1 05hL ・3H F (3x⅛)∙
18
PUbHShed as a ConferenCe PaPersICLR 202。
Figure T. ToP row《 In group theoretical terms We Can describe a SmiIey face Via a collection Of
group elements SCIR2 X 而+“ whh e∙represems the IoCatiOnS and SCaIe OflOW—levfeatures
SUCh asobcireSUCh a collection Of pms transforms Via Ieff multiicatioF eg h * S U
{(0y h) ∙ g 一 gS)S With h而+ Bottom rowi In a group COnVOIUtiOnaI Setting We Can WOrk
With COnVUtion kems which are functions OnIR2 × 田+ fhassign WeighfS to IoCatiOnSin WhiCh
IoCalIy SCaIed features are expected* SUCh kems transform Via the group representation∙
A descriptor as a funcf-on (COnVo-Ution kerne-) On 刃2 X 为+
A descriptor -n ferms Of a CO--ecHOn Of group eφmenfs
K∈L2⅞2 χ 元+)
Multiplicative/
logarithmic shift
The SCaHng OfaiR2 X 而+ group COnV-Ution kem-is thus achieved by a planar SCaHng and a
IOgarithmiC Shiff along the SCaIe axis ∙ This isustrated in FiThe determinanf Of the JaCObian
OfthiS action is - def 三 H Sd. USing the above group StrUetUreWe Can Write OUfthe exicif forms
for the Hfting (Eq∙ (6)) and group COrrations (Eq∙ (7)) as f10WE
¾E+,lifting: (W)(Xa)=Z' "(X、——X))T(XXXJ
」为2
田2 X 田+—correlation (K*F)(xa) U f -κ(xf ——XL 把F(Xjd&d∙
J为2 J为+ S
The IOgarithmiCmaP On H is PrOVided by the IIaturaIlOgarithm as follows
LOgh UhI s∙
The B—SPHne basis" Centered around each hi H (s)H With SCaIe Si而"p∞ depicted in Fig∙ 3" is
thus COmPUted Via
toE之(LOghΓ∙'. J HtoE3 (In SilJ
B∙4 THE 3D ROTATlON GROUP EUSo(3)
The 3D rotation group isVenby SPaCe Of 3 X 3 OrthOgOnaI matrices With determinanf LWith the
group PrOdUand inverse given by matriX PrOdUand mathX inverse
h ∙u (R.R。
h—1 U (R—l) ∙
The action Of SO (3) OnlR3given by matrix—vector multiplication
h。XU R.x"
19
Published as a conference paper at ICLR 2020
with x ∈ R3. Combining the group structure of 3D translations with rotations in SO(3) as a semi-
direct product group gives us the roto-translation group SE(3) = R3 o SO(3), also known as the
3D special Euclidean motion group. The left-regular representation are then
(LhSO(3)→L2(R3)f)(x0) = f(h-1	x0) = f(R-1.x0),
(LSO⑶→L2(SO(3))F)(h0) = F(h-1 ^ h0) = F(R-1.R0),
(LSO⑶→L2(SEG))F)(χ0, h0) = F(h-1 © χ0, h-1 ∙ h0) = F(R-1.x0, R-1.R0).
The determinant of the Jacobian of the action of SO(3) on R3 is | det h| = 1. Using the above group
structure we can write out the explicit forms for the lifting (Eq. (6)) and group correlations (Eq. (7))
as follows:
SE(3)-lifting:
SE(3)-correlation:
(k?f )(x, R)= k k(R-1.(x0 - x))f (x0)dx0,
R2
(K?F)(x, R)=/ /	K(R-1.(x0 - x), R-1.R0)F(x0, R0)dx0dR0,
with dR0 denoting the Haar measure on SO(3), which depends on the parameterization, see details
below.
The logarithmic map from the group SO(3) to the Lie algebra so(3) is given by the matrix logarithm
and the resulting matrix can be expanded in a basis {A1, A2, A3} for the Lie algebra
with
00	0
A1 =	0 0	-1
01	0
3
Log R = X aiAi,
i=1
0 -1 0
A3 =	1	0	0
000
which at the origin represent an infinitisimal rotation around the x, y, and z axis respectively. A
cardinal B-spline centered at some Ri ∈ SO(3) with scale sh can then be computed in terms of
these coefficients via BR,n ( Log R- .R ).
In practice it is often convenient to rely on a parameterization of the group and define the group
structure in terms of these parameters. A common choice is to do this via ZYZ Euler angles via
Rα,β,γ = Rez,γ.Rey,β.Rez,α,
with Re,θ a rotation of θ around a reference axis e, and α ∈ [0, 2π], β ∈ [0, π], γ ∈ [0, 2π]. A Haar
measure in terms of this parameterization is then given by dμ(R) = Sin βdadβdγ. We will use this
parameterization in construction of the quotient group SO(3)/SO(2) next.
B.5 THE 2-SPHERE H = S2 ≡ SO(3)/SO(2)
Here we define the 2-sphere as a group quotient of SO(3) and remark that the same equations as
in the SO(3) case (App. B.4) are used for the lifting and group correlations. This section describes
how to construct convolution kernels on the sphere using the logarithmic map of SO(3), which can
then be used to build G-CNNs on Rd o S2 .
The 2-sphere is defined as S2 = {x ∈ R3 | kxk = 1}. Any point on the sphere can be obtained by
rotating a reference vector z = (0, 0, 1)T with elements of SO(3), i.e., ∀n∈S2, ∃R∈SO(3) : n = R.z.
In other words, the group SO(3) acts transitively on S2. In ZYZ Euler angle parameterization of
SO(3) all angles α leave the reference vector z in place, meaning that for each n ∈ S2 we have
several R ∈ SO(3) that map z to the same n. As such, we can treat S2 as the quotient group
SO(3)/SO(2), where SO(2) refers to the sub-group of rotations around the z-axis.
20
Published as a conference paper at ICLR 2020
In order to define B-splines on the 2-sphere we need a logarithmic map from a point in S2 to the
(Euclidean) tangent vector space Te(S2) at the origin. We will construct this logarithmic map using
the Log define for SO(3). Let us parameterize the sphere with
n(β, γ) = Rez,γ.Rey,β.z.
Any rotation Rα,β,γ with arbitrary α maps to the same n(β, γ) ∈ S2. As such, there are also many
vectors A = Log Rα,β,γ ∈ Te(SO(3)) that map to a suitable rotation matrix via the exponential map
R = exp A. We aim to find the vector in Te(SO(3)) for which c3 = 0, which via the exponential
map generate torsion free exponential curves. The Log of any Rα,β,γ with α = -γ results in such
a vector (Portegies et al., 2015). As such we define
LogS2 n(β, γ) := LogSO(3) R-γ,β,γ,
which maps any point in S2 to a 2-dimensional vector space Te(S2) ⊂ Te (SO(3)). A B-spline on
S2 can then be defined via
N
f(β,γ)=XciBR,n
i=1
L0gs2 R-,βi,Yi∙R0,β,γ.z
Sh
(16)
in which individual splines basis functions are centered around points n(βi, γi).
We remark that the group product Rα-1,β ,γ .R0,β,γ generates different rotations when varying αi,
that however still map to the same n. The vectors obtained by taking LogS2 of the rotation matrices
rotate with the choice for αi . Since the B-splines are approximately isotropic we neglect this effect
and simply set αi = 0 in Eq. (16). Finally, we remark that the superposition of shifted splines (as in
Eq. (16)) is not isotropic by construction, which is desirable when using the spline as a convolution
kernel to lift functions to SO(3). When constraining G-CNNs to generate feature maps on S2, the
kernels are constrained to be isotropic. Alternatively on could stay on S2 entirely and resort to
gauge-equivariant networks (Cohen et al., 2019), for which the proposed splines are highly suited
to move from the discrete setting (as in (Cohen et al., 2019)) to the continuous setting, see also
App. C.2. For examples of splines on S2 see Figs. 3 and 4.
C Related Work
C.1 Deep scale-spacs
C.1.1 Scale space lifting and correlations
In (Worrall & Welling, 2019) images f ∈ L2(Rd) are lifted to a space of positions and scale param-
eters by constructing a scale space via
f↑(x, S) := fs(x) := (Gs? f)(x)
with GS(X) = (4ns)-d/2e- %S . The kernels and images are sampled on a discrete grid. Let
Ω ⊂ Zd be the support of the kernel. Then the discrete scale space correlation is given by (Worrall
& Welling, 2019, Eq. (19))
(K?S f ↑)(X,S) = XXK(X, s)fss(sx + x),
x∈Ω s∈Hd
with Hd the discretized set of scales, e.g., Hd = {2i-1}N], where We remark that here We use
the convention of scaling of a function by S ≥ 1 instead of using the dilation parameter a = S
in (Worrall & Welling, 2019). Next we remark that the scale space correlation without any scale
interaction (Hd = {1}) is defined by a 2D correlation kernel via
(k?s f↑)(x,s)= X k(X)fs(sX + x),
x∈zd
which can be regarded as a discrete atrous/dilated correlation on each of the scale slices of f↑(x, s)
with kernels dilated by a factor s.
21
Published as a conference paper at ICLR 2020
C.1.2 Relation to lifting correlations (Eq. (6)) with B-splines
Let our lifting correlation kernel k be given in a B-SPline basis via Eq. (11) and let C : Ω ⊂ Zd → R
be the map that assigns the weights to each B-spline center Xi ∈ Ω with Ω the set of spline centers
(i.e. c(xi) = ci). Let the Gaussian kernel Gs (x) be aPProximated by a scaled B-sPline (uP to a
factor) and define BR ,n := SdBR ,n(Sx). With such an approximation (see also (Bouma et al.,
2007)) our lifting correlation via Eq. (6) coincides with the lifting of (Worrall & Welling, 2019)
followed by their non-scale interacting scale-space correlation, i.e.,
(k?f)(x, h) = (c?s f↑)(x, s),
with c : Ω → R the spline coefficients. We show this by rewriting
(k?f)(x,h) = I ∣d⅛k(h-1 Θ (x — X))f (X)dχ
Rd
=Z Sd X C(Xi)BRd,n(S(x - x) - xi)f (x)dx
jdd	Xi∈Ω
=X C(Xi) Z BRd,n(x - (x + sxi))f (x)dx
Xi∈Ω	jdd
= X C(xi)(BSRd,n?f)(x+ sxi)
Xi∈Ω
≈	C(xi)fS(x + sxi).
Xi∈Ω
C.2 Gauge Equivariant Networks
C.2. 1 Gauge equivariant correlation
The following highlights commonalities between this paper and the work by Cohen et al. (2019)
with respect to use of left-invariant vector fields in equivariant neural networks. Consider some Lie
group G with Lie algebra g = Te(G), the exponential map Exp : g → G, and logarithmic map
Log : G → g. Consider the group correlation between a kernel and function K, F : G → R, given
in Eq. (7), which for B-spline kernels K with finite support Ω := SuPP(K) ⊂ G reads as
(K?F)(g)
∕ω
g gΩ
K(g-1 ∙ g)F(g)μG(g),
(17)
with μG(h) the Haar measure on G, and where write K for the convolution kernel on G, and K for
the corresponding kernel on g:
*
K(g) = K(Log(g)),	(18)
*
*
Let Ω := SuPP(K) ⊂ g be the support of K. Finally let Ω be localized such that Exp is a diffeo-
morphism (i.e., Exp(Ω) = Ω and Log(Ω) = Ω).
Now consider the definition of gauge equivariant correlation on manifolds as given by Eq. (3) of
Cohen et al. (2019) for the case of scalar functions (in which case the trivial representation ρ(g) = 1
is to be used). In this case integration takes place over the Lie algebra, and gauge equivariant
correlation is defined by
(K*f)(g):J K(X)F(EXPg(X))dx，
(19)
with dx the Lebesgue measure on Rd, and where ExPg denotes the exponential map from Tg(G) →
G. In our Lie group setting all tangent spaces can be identified with the tangent space at the origin
(via the push-forward of left-multiplication) and we are able to write ExPg := g ∙ ExP x. In the
setting of gauge equivariant CNNs as in (Cohen et al., 2019) the exponential maps are generally
dependent on g, using a separate reference/gauge frame (basis for the tangent space) at each g.
22
Published as a conference paper at ICLR 2020
C.2.2 Relation to G-correlations (Eq. (7)) with B-splines
For Lie groups the following identity holds between group correlations with localized B-splines on
the one hand, in which integration takes place over the group G and elements are mapped to the
algebra via Log, and gauge equivariant correlation on the other hand, in which integration takes
place on the tangent spaces and vectors in these tangent spaces are mapped to the manifolds via
Exp. In other words, given the definition of G cross-correlation in (7), denoted with ?, and gauge
correlation in (19) or (Cohen et al., 2019, Eq. (1)), denoted with *?, the two operators relate via
*
(K ? F)(g) = (K?F)(g).
(20)
We show this by deriving
(K?F)(g)
∕ω
J gΩ
K(g-1 ∙ g)F(g)dg
j
Jω
K(g)F(g ∙ g)dg
1
2
* K(X)F(g
Jω
• ExP(X))dX,
*
Jω
*
K (X)F (EXPg(X))dx
*
(K ?F )(g).
In the above dg is a Haar measure on G. At = the substitution G → g ∙ g is made and left-invariance
2
of the Haar measure is used (d(g • g) = dg). At = We switch from integration over the region Ω in
*
the Lie group to integration over region Ω = Log(Ω) in the Lie algebra.
D G-CNN Architectures
This section describes the G-CNN architectures used in the experiments of Sec. 4 using the layers
as defined in Sec. 3.2 and illustrated in Fig. 1. Two slightly different architectures are in the two
different tasks (metastasis classifiation and landmark detection), but both are regular sequential G-
CNNs that start with a lifting layer (6), followed by a several group correlation layers (7), possibly
alternated with spatial max-pooling, followed by a projection over H via (8), and end with a 1 × 1
convolution or fully connected layers. The architectures are summarized in Table. 1 and 2. Note
that the output of the PCam architecture is two probabilities (1 for each class), and the output of the
CelebA is five heatmaps (1 for each landmark).
D.1 PCAM
The architecture for metastasis classification in the PCam dataset is given in Tab. 1. The input
(64 × 64) is first cropped to 88 × 88 and is then used as input for the first layer (the lifting layer).
None of the layers use spatial padding such that the image is eventually cropped to size 1 × 1. Each
layer is followed by batch normalization1 and a ReLU activation function, except for the last layer
(layer 7) which is followed by adding a bias vector of length 2 and a softmax.
Note that the first five layers, including max pooling over rotations, encode the image into a 64-
dimensional rotation invariant feature vector. The final two layers (6 and 7) can be regarded as a
classical neural network classifier.
To reduce a possible orientation bias we aim to approximate the support of the kernels with a disk,
rather than a rectangle. We do this by only considering splines with basis function centers {Xi ∈
Zd | kXik ≤ r, with radius r. For 5 X 5 kernels we set r = √5 by which we discard the basis
functions at the corners of the 5 × 5 grid. The grid on H is uniformly sampled with Nh samples,
giving the discretized grid Hd = {(i 一 1) * NNn}N=ι. The global kernels (both dense and atrous) have
1We apply batch normalization over the domain of the feature maps, so over X = Rd or over X = Rd × H,
as in (Cohen & Welling, 2016).
23
Published as a conference paper at ICLR 2020
their centers also equidistant and globally cover S 1, i.e., h ∈ {(i - 1) * NNn}N1, with the scales of
the dense and atrous kernels respectively given by Sh = NNn and Sh = NNn. The localized kernels
have their centers on the grid with hi ∈ {iNNn}bN-1*七⑻ and have scale Sh = NNn.
Finally, we follow the same data-augmentations at train time as proposed in (Liu et al., 2015).
These include geometric augmentations such as 90。rotations and horizontal flips, as well as color
augmentations such as brightness, saturation, hue and contrast variations.
Table 1: PCam SE(2) G-CNN settings and the number of free parameters. Here Nk denotes the
number basis functions used on the H = SO(2) part of the group correlation kernels.
Basis size: Layer	Nk = 1	Nk = 3	Nk = 4 7r of output	Nk = 5 feature map	Nk = 8 s (# weight	Nk = 12 s)	Nk = 16
1: Lifting (5 × 5)	40 (2,520)	23 (1,449)	20 (1,260)	18(1,134)	14 (882)	11 (693)	10 (630)
Spatial max pooling (2 × 2) by a factor 2							
2: G-corr (5 × 5 × Nh )	40 (33,600)	23 (33,327)	20 (33,600)	18 (34,020)	14(32,928)	11 (30,492)	10 (33,600)
Spatial max pooling (2 X 2) by a factor 2							
3: G-corr (5 × 5 × Nh )	40 (33,600)	23 (33,327)	20 (33,600)	18 (34,020)	14(32,928)	11 (30,492)	10 (33,600)
Spatial max pooling (3 × 3) by a factor 3							
4: G-corr (5 × 5 × Nh )	40 (33,600)	23 (33,327)	20 (33,600)	18 (34,020)	14(32,928)	11 (30,492)	10 (33,600)
5: G-corr (1 × 1 × Nh)	64 (2,560)	64 (4,416)	64 (5,120)	64 (5,760)	64 (7,178)	64 (8,448)	64 (10,240)
Max pooling over H (Projection layer)							
6: 2D-corr (1 × 1)	16 (1,024)	16 (1,024)	16 (1,024)	16 (1,024)	16 (1,024)	16 (1,024)	16 (1,024)
7: 2D-corr (1 × 1)	2(32)	2(32)	2 (32)	2(32)	2(32)	2(32)	2 (32)
Softmax							
Total # weights:	106,936	106,902	108,236	110,010	107,890	101,673	112,726
D.2 CelebA
The architecture for landmark detecion in the CelebA dataset is biven in Tab. 2. The input is format-
ted according to the details in Sec. 4. In each layer zero padding is used in order to map the 128 × 128
input images to a 128 × 128 output heatmaps. Each layer is followed by batch normalization and
a ReLU activation function, except for the last layer (layer 10) which is followed by adding a bias
vector and a logistic sigmoid activation function.
Note that the result of the first 6 layers, including average pooling over scale, assign locally scale-
invariant feature vectors to each pixel. The final layers convert these feature maps into heatmaps via
regular 2D convolutions.
Landmarks are localized via the argmax on each heatmap. The results in Fig. 5 show the success
rate for localizing a landmark correctly. The success rate is computed as the average fraction of
successful detections for all five landmarks in all images. A detection is considered successful if the
distance to the actual landmark is less then 10 pixels.
The H axis is uniformly sampled (w.r.t. to the metric on H) on a fixed scale range, generating
the discrete sets Hd = {e(i-1)sh }N1 with Sh = 2 ln2. The global kernels have their centers on
this grid, i.e., hi ∈ Hd with the scale parameter the same as that of the grid. The local kernels
also have their centers equidistant (with scale Sh) to eachother, but are localized and given by hi ∈
{eish
bNk/2c
i=-bNk/2c .
24
Published as a conference paper at ICLR 2020
Table 2: CelebA scale-translation G-CNN settings and the number of free parameters. Here Nk
denotes the number basis functions used on the H = (R+, ×) part of the group correlation kernels.
Basis size:	Nk = 1	Nk = 2	Nk = 3	Nk = 4	Nk = 5
Layer		Nr of output feature maps (# weights)			
1: Lifting (5 × 5)	27 (2,025)	21 (1,575)	17 (1,275)	15 (1,125)	14 (1,050)
2: G-corr (5 × 5 × Nh )	27 (18,225)	21 (22,050)	17 (21,675)	15 (22,500)	14 (24,500)
3: G-corr (5 × 5 × Nh)	27 (18,225)	21 (22,050)	17 (21,675)	15 (22,500)	14 (24,500)
Average pooling over H (Projection layer) Spatial max pooling (2 × 2) by a factor 2					
4: Lifting (5 × 5)	27 (18,225)	21 (11,025)	17 (7,225)	15 (5,625)	14 (4,900)
5: G-corr (5 × 5 × Nh)	27 (18,225)	21 (22,050)	17 (21,675)	15 (22,500)	14 (24,500)
6: G-corr (5 × 5 × Nh )	27 (18,225)	21 (22,050)	17 (21,675)	15 (22,500)	14 (24,500)
Average pooling over H (Projection layer)					
Up-sampling by a factor 2					
7: 2D-corr (3 × 3)	32 (15,552)	32 (12,096)	32 (9,792)	32 (8,640)	32 (8,064)
8: 2D-corr (3 × 3)	32 (9,216)	32 (9,216)	32 (9,216)	32 (9,216)	32 (9,216)
9: 2D-corr (1 × 1)	64 (2048)	64 (2048)	64 (2048)	64 (2048)	64 (2048)
10: 2D-corr (1 × 1)	5 (320)	5 (320)	5 (320)	5 (320)	5 (320)
Logistic sigmoid					
Total # weights:	120,286	124,480~~	116,576	116,974	123,589
25