Figure 1: We build an advective net-work to create a fluidic reservoir withhybrid Eulerian-Lagrangian represen-tations for point cloud processing.
Figure 2: Workflow overview: a) The feature vector for each particle is initialized by a 1 Ã— 1 con-volution; b) Particles are embedded in an Eulerian grid; c) Features are interpolated from particles tothe grid, denoted as IPG ; d) 3D convolution is applied on the grid to calculate the generalized forcesand grid features; e) A velocity field is generated on the background grid; f) Particles advect in theEulerian space using the interpolated velocities; grid features are interpolated to particles, denotedas IGP , and appended to its feature vector; g) Particles aggregate. The workflow consists of oneloop to update the particle positions and features iteratively with temporal evolution. Finally, theLagrangian features are fed into a fully-connected network for classification and segmentation.
Figure 3: Network architectures: The top diagram demonstrates the global architecture of our net-work with detailed information for tensor dimensionality and modular connectivity. The blue box isfor particle states and the orange box indicates grid states. The dotted green box is the module gen-erating the initial Lagrangian features. The dotted red box is for the functional module of advection(see the bottom diagram). The states are connected with multi-layer perceptrons (black arrows inthe diagram). Each MLP has a number of hidden layers with a different number of neurons (spec-ified by the numbers within the parentheses). The bottom figure shows the details of the advectionmodule updating the particle features by transferring data on the grid and concatenating particles.
Figure 4: Temporal accuracy95% as the number of integration inCreases, with 2 steps and 4 steps as the maximum (95.4%) andminimum (94.7%), indicating a minor effect from the temporal resolution on learning accuracy. Forthe shape convergence, we demonstrated that different temporal resolutions converge to very similarfinal equilibrium states, despite of the different time step sizes. As shown in Figure 5, the point-cloud model of an airplane is advected with different velocity fields generated on different temporalresolutions. The final shapes with timestep 2, 3, and 6 all exhibit the same geometric feature separa-tions and topological relations. This result evidences our conjecture that all the temporal resolutionswe used are within the stable region, motivating us to pick a larger time step size (total time/3 formost of our cases) for efficiency.
Figure 5: Visualization of the advection of an airplane is shown with time steps of 2, 3 and 6. Notethat we rotate the point cloud and normalize the velocity field for visualization purposes.
Figure 6: Visualization of segmentation. Examples of different categories are depicted, consistingof initial shape, intermediary grouping, and final part prediction.
Figure 7: PIC/FLIP VS PIC75.2 ApplicationsClassification We tested our network on ModelNet40(Z. Wu, 2015) and ModelNet10 for classification. Weuse a grid resolution 163 to train both the networks. Asshown in Table 3, our result outperforms the state-of-art on ModelNet10, noticeably surpassing those usinggrids. On ModelNet40, our result rivals DGCNN (92.8%v.s. 92.9%). But our parameter number is significantlysmaller than DGCNN (1M v.s. 21M.)Segmentation We tested our algorithm for object partsegmentation on ShapeNet (Yi et al., 2016). We useda grid resolution and 323 for training and testing. WeTable 3: Classification on ModelNet.
