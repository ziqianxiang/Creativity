Figure 1: The variational bandwidth bottleneck: Based on thestandard input S, the channel capacity network determinesthe capacity of the bottleneck Z . The channel capacity thendetermines the probability of accessing the privileged input.
Figure 3: Partially Observable FindObjSX environments â€”The agent is placed in the central room. An object is placedin one of the rooms and the agent must navigate to the objectin a randomly chosen outer room to complete the mission.
Figure 4: Multiagent Communciation: The environment consists of N agents and M landmarks. Boththe agents and landmarks exhibit different characteristics such as different color and shape type.
Figure 5: Spatial ReasoningFigure 6: Puddle world navigationF Recurrent Visual Attention - Learning B etter FeaturesThe goal of this experiment is to study if using the proposed method enables learning a dynamicrepresentation of an image which can be then used to accurately classify an image. In order to showthis, we follow the setup of the Recurrent Attention Model (RAM) (Mnih et al., 2014). Here, theattention process is modeled as a sequential decision process of a goal-directed agent interacting withthe visual image. A recurrent neural network is trained to process the input sequentially, attendingto different parts within the image one at a time and hence combining information from thesedifferent parts to build up a dynamic representation of the image. The agent incrementally combinesinformation because of attending to different parts and then chooses this integrated information tochoose where next to attend to. In this case, the information due to attending at a particular part ofthe image acts as a standard input, and the information which is being integrated over time acts as aprivileged input, which is then used to select where the model should attend next. The entire processrepeats for N steps (for our experiment N = 6). FC denotes a fully connected network with two layersof rectifier units, each containing 256 hidden units.
Figure 6: Puddle world navigationF Recurrent Visual Attention - Learning B etter FeaturesThe goal of this experiment is to study if using the proposed method enables learning a dynamicrepresentation of an image which can be then used to accurately classify an image. In order to showthis, we follow the setup of the Recurrent Attention Model (RAM) (Mnih et al., 2014). Here, theattention process is modeled as a sequential decision process of a goal-directed agent interacting withthe visual image. A recurrent neural network is trained to process the input sequentially, attendingto different parts within the image one at a time and hence combining information from thesedifferent parts to build up a dynamic representation of the image. The agent incrementally combinesinformation because of attending to different parts and then chooses this integrated information tochoose where next to attend to. In this case, the information due to attending at a particular part ofthe image acts as a standard input, and the information which is being integrated over time acts as aprivileged input, which is then used to select where the model should attend next. The entire processrepeats for N steps (for our experiment N = 6). FC denotes a fully connected network with two layersof rectifier units, each containing 256 hidden units.
Figure 7: Partially Observable MultiRoomsNXSY environmentsThe MultiRoom environments used for this research are part of MiniGrid, which is an open sourcegridworld package. This package includes a family of reinforcement learning environments compati-ble with the OpenAI Gym framework. Many of these environments are parameterizable so that thedifficulty of tasks can be adjusted (e.g., the size of rooms is often adjustable).
Figure 8: Copying TaskH.3 Action SpaceThere are seven actions in MiniGrid: turn left, turn right, move forward, pick up an object, dropan object, toggle and done. For the purpose of this paper, the pick up, drop and done actions areirrelevant. The agent can use the turn left and turn right action to rotate and face one of 4 possibledirections (north, south, east, west). The move forward action makes the agent move from its currenttile onto the tile in the direction it is currently facing, provided there is nothing on that tile, or that thetile contains an open door. The agent can open doors if they are right in front of it by using the toggleaction.
