Figure 1: Constructing a string-map image. The first four images show the sub-maps that aresummed to construct the final string-map image (right-most image), for the example word “JEN”.
Figure 2:	Comparison of two strings. To compare the names “JEN” and “LIN”, we add the string-map for “JEN” (left image) to the string-map for “LIN” (middle image) to generate the final com-parison image (right image).
Figure 3:	Record-map layout. Shows the positioning of each string-map within a given record-map.
Figure 4: Comparison-map examples. Two examples of comparison-map images. The leftcomparison-map image was generated using two matched records (Table 1, rows 1 and 2), andthe right image from two non-matched records (Table 1, rows 1 and 3).
Figure A1: Larger string-map for assignees and co-inventors, and IPC-map. The larger string-map used to convert a given list of assignees or co-inventors into an abstract image representation(left), and the IPC-map used to convert a given list of IPC classes into an abstract image representa-tion (right).
Figure A2: Random character order (string-maps). Here we show the smaller string-map (left),IPC-map (middle), and larger string-map (right) we use for runs in which the character order hasbeen randomised.
Figure A3: Random character order and layout (string-maps). Here we show the smaller string-map (left; identical to the left string-map in Figure A2), IPC-map (middle), and larger string-map(right) with both random character order and random pixel co-ordinate layout.
Figure A4: Random character order and layout, small string-maps (comparison-map). Thisshows the comparison-map used for runs with smaller string-maps for co-inventors and assignees,as well as random character order and random pixel co-ordinate layout.
Figure A5: Record-map layout with smaller string-map for co-inventors and assignees. Therecord-map layout associated with the comparison-map in Figure A4.
