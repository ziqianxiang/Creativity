Figure 1: Gumbel-Softmax distribution: The temperature parameter τ controls the interpolationbetween discrete one-hot-encoded categorical distributions and continuous categorical densities. Asτ → 0 samples from the Gumbel-Softmax distribution are identical to those from a categoricaldistribution. If τ → ∞ then the samples tend towards a uniform distribution. At τ = 1 the sampleswash out the smaller values and accentuate high density areas. Figure used with permission of Janget al. (2016).
Figure 2: Histograms of ratios. The x-axis is the magnitude of P and the y-axis is the number ofupdates since start of training. a) Using truncated ρ with the current policy in the numerator and b)the ratios seen during training from GumbelClip, which corresponds to use of the forced policy inthe numerator.
Figure 3: Training performance across 8 Atari games. We see the performance of GumbelClip(shown in blue) against ACER (shown in green), an off-policy actor-critic algorithm, and the on-policy algorithm A2C (shown in red). The graphs show the average performance over 3 seeds with1 standard deviation shown as the shaded region. GumbelClip matches or exceeds the performanceof the on-policy algorithm on all environments shown; while in all cases achieving improved con-vergence speed. It also shows a respectable performance when compared to the ACER algorithm onmany of the environments.
Figure 4: Variations in distributions used to sample addi-tive noise. We compare the impact of noise drawn from thestandard Gumbel distribution to the standard Normal distri-bution and Uniform distribution between [0, 1].
Figure 5: Stability of GumbelClip with extended training time. GumbelClip is trained for 150Mframes, ~4x longer, on the Boxing and FishingDerby environments. We see that GumbelClip expe-riences little to no oscillations in performance even with continued weight updates.
Figure 6: Ablations of GumbelClip. We gradually introduce each component of GumbelClip to abase version of an off-policy actor-critic A2C algorithm. a) The full GumbelClip algorithm is shownas the blue curve while the stripped versions are shown in red. From left to right we gradually addthe components onto the base version until we arrive at the full GumbelClip algorithm, shown in thelast pane. The lines in the last pane are identical with one graph is stylized. b) The table providesthe percent deltas between either the stripped version to GumbelClip or the current model to the last.
Figure 7: Change in distributions over P as components are added, shown as histograms. The x-axis corresponds to the magnitude of P and the y-axis is the number of occurrences. From left toright We see the distribution over P when using the base version. As components are added We seethree modes, at approximately 0, 1, and c, become more pronounced. The addition of Gumbel noiseincreases the smoothness between 0 → 1, creates a fatter tail from the mode 1 → c, and increasesthe density of all modes.
