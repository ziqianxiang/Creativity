Figure 1: (Left) Memory footprint and inference speed of network variations: our multi-resolution (mRes), and crosslink (X) blocks decrease the memory footprint, while our convolution-type block (conv) decreases both memory consumption (-67%) and inference time (-41%) com-pared to the PointNet++ (PN++) baseline. (Right) Improvements in accuracy for three segmentationbenchmarks of increasing complexity. On the -most complex- PartNet dataset our deep networkoutperforms the shallow PointNet++ baseline by 3.4%(spread of +0.6), yielding a 9.7% (spread of+3.4) relative increase.
Figure 2: The standard PN++ layer in (a) amounts to the composition of a neighborhood-basedlookup and a PointNet element. In (b) we propose to combine parallel PointNet++ blocks in a multi-resolution architecture, and in (c) allow information to flow across branches of different resolutionsthrough a cross-link element. In (d) we propose to turn the lookup-SLP-pooling cascade into alow-memory counterpart by removing the kNN elements from memory once computed; we alsointroduce residual links, improving the gradient flow. In (e) we stack the block in (d) to grow indepth and build our deep architecture. Each of these tweaks to the original architecture allows forsystematic gains in memory and computational efficiency. The green box indicates that the blockcan be grown in depth by stacking those green units.
Figure 3: Evolution of memory con-sumption as the number of layers in-creases for PointNet++ and convPN(convolution block counterpart) onShapeNet-Part. Doubling the num-ber of layers for convPN results onlyin an increase in memory by +2.3%and +16.8% for mid- and high- res-olution respectively, which favorablycompares to the +72% and +125%increases for PointNet++.
Figure 4:	Comparison of multiscale processing (top) withmultiresolution processing (down): multi-resolution process-ing allows us to process larger-scale areas while not increas-ing memory use, making it easier to elicit global contextinformation.
Figure 5:	Elementary building blocks for point processing and network layers obtained from theircomposition. Apart from standard pooling and SLP layers, we introduce cross-link layers acrossscales, and propose multi-resolution up/down sampling blocks for point processing.
Figure 6: Segmentation prediction on the test set for both PointNet++ and our deepConvPN net-work compared to the ground truth. While PointNet++ struggles to detect accurately the boundariesbetween different parts, our deep architecture performs a much finer segmentation in those frontierareas.
