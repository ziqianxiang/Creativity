Figure 1:	Variable Misuse Example. In the code SniPPet, 'event.apply_zoom' should actuallybe ‘self.apply_zoom'. The CUBERT variable-misuse model correctly predicts that the code hasan error. As seen from the attention maP, the query tokens are attending to the second occurrence ofthe ‘event’ token in the snippet, which corresponds to the incorrect variable usage.
Figure 2:	Wrong Operator Example. In this code snippet, ‘other is not self’ should actu-ally be ‘other < self’. The CuBERT wrong-binary-operator model correctly predicts that thecode snippet has an error. As seen from the attention map, the query tokens are all attending to theincorrect operator ‘is’.
Figure 3: Swapped Operand Example. In this code snippet, the return statement should be ‘modelin cls.,registry,. The swapped-operand model correctly predicts that the code snippet hasan error. The query tokens are paying substantial attention to ‘in’ and the second occurrence of‘model’ in the snippet.
Figure 4: Function Docstring Example. The CuBERT function-docstring model correctly predictsthat the docstring is wrong for this code snippet. Note that most of the query tokens are attending tothe tokens in the docstring.
Figure 5: Exception Classification Example. For this code snippet, the CuBERT exception-classification model correctly predicts '—HOLE—‘ as 'OSError'. The model's attention matrixalso shows that '—HOLE—' is attending to 'subprocess’, which is indicative of an OS-relatederror.
