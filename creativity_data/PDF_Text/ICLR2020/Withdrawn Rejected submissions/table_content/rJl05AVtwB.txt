Table 1: Time and memory complexity of GCN training algorithms. L is the number of layers, nis the number of nodes, kAk0 is the number of nonzeros in the adjacency matrix A, and d is thenumber of features. For simplicity we assume the number of features is fixed for all layers, i.e.,dl = d for l = 1, 2, . . . , L. For SGD-based methods, b is the batch size and r is the number ofsampled neighbors per node. Also, c1 is the maximum cluster size in Cluster-GCN while c2 is themaximum clique size in our method. For memory complexity, Ld2 * 4 * * * * * 10 is used to store the parameters{W(l)}lL=-01 and the other term is for storing embeddings {H(l)}lL=1. For simplicity we omit thememory for storing the graph or subgraphs since they are fixed and usually not the main bottleneck.
Table 2: Comparsion of Chordal-GCN with original GCN, GraphSAGE, FastGCN with uni-form/importance sampling, VR-GCN, and Cluster-GCN. We report the micro F1 score (%), memoryusage (MB), time per epoch (ms), and number of epoches. Only GCN and Chordal-GCN utilize theexact graph, while other baseline methods lose some graph structure information.
Table 3: Data statisticsDataset	Nodes	Edges	Classes	Features	Label rateCora	2, 708	5, 429	7	1, 433	140 (5.1%)Citeseer	3, 327	4, 732	6	3, 703	120 (3.6%)Pubmed	19, 717	44, 338	3	500	60 (0.3%)Reddit	232, 965	11, 606, 919	41	602	152, 410 (65.4%)10Under review as a conference paper at ICLR 2020Table 4: Parameters in Chordal-GCNDataset	Threshold for merging (τ)	Number of cliques	Maximum clique size	Minimum clique sizecora	100	19	446	125citeseer	200	6	512	227pubmed	2, 000	8	6, 105	2, 132reddit	10, 000	126	220, 069	1, 001Preprocessing. In Chordal-GCN, we use the AMD ordering (Amestoy et al., 1996) implementedin the python package CVXOPT (Andersen et al., 2015). The minimal chordal extension and thechordal decomposition are performed using the python package chompack (Andersen & Vanden-berghe, 2015). We also use the clique merging heuristic described in section 3.1. The threshold τ isdifferent in different datasets, and mainly depends on the size of the graph. We report the parametersin Table 4.
Table 4: Parameters in Chordal-GCNDataset	Threshold for merging (τ)	Number of cliques	Maximum clique size	Minimum clique sizecora	100	19	446	125citeseer	200	6	512	227pubmed	2, 000	8	6, 105	2, 132reddit	10, 000	126	220, 069	1, 001Preprocessing. In Chordal-GCN, we use the AMD ordering (Amestoy et al., 1996) implementedin the python package CVXOPT (Andersen et al., 2015). The minimal chordal extension and thechordal decomposition are performed using the python package chompack (Andersen & Vanden-berghe, 2015). We also use the clique merging heuristic described in section 3.1. The threshold τ isdifferent in different datasets, and mainly depends on the size of the graph. We report the parametersin Table 4.
