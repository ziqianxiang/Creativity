Table 1: Comparing the AlignNet to hand-crafted baselines. Each experiment was run five timesand the mean is shown here. (Training curves with standard deviations across runs are show inFigure 7, under maxjnu,m_to_drop = 0)	Accuracy Entropy Difference between hard and soft alignment MSEAlignNet (Ours) MSE Cosine	99.9%	00	00 99.2%	14.6	1.8 96.5%	15.8	2.6In sections 3.1.1 and 3.1.2 we only considered cases where objects are dropped from - or added to-a slot. However, it is often the case that some slots in Mt are empty and remain empty. Thereforewhen training an AlignNet it is necessary to include cases where a slot remains empty from one timestep to the next. For example, U = [A, B, -, D] and S = [A, D, B, -], the third slot in U is emptyand there is no new object in S that could be assigned to the third slot.
Table 2: Comparing the AlignNet to hand-crafted baselines for adding and dropping. TheAlignNet achieves higher accuracy when objects are added and dropped compared to baselines. (SeeFigures 7 and 8 in the Appendix for more extensive results with more objects added and dropped.)% accuracy	max jnum _to _add =	0	0	1	2	max jnum _to _drop =	0	1	0	2AlignNet (Ours)		99.9%	99.9%	99.9%	99.9%MSE		99.2%	91.2%	93.7%	88.5%Cosine		96.5%	87.9%	91.1%	86.2%4.2	Results for disappearing (dropped) objectsWe train separate AlignNets to drop UP to five objects (i.e. max_nu,m_to_drop ∈ {1, 2, 3,4,5}),where at most max」num_to_drop objects that were present in set U are replaced with empty slotsin set S. A small amount of uniform noise, E 〜Uniform(-0.1,0.1), was added to each objectrepresentation in each set. The AlignNet achieves 99.9% alignment accUracy when dropping Upto five objects and the differences between hard and soft alignment are negligible (Figure 7 in theAppendix). We use the same hand-crafted baselines as before to give our results context. Our modelsignificantly outperforms the baselines which are not able to handle cases where objects have beendropped (see Table 2 for a brief summary).
Table 3: How well does a model trained with at most two objects being dropped(max_num工o_drop = 2) generalise to cases were more than two objects are dropped? Wetrained an AlignNet with max_numHo_drop = 2 and tested the model on examples where morethan two objects were dropped. We see that the model generalises well to more objects beingdropped than those seen during training.
Table 4: HoW well does an AlignNet trained with at most max_num_to_add = μ objects added,generalise to cases where more than μ objects are added (μ ≤ max_num_to_add ≤ 7)? Testaccuracy values shown in pink are those for which the model is seeing more added objects thanthose seen during training.
