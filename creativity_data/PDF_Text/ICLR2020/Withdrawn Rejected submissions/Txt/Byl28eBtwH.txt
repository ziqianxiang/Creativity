Under review as a conference paper at ICLR 2020
Learning Cluster Structured Sparsity by
Reweighting
Anonymous authors
Paper under double-blind review
Ab stract
Recently, the paradigm of unfolding iterative algorithms into finite-length feed-
forward neural networks has achieved a great success in the area of sparse re-
covery. Benefit from available training data, the learned networks have achieved
state-of-the-art performance in respect of both speed and accuracy. However, the
structure behind sparsity, imposing constraint on the support of sparse signals, is
often an essential prior knowledge but seldom considered in the existing networks.
In this paper, we aim at bridging this gap. Specifically, exploiting the iterative
reweighted `1 minimization (IRL1) algorithm, we propose to learn the cluster
structured sparsity (CSS) by rewegihting adaptively. In particular, we first unfold
the Reweighted Iterative Shrinkage Algorithm (RwISTA) into an end-to-end train-
able deep architecture termed as RW-LISTA. Then instead of the element-wise
reweighting, the global and local reweighting manner are proposed for the cluster
structured sparse learning. Numerical experiments further show the superiority of
our algorithm against both classical algorithms and learning-based networks on
different tasks.
1	Introduction
Sparsity is an important inherent property that describes the low-dimensionality of signals. Learning
the sparse representation of signals or data plays an important role in many applications, such as im-
age restoration (Liu et al., 2018; 2019b), classification (Wright et al., 2009), radar detection (Ahmad
& Amin, 2013), medical imaging (Lustig et al., 2007), or black hole image in astronomy (Honma
et al., 2016). As a fundamental, sparse recovery or sparse representation (SR) has been substantially
investigated in the last two decades due to the emergence of Compressive Sensing (CS) (Zhang &
Rao, 2011; Yu et al., 2012; Needell & Tropp, 2009; Yu et al., 2015; Daubechies et al., 2004).
Particularly, the objective of SR is to find a concise representation of a signal using a few atoms
from some specified (over-complete) dictionary
y = Ax +
(1)
with y ∈ RM the observed measurements corrupted by some noises , x ∈ RN the sparse represen-
tation with no more than S nonzero entries (S-sparsity) and A ∈ RM ×N the dictionary (normally
M N). Consequently, the ill-posedness of (1) prohibits a direct solution of x by inverting A.
In the last two decades, such ill-posed inversion problem has been exhaustively investigated in the
community of signal processing (Becker et al., 2011; Daubechies et al., 2004; Needell & Tropp,
2009). Many iterative algorithms such as ISTA (Daubechies et al., 2004), FISTA (Beck & Teboulle,
2009; Becker et al., 2011), ADMM (Chartrand & Wohlberg, 2013) and AMP (Donoho et al., 2009)
have been proposed to solve it, which can be considered as unlearnable approaches since all the
parameters are fixed instead of being learned from data.
Recently, inspired by the deep learning techniques, SR problem is instead turn to the data-driven
approaches. The seminal work LISTA (Gregor & LeCun, 2010; Sprechmann et al., 2013; Zhang &
Ghanem, 2018) and its consecutive variations (Zhou et al., 2018; Moreau & Bruna, 2016; Ito et al.,
2019; Sun et al., 2016) have largely improved the SR performance by simply unfolding iterations
of existing SR algorithms into limited number of neural network layers, and then training the net-
work through back propagation with huge amount of data. Theoretically (Moreau & Bruna, 2016)
1
Under review as a conference paper at ICLR 2020
and empirically (Gregor & LeCun, 2010; Sprechmann et al., 2013; Zhang & Ghanem, 2018), the re-
sulted algorithms are with improved accuracy and efficiency comparing to their original counterparts
(Giryes et al., 2018).
On the other hand, the structure behind sparsity, imposing constraint on the support of sparse signals,
is an important prior knowledge that can be used to enhance the recovery performance (Wang et al.,
2014; Prasad et al., 2015; Liu et al., 2018; Yu et al., 2012). Specifically, structures often exhibit as
a sharing of zero/nonzero pattern for grouped entries (dependent on each other) of sparse signals.
And the cluster structured sparsity (CSS) is one of the most important cases, where the zero/nonzero
entries appear in clusters. Since many natural sparse signals tend to have clustered sparse structure,
this pattern has been widely exploited in many practical applications such as gene expression analy-
sis (Tibshirani et al., 2005), and inverse synthetic aperture radar imaging (Lv et al., 2014). However,
to the best of the authors’ knowledge, few of the data-driven SR algorithms have been proposed for
structured SR problems. Thus, there is an urgent need for the study ofa learnable approach to utilize
the structure behind sparse signals.
In this paper, we try to bridge this gap with special attention on cluster structured sparse recovery.
We aim at tackling this problem with neural networks which are explainable and fully trainable. As
discussed above, LISTA provides an exemplar approach to bridge the connection between SR and
NN in an explainable manner. To further consider the clustered structure, we exploit the reweighted
iterative soft-thresholding algorithm (RwISTA) (Fosson, 2018) as the prototype of our proposed
network. Essentially, the weights in RwISTA act as a latent variable that controls the sparsity pattern
of corresponding coefficients. Based on this observation, in addition to unfolding RwISTA as a feed-
forward network, we recast the reweighting process into a parameterized reweighting block that can
inference the inherent dependencies between coefficients and thus promote structures. To this end,
a one-layer fully connected reweighting block (RW-LISTA-fc) that exploits the global dependencies
of all elements is first proposed. And empirically, the adjacency matrix of the FC layer after training
with CSS signals reveals local dependence of elements for CSS signals. Consequently, a two-layer
convolutional reweighting block (RW-LISTA-conv) is then proposed to capture such dependencies,
namely the connection of neighboring coefficients. Through exhaustive numerical experiments, the
resulted network RW-LISTA is proven on the superiority over existing methods in solving CSS
recovery. Our high-level contribution can be concluded as follows:
•	We propose a novel supervised approach for cluster structured sparse recovery. Leverag-
ing the iterative reweighting algorithm, we demonstrate that, we can learn the structured
sparsity by reweighting adaptively. Furthermore, a deep architecture called RW-LISTA is
proposed by unrolling the existing model into deep networks.
•	Instead of element-wise manner, we introduce a fully connected (FC) and a convolutional
reweighting block in RW-LISTA to promote the structures. Excitedly, the learned adja-
cency matrix in FC layer reveals local dependency for coefficients of CSS signals, which
is suitable to be captured by convolution. Although this work specially focuses on CSS, it
gives further insights to other structured problems beyond SR.
•	We achieved state-of-the-art performance on several tasks based on both synthesized and
real-world data. In these cases, we compare our algorithm with others in different settings.
And the result further verifies the effectiveness and superiority of our proposed methods.
2	Learning CSS by Reweighting
2.1	REWEIGHTING THE `1 NORM ITERATIVELY
Sparse recovery is often cast into a LASSO formulation, namely a minimization problem with `1
norm constraint used to promote sparsity. To alleviate the penalty on nonzero coefficients, Candes
et al. (2008) propose to reweight the `1 norm. Formally, consider the following problem:
N
min ||y - Ax||22 + λ X wi|xi|	(2)
x∈RN
i=1
where wi corresponds to the weight associated to ith entry of x. To reach a more “democratic”
penalization among coefficients, Candes et al. (2008) assign the weight Wi = ∣ 1, with e > 0 a
|xi |+
2
Under review as a conference paper at ICLR 2020
small value. And thus, PiN=1 wi|xi| can be seen as a smooth approximation of `0 norm. Through
reweighting, different entries are penalized differently. Large weights will discourage nonzero en-
tries in the recovered signal while small weights tend to encourage nonzero entries. Consequently,
to improve the estimation, the weights should be determined properly according to the true location
of nonzero entries.
In the original paper, Candes et al. (2008) adopts an iterative algorithm (IRL1) that alternates be-
tween reconstruction X and redefining the weights, which falls into a general form of majorization-
minimization algorithm (a generalization of EM algorithm (Dempster et al., 1977)). Later, Fosson
(2018) proposed a simple variant algorithm called Reweighted Iterative Soft-Threshold Algorithm
(RwISTA), which can be formulated as:
w(k) 一 φ (卜(1) , x(k+1) — Γ (x(k) + 1 AT(y - A)x(k), λw(k)
(3)
where Γ(∙, ∙) isan element-wise soft-thresholding function defined as [Γ(x, θ)]i = max(岛 ∣-θi, 0) ∙
Sign(Xi) for i = 1,2,..., N. L is often taken as the largest eigenvalue of AT A, | ∙ | applies element-
wisely and 夕(∙)is the reweighting function that takes the magnitude of signal as input. Generally,
the reweighting function is usually defined element-wisely as:
[φ(x)]i = g0(Xi), i = 1, 2,…,N	(4)
where g(∙) is a concave, non-decreasing function called merit function. Obviously, if we define
g(x) = x, then W(X) = 1, (3) will be reduced to normal ISTA. However, a popular choice is g(χ)=
log(X + ) with > 0 a pre-defined parameter. In this case, the weights are determined inversely
proportional to the magnitudes of the corresponding coefficients as Wi = ∣χ±;. Consequently, if
any coefficient Xi(k+1) becomes larger, the corresponding weight becomes smaller, and in the next
iteration a weaker penalty will be applied. Since nonzero entries are more likely tobe identified with
greater magnitude, iterative reweighting algorithm introduces a positive feedback that prevents the
overshrinkage of nonzero entries while suppressing the magnitude of zero coefficients.
2.2	Learned Iterative Soft-Thesholding Algorithm with Reweighting Block
Although quite successful, there are some reasons that make RwISTA unsuitable for our prob-
lem, namely learning to recover cluster structured sparsity (CSS). First and most importantly, the
reweighting function is often defined element-wisely, which ignores the structures behind sparsity.
In CSS signals, for example, images of MNIST digits, nonzero entries tend to appear in clusters
so that the sparsity pattern of the neighboring coefficients are statistically dependent. But such re-
lationship cannot be captured by the element-wise reweighting manner. Besides, RwISTA can be
viewed as a recurrent structure with pre-fixed parameters. However, according to recent successful
applications of deep learning in sparse representation, learnable parameters that benefit from huge
amount of training data will behave significantly better with respect to both convergence speed and
recovery accuracy.
Figure 1: Architecture of our proposed model RW-LISTA.
To address the issues mentioned above, we propose RW-LISTA as shown in Figure 1, which unfolds
RwISTA (3) into a finite-length deep neural network. Formally, the forward pass of RW-LISTA can
be formulated as:
W(k) - Sk)(卜⑹。,x(k+1) - Γ(B(k)x(k) + C(k)y, 0(k)W⑻)	(5)
3
Under review as a conference paper at ICLR 2020
where B(k) ∈ RN×N, C(k) ∈ RN×M and 夕(k)(∙) denotes the Paratermized reweighting block
in the kth layer. The model’s architecture is illustrated at Fig. 1. In RwISTA we fix B(k) =
I - 1 AT A, C (k) = + AT and θ(k) = L for all layers. However, now all the parameters in
RW-LISTA (including the parameters of the reweighting block 夕(k)) are optimized by minimizing
the reconstruction error ||X - x*||2 through back-propagation to fix the distribution of the data.
Since weights are able to control the sparsity pattern of the coefficients, what we need to do is to
determine the weight properly so that they have small values in nonzero locations and significantly
greater values elsewhere. It turns out that for structured sparsity, the magnitude of the entry is not
the only clue that can be utilized. The dependencies between coefficients should also be carefully
considered. Existing works including Yu et al. (2015; 2012) and Fang et al. (2014; 2016) exploit
the neighboring dependencies to tackle the problem of CSS recovery, where if the neighbors of one
coefficient appears to be nonzero with great magnitude, then the current coefficient is more likely
to be nonzero and thus should be reweighted less. It inspires US to build the reweighting block 夕
with respect to the amplitude of coefficients x. And the objective is to output weights with small
values if the corresponding coefficients belong to some clustered blocks, while with large values if
the corresponding coefficients are isolated or small in magnitude. The details of reweighting block
construction will be discussed in the next section. And Figure 2 illustrates an example of the output
of the proposed reweighting block 夕(after training).
Figure 2: An example of input signal and output of the proposed reweighting block φ (after training).
2.3	Building the Reweighting Block
In this section, we discuss the construction of reweighting block. Empirically, we use reversed
sigmoid function σ(-x) = ι+eχ as the activation since it,s also the derivative of a concave non-
decreasing merit function. Traditionally, reweighting is achieved in an element-wise manner: each
coefficient will be passed into a derivative of merit function to determine its own weight. This
manner introduces a self-dependence between coefficients, and the corresponding reweighting block
can be expressed as:
w(k) ― σ (—t(k) ∣x(k) D	(6)
with t(k) a temperature parameter. Based on previous analysis, the element-wise manner doesn’t
capture the dependence between elements. Instead, it utilizes the coefficient’s self-magnitude as the
only clue for reweighting.
To inference the sparsity pattern of CSS signals, we exploit a global dependencies among coef-
ficients of the signal, illustrated at Figure 3 (c). Namely, we build the reweighting block with a
full-connection (FC) layer:
W(k) J σ(-G(k)∣x(k)|)	(7)
where the adjacency matrix G∈ RN×N. Different from (6), the FC layer gives the reweighting
block a global visual field. Each coefficient is connected to all other elements of the signal. Since
each coefficient will pass its influence to other elements through the FC layer and the extent of
influence or dependence is measured by the adjacency matrix of FC layer, the learned G(k) in (7)
indicates the general sparsity pattern or structure of the signals.
We visualized the matrix G learned on synthesized CSS signals recovery in Fig 4 (c) (refer the
details of the experiment in Section 3.1). The learned matrix is notably great in the diagonal areas,
4
Under review as a conference paper at ICLR 2020
which means each coefficient is highly dependent on its neighbors, but less related to coefficients
in a long distance. Generally, it reveals the local dependence of coefficients in CSS signals and is
illustrated in Figure 3 (b). Consequently, we further introduce convolutional reweighting block to
capture such relationship. In this paper we consider a two-layer convolution:
W⑹一σ (-v2k) ~ ReLU (Vf) ~ 卜(口))	(8)
where v(k) and vgk) denote the convolution kernels with the same size and ReLU denotes the recti-
fied linear unit defined as max(χ, 0) (Nair & Hinton, 2010). Zero-padding is added to keep the size
unchanged. Since the operation of convolution is local receptive and shift-invariant, its naturally
suitable for clustered structure sparsity. Moreover, different kernel sizes will give different visual
field for the reweighting block. For example, when the kernel size equals to 1, it will be reduced
to element-wise connection manner. Finally, stacked convolutional layers will expand the receptive
field and also include more non-linearity in our architecture.
(b) Local Dependence
(c) Global Dependence
Figure 3:	(a) Self-dependence introduced in the reweighting block, which corresponds to the
element-wise manner. (b) Local dependence introduced in the reweighting block, which is achieved
by convolution (illustrated by a 1 × 3 convolution). (c) Global dependence introduced in the
reweighting block, which is conducted by a fully connected layers.
3 Numerical Experiments
In this section, the results of Monte Carlo simulation experiments on both synthetic and real data
are reported for corroborating the above theoretical analysis of the RW-LISTA algorithm. Our ex-
periments contain four parts. The first three parts are based on synthetic data, in which we compare
RW-LISTA with both learning-based algorithms and classical CSS solvers to verify the effectiveness
of our algorithm. In the final part we consider a real-world application of RW-LISTA: recovery of
MNIST digit images.
If not specifically mentioned, the depth of all architecture is set to 12. The sensing matrix A in (1)
is randomly generated with each entry independently drawn from a zero-mean Gaussian distribution
N(0,1/M), and each column is normalized to have unit '2 norm. Additive white Gaussian noise
(AWGN) is considered and denoted by e, and the signal-to-noise ratio (SNR) in the system is defined
as
snr
E[∣∣Ax∣∣2]
E[∣∣e∣∣2]
(9)
The following average normalized mean square error (NMSE) is defined to evaluate the RW-LISTA
and compare with existing cluster structured sparse (CSS) recovery algorithms
NMSE =10log1o e[ ∣∣X-x∣]	(10)
I ∣∣x∣∣f J
where ∣∣∙∣∣f is the Frobenius norm, and x denotes the recovered CSS vector. Our codes are imple-
mented with Python and MATLAB. Models are built on PyTorch (Paszke et al., 2017) and trained
5
Under review as a conference paper at ICLR 2020
(a) Recovered Signals.
(b) Different Reweighting Blocks.
(c) Adjacency Matrix G.
Figure 4:	(a) Visualization of recovered signals by LISTA and RW-LSITA. (b) The results of dif-
ferent reweighting blocks on synthetic CSS signals, where RwISTA and LISTA are considered for
comparison. (c) Visualization of the matrix of one learned reweighting FC layer.
by Adam Optimizer (Kingma & Ba, 2014). All the experiments are performed on a laptop with Intel
Core i7-8750H clocked at 2.20 GHz CPU and a NVIDIA GeForce GTX 1060 GPU.
3.1	Different Reweighting Blocks
In this section, we test different reweighting blocks described in Section 2.3: element-wise, convo-
lution and full-connection. For convolution we consider three kernel sizes, 3, 5 and 7. By setting
N = 200 and M = 100, synthetic CSS signals with non-zero elements are generated following a
standard Gaussian distribution.
An example of recovered signal by LISTA and RW-LISTA is illustrated in Figure 4 (a), and the re-
sults of recovery NMSEs versus different SNR levels after 12 layers/iterations are shown in Figure 4
(b), where RwISTA and LISTA are used for comparison. It is noted that the proposed RW-LISTA
achieves significant performance gain with much lower NMSEs, compared to RwISTA and LISTA.
In particular, reweighting with 1 × 3 convolution achieves the best performance. Furthermore, the
superiority of RW-LISTA can be further enlarged as the SNR level increases. To get a better sense
of the pattern learned through the reweighting blocks, the learned weight matrix G in equation (7)
from one layer of the reweighting blocks is visualized, as shown in Figure 4 (c). The weight is
noticeably great in the diagonal area, i.e., each coefficient is highly connected to its neighbors. This
indicates that the RW-LISTA has successfully learned the clustered structure sparsity. Since such
a learned matrix assembles the operation of convolution, in the following we choose to use 1 × 3
convolution for the RW-LISTA considering computational cost and recovery performance.
3.2	Effectiveness of Reweighting Block
The next experiment will focus on verifying the effectiveness of the proposed reweighting block. To
achieve this goal, we integrate the reweighting block into LISTA and its successors, i.e., LISTA-
CP (Chen et al., 2018), TIED-LISTA as well as ALISTA (Liu et al., 2019a)), and obtain their
reweighted versions: RW-ALISTA-CP, RW-TIED-LISTA, and RW-ALISTA. We also include the
result of LISTAs with support selection proposed in Chen et al. (2018) for comparison (termed
as LISTA-SS, LISTA-CPSS, TIED-LISTA-SS, and ALISTA-SS). As before, we generate synthetic
CSS signals with non-zero elements following Gaussian Distribution under N = 200 and M = 100.
The results of NMSE comparison between RW-LISTAs and LISTAs in the case of different noisy
conditions are presented in Figure 5 (a)-(d), where all the curves are depicted by running 10000
Monte Carlo trials.
It is clearly observed that the proposed RW-LISTAs with reweighting block achieve significant per-
formance improvement compared to LISTA and its variants, especially under relatively high SNR
conditions. This implies that the performance of CSS signal recovery has been certainly improved
by adaptively reweighting the coefficients in the thresholding operation of ISTA. It is worthwhile
noticing that the role of the reweighting block becomes more obvious when the level of SNR in-
creases.
6
Under review as a conference paper at ICLR 2020
-G—LISTA
L∣S—LISTA-CP
-*—Tied-LISTA
•^― AUSTA
-B- RW-USTA
-⅛- RW-USTA-CP
Rw-Tied-LISta
-9— RW-ALISta
-|— IJSTA-SS
-■— LISTA-CPSS
TIEaLSTASS
V— ALISta-SS
- -
范P) WS≡N
3	4	5	6	7	8	9	10	11	12
Layers
(a) SNR=15dB.
- -
ffp) WS≡N
3	4	5	6	7	8	9	10 M 12
Layers
(b) SNR = 20dB.
-lsm≈松
ffp) WS≡N
3	4	5	6	7	8	9	10	11	12
Layers
(c) SNR = 30dB.
-AUSTA
LSTA
∙*—LSTA-CP
-B- RW-USTA	.
-⅛- RW-USTA-CP
∙⅛- RW-TIED-LSTA
RW-ALSTA '
IJSTA-SS
——IJSTA-CfPSS
■>- TIEaLSTASS
V— ALSTA-SS
-lsm≈°⅛?
ffp) WS≡N
3	4	5	6	7	8	9	10 M 12
Layers
(d) SNR = 40dB.
Figure 5:	Comparisons of reweighted LISTAs with LISTAs at different SNR levels.
sp) Wsi
-l--l4∙-l∙m'δ-i4
―B- LISTA
―⅛—RW-LISTA
—M- MBCSLBP
PCSBL
-s.*'s
sp) Wsi
PCSHl
R	25	30	35	4c
SNR (dB)
(b) SNR Level.
-l-'l"∙-l∙m'δ
sp) WSWN
Pcsbl
234567s	9
block numbers
(c) Number of Block.
ωsUJSW N
14 '
15”
—θ—CluSS
0.4	0.45	0.5	0 5 5	0.6	0.65
M/N
(d) Measurement.
20	2 5	30	35	40
Sparsity
(a) Sparsity.
Figure 6:	Comparisons of RW-LISTA with state-of-the-art CSS solvers.
3.3	Comparison of RW-LISTA to Classical CSS Solvers
Signal recovery techniques for CSS are various and can be roughly classified into two main cate-
gories depending on whether the deep learning is involved. In order to demonstrate the advantage
of parameter learning based techniques, synthetic CSS data are generated for evaluating the RW-
LISTA in comparison with classical CSS recovery algorithms, including CluSS (Yu et al., 2012),
MBCSLBP (Yu et al., 2015), PCSBL (Fang et al., 2014), and EBSBL (Zhang & Rao, 2013). Sup-
pose the sparsity of a N × 1 CSS signal is S, i.e., there are S non-zero elements, which consist of T
blocks with random sizes and locations. The results are averaged over 500 independents runs.
The effectiveness and robustness of the RW-LISTA are demonstrated in Figure 6 in terms of the
following four aspects: i) Sparsity: Note that from Figure 6 (a) the RW-LISTA outperforms the
others by a large margin, which verifies the theoretical analysis in section 2. The reason lies in
that the reweighting block is embedded to improve recovery accuracy while maintaining acceptable
computational complexity. ii) Noise level: The RW-LISTA is noise-robust and can achieve higher
recovery accuracy than those using classical CSS solvers especially in low SNR levels, as shown
in Figure 6 (b). Note that the efficient learning via the reweighting block is the key to achieve the
desired performance. iii) Number of blocks: The number of blocks changes when keeping the
sparsity unchanged. It is seen in Figure 6 (c) that the NMSE curve of RW-LISTA slightly fluctu-
ates as the number of blocks increases, and there is a significant performance improvement when
compared with existing algorithms. The results in Figure 6 (a) and (c) indicate that the performance
degradation mainly results from the change of sparsity rather than the number of blocks. iv) Num-
ber of measurements: The effectiveness of the RW-LISTA in coping with different numbers of
measurements is likewise demonstrated in Figure 6 (d). It is noted that the RW-LISTA gives rise to
substantial gain in the NMSE performance for the reason outlined above. Moreover, we find that the
curve of the RW-LISTA does not monotonously change with the number of measurements.
As a result, the above features of the RW-LISTA strongly relax the constraints on the sparsity, noise
level, blocks and measurements of the CSS signals. The reweighting block is therefore regarded as
a unit which is well-matched for LISTA architecture.
3.4	Experiments on MNIST Digits Recovery
To give additional insight of the proposed RW-LISTA into the signals encountered in real-life sce-
narios, the experiments are carried out on the MNIST dataset, wherein the monochrome images
of hand-written numerals and labels exhibit cluster-sparse structure in spatial domain and most of
7
Under review as a conference paper at ICLR 2020
q
-SE⅞ZO
-12.35 dB
-15.41 dB
WISn ∙MM
-14.59 dB
-11.16 dB
-15.47 dB
WISn SSncJss
-13.03 dB -11.83 dB
0.51 dB 7.94 dB
0.68 dB
2.51 dB
1.24 dB
-12.51 dB
3.17 dB
3.25 dB
Y" --
1.66 dB
2.62 dB
3.05 dB
3.27 dB
1.69 dB
6嗔,
3.23 dB
-14.65 dB
Figure 7:	Reconstructed 20 × 20 digit images on MNIST dataset using different recovery algorithms
with N = 400, M = 200 and SNR = 5 dB (Rows from up to down: original images, recovered
images by RW-LISTA, LISTA, CluSS, EBSBL, MBCSLBP, and PCSBL)
image pixels are zero. Extension of one-dimensional signal recovery to two-dimensional image re-
covery is straightforward since the two-dimensional image can be transformed into one-dimensional
block-sparse signal. In the experiment, We resize the images in MNIST into 20 × 20 and normal-
ize the pixel value to [0, 1]. Then each image is rasterized into a 400-dimensional vector. We set
N = 400, M = 200 and corrupt the observation with SNR = 5 dB. All the 60000 images in the
training set have been used to train RW-LISTA.
An illustrative example of image signal recovery on MNIST dataset is given in Figure 7 with a
SNR of 5 dB, where the NMSE of each recovered image is annotated for quantitative comparison.
The state-of-the-art CluSS, EBSBL, MBCSLBP, PCSBL, and LISTA algorithms are taken as the
reference for performance comparison with the proposed RW-LISTA. Itis observed that the results in
Figure 6 are in accordance with those in Figure 7, i.e., the RW-LISTA substantially outperforms the
others in preserving the cluster property for different image patterns (We choose the numeral images
with distinct sparsity and number of blocks). We also note that the reconstructed images by RW-
LISTA are very close to the original ones, and this phenomenon can be regarded as a consequence
of the use of the reweighting block, which is able to well learn the spatial pattern of hand-written
numerals. In contrast, most of state-of-the-art algorithms have the difficulty in recovering the images
with real-world spatial structures in such noisy cases largely due to unknown sparse and cluster prior
of CSS signals, e.g., cluster locations and the number of clusters.
4 Conclusion
In this paper, we explore a reweighted deep architecture for the recovery of CSS signals. In the
proposed reweighting block, we introduce local dependence of coefficients by convolutional layers,
and global dependence by FC layers. Moreover, we choose RwISTA and LISTA as the incarna-
tion of our idea and get a novel architecture termed RW-LISTA. In light of the above analysis of
experimental results, the conclusion is reached that the proposed algorithm successfully utilizes the
clustered structure of signals and outperforms existing algorithms on different tasks. Besides it also
gives further insights into the recovery of other types of structured sparsity based on the reweighting
mechanism, which is pending in the future work.
8
Under review as a conference paper at ICLR 2020
References
Fauzia Ahmad and Moeness G Amin. Through-the-wall human motion indication using sparsity-
driven change detection. IEEE Transactions on Geoscience and Remote Sensing, 51(2):881-890,
2013.
Amir Beck and Marc Teboulle. A fast iterative shrinkage-thresholding algorithm for linear inverse
problems. SIAM journal on imaging sciences, 2(1):183-202, 2009.
StePhen Becker, Jerome Bobin, and Emmanuel J Candes. Nesta: A fast and accurate first-order
method for sparse recovery. SIAM Journal on Imaging Sciences, 4(1):1-39, 2011.
Emmanuel J Candes, Michael B Wakin, and StePhen P Boyd. Enhancing sParsity by reweighted `1
minimization. Journal of Fourier analysis and applications, 14(5-6):877-905, 2008.
Rick Chartrand and Brendt Wohlberg. A nonconvex admm algorithm for grouP sParsity with sParse
grouPs. In 2013 IEEE international conference on acoustics, speech and signal processing, PP.
6009-6013. IEEE, 2013.
Xiaohan Chen, Jialin Liu, Zhangyang Wang, and Wotao Yin. Theoretical linear convergence of
unfolded ista and its Practical weights and thresholds. In S. Bengio, H. Wallach, H. Larochelle,
K. Grauman, N. Cesa-Bianchi, and R. Garnett (eds.), Advances in Neural Information Processing
Systems 31, PP. 9061-9071. Curran Associates, Inc., 2018.
Ingrid Daubechies, Michel Defrise, and Christine De Mol. An iterative thresholding algorithm
for linear inverse Problems with a sParsity constraint. Communications on Pure and Applied
Mathematics: A Journal Issued by the Courant Institute of Mathematical Sciences, 57(11):1413-
1457, 2004.
Arthur P DemPster, Nan M Laird, and Donald B Rubin. Maximum likelihood from incomPlete data
via the em algorithm. Journal of the Royal Statistical Society: Series B (Methodological), 39(1):
1-22, 1977.
David L Donoho, Arian Maleki, and Andrea Montanari. Message-Passing algorithms for com-
Pressed sensing. Proceedings of the National Academy of Sciences, 106(45):18914-18919, 2009.
Jun Fang, Yanning Shen, Hongbin Li, and Pu Wang. Pattern-couPled sParse bayesian learning for
recovery of block-sParse signals. IEEE Transactions on Signal Processing, 63(2):360-372, 2014.
Jun Fang, Lizao Zhang, and Hongbin Li. Two-dimensional Pattern-couPled sParse Bayesian learning
via generalized aPProximate message Passing. IEEE Transactions on Image Processing, 25(6):
2920-2930, 2016.
SoPhie M Fosson. A biconvex analysis for lasso `1 reweighting. IEEE Signal Processing Letters,
25(12):1795-1799, 2018.
Raja Giryes, Yonina C Eldar, Alex M Bronstein, and Guillermo SaPiro. Tradeoffs between con-
vergence sPeed and reconstruction accuracy in inverse Problems. IEEE Transactions on Signal
Processing, 66(7):1676-1690, 2018.
Karol Gregor and Yann LeCun. Learning fast aPProximations of sParse coding. In Proceedings of the
27th International Conference on International Conference on Machine Learning, PP. 399-406.
OmniPress, 2010.
Mareki Honma, Kazunori Akiyama, Fumie Tazaki, Kazuki Kuramochi, Shiro Ikeda, Kazuhiro Hada,
and Makoto Uemura. Imaging black holes with sParse modeling. In Journal of Physics: Confer-
ence Series, volume 699, PP. 012006. IOP Publishing, 2016.
Daisuke Ito, Satoshi Takabe, and Tadashi Wadayama. Trainable ista for sParse signal recovery. IEEE
Transactions on Signal Processing, 67(12):3113-3125, 2019.
Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic oPtimization. arXiv preprint
arXiv:1412.6980, 2014.
9
Under review as a conference paper at ICLR 2020
Jialin Liu, Xiaohan Chen, Zhangyang Wang, and Wotao Yin. ALISTA: Analytic weights are as good
as learned weights in LISTA. In International Conference on Learning Representations, 2019a.
Zhou Liu, Lei Yu, and Hong Sun. Image restoration via Bayesian dictionary learning with nonlocal
structured beta process. Journal of Visual Communication and Image Representation, 52:159-
169, February 2018.
Zhou Liu, Lei Yu, and Hong Sun. Image denoising via nonlocal low rank approximation with local
structure preserving. IEEE Access, 7:7117-7132, 2019b.
Michael Lustig, David Donoho, and John M Pauly. Sparse MRI: The application of compressed
sensing for rapid MR imaging. Magnetic Resonance in Medicine: An Official Journal of the
International Society for Magnetic Resonance in Medicine, 58(6):1182-1195, 2007.
Jieqin Lv, Huang Lei, Yunmei Shi, and Xiongjun Fu. Inverse synthetic aperture radar imaging via
modified smoothed norm. IEEE Antennas & Wireless Propagation Letters, 13(6):1235-1238,
2014.
Thomas Moreau and Joan Bruna. Understanding trainable sparse coding via matrix factorization.
arXiv preprint arXiv:1609.00285, 2016.
Vinod Nair and Geoffrey E Hinton. Rectified linear units improve restricted boltzmann machines. In
Proceedings of the 27th international conference on machine learning (ICML-10), pp. 807-814,
2010.
Deanna Needell and Joel A Tropp. Cosamp: Iterative signal recovery from incomplete and inaccu-
rate samples. Applied and computational harmonic analysis, 26(3):301-321, 2009.
Adam Paszke, Sam Gross, Soumith Chintala, Gregory Chanan, Edward Yang, Zachary DeVito,
Zeming Lin, Alban Desmaison, Luca Antiga, and Adam Lerer. Automatic differentiation in
pytorch. 2017.
Ranjitha Prasad, Chandra R Murthy, and Bhaskar D Rao. Joint channel estimation and data detection
in MIMO-OFDM systems: A sparse Bayesian learning approach. IEEE Transactions on signal
processing, 63(20):5369-5382, 2015.
Pablo Sprechmann, Alex Bronstein, Michael Bronstein, and Guillermo Sapiro. Learnable low rank
sparse models for speech denoising. In 2013 IEEE International Conference on Acoustics, Speech
and Signal Processing, pp. 136-140. IEEE, 2013.
Jian Sun, Huibin Li, Zongben Xu, et al. Deep ADMM-Net for Compressive Sensing MRI. In
Advances in neural information processing systems, pp. 10-18, 2016.
Robert Tibshirani, Michael Saunders, Saharon Rosset, Ji Zhu, and Keith Knight. Sparsity and
smoothness via the fused LASSO. Journal of the Royal Statistical Society: Series B (Statistical
Methodology), 67(1):91-108, 2005.
Lu Wang, Lifan Zhao, Guoan Bi, and Chunru Wan. Sparse representation-based ISAR imaging
using Markov random fields. IEEE Journal of Selected Topics in Applied Earth Observations and
Remote Sensing, 8(8):3941-3953, 2014.
J Wright, A Y Yang, A Ganesh, S S Sastry, and Yi Ma. Robust Face Recognition via Sparse
Representation. IEEE Transaction on Pattern Analysis and Machine Intelligence, 31(2):210-227,
2009.
Lei Yu, Hong Sun, Jean-Pierre Barbot, and Gang Zheng. Bayesian Compressive Sensing for Cluster
Structured Sparse Signals. Signal Processing, 92(1):259-269, January 2012.
Lei Yu, Hong Sun, Gang Zheng, and Jean Pierre Barbot. Model based Bayesian compressive sensing
via Local Beta Process. Signal Processing, 108(C):259-271, March 2015.
Jian Zhang and Bernard Ghanem. ISTA-Net: Interpretable Optimization-inspired Deep Network for
Image Compressive Sensing. In Proceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, pp. 1828-1837, 2018.
10
Under review as a conference paper at ICLR 2020
Zhilin Zhang and Bhaskar D Rao. Sparse Signal Recovery with Temporally Correlated Source
Vectors using Sparse Bayesian Learning. IEEE Journal of Selected Topics in Signal Processing,
5(5):912-926, 2011.
Zhilin Zhang and Bhaskar D Rao. Extension of SBL Algorithms for the Recovery of Block Sparse
Signals with Intra-block Correlation. IEEE Transactions on Signal Processing, 61(8):2009-2015,
2013.
Joey Tianyi Zhou, Kai Di, Jiawei Du, Xi Peng, Hao Yang, Sinno Jialin Pan, Ivor W Tsang, Yong
Liu, Zheng Qin, and Rick Siow Mong Goh. SC2Net: Sparse LSTMs for sparse coding. In
Thirty-Second AAAI Conference on Artificial Intelligence, 2018.
11