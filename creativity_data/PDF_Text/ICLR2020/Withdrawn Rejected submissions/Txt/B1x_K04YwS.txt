Under review as a conference paper at ICLR 2020
Generalizing Natural Language Analysis
through Span-relation Representations
Anonymous authors
Paper under double-blind review
Abstract
A large number of natural language processing tasks exist to analyze syntax, se-
mantics, and information content of human language. These seemingly very dif-
ferent tasks are usually solved by specially designed architectures. In this paper,
we provide the simple insight that a great variety of tasks can be represented in
a single unified format consisting of labeling spans and relations between spans,
thus a single task-independent model can be used across different tasks. We per-
form extensive experiments to test this insight on 10 disparate tasks as broad as
dependency parsing (syntax), semantic role labeling (semantics), relation extrac-
tion (information content), aspect based sentiment analysis (sentiment), and many
others, achieving comparable performance as state-of-the-art specialized models.
We further demonstrate benefits in multi-task learning. We convert these datasets
into a unified format to build a benchmark, which provides a holistic testbed for
evaluating future models for generalized natural language analysis.
1 Introduction
A large number of natural language processing (NLP) tasks exist to analyze various aspects of human
language, including syntax (e.g., constituency and dependency parsing), semantics (e.g., semantic
role labeling), information content (e.g., named entity recognition and relation extraction), or sen-
timent (e.g. sentiment analysis). At first glance, these tasks are seemingly very different in both
the structure of their output and the variety of information that they try to capture. To handle these
different characteristics, researchers usually use specially designed neural network architectures. In
this paper we ask the simple questions: are the task-specific architectures really necessary? Or with
the appropriate representational methodology, can we devise a single model that can perform — and
achieve state-of-the-art performance on — a large number of natural language analysis tasks?
Interestingly, in the domain of efficient human annota-
tion interfaces, it is already standard to use unified repre-
sentations for a wide variety of NLP tasks. On the right
we show one example of the annotation interface BRAT
(Stenetorp et al., 2012), which has been used for anno-
tating data for tasks as broad as part-of-speech tagging,
named entity recognition, relation extraction, and many
others. Notably, this interface has a single unified format
∣person∣-
.	-born-in----------------------^location ∣
[K⅜ [Wgl [WK∏ IlKnl NNP I
〃----ʌ----〃-----ʌ----Z~∙ʌ■~、， ʌ S r-ʌ-ʌ /----ʌ----
Barack Obama was born in Hawaii.
Figure 1: An example from BRAT, con-
sisting of POS, NER, and RE.
that consists of spans (e.g. the span of an entity), labels on the spans (e.g. the variety of entity such
as “person” or “location”), and labeled relations between the spans (e.g. “born-in”). These labeled
relations can form a tree or graph structure (e.g., dependency tree), expressing the linguistic struc-
ture of sentences. We detail this BRAT format and how it can be used to represent a wide number of
natural language analysis tasks in Section 2.
The simple hypothesis behind our paper is: if humans can perform natural language analysis in
a single unified format, then perhaps machines can as well. Fortunately, there already exist NLP
models that perform span prediction and prediction of relations between pairs of spans, such as
the end-to-end neural coreference model of Lee et al. (2017). We extend this model with minor
architectural modifications (which are not our core contributions) and pre-trained contextualized
1
Under review as a conference paper at ICLR 2020
Information Extraction POS Parsing SRL Sentiment
NER RE Coref. OpenI^ POS Dep. ConsHr SRL ABSA ORL
Different Models for Different Tasks
ELMo (Peters et al., 2018)	✓	X	✓	X	X	X	X	X	✓	X
BERT (Devlin et al., 2019)	✓	X	X	X	X	X	X	X	X	X
BERT baseline (Shi & Lin, 2019)	X	✓	X	X	X	X	X	✓	X	X
SpanBERT (Joshi et al., 2019)	X	✓	✓	X	X	X	X	X	X	X
Single Model for Different Tasks
Guo et al. (2016)	X	✓	X	X	X	X	X	✓	X	X
Swayamdipta et al. (2018)	X	X	✓	X	X	X	✓	✓	X	X
Strubell et al. (2018)	X	X	X	X	✓	✓	X	✓	X	X
Clark et al. (2018)	✓	X	X	X	✓	✓	X	X	X	X
Luan et al. (2018; 2019)	✓	✓	✓	X	X	X	X	X	X	X
Dixit & Al-Onaizan (2019)	✓	✓	X	X	X	X	X	X	X	X
Marasovic & Frank (2018)	X	X	X	X	X	X	X	✓	X	✓
Hashimoto et al. (2017)	X	X	X	X	✓	✓	X	X	X	X
This Work	✓	✓	✓	✓	✓	✓	✓	✓	✓	✓
Table 1: The unified span-relation model can work on multiple NLP tasks, in contrast to previous
works usually designed for a subset of tasks.
representations (e.g., BERT; Devlin et al. (2019)1) then demonstrate the applicability and versatil-
ity of this single model on 10 tasks, including named entity recognition (NER), relation extraction
(RE), coreference resolution (Coref.), open information extraction (OpenIE), part-of-speech tagging
(POS), dependency parsing (Dep.), constituency parsing (Consti.), semantic role labeling (SRL), as-
pect based sentiment analysis (ABSA), and opinion role labeling (ORL). While previous work has
used similar formalisms to understand the representations learned by pre-trained embeddings (Ten-
ney et al., 2019a;b), to the best of our knowledge this is the first work that uses such a unified model
to actually perform analysis. Moreover, despite it simplicity we demonstrate that such a model can
achieve comparable performance with special-purpose state-of-the-art models on the tasks above
(Table 1). We also demonstrate that this framework allows us to easily perform multi-task learning
among different tasks, leading to improvements when there are related tasks to be learned from or
data is sparse. In summary, our contributions are:
•	We provide the simple insight that a great variety of natural language analysis tasks can be
represented and solved in a single unified format, i.e., span-relation representations. This insight
may seem obvious in hindsight, but it has not been examined, particularly to this scale, by
previous work on model-building for NLP.
•	We perform extensive experiments to test this insight on 10 disparate tasks, achieving compara-
ble empirical results as the state-of-the-art, using a single task-independent modeling framework.
•	We further use this framework to perform an analysis of the benefits from multi-task learning
across all of the tasks above, gleaning various insights about task relatedness and how multi-task
learning performs with different token representations.
•	Upon acceptance of the paper, we will release our General Language Analysis Datasets (GLAD)
benchmark with 8 datasets covering 10 tasks in the BRAT format, and provide a leaderboard to
facilitate future work on generalized models for NLP. Compared to the full sentence-level tasks
in the GLUE leaderboard (Wang et al., 2019a;b), we cover a wide variety of natural language
analysis tasks that require analyzing of the finer grained text units (e.g., words, phrases, clauses).
2	Span-relation Representations
In this section, we explain how the BRAT format can be used to represent a large number of tasks.
There are two fundamental types of annotations: span annotations and relation annotations. Given
a sentence x = [w1, w2, ..., wn] of n tokens, a span annotation (si, li) consists of a contiguous
span of tokens si = [wbi , wbi+1, ..., wei] and its label li (li ∈ L), where bi/ei are the start/end
1To contrast to work on pre-trained contextualized representations like ELMo (Peters et al., 2018) or BERT
(Devlin et al., 2019), these works learn unified features to represent the input in different tasks, whereas we
propose a unified representational methodology that represents the output of different tasks. Analysis models
using BERT still designed special-purpose output predictors for specific tasks or task classes.
2
Under review as a conference paper at ICLR 2020
Task SPanS annotated with labels
Task SPanS and (relations) annotated with labels
			c	[cause-effect]	、
NER	BaraCk Obama was born in Hawaii.	RE	The burst has been caused by PreSSUre.
	person	location		c	(COref.]	、
		Coref.	I voted for Tom because he is clever.
Consti.	And their SUSPiCionS of each Other run deep.		,	(ARGI	.
	NP		NP	ADVP		JARGOk ∕⅛ARG2k	∖
	PP	VP	SRL	We brought you the tale of two cities.
	NP		K	[ARG0]	∖ /	[ARG1]	
	S	OpenIE	The four IaWyerS CIimbed out from Under a table.
POS	What kind of memory?			f dptl	_			f d∩Ki 1		
			d—IdetJ—∖	d	Idoj	、
	WP NN IN	NN		J	yamod)ʌ ∕~(nsubjk∖ /	(qdvmOdnUmmodʌ
		Dep.	The entire division employs about 850 workers.
ABSA	Great laptop that offers many great features!		h	[holder]	X /	[target] 5∣ We therefore as MDC do not accept this result.
	positive	ORL	
Table 2b: Relation-oriented tasks. Directed arcs indicate
the relations between spans.
Table 2a: Span-oriented tasks. Spans are annotated
by underlines and their labels.
indices respectively, and L is a set of span labels. A relation annotation (sj , sk , rjk ) refers to a
relation rjk (rjk ∈ R) between the head span sj and the tail span sk , where R is a set of relation
types. This span-relation representation can easily express many tasks by defining different L and
R, as summarized in Table 2a and Table 2b. These tasks fall in two categories: sPan-oriented tasks,
where the goal is to predict labeled spans (e.g., named entities in NER) and relation-oriented tasks,
where the goal is to predict relations between two spans (e.g., relation between two entities in RE).
• SPan-oriented Tasks (Table 2a)
-Named Entity Recognition (Sang & Meulder, 2003) NER is traditionally considered as a
sequence labeling task. We model named entities as spans over one or more tokens.
- Constituency Parsing (Collins, 1997) Constituency parsing aims to produce a syntactic parse
tree for each sentence. Each node in the tree is an individual span, and spans are nested.
- Part-of-sPeech Tagging (Ratnaparkhi, 1996; Toutanova et al., 2003) POS tagging is another
sequence labeling task, where every single token is an individual span with a POS tag.
- AsPect-based Sentiment Analysis (Pontiki et al., 2014) ABSA is a task that consists of iden-
tifying certain spans as aspect terms and predicting their associated sentiments.
• Relation-oriented Tasks (Table 2b)
- Relation Extraction (Hendrickx et al., 2010) RE concerns the relation between two entities.
- Coreference (Pradhan et al., 2012) Coreference resolution is to link named, nominal, and
pronominal mentions that refer to the same concept, within or beyond a single sentence.
- Semantic Role Labeling (Gildea & Jurafsky, 2002) SRL aims to identify arguments of a
predicate (verb or noun) and classify them with semantic roles in relation to the predicate.
- OPen Information Extraction (Banko et al., 2007; Niklaus et al., 2018) In contrast to the
fixed relation types in RE, OpenIE aims to extract open-domain predicates and their arguments
(usually subjects and objects) from a sentence.
- Dependency Parsing (KUbIer et al., 2009) Spans are single-word tokens and a relation links
a word to its syntactic parent with the corresponding dependency type.
- OPinion Role Labeling (Yang & Cardie, 2013) ORL detects spans that are opinion expres-
sions, as well as holders and targets related to these opinions.
While the tasks above represent a remarkably broad swath of NLP, it is worth mentioning what we
have not covered, to properly scope the work. Notably, sentence-level tasks such as text classification
and natural language inference are not covered, although they can also be formulated using this
span-relation representation by treating the entire sentence as a span. We chose to omit these tasks
because they are already well-represented by previous work on generalized architectures (Lan &
Xu, 2018) and multi-task learning (Devlin et al., 2019; Liu et al., 2019), and thus we mainly focus
on tasks using phrase-like spans. In addition, the span-relation representations described here are
designed for natural language analysis, and cannot handle tasks that require generation of text,
such as machine translation (Bojar et al., 2014), dialog response generation (Lowe et al., 2015),
and summarization (Nallapati et al., 2016). There are also a small number of analysis tasks such
3
Under review as a conference paper at ICLR 2020
as semantic parsing to logical forms (Banarescu et al., 2013) where the outputs are not directly
associated with spans in the input, and handling these tasks is beyond the scope of this work.
3	Span-relation Model
Now that it is clear that a very large number of analysis tasks can be formulated in a single format,
we turn to devising a single model that can solve these tasks. We base our model on a span-based
model first designed for end-to-end coreference resolution (Lee et al., 2017), which is then adapted
for other tasks (He et al., 2018; Luan et al., 2018; 2019; Dixit & Al-Onaizan, 2019; Zhang & Zhao,
2019). At the core of the model is a module to represent each span as a fixed-length vector, which is
used to predict labels for spans or span pairs. We first briefly describe the span representation used
and proven to be effective in previous works, then highlight some details we introduce to make this
model generalize to a wide variety of tasks.
Span Representation Given a sentence x = [w1, w2, ..., wn] of n tokens, a span si =
[wbi , wbi+1, ..., wei] is represented by concatenating two components: a content representation zic
calculated as the weighted average across all token embeddings in the span, and a boundary repre-
sentation ziu that concatenates the embeddings at the start/end positions of the span. Specifically,
c1, c2, ..., cn = TokenRepr(w1, w2, ..., wn),	(1)
u1,u2, ..., un = BiLSTM(c1, c2, ..., cn),	(2)
zic = SelfAttn(cbi,cbi+1,...,cei), ziu = [ubi; uei],	zi = [zic;ziu],	(3)
where TokenRepr could be non-contextualized embeddings, such as GloVe (Pennington et al., 2014),
or contextualized embeddings, such as ELMo (Peters et al., 2018), BERT (Devlin et al., 2019), and
SpanBERT (Joshi et al., 2019). We refer to Lee et al. (2017) for further details.
Span and Relation Label Prediction Since we extract spans and relations in an end-to-end fashion,
We introduce two additional labels NEG-SPAN and neg_rel in L and R respectively. NEG-SPAN
indicates invalid spans (e.g., spans that are not named entities in NER) and NEG-REL indicates
invalid span pairs without any relation between them (i.e., no relation exists between two arguments
in SRL). We first predict labels for all spans up to a length of l words using a multilayer perceptron
(MLP): Softmax(MLPSPan(Zi)) ∈ ∆lLl, where ∆lLI is a ∣L∣-dimensional simplex. Then we keep the
top K = T ∙ n spans with the lowest NEG-SPAN probabilities in relation prediction for efficiency,
where smaller pruning threshold τ indicates more aggressive pruning. Another MLP is applied to
pairs of the remaining spans to produce their relation score: Ojk = MLPrel([zj; Zk； Zj∙ Zk]) ∈ R1R1.2
Application to Disparate Tasks For most of the tasks, we can simply maximize the probability
of the ground truth relation for all pairs of the remaining spans. However, some tasks might have
different requirements, e.g., coreference resolution aims to cluster spans referring to the same con-
cept and we do not care about which antecedent a span is linked to if there are multiple ones. To
accommodate different requirements, we provide two training loss functions:
1.	Pairwise Maximize the probabilities of the ground truth relations for all pairs of the remaining
spans independently: softmax(ojk)rjk, where rjk indexes the ground truth relation.
2.	Head Maximize the probability of selecting the ground truth head spans for a specific span
Sj: Pk∈head⑶)Softmax([θji,θj2,…，OjK])k, where head(∙) returns indices of one or multiple
heads and oj∙. is the corresponding scalar from oj∙. indicating how likely two spans are related.
We use option 1 for all tasks except for coreference resolution which uses option 2. Note that the
above loss functions only differ in how relation scores are normalized and the other parts of the
model remain the same across different tasks. At test time, we follow previous inference methods
to generate valid outputs. For coreference resolution, we link a span to the antecedent with highest
score and build clusters (Lee et al., 2017). For constituency parsing, we use the greedy top-down
2The time complexity of span prediction is O(l ∙ n) for a sentence of n tokens, and the time complexity
of relation prediction is O(K2) = O(T2 ∙ n2). Another option for span prediction is to formulate it as a
sequence labeling task, as did in previous works on SRL (He et al., 2017) and many others (Lample et al.,
2016; Stanovsky et al., 2018), and their time complexity is O(n). Although slower than token-based labeling
models, span-based models offer the advantages of being able to model overlapping spans (e.g., overlapping
arguments in SRL) and exploring span-level information for span prediction.
4
Under review as a conference paper at ICLR 2020
Dataset	Domain	#Sent.	Task	#Spans	#Relations	Metric
Wet Lab Protocols (Kulkarni et al., 2018)	biology	14,301	NER RE	60,745 60,745	- 43,773	F1 F1
CoNLL-2003 (Sang & Meulder, 2003)	news	20,744	NER	35,089	-	F1
SemEval-2010 Task 8 (Hendrickx et al., 2010)	misc.	10,717	RE	21,437	10,717	Macro F1 ◦
OntoNotes 5.0 ? (Pradhan et al., 2013)	misc.	94,268	Coref. SRL POS Dep. Consti.	194,477 745,796 1,631,995 1,722,571 1,320,702	1,166,513 543,534 - 1,628,558 -	Avg F1 F1 Accuracy LAS Evalb Fi t
Penn Treebank (Marcus et al., 1994)	speech, news	49,208 43,948 43,948	POS Dep. Consti.	1,173,766 1,090,777 871,264	- 1,046,829 -	Accuracy LAS Evalb Fi t
OIE2016 (Stanovsky & Dagan, 2016)	news, Wiki	2,534	OpenIE	15,717	12,451	F1
MPQA 3.0 (Deng & Wiebe, 2015)	news	3,585	ORL	13,841	9,286	Fi
SemEval-2014 Task 4 (Pontiki et al., 2014)	reviews	4,451	ABSA	7,674	-	Accuracy ◦
Table 3: Statistics of the GLAD benchmark consisting of 10 tasks from 8 datasets. ? Following He
et al. (2018), we use a subset of OntoNotes 5.0 dataset based on CoNLL 2012 splits (Pradhan et al.,
2012). ◦ Previous works use gold standard spans in these evaluations. * We use standard bracket
scoring program Evalb (Collins, 1997) in constituency parsing.
decoding (Stern et al., 2017) to generate a valid parse tree. For dependency parsing, each word is
linked to exactly one parent with the highest relation probability. For other tasks, we predict relations
for all span pairs and use those not predicted as NEG-REL to construct outputs.
Our core insight is that the above formulation is largely task-agnostic, meaning that a task can be
modeled in this framework as long as it can be formulated as a span-relation prediction problem
with properly defined span labels L and relation labels R. As shown in Table 1, this unified Span-
Relation (SpanRel) model makes it simple to scale to a large number of language analysis tasks,
with breadth far beyond that of previous work.
Multi-task Learning The SpanRel model makes it easy to perform multi-task learning (MTL) by
sharing all parameters except for the MLPs used for label prediction. With shared span representa-
tions, different tasks can learn from each other. However, because different tasks capture different
linguistic aspects, they are not equally beneficial to each other. It is expected that jointly training on
related tasks is helpful, while forcing the same model to solve unrelated tasks might even hurt the
performance (Ruder, 2017). Compared to manually choosing source tasks based on prior knowl-
edge, which might be sub-optimal when the number of tasks is large, SpanRel offers a systematic
way to examine relative benefits of source-target task pairs, as we will show in Section 4.3.
4 GLAD Benchmark and Results
We first describe our General Language Analysis Datasets (GLAD) benchmark and evaluation met-
rics, then conduct experiments to (1) verify that SpanRel can achieve comparable performance
across all tasks (Section 4.2), and (2) demonstrate its benefits in multi-task learning (Section 4.3).
4.1 Experimental Settings
GLAD Benchmark and Evaluation Metrics As summarized in Table 3, we convert 8 widely
used datasets with annotations of 10 tasks into the BRAT format and include them in the GLAD
benchmark. It covers diverse domains, spans, and relations, and provides a holistic testbed for
natural language analysis evaluation. The major evaluation metric is span-based F1 (denoted as
F1 unless otherwise noted), a standard metric for SRL. Precision is the proportion of extracted
spans (spans not predicted as NEG-SPAN) that are consistent with the ground truth. Recall is the
proportion of ground truth spans that are correctly extracted. F1 is their harmonic mean. Span F1
is also applicable to the case of relations, where an extracted relation (relations not predicted as
neg_rel) is correct iff both head and tail spans have correct boundaries and the predicted relation
label is correct. To make fair comparisons with existing works, we also compute standard metrics
for different tasks, as listed in Table 3. We refer to the corresponding papers for details.
5
Under review as a conference paper at ICLR 2020
Category	Task	Metric	Dataset	Setting	SOTA Model	Previous SOTA	Our Model
	NTf D	F1	CoNLL03	BERT	Devlin et al. (2019)	92.8	92.2
	NER		WLP	ELMo	Luan et al. (2019)	79.5	79.2
IE	DR RE	Macro F1	SemEval10	BERT, gold	Wu&He(2019)	89.3	87.4
		F1	WLP	ELMo	Luan et al. (2019)	64.1	65.5
	Coref.	Avg F1	OntoNotes	GloVe, CharCNN	Leeetal.(2017)。	62.0	61.1
	OpenIE	F1	OIE2016	ELMo	Stanovsky et al. (2018)?	31.1	35.2
SRL		F1	OntoNotes	ELMo	Heetal.(2018)t	82.9	82.4
Parsing	Dep.	LAS	PTB	ELMo	Clark et al. (2018)	94.4	94.7
	Consti.	Evalb F1	PTB	BERT	Kitaev et al. (2019)	956	95.5
Sentiment	ABSA	Accuracy	SemEval14	BERT, gold	Xu et al. (2019)/	85.0/78.1	85.5/76.6
	ORL	F1	MPQA 3.0	GloVe, gold	Marasovic & Frank (2018)?	564	55.6
POS		Accuracy	PTB	ELMo	Clark et al. (2018)	97.7	97.7
Table 4: Comparison between the SpanRel model and the task-specific state-of-the-art models.3
Following Luan et al. (2019), we perform NER and RE jointly on WLP dataset. We use gold entities
in SemEval-2010 Task 8, gold aspect terms in SemEval-2014 Task 4, and gold opinion expressions
in MPQA 3.0 to be consistent with existing works.
Implementation Details We attempted four token representation methods (Equation 1), namely
GloVe (Pennington et al., 2014), ELMo (Peters et al., 2018), BERT (Devlin et al., 2019), and Span-
BERT (Joshi et al., 2019). We use BERTbase in our main results and report BERTlarge in Appendix A.
A three-layer BiLSTM with 256 hidden units is used (Equation 2). Both span and relation prediction
MLPs have two layers with 128 hidden units. Dropout (Srivastava et al., 2014) of 0.5 is applied to
all layers. For GloVe and ELMo, we use Adam (Kingma & Ba, 2015) with learning rate of 1e-3
and early stop with patience of 3. For BERT and SpanBERT, we follow standard fine-tuning and
use Adam with learning rate of 5e-5, β1 = 0.9, β2 = 0.999, L2 weight decay of 0.01, warmup over
the first 10% steps, and number of epochs tuned on development set. Task-specific hyperparameters
maximal span length and pruning ratio are tuned on development set and listed in Appendix B.
4.2	Comparison with task-specific SOTA methods
We compare the SpanRel model with state-of-the-art task-specific models by training on data from
a single task. By doing so we attempt to answer the research question “can a single model with
minimal task-specific engineering achieve competitive or superior performance to other models that
have been specifically engineered?” We select competitive SOTA models mainly based on settings,
e.g., single-task learning and end-to-end extraction of spans and relations. To make fair compar-
isons, token embeddings (GloVe, ELMo, BERT) and other hyperparameters (e.g., the number of
antecedents in Coref. and the maximal span length in SRL) in our method are set to match those
used by SOTA models, to focus on differences brought about by the model architecture.
As shown in Table 4, the SpanRel model achieves comparable performances as the task-specific
SOTA methods (regardless of whether the token representation is contextualized or not). This in-
dicates that the span-relation format can generically represent a large number of natural language
analysis tasks and it is possible to devise a single unified model that can achieves strong performance
on all of them. It provides a strong and generic baseline for natural language analysis tasks and a
way to examine the usefulness of task-specific designs.
4.3	Multi-task Learning with Span-relation Representation
To demonstrate the benefit of the SpanRel model in MTL, we perform single-task learning (STL) and
MTL across all tasks using end-to-end settings.3 4 Following Liu et al. (2019), we perform MTL+fine-
tuning and show the results in separate columns of Table 5. Contextualized token representations
yield significantly better results than GloVe on all tasks, indicating that pre-training on large corpora
3 ◦ The small version of Lee et al. (2017)’s method with 100 antencedents and no speaker features. ? For
OpenIE and ORL, we use span-based F1 instead of syntactic-head-based F1 and binary coverage F1 used in the
original papers because they are biased towards extracting long spans. t For SRL, We choose to compare With
He et al. (2018) because they also extract predicates and arguments in an end-to-end way. / We follow Xu et al.
(2019) to report accuracy of restaurant and laptop domain separately in ABSA.
4Span-based F1 is used as the evaluation metric in SemEval-2010 Task 8 and SemEval-2014 Task 4 as
opposed to macro F1 and accuracy reported in the original papers because We aim at end-to-end extractions.
6
Under review as a conference paper at ICLR 2020
Category	Task	Metric	Dataset	GloVe STLMTL +FT	ELMo STL MTL +FT	BERTbase STLMTL +FT	SpanBERTbase STL MTL +FT
	NER	F1	CoNLL03	88.4 86.2J 87.5J	91.9 91.6 91.6	91.0 88.6J 90.2J	91.3 90.4J 91.2
			WLP	77.6 71.51 76.5J	79.2 77.4J 78.2J	78.1 78.2 78.5	77.9 78.6↑ 78.5↑
IE	RE	F1	SemEval10	50.7 15.2J 33.0J	61.8 30.6J 42.9J	61.7 55.1J 59.8J	62.1 54.6J 61.8
			WLP	64.9 38.5J 53.9J	65.5 52.0J 55.1J	64.7 65.9↑ 66.5↑	64.1 67.2↑ 67.2↑
	Coref	Avg F1	OntoNotes	56.3 50.3J 53.0J	62.2 62∙9↑ 63.3↑	66.2 65.5J 65.8	70.0 68.9J 69.7
	OpenIE	F1	OIE2016	28.3 6.8J 19.6J	35.2 30.0J 32.9J	36.7 37.1 38.5↑	36.5 37.3↑ 38.6↑
SRL		F1	OntoNotes	78.0 77.9 78.6↑	82.4 82.3 82.4	83.3 82.9 83.4	83.1 83.3 83.8↑ C
	Dep.	LAS	PTB	92.9 93.2 93.5↑	94.7 94.9 94.9	94.9 94.8 95.0	95.1 95.1 95.1
Parsing			OntoNotes	90.4 90.5 90.5	92.3 93.2↑ 92.8↑	94.1 93.8 94.0	94.2 94.1 94.2
	Consti.	Evalb F1	PTB	93.4	-	93.8	95.3	-	95.3	95.5	-	95.2	95.8	-	95.5
			OntoNotes	91.0	-	91.5↑	93.2	-	93.7↑	93.6	-	93.8	94.3	-	94.2
Sentiment	ABSA	F1	SemEval14	63.5 48.5J 59.0J	69.2 57.0J 59.0J	70.8 63.1J 67.0J	70.0 63.5J 69.5J
	ORL	F1	MPQA 3.0	38.2 18.4J 31.6J	42.9 24.7J 32.4J	44.5 38.1J 45.6↑	45.2 40.2J 47.5↑
POS		Accuracy	PTB	96.8 96.8 96.8	97.7 97.7 97.8	97.6 97.3 97.3	97.6 97.6 97.6
			OntoNotes	97.0 97.0 97.1	98.2 98.2 98.3	97.7 97.8 97.8	98.3 98.3 98.3
Table 5: Comparison between STL and MTL+fine-tuning of the SpanRel model across all tasks.
blue↑ indicates results better than STL,red^ indicates worse, and black means almost the same (i.e.,
a difference within 0.5). Constituency parsing requires more memory than other tasks so we restrict
its maximal span length as 10 in MTL, thus it cannot form a valid tree.
is almost universally helpful to NLP tasks. Comparing the results of MTL+fine-tuning with STL, we
found that performance with GloVe drops on 8 out of 15 tasks, most of which are tasks with relatively
sparse data. It is probably because the capacity of the GloVe-based model is too small to store all the
patterns required by different tasks. The results of contextualized representations are mixed, with
some tasks being improved and others remaining the same or degrading. We hypothesize that this
is because different tasks capture different linguistic aspects, thus are not equally helpful to each
other. Reconciling these seemingly different tasks in the same model might be harmful to some
tasks. Notably, as the contextualized representations become stronger, the performance of MTL+FT
becomes more favorable. 5 out of 15 tasks (NER, RE, OpenIE, SRL, ORL) observe improvements
with SpanBERT, a contextualized embedding pre-trained with span-based training objectives, while
only one task degrades (ABSA), indicating its superiority in reconciling spans from different tasks.
The GLAD benchmark provides a holistic testbed for evaluating natural language analysis capability.
Task Relatedness Analysis To further investigate how different tasks interact with each other, we
choose five source tasks (POS, NER, Consti., Dep., and SRL) that have been widely used in MTL
(Hashimoto et al., 2017; Strubell et al., 2018) and six target tasks (OpenIE, NER, RE, ABSA, ORL,
and SRL) to perform pairwise multi-task learning. We hypothesize that although language modeling
pre-training is theoretically orthogonal to MTL (Swayamdipta et al., 2018), in practice the benefit of
pre-training tends to overlap or even overshadow the benefit of MTL. To analyze these two factors
separately, we start with a weak representation GloVe to study task relatedness, then move to BERT
to demonstrate how much we can still improve with MTL given strong and contextualized represen-
tations. As shown in Table 6 (GloVe), tasks are not equally useful to each other. Notably, (1) for
OpenIE and ORL, multi-task learning with SRL improves the performance significantly, while other
tasks lead to less or no improvements. (2) Dependency parsing and SRL are generic source tasks
that are beneficial to most of the target tasks. (3) ABSA is quite different from the source tasks and
no improvement is observed with MTL. This unified SpanRel makes it easy to perform MTL and
decide beneficial source tasks.
MTL under Different Settings We analyze how token representations and sizes of the target
dataset affect the performance of MTL. Comparing BERT and GloVe in Table 6, the improvements
of MTL become smaller or vanish as the token representation becomes stronger, e.g., improvement
on OpenIE with SRL reduces from 5.8 to 1.6 and improvement on SRL with Dep. reduces from 2.5
to 1.1. This is expected because both large-scale pre-training and MTL aim to learn general rep-
resentations and their benefits tend to overlap in practice. Interestingly, some helpful source tasks
even become harmful when we shift from GloVe to BERT, such as OpenIE paired with Consti. or
POS. We conjecture that the gains of MTL might have already been achieved by BERT, but the task-
specific characteristics of Consti. and POS hurt the performance of OpenIE. The improvements of
7
Under review as a conference paper at ICLR 2020
	GloVe					BERTbase					
Source Targer	STL	POS	NER	Consti.	Dep. SRL	STL	POS	NER	Consti.	Dep.	SRL
OpenIE	28.3	29.9↑ 27.0J		31.2↑	32.9↑ 34∙1↑	36.7	34.0J 34.3J		35.2J	37.8↑ 38.3↑	
NER (WLP)	77.6	77.8	78.3↑	77.9	78.6↑ 78.1↑	78.1	78.0	78.1	78.1	77.7	78.8↑
RE (WLP)	64.9	65.5↑ 65.6↑		64.9	66.5↑ 65.9↑	64.7	64.4	64.7	64.3	64.9	65.3↑
RE (SemEval10)	50.7	52.3↑ 52.8↑		49.6J	52.9↑ 52.8↑	61.7	61.9	60.2J	59.2J	62.1	59.9J
ABSA	63.5	63.4	62.8J	59.8J	63.5 60.21	70.8	68.9J 71.4↑		70.4	69.9J 69.6J	
ORL	38.2	35.7J	37.9	36.1J	38.6 41.0↑	44.5	45.8↑	44.2	44.8	45.1↑ 46.6↑	
SRL (10k)	68.8	69.6↑	68.9	70.7↑	71.3↑	-	78.7	79.4↑ 79.5↑		79.6↑	79.8↑	-
Table 6: Performance of pairwise multi-task learning with GloVe and
BERTbase. blue↑ indicates results better than STL, red^ indicates worse, and
black means almost the same (i.e., a difference within 0.5). We show the per-
formance after fine-tuning. Dataset of source tasks POS, Consti., Dep. is PTB
and dataset of NER is CoNLL-2003.
Figure 2: MTL Per-
formance of SRL
wrt. the data size.
MTL shrink as we increase the size of the SRL datasets, as shown in Figure 2, indicating that MTL
is more useful when the target data is sparse.
5	Related Work
General Architectures for NLP There has been a rising interest in developing general architec-
tures for different NLP tasks, with the most prominent examples being sequence labeling framework
(Collobert et al., 2011; Ma & Hovy, 2016) used for tagging tasks (e.g., NER, POS) and sequence-
to-sequence framework (Sutskever et al., 2014) used for generation tasks (e.g., machine translation).
Moreover, researchers typically pick related tasks, motivated by either linguistic insights or empir-
ical results, and create a general framework to perform MTL, several of which are summarized in
Table 1. For example, based on the belief that semantic structure of a sentence should conform with
syntactic structure, Swayamdipta et al. (2018) and Strubell et al. (2018) use constituency and de-
pendency parsing to improve SRL. Luan et al. (2018; 2019) use a span-based model to jointly solve
three information-extraction-related tasks (NER, RE, and Coref.). Compared to existing works, we
aim to create an output representation that can solve nearly every natural language analysis task in
one fell swoop, allowing us to cover a far broader range of tasks with a single model.
In addition, NLP has seen a recent burgeoning of contextualized token embeddings pre-trained on
large corpra (e.g., ELMo (Peters et al., 2018) and BERT (Devlin et al., 2019)). These methods focus
on learning generic input representations, but are agnostic to the output representation, requiring
different predictors to be designed for different tasks. In contrast, we present a methodology to
formulate the output of different tasks in a unified format. Thus our work is orthogonal to those
on contextualized embeddings. Indeed, in Section 4.3, we demonstrate that the SpanRel model can
benefit from stronger contextualized representation models, and even provide a testbed for their use
in natural language analysis.
Benchmarks for Evaluating Natural Language Understanding Due to the rapid development
of NLP models, large-scale benchmarks, such as SentEval (Conneau & Kiela, 2018), GLUE (Wang
et al., 2019b), and SuperGLUE (Wang et al., 2019a) have been proposed to facilitate fast and holistic
evaluation of models’ natural language understanding ability. They mainly focus on sentence-level
tasks, such as text classification and natural language inference, while our GLAD benchmark focuses
on token/phrase-level analysis tasks with diverse coverage of different linguistic structures. With
different tasks represented under the same format, a model can be easily evaluated on all our tasks,
reflecting various aspects of its natural language analysis capability. New tasks and datasets can be
conveniently added to our benchmark as long as they are in the BRAT standoff format, which is one
of the most commonly used data format in the NLP community, e.g., it has been used in the BioNLP
shared tasks (Kim et al., 2009) and the Universal Dependency project (McDonald et al., 2013).
6	Conclusion
We provide the simple insight that a large number of natural language analysis tasks can be repre-
sented in a single format consisting of spans and relations between spans. As a result, these tasks
can be solved in a single modeling framework that first extracts spans and predicts their labels, then
predicts relations between extracted spans. We attempted 10 tasks with this SpanRel model under
8
Under review as a conference paper at ICLR 2020
this unified representation and show that this generic task-independent model can achieve compet-
itive performance as state-of-the-art methods tailored for each tasks. We merge 8 datasets into our
GLAD benchmark for evaluating future models for natural language analysis. Future directions in-
clude (1) devising hierarchical span representations that can handle spans of different length and
diverse content and length more effectively and efficiently. (2) robust multitask learning or meta-
learning algorithms that can learn to relate and reconcile very different tasks.
References
Laura Banarescu, Claire Bonial, Shu Cai, Madalina Georgescu, Kira Griffitt, Ulf Hermjakob, Kevin
Knight, Philipp Koehn, Martha Palmer, and Nathan Schneider. Abstract meaning representation
for sembanking. In Proceedings of the 7th Linguistic Annotation Workshop and Interoperability
with Discourse, LAW-ID@ACL2013, August 8-9,2013, Sofia, Bulgaria,pp.178-186, 2013. URL
https://www.aclweb.org/anthology/W13-2322/.
Michele Banko, Michael J. Cafarella, Stephen Soderland, Matthew Broadhead, and Oren Etzioni.
Open information extraction from the web. In IJCAI 2007, Proceedings of the 20th International
Joint Conference on Artificial Intelligence, Hyderabad, India, January 6-12, 2007, pp. 2670-
2676, 2007. URL http://ijcai.org/Proceedings/07/Papers/429.pdf.
Ondrej Bojar, Christian Buck, Christian Federmann, Barry Haddow, Philipp Koehn, Johannes Lev-
eling, Christof Monz, Pavel Pecina, Matt Post, Herve Saint-Amand, Radu Soricut, Lucia Specia,
and Ales Tamchyna. Findings of the 2014 workshop on statistical machine translation. In Pro-
ceedings of the Ninth Workshop on Statistical Machine Translation, WMT@ACL 2014, June 26-
27, 2014, Baltimore, Maryland, USA, pp. 12-58, 2014. URL https://www.aclweb.org/
anthology/W14-3302/.
Kevin Clark, Minh-Thang Luong, Christopher D. Manning, and Quoc Le. Semi-supervised se-
quence modeling with cross-view training. In Proceedings of the 2018 Conference on Empir-
ical Methods in Natural Language Processing, pp. 1914-1925, Brussels, Belgium, October-
November 2018. Association for Computational Linguistics. doi: 10.18653/v1/D18-1217. URL
https://www.aclweb.org/anthology/D18-1217.
Michael Collins. Three generative, lexicalised models for statistical parsing. In 35th Annual Meeting
of the Association for Computational Linguistics and 8th Conference of the European Chapter of
the Association for Computational Linguistics, pp. 16-23, Madrid, Spain, July 1997. Association
for Computational Linguistics. doi: 10.3115/976909.979620. URL https://www.aclweb.
org/anthology/P97-1003.
Ronan Collobert, Jason Weston, Leon Bottou, Michael Karlen, Koray KavUkcUoglu, and Pavel P.
Kuksa. Natural language processing (almost) from scratch. J. Mach. Learn. Res., 12:2493-2537,
2011. URL http://dl.acm.org/citation.cfm?id=2078186.
Alexis Conneau and Douwe Kiela. SentEval: An evaluation toolkit for universal sentence repre-
sentations. In Proceedings of the Eleventh International Conference on Language Resources and
Evaluation (LREC-2018), Miyazaki, Japan, May 2018. European Languages Resources Associa-
tion (ELRA). URL https://www.aclweb.org/anthology/L18-1269.
Lingjia Deng and Janyce Wiebe. MPQA 3.0: An entity/event-level sentiment corpus. In NAACL HLT
2015, The 2015 Conference of the North American Chapter of the Association for Computational
Linguistics: Human Language Technologies, Denver, Colorado, USA, May 31 - June 5, 2015, pp.
1323-1328, 2015. URL https://www.aclweb.org/anthology/N15-1146/.
Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: Pre-training of deep
bidirectional transformers for language understanding. In Proceedings of the 2019 Conference of
the North American Chapter of the Association for Computational Linguistics: Human Language
Technologies, Volume 1 (Long and Short Papers), pp. 4171-4186, Minneapolis, Minnesota, June
2019. Association for Computational Linguistics. doi: 10.18653/v1/N19-1423. URL https:
//www.aclweb.org/anthology/N19-1423.
Kalpit Dixit and Yaser Al-Onaizan. Span-level model for relation extraction. In Proceedings of the
57th Annual Meeting of the Association for Computational Linguistics, pp. 5308-5314, Florence,
9
Under review as a conference paper at ICLR 2020
Italy, July 2019. Association for Computational Linguistics. URL https://www.aclweb.
org/anthology/P19-1525.
Daniel Gildea and Daniel Jurafsky. Automatic labeling of semantic roles. Comput. Linguist., 28
(3):245-288, SePtember 2002. ISSN 0891-2017. doi: 10.1162/089120102760275983. URL
http://dx.doi.org/10.1162/089120102760275983.
Jiang Guo, Wanxiang Che, Haifeng Wang, Ting Liu, and Jun Xu. A unified architecture for se-
mantic role labeling and relation classification. In Proceedings of COLING 2016, the 26th In-
ternational Conference on Computational Linguistics: Technical Papers, PP. 1264-1274, Os-
aka, JaPan, December 2016. The COLING 2016 Organizing Committee. URL https://www.
aclweb.org/anthology/C16-1120.
Kazuma Hashimoto, Caiming Xiong, Yoshimasa Tsuruoka, and Richard Socher. A joint many-
task model: Growing a neural network for multiPle NLP tasks. In Proceedings of the 2017
Conference on Empirical Methods in Natural Language Processing, EMNLP 2017, Copenhagen,
Denmark, September 9-11, 2017, PP. 1923-1933, 2017. URL https://aclanthology.
info/papers/D17-1206/d17-1206.
Luheng He, Kenton Lee, Mike Lewis, and Luke Zettlemoyer. DeeP semantic role labeling: What
works and what’s next. In Proceedings of the 55th Annual Meeting of the Association for
Computational Linguistics (Volume 1: Long Papers), PP. 473-483, Vancouver, Canada, July
2017. Association for ComPutational Linguistics. doi: 10.18653/v1/P17-1044. URL https:
//www.aclweb.org/anthology/P17-1044.
Luheng He, Kenton Lee, Omer Levy, and Luke Zettlemoyer. Jointly Predicting Predicates and
arguments in neural semantic role labeling. In Proceedings of the 56th Annual Meeting of the
Association for Computational Linguistics (Volume 2: Short Papers), PP. 364-369, Melbourne,
Australia, July 2018. Association for ComPutational Linguistics. doi: 10.18653/v1/P18-2058.
URL https://www.aclweb.org/anthology/P18- 2058.
Iris Hendrickx, Su Nam Kim, Zornitsa Kozareva, Preslav Nakov, Diarmuid O Seaghdha, Sebas-
tian Pado, Marco Pennacchiotti, Lorenza Romano, and Stan Szpakowicz. Semeval-2010 task 8:
Multi-way classification of semantic relations between Pairs of nominals. In Proceedings of the
5th International Workshop on Semantic Evaluation, SemEval@ACL 2010, Uppsala University,
Uppsala, Sweden, July 15-16, 2010, pp. 33-38, 2010. URL https://www.aclweb.org/
anthology/S10-1006/.
Mandar Joshi, Danqi Chen, Yinhan Liu, Daniel S. Weld, Luke Zettlemoyer, and Omer Levy. Span-
bert: Improving pre-training by representing and predicting spans. CoRR, abs/1907.10529, 2019.
URL http://arxiv.org/abs/1907.10529.
Jin-Dong Kim, Tomoko Ohta, Sampo Pyysalo, Yoshinobu Kano, and Jun’ichi Tsujii. Overview of
bionlp’09 shared task on event extraction. In Proceedings of the Workshop on Current Trends
in Biomedical Natural Language Processing: Shared Task, BioNLP ’09, pp. 1-9, Stroudsburg,
PA, USA, 2009. Association for Computational Linguistics. ISBN 978-1-932432-44-2. URL
http://dl.acm.org/citation.cfm?id=1572340.1572342.
Diederik P. Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In 3rd Inter-
national Conference on Learning Representations, ICLR 2015, San Diego, CA, USA, May 7-9,
2015, Conference Track Proceedings, 2015. URL http://arxiv.org/abs/1412.6980.
Nikita Kitaev, Steven Cao, and Dan Klein. Multilingual constituency parsing with self-attention and
pre-training. In Proceedings of the 57th Annual Meeting of the Association for Computational
Linguistics, pp. 3499-3505, Florence, Italy, July 2019. Association for Computational Linguis-
tics. URL https://www.aclweb.org/anthology/P19- 1340.
Sandra Kubler, Ryan McDonald, and Joakim Nivre. Dependency parsing. Synthesis Lectures on
Human Language Technologies, 1(1):1-127, 2009.
Chaitanya Kulkarni, Wei Xu, Alan Ritter, and Raghu Machiraju. An annotated corpus for machine
reading of instructions in wet lab protocols. In Proceedings of the 2018 Conference of the North
10
Under review as a conference paper at ICLR 2020
American Chapter of the Association for Computational Linguistics: Human Language Tech-
nologies, Volume 2 (Short Papers), pp. 97-106, New Orleans, Louisiana, June 2018. Association
for Computational Linguistics. doi: 10.18653/v1/N18-2016. URL https://www.aclweb.
org/anthology/N18-2016.
Guillaume Lample, Miguel Ballesteros, Sandeep Subramanian, Kazuya Kawakami, and Chris Dyer.
Neural architectures for named entity recognition. In NAACL HLT 2016, The 2016 Conference of
the North American Chapter of the Association for Computational Linguistics: Human Language
Technologies, San Diego California, USA, June 12-17, 2016, pp. 260-270, 2016. URL https:
//www.aclweb.org/anthology/N16-1030/.
Wuwei Lan and Wei Xu. Neural network models for paraphrase identification, semantic textual
similarity, natural language inference, and question answering. In Proceedings of the 27th Inter-
national Conference on Computational Linguistics, pp. 3890-3902, Santa Fe, New Mexico, USA,
August 2018. Association for Computational Linguistics. URL https://www.aclweb.
org/anthology/C18-1328.
Kenton Lee, Luheng He, Mike Lewis, and Luke Zettlemoyer. End-to-end neural coreference res-
olution. In Proceedings of the 2017 Conference on Empirical Methods in Natural Language
Processing, EMNLP 2017, Copenhagen, Denmark, September 9-11, 2017, pp. 188-197, 2017.
URL https://aclanthology.info/papers/D17- 1018/d17-1018.
Xiaodong Liu, Pengcheng He, Weizhu Chen, and Jianfeng Gao. Multi-task deep neural networks
for natural language understanding. In Proceedings of the 57th Conference of the Association
for Computational Linguistics, ACL 2019, Florence, Italy, July 28- August 2, 2019, Volume
1: Long Papers, pp. 4487-4496, 2019. URL https://www.aclweb.org/anthology/
P19-1441/.
Ryan Lowe, Nissan Pow, Iulian Serban, and Joelle Pineau. The ubuntu dialogue corpus: A
large dataset for research in unstructured multi-turn dialogue systems. In Proceedings of the
SIGDIAL 2015 Conference, The 16th Annual Meeting of the Special Interest Group on Dis-
course and Dialogue, 2-4 September 2015, Prague, Czech Republic, pp. 285-294, 2015. URL
https://www.aclweb.org/anthology/W15-4640/.
Yi Luan, Luheng He, Mari Ostendorf, and Hannaneh Hajishirzi. Multi-task identification of entities,
relations, and coreference for scientific knowledge graph construction. In Proceedings of the
2018 Conference on Empirical Methods in Natural Language Processing, Brussels, Belgium,
October 31 - November 4, 2018, pp. 3219-3232, 2018. URL https://aclanthology.
info/papers/D18-1360/d18-1360.
Yi Luan, Dave Wadden, Luheng He, Amy Shah, Mari Ostendorf, and Hannaneh Hajishirzi. A gen-
eral framework for information extraction using dynamic span graphs. In Proceedings of the 2019
Conference of the North American Chapter of the Association for Computational Linguistics: Hu-
man Language Technologies, Volume 1 (Long and Short Papers), pp. 3036-3046, Minneapolis,
Minnesota, June 2019. Association for Computational Linguistics. doi: 10.18653/v1/N19-1308.
URL https://www.aclweb.org/anthology/N19- 1308.
Xuezhe Ma and Eduard H. Hovy. End-to-end sequence labeling via bi-directional lstm-cnns-crf.
In Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics,
ACL 2016, August 7-12, 2016, Berlin, Germany, Volume 1: Long Papers, 2016. URL https:
//www.aclweb.org/anthology/P16-1101/.
Ana Marasovic and Anette Frank. SRL4ORL: Improving opinion role labeling using multi-task
learning with semantic role labeling. In Proceedings of the 2018 Conference of the North Amer-
ican Chapter of the Association for Computational Linguistics: Human Language Technologies,
Volume 1 (Long Papers), pp. 583-594, New Orleans, Louisiana, June 2018. Association for Com-
putational Linguistics. doi: 10.18653/v1/N18-1054. URL https://www.aclweb.org/
anthology/N18-1054.
Mitchell P. Marcus, Grace Kim, Mary Ann Marcinkiewicz, Robert MacIntyre, Ann Bies, Mark
Ferguson, Karen Katz, and Britta Schasberger. The penn treebank: Annotating predicate argu-
ment structure. In Human Language Technology, Proceedings of a Workshop held at Plainsboro,
11
Under review as a conference paper at ICLR 2020
New Jerey, USA, March 8-11, 1994, 1994. URL https://www.aclweb.org/anthology/
H94-1020/.
Ryan McDonald, Joakim Nivre, Yvonne Quirmbach-Brundage, Yoav Goldberg, Dipanjan Das, Kuz-
man Ganchev, Keith Hall, Slav Petrov, Hao Zhang, Oscar Tackstrom, Claudia Bedini, Nuria
BertomeU Castello, and Jungmee Lee. Universal dependency annotation for multilingual parsing.
In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics (Vol-
Ume 2: Short Papers), pp. 92-97, Sofia, Bulgaria, August 2013. Association for Computational
Linguistics. URL https://www.aclweb.org/anthology/P13-2017.
Ramesh Nallapati, Bowen Zhou, Ccero Nogueira dos Santos, CagIar GuICehre, and Bing Xiang.
Abstractive text summarization using sequence-to-sequence rnns and beyond. In Proceedings
of the 20th SIGNLL Conference on Computational Natural Language Learning, CoNLL 2016,
Berlin, Germany, August 11-12, 2016, pp. 280-290, 2016. URL https://www.aclweb.
org/anthology/K16-1028/.
Christina Niklaus, Matthias Cetto, Andre Freitas, and Siegfried Handschuh. A survey on open in-
formation extraction. In Proceedings of the 27th International Conference on Computational
Linguistics, pp. 3866-3878, Santa Fe, New Mexico, USA, August 2018. Association for Compu-
tational Linguistics. URL https://www.aclweb.org/anthology/C18-1326.
Jeffrey Pennington, Richard Socher, and Christopher D. Manning. Glove: Global vectors for word
representation. In Proceedings of the 2014 Conference on Empirical Methods in Natural Lan-
guage Processing, EMNLP 2014, October 25-29, 2014, Doha, Qatar, A meeting of SIGDAT,
a Special Interest Group of the ACL, pp. 1532-1543, 2014. URL https://www.aclweb.
org/anthology/D14-1162/.
Matthew Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, and
Luke Zettlemoyer. Deep contextualized word representations. In Proceedings of the 2018 Con-
ference of the North American Chapter of the Association for Computational Linguistics: Hu-
man Language Technologies, Volume 1 (Long Papers), pp. 2227-2237, New Orleans, Louisiana,
June 2018. Association for Computational Linguistics. doi: 10.18653/v1/N18-1202. URL
https://www.aclweb.org/anthology/N18-1202.
Maria Pontiki, Dimitris Galanis, John Pavlopoulos, Harris Papageorgiou, Ion Androutsopoulos, and
Suresh Manandhar. Semeval-2014 task 4: Aspect based sentiment analysis. In Proceedings of the
8th International Workshop on Semantic Evaluation, SemEval@COLING 2014, Dublin, Ireland,
August 23-24, 2014., pp. 27-35, 2014. URL https://www.aclweb.org/anthology/
S14-2004/.
Sameer Pradhan, Alessandro Moschitti, Nianwen Xue, Olga Uryupina, and Yuchen Zhang. Conll-
2012 shared task: Modeling multilingual unrestricted coreference in ontonotes. In Joint Confer-
ence on Empirical Methods in Natural Language Processing and Computational Natural Lan-
guage Learning - Proceedings of the Shared Task: Modeling Multilingual Unrestricted Coref-
erence in OntoNotes, EMNLP-CoNLL 2012, July 13, 2012, Jeju Island, Korea, pp. 1-40, 2012.
URL https://www.aclweb.org/anthology/W12- 4501/.
Sameer Pradhan, Alessandro Moschitti, Nianwen Xue, Hwee Tou Ng, Anders Bjorkelund, Olga
Uryupina, Yuchen Zhang, and Zhi Zhong. Towards robust linguistic analysis using ontonotes.
In Proceedings of the Seventeenth Conference on Computational Natural Language Learning,
CoNLL 2013, Sofia, Bulgaria, August 8-9, 2013, pp. 143-152, 2013. URL https://www.
aclweb.org/anthology/W13-3516/.
Adwait Ratnaparkhi. A maximum entropy model for part-of-speech tagging. In Conference on
Empirical Methods in Natural Language Processing, 1996. URL https://www.aclweb.
org/anthology/W96-0213.
Sebastian Ruder. An overview of multi-task learning in deep neural networks. CoRR,
abs/1706.05098, 2017. URL http://arxiv.org/abs/1706.05098.
Erik F. Tjong Kim Sang and Fien De Meulder. Introduction to the conll-2003 shared task: Language-
independent named entity recognition. In Proceedings of the Seventh Conference on Natural
12
Under review as a conference paper at ICLR 2020
Language Learning, CoNLL 2003, Held in cooperation with HLT-NAACL 2003, Edmonton,
Canada, May 31 - June 1, 2003, pp. 142-147, 2003. URL https://www.aclweb.org/
anthology/W03-0419/.
Peng Shi and Jimmy Lin. Simple BERT models for relation extraction and semantic role labeling.
CoRR, abs/1904.05255, 2019. URL http://arxiv.org/abs/1904.05255.
Nitish Srivastava, Geoffrey E. Hinton, Alex Krizhevsky, Ilya Sutskever, and Ruslan Salakhutdinov.
Dropout: a simple way to prevent neural networks from overfitting. J. Mach. Learn. Res., pp.
1929-1958, 2014.
Gabriel Stanovsky and Ido Dagan. Creating a large benchmark for open information extraction.
In Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing,
pp. 2300-2305, Austin, Texas, November 2016. Association for Computational Linguistics. doi:
10.18653/v1/D16-1252. URL https://www.aclweb.org/anthology/D16- 1252.
Gabriel Stanovsky, Julian Michael, Luke Zettlemoyer, and Ido Dagan. Supervised open information
extraction. In Proceedings of the 2018 Conference of the North American Chapter of the Associa-
tion for Computational Linguistics: Human Language Technologies, Volume 1 (Long Papers), pp.
885-895, New Orleans, Louisiana, June 2018. Association for Computational Linguistics. doi:
10.18653/v1/N18-1081. URL https://www.aclweb.org/anthology/N18- 1081.
PontUs Stenetorp, Sampo Pyysalo, Goran Topic, Tomoko Ohta, Sophia Ananiadou, and Jun'ichi
Tsujii. BRAT: a web-based tool for NLP-assisted text annotation. In Proceedings of the Demon-
strations at the 13th Conference of the European Chapter of the Association for Computational
Linguistics, pp. 102-107, Avignon, France, April 2012. Association for Computational Linguis-
tics. URL https://www.aclweb.org/anthology/E12- 2021.
Mitchell Stern, Jacob Andreas, and Dan Klein. A minimal span-based neural constituency parser. In
Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, ACL
2017, Vancouver, Canada, July 30 - August 4, Volume 1: Long Papers, pp. 818-827, 2017. doi:
10.18653/v1/P17-1076. URL https://doi.org/10.18653/v1/P17-1076.
Emma Strubell, Patrick Verga, Daniel Andor, David Weiss, and Andrew McCallum. Linguistically-
informed self-attention for semantic role labeling. In Proceedings of the 2018 Conference on Em-
pirical Methods in Natural Language Processing, pp. 5027-5038, Brussels, Belgium, October-
November 2018. Association for Computational Linguistics. doi: 10.18653/v1/D18-1548. URL
https://www.aclweb.org/anthology/D18-1548.
Ilya Sutskever, Oriol Vinyals, and Quoc V. Le. Sequence to sequence learning with neu-
ral networks. In Advances in Neural Information Processing Systems 27: Annual Con-
ference on Neural Information Processing Systems 2014, December 8-13 2014, Montreal,
Quebec, Canada, pp. 3104-3112, 2014. URL http://papers.nips.cc/paper/
5346-sequence-to-sequence-learning-with-neural-networks.
Swabha Swayamdipta, Sam Thomson, Kenton Lee, Luke Zettlemoyer, Chris Dyer, and Noah A.
Smith. Syntactic scaffolds for semantic structures. In Proceedings of the 2018 Conference on Em-
pirical Methods in Natural Language Processing, pp. 3772-3782, Brussels, Belgium, October-
November 2018. Association for Computational Linguistics. doi: 10.18653/v1/D18-1412. URL
https://www.aclweb.org/anthology/D18-1412.
Ian Tenney, Dipanjan Das, and Ellie Pavlick. BERT rediscovers the classical NLP pipeline. In
Proceedings of the 57th Conference of the Association for Computational Linguistics, ACL 2019,
Florence, Italy, July 28- August 2, 2019, Volume 1: Long Papers, pp. 4593-4601, 2019a. URL
https://www.aclweb.org/anthology/P19-1452/.
Ian Tenney, Patrick Xia, Berlin Chen, Alex Wang, Adam Poliak, R. Thomas McCoy, Najoung Kim,
Benjamin Van Durme, Samuel R. Bowman, Dipanjan Das, and Ellie Pavlick. What do you learn
from context? probing for sentence structure in contextualized word representations. In 7th
International Conference on Learning Representations, ICLR 2019, New Orleans, LA, USA, May
6-9, 2019, 2019b. URL https://openreview.net/forum?id=SJzSgnRcKX.
13
Under review as a conference paper at ICLR 2020
Kristina Toutanova, Dan Klein, Christopher D. Manning, and Yoram Singer. Feature-rich part-of-
speech tagging with a cyclic dependency network. In Proceedings of the 2003 Human Language
Technology Conference of the North American Chapter of the Association for Computational Lin-
guistics, pp. 252-259, 2003. URL https://www.aclweb.org/anthology/N03-1033.
Alex Wang, Yada Pruksachatkun, Nikita Nangia, Amanpreet Singh, Julian Michael, Felix Hill, Omer
Levy, and Samuel R. Bowman. Superglue: A stickier benchmark for general-purpose language
understanding systems. CoRR, abs/1905.00537, 2019a. URL http://arxiv.org/abs/
1905.00537.
Alex Wang, Amanpreet Singh, Julian Michael, Felix Hill, Omer Levy, and Samuel R. Bowman.
GLUE: A multi-task benchmark and analysis platform for natural language understanding. In 7th
International Conference on Learning Representations, ICLR 2019, New Orleans, LA, USA, May
6-9, 2019, 2019b. URL https://openreview.net/forum?id=rJ4km2R5t7.
Shanchan Wu and Yifan He. Enriching pre-trained language model with entity information for re-
lation classification. CoRR, abs/1905.08284, 2019. URL http://arxiv.org/abs/1905.
08284.
Hu Xu, Bing Liu, Lei Shu, and Philip Yu. BERT post-training for review reading compre-
hension and aspect-based sentiment analysis. In Proceedings of the 2019 Conference of the
North American Chapter of the Association for Computational Linguistics: Human Language
Technologies, Volume 1 (Long and Short Papers), pp. 2324-2335, Minneapolis, Minnesota,
June 2019. Association for Computational Linguistics. doi: 10.18653/v1/N19-1242. URL
https://www.aclweb.org/anthology/N19-1242.
Bishan Yang and Claire Cardie. Joint inference for fine-grained opinion extraction. In Proceedings
of the 51st Annual Meeting of the Association for Computational Linguistics, ACL 2013, 4-9
August 2013, Sofia, Bulgaria, Volume 1: Long Papers, pp. 1640-1649, 2013. URL https:
//www.aclweb.org/anthology/P13-1161/.
Junlang Zhang and Hai Zhao. Span based open information extraction. CoRR, abs/1901.10879,
2019. URL http://arxiv.org/abs/1901.10879.
A Results of BERT large model
Category	Task	Metric	Dataset	GloVe	ELMo	BERTbase	SpanBERTbase	BERTlarge
	NER	F1	CoNLL03	88.4	91.9	91.0	91.3	90.9
			WLP	77.6	79.2	78.1	77.9	78.3
IE	RE	F1	SemEval10	50.7	61.8	61.7	62.1	64.7
			WLP	64.9	65.5	64.7	64.1	65.1
	Coref	Avg F1	OntoNotes	56.3	62.2	66.3	70.0	-
	OpenIE	F1	OIE2016	28.3	35.2	36.7	36.5	36.5
SRL		F1	OntoNotes	78.0	82.4	83.3	83.1	84.4
	Dep.	LAS	PTB	92.9	94.7	94.9	95.1	95.3
Parsing			OntoNotes	90.4	92.3	94.1	94.2	94.5
	Consti.	Evalb F1	PTB	93.4	95.3	95.5	95.8	95.8
			OntoNotes	91.0	93.2	93.6	94.3	93.9
Sentiment	ABSA	F1	SemEval14	63.5	69.2	70.8	70.0	73.8
	ORL	F1	MPQA 3.0	38.2	42.9	44.5	45.2	47.1
POS		Accuracy	PTB	96.8	97.7	97.6	97.6	97.4
			OntoNotes	97.0	98.2	97.7	98.3	97.9
Table 7: Single-task learning performance of the SpanRel model with different token representa-
tions. BERTlarge requires a large amount of memory so we cannot feed the entire document to the
model in coreference resolution.
14
Under review as a conference paper at ICLR 2020
B	Task-specific Hyperparameters
As shown in Table 8, a larger maximum span length is used for tasks with longer spans (e.g., Ope-
nIE), and a larger pruning ratio is used for tasks with more spans (e.g., SRL). Constituency parsing
does not have span length limit because spans can be as long as the entire sentence. Since relation
extraction aims to extract exactly two entities and their relation from a sentence, we keep pruning
ratio fixed (top 5 spans in this case) regardless of the length of the sentence.
	Information Extraction			POS	Parsing Dep. Consti.	SRL	Sentiment ABSA ORL
	NER RE	Coref.	OPenIE				
max span length l	10	5	10	30	1	1-	30	10	30
pruning ratio τ	-5	0.4	0.8	-	1.0	-	1.0	-	0.3
Table 8: Task-specific hyperparameters. Span-oriented tasks do not need pruning ratio.
15