Figure 1: (A) Anatomical skeleton of a rodent (as reference; not part of physical simulation). (B) Abody designed around the skeleton to match the anatomy and model collisions with the environment.
Figure 2: Visualizations of four tasks the virtual rodent was trained to solve: (A) jumping over gaps(“gaps run”), (B) foraging in a maze (“maze forage”), (C) escaping from a hilly region (“bowl es-cape”), and (D) touching a ball twice with a forepaw with a precise timing interval between touches(“two-tap”).
Figure 3: The virtual rodent agent architecture. Egocentric visual image inputs are encoded intofeatures via a small residual network (He et al., 2016) and proprioceptive state observations areencoded via a small multi-layer perceptron. The features are passed into a recurrent LSTM module(Hochreiter & Schmidhuber, 1997). The core module is trained by backpropogation during trainingof the value function. The outputs of the core are also passed as features to the policy module (withthe dashed arrow indicating no backpropogation along this path during training) along with shortcutpaths from the proprioceptive observations as well as encoded features. The policy module consistsof one or more stacked LSTMs (with or without skip connections) which then produce the actionsvia a stochastic policy.
Figure 4: Ethology of the virtual rodent. (A) Example jumping sequence in gaps run task with a rep-resentative subset of recorded behavioral features. Dashed lines denote the time of the correspondingframes (top). (B) tSNE embedding of 60 behavioral features describing the pose and kinematics ofthe virtual rodent allows identification of rodent behaviors. Points are colored by hand-labeling ofbehavioral clusters identified by watershed clustering. (C) The first two principal components ofdifferent behavioral features reveals that behaviors are more shared across tasks at short, 5-25 Hztimescales (fast kinematics), but no longer 0.3-5 Hz timescales (slow kinematics).
Figure 5: Representational structure of the rodent’s neural network. (A) Example similarity matricesof neural networks and behavioral descriptors. We grouped behavioral descriptors into 50 clustersthat and we computed the average neural population vector during each cluster (AppendixA.4).
Figure 6: Policy representations are shared across tasks. (A) Two-dimensional multidimensionalscaling embeddings of core and policy activity shows that while policy representations overlapacross some tasks, core representations are largely distinct. (B) CKA index of the policy 2 andcore network representations of behavioral features during behaviors shared across different tasks(Appendix A.4). Policy 2, but not core networks show similar encoding patterns across the acrossthe maze forage and two-tap tasks, as well as the gaps run and maze forage tasks, consistent with theshared behaviors used across these tasks. (C) The similarity of behavioral feature encoding (CKAindex) across different architectures demonstrates that networks with fewer layers show greater sim-ilarity across tasks. Points show values from individual seeds.
Figure 7: Neurons in core and policy networks show sequential activity during stereotyped behavior.
Figure 8: Latent network dynamics within tasks reflect rodent behavior on different timescales. (A)Vector field representation of the first two principal components of neural activity in the core andfinal policy layers during the two-tap task. PC spaces show signatures of rotational dynamics. (B)Vector field representation of first two jPC planes for the core and final policy layers during the two-tap task. Apparent rotations within the different planes are associated with behaviors and behavioralfeatures of different timescales, labeled above. Columns denote layer (as in (A)), while rows denotejPC plane. (C) Characteristic frequency of rotations within each jPC plane. Groups of three pointsrespectively indicate the first, second, and third jPC planes for a given layer. Rotations in the coreare slower than those in the policy. (D) Variance explained by each jPC plane.
Figure 9: (A) Power spectral density estimates of four different features describing animal behavior,computed by averaging the spectral density of the top ten principal components of each feature,weighted by the variance they explain. (B) Power spectral density estimates of four different net-work layers, computed by averaging the spectral density of the top ten principal components of eachmatrix of activations, weighted by the variance they explain. Notice that policy layers have morepower in high frequency bands than core layers. Arrows mark peaks in the power spectra corre-sponding to locomotion. Notably, the 4-5 Hz frequency of galloping in the virtual rat matches thatmeasured in laboratory rats (Heglund & Taylor, 1988). Power spectral density was computed usingWelch’s method using a 10 s window size and 5 s overlap.
Figure 10: Average activity in the final policy layer (policy 2) during running cycles across differenttasks. In each heatmap, rows correspond to the absolute averaged z-scored activity for individ-ual neurons, while columns denote time relative to the mid stance of the running phase. Acrossheatmaps, neurons are sorted by the time of peak activity in the tasks denoted on the left, suchthat each column of heatmaps contains the same average activity information with rearranged rows.
Figure 11: Quantification of neural variability in inter-tap interval of two-tap task relative to thesecond tap. (A) Example normalized activity traces of ten randomly selected neurons in the finalpolicy layer. Lines indicate mean normalized activity whiles shaded regions range from the 20thpercentile to the 80th percentile. Dashed lines indicate the times of first and second taps. (B)Standard deviation of normalized activity across all neurons in the final policy layer as a functionof time relative to the second tap. Lines indicate the mean standard deviation while shaded regionsrange from the 20th percentile to the 80th percentile. Observe that variability is reduced during thetwo-tap interval.
Figure 12: Causal manipulations reveal distinct roles for core and policy layers in the productionof behavior. (A) Two-tap accuracy during the inactivation of units modulated by idiosyncratic be-haviors within the two-tap sequence. Core inactivation has a weaker negative effect on trial successthan policy inactivation for several levels of inactivation. (B) Representative example of a failedtrial during inactivation of the final policy layer in a model that performs a spinning jump during thetwo-tap sequence. The model is incapable of producing the spinning jump behavior while inacti-vated. (C) Representative example of a failed trial during core inactivation in a model that performsa spinning jump during the two-tap sequence. The model is still able to perform the spinning jumpbehavior, but misses the orb. (D) Proportion of attempts at stimulation that successfully elicited spinbehavior during the two-tap task. The efficacy of this activation was more reliable in layers closerto the motor output. (E) Representative example of a single trial in which an extra spin occurs afterpolicy 2 activation.
