Figure 1: Neural Forth Abstract Machine. Forth sketch Pθ is translated to a low-level code, withthe slot { ...} substituted by a parametrised neural network. The slot is learnt from input-outputexamples (x, y) through the differentiable machine whose state Si comprises the low-level code andprogram counter c, data stack D (with pointer d), return stack R (with pointer r), and the heap H.
Figure 2: ∂4 Segment of the RNN execution of a Forth sketch in Listing 2. The pointers (d, r) andvalues (rows of R and D) are all in one-hot state (colors simply denote values observed, defined bythe top scale), while the program counter maintains the uncertainty. Subsequent states are discretisedfor clarity. Here the slot {...} has learned its optimal behaviour.
Figure 3: Train and test accuracy for varying number of training examples (a) and relative speedimprovements of program code optimizations for different input sequence lengths (b).
Figure 4: Program Counter traces for a single example at different stages of training BubbleSort inListing 2 (red: successive recursion calls to bubble, green: successive returns from the recursion,and blue: calls to SORT). The last element in the last row is the halting command, which only getsexecuted after learning the correct slot behavior.
