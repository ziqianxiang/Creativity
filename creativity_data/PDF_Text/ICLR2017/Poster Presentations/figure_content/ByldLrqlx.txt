Figure 1: An example program in our DSL that takes a single integer array as its input.
Figure 2: Neural network predicts the probability of each function appearing in the source code.
Figure 3: Search speedups on programs of length T = 5 and influence of length of training programs.
Figure 4: Predictions of a neural network on the 9 example programs described in this section.
Figure 5: Number of test problems solved versus computation time.
Figure 6: Number of test problems solved versus computation time.
Figure 7: Schematic representation of our feed-forward encoder, and the decoder.
Figure 8: A learned embedding of integers {-256, -255, . . . , -1, 0, 1, . . . , 255} in R2. The colorintensity corresponds to the magnitude of the embedded integer.
Figure 9: Conditional confusion matrix for the neural network and test set of P = 500 programs oflength T = 3 that were used to obtain the results presented in Table 1. Each cell contains the averagefalse positive probability (in larger font) and the number of test programs from which this averagewas computed (smaller font, in brackets). The color intensity of each cellâ€™s shading coresponds tothe magnitude of the average false positive probability.
Figure 10: Conditional confusion matrix for the neural network and test set of P = 500 programs oflength T = 5. The presentation is the same as in Figure 9.
