Figure 1: Diagram of the differentiable encoding of a graphical structure, as described in section 3.
Figure 2: Summary of the graph transformations. Input and output are represented as gray squares.
Figure 3: Visualization of network performance on the Rule 30 Automaton task. Top node (purple)represents zero, bottom node (blue) represents 1, and middle nodes (green, orange, and red) repre-sent individual cells. Blue edges indicate adjacent cells, and gold edges indicate the value of eachcell. Three timesteps occur between each row.
Figure 4: Diagram of the operations performed for each class of transformation. Graph state isshown in the format given by Figure 1. Input and output are shown as gray boxes. Black dotsrepresent concatenation, and + and Ã— represent addition and multiplication, respectively. 1 - #represents taking the input value and subtracting it from 1. Note that for simplicity, operations areonly shown for single nodes or edges, although the operations act on all nodes and edges in parallel.
Figure 5: Diagram of one sample story from the bAbI dataset (Task 2), along with a graphicalrepresentation of the knowledge state after the italicized sentence.
Figure 6: Diagram of one example from the automaton task, along with a graphical representationof the automaton state after the fourth simulate command (italicized).
Figure 7: Diagram of an example from the Turing machine taSk, with a graphical repreSentation ofthe machine State after the Second run command (italicized).
