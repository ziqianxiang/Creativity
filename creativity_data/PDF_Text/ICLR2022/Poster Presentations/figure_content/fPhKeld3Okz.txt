Figure 1: Deblurring with various methods of “starfish” degraded with the indicated blur kernel andinput noise level ν = 0.03. Note that our algorithm better recovers the structures. In (g) and (h), weshow the evolution of F(xk) and γk = min0≤i≤k ||xi+1 - xi||2/||x0||2 and in Appendix J.4 of thePSNR. We empirically verify convergence of functional values and residual. Note that the empiricalconvergence rate in (h) is faster than the O( 1) theoretical worst case rate established in Remark 2.
Figure 2: Super-resolution with various methods on “leaves” (set3C) downsampled by 2, withthe indicated blur kernel and input noise level ν = 0.03. Note that our algorithm is theone that recovers sharpest leaves. In (g) and (h), we show the evolution of F (xk) andγk = min0≤i≤k ||xi+1 - xi||2/||x0||2 and in AppendixJ.4 the evolution of the PSNR.. The em-Pirical convergence rate is faster than the O( 1) theoretical worst case rate established in Remark 2.
Figure 3: Histogram of the values of the spectral norm ∣∣V2gσ(X)IIS evaluated on 128 X 128 im-ages from the training dataset, degraded with white Gaussian noise with various standard devia-tions σ (./255). Figure best seen in color.
Figure 4: Architecture of the DRUNet light denoiser (Zhang et al. (2021)) used to parameterize Nσ .
Figure 5: Lipschitz constant of Dσ along the iterates of the algorithm when performing the super-resolution experiments presented Figure 7. Note that the Lipschitz constant goes above 1 i.e. Dσ isnot nonexpansive, but we still empirically verified convergence (see convergence curves Figure 7).
Figure 6: Deblurring with various methods of an image from CSBD10 degraded with the indicatedblur kernel and input noise level V = 0.01. In (g) and (h), we show the evolution of F (xk) andYk = min0≤i≤k ∣∣xi+1 - Xi||2∕∣∣x01|2 along our algorithm. Note that GS-PnP and DPIR both re-cover fine textures while other methods tend to smooth details.
Figure 7: Super-resolution with various methods on a CBSD10 image degraded with the indicatedblur kernel, s = 2 and input noise level ν = 0.05. In (g) and (h), we show the evolution of F (xk)and γk = min0≤i≤k ||xi+1 - xi||2/||x0||2 along our algorithm. One can notice that the proposedmethod GS-PnP manages to extract more structure in the zoomed area than the competing methods.
Figure 8: Super-resolution with various methods on a CBSD10 image degraded with the indicatedblur kernel, s = 3 and input noise level ν = 0.01. In (g) and (h), we show the evolution of F (xk)and γk = min0≤i≤k ||xi+1 - xi||2/||x0||2 along our algorithm.
Figure 9: Inpainting results on set3C with pixels randomly masked with probability p = 0.5. In thelast colomn, we show the evolution ofγk = min0≤i≤k ||xi+1 - xi||2/||x0||2 along the iterations.
Figure 10: Evolution of the PSNR along the iterations of the algorithm, during (a) the deblurring ex-periment of Figure 1 and (b) the super-resolution experiment of Figure 2. Note that the convergencein PSNR follows the convergence in function value (represented in Figures 1(g) and 2(g)).
Figure 11: Influence of the choice of the parameter λν for deblurring. Top: average PSNR Whendeblurring the images of CBSD10, blurred With motion blurs or static blurs, for different valuesof λν. The other parameters remain unchanged. Bottom: visual results When deblurring “starfish”With various λν (in the same conditions as Figure 1).
Figure 12: Influence of the choice of the parameter σ for deblurring. Top: average PSNR whendeblurring the images of CBSD10, blurred With the 10 kernels, for different values of σ∕ν, Withν = 0.03. The other parameters remain unchanged. Bottom: visual results when deblurring“starfish” With various σ∕ν, With ν = 0.03 (in the same conditions as Figure 1).
Figure 13: Influence of the parameters σ and λ for RED and GS-PnP when deblurring the singleimage “starfish” degraded with uniform kernel and ν = 7.65/255. For fair comparison, like inTable 6, the PSNR is calculated on the Y channel only. Remember that the results of Table 6 wereobtained with σ = 3.25, λ = 0.02 for RED andσ = 2ν,λ = 0.075 for GS-PnP.
Figure 14: Influence of the initialitation z0 on the deblurring result. Instead of initializing withthe blurred image z0 = y as done in Section 5.2.1, we set z0 = y + ξσinit with ξσinit an AWGNwith standard deviation σinit. By increasing the noise level σinit, we investigate the robustness ofthe result to changes in the initialization of the algorithm. Top: PSNR values, along with valuesof σinit. Bottom: corresponding visual results on “starfish” with various σinit (in the same conditionsas Figure 1). The algorithm is robust to noisy initializations up to a relatively large value of σinit.
Figure 15: Convergence of the DPIR algorithm versus convergence of GS-PnP when deblurring the“starfish” image. The two first rows display results obtained with DPIR with two different strategiesused for decreasing σ: in the first row, σ is decreased from 49 to ν over 1000 iterations; in the secondrow, σ is decreased in 8 iterations and then kept fixed for the remaining iterations.
