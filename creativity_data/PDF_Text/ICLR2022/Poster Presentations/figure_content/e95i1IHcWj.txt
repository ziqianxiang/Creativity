Figure 1: Illustration of Positional Encoding (PE): (i) GNNs cannot distinguish nodes a,b,c,d because the graphhas automorphism where a is mapped to b, c, d. GNNs fail to predict whether (a,b) or (a,d) is more likely to havea link; (ii) PE associates each node with extra positional features that may distinguish nodes; (iii) An exampleof PE uses the eigenvectors that correspond to the 2nd and 3rd smallest eigenvalues of the graph Laplacianas positional features (denoted as the 2-dim vectors besides each node). The proposed GNN layer PEG keepsrotation equivariance when processing these features.
Figure 2: Eigenvalues λp and the stability ratio ρpis far more stable than previous methods with sensitivity maxι≤k≤p ∣λk - λk+1∣-1. Over Citeseer, Pp isextremely large because there are multiple eigenvalues (ρp is still finite due to the numerical approximation ofthe eigenvalues). Over Twitch(PT), even if there are no multiple eigenvalues, ρp is mostly larger than 10.
Figure 3: Eigenvalues λp and the stability ratio ρp =minι≤λ≤-⅛+⅛+π.PEGWith SenSitiVity %-4+1厂1is far more stable than previous methods with sensitivity maxι≤k≤p ∣λk — λk+ι |-1. Over Cora, Pp is extremelylarge becauSe there are multiple eigenValueS (ρp iS Still finite due to the numerical approximation of theeigenvalues). Over Pubmed, Twitch(RU) and Chameleon even if there are no multiple eigenvalues, ρp is mostlylarger than 5.
Figure 4: The performance (AUC) of PEG with different dimensions of positional encodings for traditional linkprediction (Task 1).
Figure 5: The edge weight transformation curve of PEG for each dataset. 500 selected edges arerepresented as red points.
Figure 6: The comparison of AUC-ROC between PEG and GAE baselines for link prediction on randomgraphs.
Figure 7: The AUC-ROC of PEG and GAE/VGAE for link prediction in terms of PE stability (w.
