Published as a conference paper at ICLR 2022
Generalized Kernel Thinning
Raaz Dwivedi1 , Lester Mackey2
1	Department of Computer Science, Harvard University and Department of EECS, MIT
2	Microsoft Research New England
raaz@mit.edu, lmackey@microsoft.com
Ab stract
The kernel thinning (KT) algorithm of Dwivedi and Mackey (2021) compresses a
probability distribution more effectively than independent sampling by targeting
a reproducing kernel Hilbert space (RKHS) and leveraging a less smooth square-
root kernel. Here we provide four improvements. First, we show that KT ap-
plied directly to the target RKHS yields tighter, dimension-free guarantees for
any kernel, any distribution, and any fixed function in the RKHS. Second, we
show that, for analytic kernels like Gaussian, inverse multiquadric, and sinc, tar-
get KT admits maximum mean discrepancy (MMD) guarantees comparable to or
better than those of square-root KT without making explicit use of a square-root
kernel. Third, we prove that KT with a fractional power kernel yields better-than-
Monte-Carlo MMD guarantees for non-smooth kernels, like Laplace and Matern,
that do not have square-roots. Fourth, we establish that KT applied to a sum of
the target and power kernels (a procedure we call KT+) simultaneously inherits
the improved MMD guarantees of power KT and the tighter individual function
guarantees of target KT. In our experiments with target KT and KT+, we witness
significant improvements in integration error even in 100 dimensions and when
compressing challenging differential equation posteriors.
1 Introduction
A core task in probabilistic inference is learning a compact representation of a probability dis-
tribution P. This problem is usually solved by sampling points x1, . . . , xn independently from
P or, if direct sampling is intractable, generating n points from a Markov chain converging to
P. The benefit of these approaches is that they provide asymptotically exact sample estimates
Pinf，n1 pn=1 f(xi) for intractable expectations Pf，Eχ~p[f(X)]. However, they also suffer
from a serious drawback: the learned representations are unnecessarily large, requiring n points to
achieve |Pf - Pinf | = Θ(n- 1) integration error. These inefficient representations quickly become
prohibitive for expensive downstream tasks and function evaluations: for example, in computational
cardiology, each function evaluation f(xi) initiates a heart or tissue simulation that consumes 1000s
of CPU hours (Niederer et al., 2011; Augustin et al., 2016; Strocchi et al., 2020).
To reduce the downstream computational burden, a standard practice is to thin the initial sample by
discarding every t-th sample point (Owen, 2017). Unfortunately, standard thinning often results in
a substantial loss of accuracy: for example, thinning an i.i.d. or fast-mixing Markov chain sample
from n points to n2 points increases integration error from Θ(n-2) to Θ(n- 4).
The recent kernel thinning (KT) algorithm of Dwivedi & Mackey (2021) addresses this issue by
producing thinned coresets with better-than-i.i.d. integration error in a reproducing kernel Hilbert
space (RKHS, Berlinet & Thomas-Agnan, 2011). Given a target kernel1 k and a suitable sequence
of input points Sin = (xi)n=1 approximating P, KT returns a subsequence Sout of √n points with
better-than-i.i.d. maximum mean discrepancy (MMD, Gretton et al., 2012),2
MMDk (P, Pout)，SUpkfk41∣Pf - PoUtfI for POUt，√nn Pχ∈sout δχ,	(1)
1 A kernel k is any function that yields positive semi-definite matrices (k(zi, zj))li,j =1 for all inputs (zi)li=1.
2MMD is a metric for characteristic k, like those in Tab. 1, and controls integration error for all bounded
continuous f when k determines convergence, like each k in Tab. 1 except SINC (Simon-Gabriel et al., 2020).
1
Published as a conference paper at ICLR 2022
where |卜|限 denotes the norm for the RKHS H associated with k. That is, the KT output admits
o(n-4) worst-case integration error across the unit ball of H.
KT achieves its improvement with high probability using non-uniform randomness and a less smooth
square-root kernel krt satisfying
k(x, y) = Rd krt(x, z)krt(z, y)dz.	(2)
When the input points are sampled i.i.d. or from a fast-mixing Markov chain on Rd, Dwivedi &
Mackey prove that the KT output has, with high probability, Od(n- 1 √log n)-MMDk error for
P and krt with bounded support, Od (n- 1 (logd+1 n log log n) 1)-MMDk error for P and k1∙t with
light tails, and Od(n- 1 + 2ρ √log n log log n)-MMDk error for P and kr2t with ρ > 2d moments.
Meanwhile, an i.i.d. coreset of the same size suffers Ω(n-4) MMDk. We refer to the original KT
algorithm as root KT hereafter.
Our contributions In this work, we offer four improvements over the original KT algorithm.
First, we show in Sec. 2.1 that a generalization of KT that uses only the target kernel k provides a
tighter O(n- 1 √log n) integration error guarantee for each function f in the RKHS. This TARGET
KT guarantee (a) applies to any kernel k on any domain (even kernels that do not admit a square-
root and kernels defined on non-Euclidean spaces), (b) applies to any target distribution P (even
heavy-tailed P not covered by ROOT KT guarantees), and (c) is dimension-free, eliminating the
exponential dimension dependence and (log n)d/2 factors of prior ROOT KT guarantees.
Second, we prove in Sec. 2.2 that, for analytic kernels, like Gaussian, inverse multiquadric (IMQ),
and sinc, target KT admits MMD guarantees comparable to or better than those of Dwivedi &
Mackey (2021) without making explicit use of a square-root kernel. Third, we establish in Sec. 3
that generalized KT with a fractional α-power kernel kα yields improved MMD guarantees for
kernels that do not admit a square-root, like Laplace and non-smooth Matern. Fourth, we show in
Sec. 3 that, remarkably, applying generalized KT to a sum of k and kα—a procedure we call kernel
thinning+ (KT+)—simultaneously inherits the improved MMD of POWER KT and the dimension-
free individual function guarantees of target KT.
In Sec. 4, we use our new tools to generate substantially compressed representations of both i.i.d.
samples in dimensions d = 2 through 100 and Markov chain Monte Carlo samples targeting chal-
lenging differential equation posteriors. In line with our theory, we find that target KT and KT+
significantly improve both single function integration error and MMD, even for kernels without
fast-decaying square-roots.
GAUSS(σ)	LAPLACE(σ)	Matern (ν, Y)	IMQ(ν,γ)	SINC(θ)	B-SPLINE(2β +1, Y)
σ>0	σ>0	ν > d, γ > 0	ν > 0,Y > 0	θ 6= 0	β∈N
eχp(-kzk2 )	exp(-ɪ )	CV- d (Ykzk2)ν-2 K-d (Ykzk2)	1 (1 + ∣∣z∣∣2∕γ2)ν	d	sin(θzj ) j = 1	θzj	B2-βd+2Qjd=1hβ(Yzj)
Table 1: Common kernels k(x,y) on Rd with Z = X — y. In each case, kk∣∣∞ = 1. Here, Ca，r—., Ka
is the modified Bessel function of the third kind of order a (Wendland, 2004, Def. 5.10), hβ is the
recursive convolution of 2β + 2 copies of 1[- 1 1 ], and Be，Pb=02c (—1)j (；)(2 - j)β~1.
Related work For bounded k, both i.i.d. samples (Tolstikhin et al., 2017, Prop. A.1) and thinned
geometrically ergodic Markov chains (Dwivedi & Mackey, 2021, Prop. 1) deliver n 2 points with
O(n- 1) MMD with high probability. The online Haar strategy of Dwivedi et al. (2019) and low dis-
crepancy quasi-Monte Carlo methods (see, e.g., Hickernell, 1998; Novak & Wozniakowski, 2010;
Dick et al., 2013) provide improved Od(n- 1 logd n) MMD guarantees but are tailored specifically
to the uniform distribution on [0, 1]d. Alternative coreset constructions for more general P include
kernel herding (Chen et al., 2010), discrepancy herding (Harvey & Samadi, 2014), super-sampling
with a reservoir (Paige et al., 2016), support points convex-concave procedures (Mak & Joseph,
2018), greedy sign selection (Karnin & Liberty, 2019, Sec. 3.1), Stein point MCMC (Chen et al.,
2019), and Stein thinning (Riabiz et al., 2020a). While some admit better-than-i.i.d. MMD guar-
antees for finite-dimensional kernels on Rd (Chen et al., 2010; Harvey & Samadi, 2014), none
2
Published as a conference paper at ICLR 2022
apart from KT are known to provide better-than-i.i.d. MMD or integration error for the infinite-
dimensional kernels covered in this work. The lower bounds of Phillips & Tai (2020, Thm. 3.1) and
Tolstikhin et al. (2017, Thm. 1) respectively establish that any procedure outputting n 2 -sized core-
sets and any procedure estimating P based only on n i.i.d. sample points must incur Ω(n-1) MMD
in the worst case. Our guarantees in Sec. 2 match these lower bounds up to logarithmic factors.
Notation We define the norm kkk∞ = supx,y |k(x, y)| and the shorthand [n] , {1, . . . , n}, R+ ,
{x ∈ R : X ≥ 0}, No , N ∪ {0}, Bk , {f ∈ H ： kf kk ≤ 1}, and B2(r)，{y ∈ Rd : ∣∣y∣∣2 ≤ r}.
We write a - b and a % b to mean a = O(b) and a = Ω(b), use - when masking constants
dependent on d, and write a = Op(b) to mean a/b is bounded in probability. For any distribu-
tion Q and point sequences S, S0 with empirical distributions Qn, Q0n, we define MMDk(Q, S) ,
MMDk(Q,Qn)andMMDk(S,S0) ,MMDk(Qn,Q0n).
2	Generalized Kernel Thinning
Our generalized kernel thinning algorithm (Alg. 1) for compressing an input point sequence Sin =
(xi )in=1 proceeds in two steps: KT-SPLIT and KT- S WAP detailed in App. A. First, given a thinning
parameter m and an auxiliary kernel ksplit, KT-SPLIT divides the input sequence into 2m candidate
coresets of size n/2m using non-uniform randomness. Next, given a target kernel k, KT-SWAP
selects a candidate coreset with smallest MMDk to Sin and iteratively improves that coreset by
exchanging coreset points for input points whenever the swap leads to reduced MMDk . When ksplit
is a square-root kernel krt (2) of k, generalized KT recovers the original ROOT KT algorithm of
Dwivedi & Mackey. In this section, we establish performance guarantees for more general ksplit
with special emphasis on the practical choice ksplit = k. Like ROOT KT, for any m, generalized
KT has time complexity dominated by O(n2) evaluations of ksplit and k and O(n min(d, n)) space
complexity from storing either Sin or the kernel matrices (ksplit(xi, xj))in,j=1 and (k(xi, xj))in,j=1.
Algorithm 1: Generalized Kernel Thinning - Return coreset of size [n∕2mJ with small MMDk
Input: split kernel ksplit, target kernel k, point sequence Sin = (xi)in=1, thinning parameter m ∈ N,
probabilities (δi)b=12c
(S(m,'))2mι - KT-SPLIT (ksplit, Sin, m, (δi)b=12c) // Split Sin into 2m candidate coresets of size b2nmC
Skt	— KT-SWAP (k, Sin, (S(m,'))2mι)	// Select best coreset and iteratively refine
return coreset SKT of size bn/2mc
2.1	Single function guarantees for kt-split
We begin by analyzing the quality of the kt-split coresets. Our first main result, proved in App. B,
bounds the KT-SPLIT integration error for any fixed function in the RKHS Hsplit generated by ksplit.
Theorem 1 (Single function guarantees for kt-split) Consider KT-SPLIT (Alg. 1a) with oblivi-
ous3 Sin and (δi)72 and δ?，mini δi. If 茄 ∈ N,then,for any fixed f ∈ H split, index ' ∈ [2m], and
scalar δ0 ∈ (0,1), the output coreset S(m,') with P(p1)it，"m Pχ∈s(m,') δχ satisfies
IPinf - P(pl)itf | ≤ kf kksplit，σm q log(箱 for σm , £5 Jkksplitk∞,in ∙ log(2m)
with probability at least PSg，1-δ0 -Pj=ι j1 Pn=2 δ Here, kksplitk∞,in，maxχ∈shl ksplit(x,x).
Remark 1 (Guarantees for known and oblivious stopping times) By Dwivedi & Mackey (2021,
App. D), the success probability PSg is at least 1-δ ifwe set δ0 = 2 and δi = nδ for a stopping time n
known a priori or δi = 2m+2(i+)δog2(i+i) for an arbitrary oblivious stopping time n.
When compressing heavily from n to √n points, Thm. 1 and Rem. 1 guarantee O(n- 1 √log n) inte-
gration error with high probability for any fixed function f ∈ Hsplit. This represents a near-quadratic
3Throughout, oblivious indicates that a sequence is generated independently of any randomness in KT.
3
Published as a conference paper at ICLR 2022
improvement over the Ω(n-4) integration error of √n i.i.d. points. Moreover, this guarantee ap-
plies to any kernel defined on any space including unbounded kernels on unbounded domains (e.g.,
energy distance (Sejdinovic et al., 2013) and Stein kernels (Oates et al., 2017; Chwialkowski et al.,
2016; Liu et al., 2016; Gorham & Mackey, 2017)); kernels with slowly decaying square roots (e.g.,
Sinc kernels); and non-smooth kernels without square roots (e.g., Laplace, Matem with Y ∈ (d, d]),
and the compactly supported kernels of Wendland (2004) with s < 1 (d +1)). In contrast, the MMD
guarantees of Dwivedi & Mackey covered only bounded, smooth k on Rd with bounded, Lipschitz,
and rapidly-decaying square-roots. In addition, for kkk∞ = 1 on Rd, the MMD bounds of Dwivedi
& Mackey feature exponential dimension dependence of the form cd or (log n)d/2 while the Thm. 1
guarantee is dimension-free and hence practically relevant even when d is large relative to n.
Thm. 1 also guarantees better-than-i.i.d. integration error for any target distribution with |Pf -
Pinf | = o(n-4). In contrast, the MMD improvements of Dwivedi & Mackey (2021, cf. Tab. 2)
applied only to P with at least 2d moments. Finally, when KT-SPLIT is applied with a square-
root kernel ksplit = krt, Thm. 1 still yields integration error bounds for f ∈ H, as H ⊆ Hsplit.
However, relative to target KT-SPLIT guarantees with ksplit = k, the error bounds are inflated by a
multiplicative factor of J 1却:：fkrL. In App. H, We show that this inflation factor is at least 1 for
each kernel explicitly analyzed in Dwivedi & Mackey (2021) and grows exponentially in dimension
for Gaussian and Matern kernels, unlike the dimension-free target kt-split bounds.
Finally, if we run KT-SPLIT with the perturbed kernel k0split defined in Cor. 1, then we simultaneously
obtain O(n- 1 √log n) integration error for f ∈ HSPlit, near-i.i.d. O(n- 1 √log n) integration error
for arbitrary bounded f outside of HSPlit, and intermediate, better-than-i.i.d. o(n- 1) integration error
for smoother f outside of Hsplit (by interpolation). We prove this guarantee in App. C.
Corollary 1 (Guarantees for functions outside of Hsplit) Consider extending each input point xi
with the standard basis vector ei ∈ Rn and running KT-SPLIT (Alg. 1a) on Si0n = (xi, ei)in=1 with
kSplit((x,w), (y,v)) = Ik：(X,y) + hw, vi for w,v, ∈ Rn∙ Under the notation and assumptions
of Thm. 1, for any fixed index ` ∈ [2m], scalar δ0 ∈ (0, 1), and f defined on Sin, we have, with
probability at least psg,
IPinf - P(PI)itf| ≤ min(p2m Ilfll∞,in, PIlkSPlitk∞kf 限网)三 q∕8log(箱∙ log( ∙	(3)
2.2	MMD guarantee for target KT
Our second main result bounds the MMDk (1)—the worst-case integration error across the unit ball
of H—for generalized KT applied to the target kernel, i.e., ksplit = k. The proof of this result in
App. D is based on Thm. 1 and an appropriate covering number for the unit ball Bk of the k RKHS.
Definition 1 (k covering number) For a set A and scalar ε > 0, we define the k covering number
Nk(A, ε) with Mk(A, ε) , logNk(A, ε) as the minimum cardinality ofa set C ⊂ Bk satisfying
Bk ⊆ Sh∈C{g ∈ Bk : supx∈A Ih(x) -g(x)I ≤ ε}.	(4)
Theorem 2 (MMD guarantee for TARGET KT) Consider generalized KT (Alg. 1) with ksplit = k,
oblivious Sin and (δi)b=12c, and δ?，mini δi. If ɪ ∈ N, thenfor any δ0 ∈ (0,1), the output coreset
SKT is of size 2nm and satisfies
MMDk(Sin, SKT) ≤	"f	2ε +	2n-	∙	{8 ∣∣k∣∣∞,inlog( 2m)，[lOg(	)+ Mk(A,ε)]	(5)
ε∈(0,1), Sin⊂A	n
with probability at least psg, where IkI∞,in and psg were defined in Thm. 1.
When compressing heavily from n to √n points, Thm. 2 and Rem. 1 with ε
A = B2(Rin) for Rin , maxx∈Sin IxI2 guarantee
Jkkn∞,in and
MMDk(Sin, Skt) -δ	∞nnlogn ∙Mk(B2(Rin), q⅜n)	(6)
4
Published as a conference paper at ICLR 2022
with high probability. Thus we immediately obtain an MMD guarantee for any kernel k with
a covering number bound. Furthermore, we readily obtain a comparable guarantee for P since
MMDk(P, SKT) ≤ MMDk(P, Sin)+MMDk(Sin, SKT). Any of a variety of existing algorithms can
be used to generate an input point sequence Sin with MMDk(P, Sin) no larger than the compression
bound (6), including i.i.d. sampling (Tolstikhin et al., 2017, Thm. A.1), geometric MCMC (Dwivedi
& Mackey, 2021, Prop. 1), kernel herding (Lacoste-Julien et al., 2015, Thm. G.1), Stein points (Chen
et al., 2018, Thm. 2), Stein point MCMC (Chen et al., 2019, Thm. 1), greedy sign selection (Karnin
& Liberty, 2019, Sec. 3.1), and Stein thinning (Riabiz et al., 2020a, Thm. 1).
2.3	Consequences of Thm. 2
Tab. 2 summarizes the MMD guarantees of Thm. 2 under common growth conditions on the log
covering number Mk and the input point radius RSin , maxx∈Sin kxk2 . In Props. 2 and 3 of
App. J, we show that analytic kernels, like Gaussian, inverse multiquadric (IMQ), and sinc, have
LOGGROWTH Mk (i.e., Mk(B2(r),ε) —d rd logω(ε)) while finitely differentiable kernels (like
Matern and B-spline) have POLYGROWTH Mk (i.e., Mk(B2(r), ε) —d rdε-ω).
OUr conditions on RSin arise from four forms of target distribution tail decay: (1) COMPACT
(RSin -d 1), (2) SubGauss (RSin -d √I0gn), (3) SUBEXP (RSin -d log n), and (4) HEAVYTAIL
(RSin —d n1/ρ). The first setting arises with a compactly supported P (e.g., on the unit cube [0,1]d),
and the other three settings arise in expectation and with high probability when Sin is generated i.i.d.
from P with sub-Gaussian tails, sub-exponential tails, or ρ moments respectively.
Substituting these conditions into (6) yields the eight entries of Tab. 2. We find that, for Log-
Growth Mk, target KT MMD is within log factors of the Ω(n-1/2 3) lower bounds of Sec. 1
for light-tailed P and is o(n-1/4) (i.e., better than i.i.d.) for any distribution with ρ > 4d moments.
Meanwhile, for POLYGROWTH Mk, TARGET KT MMD is o(n-1/4) whenever ω < ɪ for light-
tailed P or whenever P has ρ > 2d/(2 - ω) moments.
Compact P SubGauss P	SubExp P	HeavyTail P
Rin -d 1	Rin -d √lθgn	Rin -d log n	Rin -d n1/P
LogGrowth .Mk	I (log n)ω+1	q (log n)d+ω+1	q (log n)2d+ω+1	/ (log n)ω+1
Mk(B2(r),ε) -d rdiogω(ε)	V n V n	V n	V n1-2d∕ρ
PolyGrowth Mk	Hogn	/(logn)d+ι	/(logn)2d+ι	/ logn
Mk (B2(r),ε) -d rdε-ω	V n1-ω	V n1-ω-	V -n1-ωV n1-ω-2d∕ρ
Table 2: MMD guarantees for TARGET KT under Mk (4) growth and P tail decay. We report the
MMDk(Sin, SKT) bound (6) for target KT with n input points and √n output points, up to con-
stants depending on d and kkk∞,in. Here Rin , maxx∈Sin kxk2.
Next, for each of the popular convergence-determining kernels of Tab. 1, we compare the root
KT MMD guarantees of Dwivedi & Mackey (2021) with the target KT guarantees of Thm. 2
combined with covering number bounds derived in Apps. J and K. we see in Tab. 3 that Thm. 2
provides better-than-i.i.d. and better-than-root KT guarantees for kernels with slowly decaying or
non-existent square-roots (e.g., IMQ with ν < d, sinc, and B-spline) and nearly matches known
ROOT KT guarantees for analytic kernels like Gauss and IMQ with V ≥ 2, even though target
KT makes no explicit use ofa square-root kernel. See App. K for the proofs related to Tab. 3.
3	Kernel Thinning+
we next introduce and analyze two new generalized KT variants: (i) power KT which leverages a
power kernel kα that interpolates between k and krt to improve upon the MMD guarantees of target
KT even when krt is not available and (ii) KT+ which uses a sum of k and kα to retain both the
improved MMD guarantee of kα and the superior single function guarantees of k.
Power kernel thinning First, we generalize the square-root kernel (2) definition for shift-invariant
k using the order 0 generalized Fourier transform (GFT, wendland, 2004, Def. 8.9) fboff : Rd → R.
5
Published as a conference paper at ICLR 2022
Kernel k		Target KT	Root KT	KT+
GAUSS(σ)		(log n) 3d + 1 √n∙W	d + 1 (log n) 4 + 2 √n √n	d + 1 (log n) 4 + 2 √n √n
LAPLACE(σ)		1 n-4	N/A	(cn(log n)1+2d(1-α))4α
MATERN(V,γ): V ∈	(2 ,d]	n-4	N/A	(cn(log n)1+2d(1-α) ) 4α
MATERN(V,γ): V	>d	d+1 min(n- 4 (logn) 2 ) min(n 4 , n(ν-d)∕(2ν-d) )	d+1 (log n) 2	√Cn √n	d+1 (log n) 2	√Cn √n
IMQ(V, γ): V <	d 2	(log n)d+1 √n	1 n-4	(log n)d+1 √n
IMQ(V, γ): V ≥	d 2	(log n)d+1 √n	d+1 (log n) 2	√n √n	d+1 (log n) 2	√Cn √n
SINC(θ)		(log n)2 √n	n-4	(log n)2 √n I	
B-SPLINE(2β + 1,γ):	β∈ 2N	/	log n V n2β∕(2β+1)	N/A	
B-SPLINE(2β + 1, γ): β	∈ 2N0 + 1	/	log n V n2β∕(2β+1)	qn	qlonz
Table 3: MMDk(S也,SKT) guarantees for commonly used kernels. For n input and √n output points, We
report the MMD bounds of Thm. 2 for target KT, of Dwivedi & Mackey (2021, Thm. 1) for root
KT, and of Thm. 4 for KT+ (with α = 2 wherever feasible). We assume a SUBGAUSS P for the
GAUSS kernel, a COMPACT P for the B -SPLINE kernel, and a SUBEXP P for all other k (see Tab. 2
for a definition of each P class). Here, Cn，log log n, δi = δ, δ0 = 2, and error is reported UP to
constants depending on (k, d, δ, α). The KT+ guarantee for LAPLACE applies with a > ddi and for
MATERN with a> 2V. The target KT guarantee for MATERN with V > 3d/2 assumes v—d/2 ∈ N
to simplify the presentation (see (53) for the general case). The best rate is highlighted in blue.
Definition 2 (α-power kernel) Define kι，k. We say a kernel kι is a 2-power kernel for k if
k(x, y) = (2∏)-d/2 JRd ki (x,z)ki (z, y)dz. For α ∈ (2, 1), a kernel kα(x, y) = Kα(x — y) on Rd
is an α-power kernel for k(x, y) =κ(x-y) if κcα = bκα.
By design, kι matches krt (2) up to an immaterial constant rescaling. Given a power kernel ka
we define POWER KT as generalized KT with ksplit = kα. Our next result (with proof in App. E)
provides an MMD guarantee for power KT.
Theorem 3 (MMD guarantee for POWER KT) Consider generalized KT (Alg. 1) with ksplit = kα
for some α ∈ [2, 1], oblivious sequences Sin and (δi)b=12c, and δ?，mini δi. If 2m ∈ N, then for
any δ0 ∈ (0,1), the output coreset SKT is ofsize 2m and satisfies
MMDk(Sin, SKT) ≤ (2m kkak∞) 2α (2 ∙ Mα)1-2α (2+ Jrn+2 ∙ Rmax ∙ Ma) 1	⑺
with probability at least psg (defined in Thm. 1). The parameters Mα and Rmax are defined in
App. E and satisfy Ma = Od(√!ogn) and Rmax = Od(I) for COmpaCtIy SUPPOrted P and ka and
ffa =Od (√log n log log n) and Rmax = Od (log n) for subexponential P and ka, when δ? = %.
Thm. 3 reproduces the ROOT KT guarantee of Dwivedi & Mackey (2021, Thm. 1) when α = 2 and
more generally accommodates any power kernel via an MMD interpolation result (Prop. 1) that may
be of independent interest. This generalization is especially valuable for less-smooth kernels like
Laplace and MATERN(ν, Y) with V ∈ (d ,d] that have no square-root kernel. Our target KT
MMD guarantees are no better than i.i.d. for these kernels, but, as shown in App. K, these kernels
have MATERN kernels as ɑ-power kernels, which yield o(n-4) MMD in conjunction with Thm. 3.
Kernel thinning+ Our final KT variant, kernel thinning+, runs KT-SPLIT with a scaled sum of
the target and power kernels, k，k∕kk∣∣∞ + ka∕∣∣ka∣∣∞∙4 Remarkably, this choice simultane-
ously provides the improved MMD guarantees of Thm. 3 and the dimension-free single function
guarantees of Thm. 1 (see App. F for the proof).
4When Sin is known in advance, one can alternatively choose k*，k∕kkk∞,in + kɑ∕∣∣kα∣∣∞,in∙
6
Published as a conference paper at ICLR 2022
Root KT (Gauss) Target KT (Gauss) KT+ (IMQ)
KT+ (Laplace)
KT+ (Bspline)
-10	0	-10	0
MMDk{P,Pout)
Coreset size √7T
Coreset size √7T
Coreset size √7T
Coreset size √n-
Figure 1: Generalized kernel thinning (KT) vs i.i.d. sampling for an 8-component mixture of Gaussians
target P. For kernels k without fast-decaying square-roots, KT+ offers visible and quantifiable im-
provements over i.i.d. sampling. For Gaussian k, TARGET KT closely mimics ROOT KT.
Theorem 4 (Single function & MMD guarantees for KT+) Consider generalized KT (Alg. 1)
with kspiit = k*, oblivious Sin and (δi)b=12c, δ?，mini δi, and 券 ∈ N. For any fixed function
f ∈ H, index ` ∈ [2m], and scalar δ0 ∈ (0, 1), the KT-SPLIT coreset S (m,`) satisfies
IPinf - P(P)J ≤ 2n- ∙ q 136 log(26mδ?)log(δ0)Ilf llkpkkk∞,	⑻
with probability at least Psg (for Psg and P(P)让 defined in Thm. 1). Moreover,
MMDk(Sin, SKT) ≤ min [√2 ∙ MtargetKτ(k),	221α ∙ MPOwerKT(kα)]	(9)
with probability at least Psg, where Mtargetκτ(k) denotes the right hand side of (5) with ∣∣k∣∣∞,in
replaced by ∣∣k∣∞, and MPOwerKτ(kα) denotes the right hand side of (7).
As shown in Tab. 3, KT+ Provides better-than-i.i.d. MMD guarantees for every kernel in Tab. 1—
even the Laplace, non-smooth Matern, and odd B-spline kernels neglected by prior analyses—while
matching or imProving uPon the guarantees of target KT and root KT in each case.
4	Experiments
Dwivedi & Mackey (2021) illustrated the MMD benefits of root KT over i.i.d. sampling and stan-
dard MCMC thinning with a series of vignettes focused on the Gaussian kernel. We revisit those
vignettes with the broader range of kernels covered by generalized KT and demonstrate significant
improvements in both MMD and single-function integration error. We focus on coresets of size √n
produced from n inputs with δi = 2n, let Pout denote the empirical distribution of each output core-
set, and report mean error (±1 standard error) over 10 independent replicates of each experiment.
Target distributions and kernel bandwidths We consider three classes of target distributions on
Rd: (i) mixture of Gaussians P = M P^=ι N(μj, I2) With M component means μj ∈ R2 defined
in App. I, (ii) Gaussian P = N(0, Id), and (iii) the posteriors of four distinct coupled ordinary
7
Published as a conference paper at ICLR 2022
differential equation models: the Goodwin (1965) model of oscillatory enzymatic control (d = 4),
the Lotka (1925) model of oscillatory predator-prey evolution (d = 4), the Hinch et al. (2004) model
of calcium signalling in cardiac cells (d = 38), and a tempered Hinch posterior. For settings (i) and
(ii), we use an i.i.d. input sequence Sin from P and kernel bandwidths σ = 1 /γ = √2d. For setting
(iii), we use MCMC input sequences Sin from 12 posterior inference experiments of Riabiz et al.
(2020a) and set the bandwidths σ = 1∕γ as specified by Dwivedi & Mackey (2021, Sec. K.2).
2-3
2-3
2-7
2-9
2f
IT
2-3
IT
2-7
2-8
MMDk(PlPout), d = 2
-+iid:n
T-ROot KT： n-°
--⅛- Target KT： n
2-ι
2-3
2-s
2-7
Coreset size √n^
2-ι
2-2
2-3
2-4
2-3
2-6
便—PIMrf)X11, d = 2
-4- iid: n-oa^ 'y
Target KT： n"053 ''∙,
2。
2-z
2-4
2-e
Coreset size √n^
∖(P-P0ut)lc(X%d = 2
->iidsn-°jβ *''
--⅜-TargetKTsn-0 55
Coreset size √n
I (Pin - Potrt)心F∣, d = 2
-+iidsn-°j4 .工
--♦■ Target KT； n_033 ⅛,∙.
^2i	2^^
Coreset size √n^
MMDk{P,Pout),d=10
-* Root KT： n_0 42
--⅜ T⅛get KT: n-043
2-j
2-z
2-3
2-4
2-3
2-6
MMDk(PfPwrt), d= 20
MMDk{P,Pout),d=50
Coreset size √7Γ
2-ι
2-z
2-3
2~4
2-3
MMDk{P,P0ut),d = IQO
-⅛iidsn-°j5、A、
-φ R∞t KTsn-0 34 × >
-4- l¾rget KT： n_0 34
Coreset size √∕7
∣(P-P(xrt)*ιLtf=10
∣(P-‰)k(X*)L tf= 10
Coreset size √n
2-s
2-e
2-7
2T
2-9
∖{Pin - Pout)fefL Cf= 10
22	24	2®
Coreset size √n^
飞人
-⅛ii⅛n-°j5 '∙.
-⅛-∙R∞tKTf-°∙39'j
+l¾rget KT： n-0∙39
Coreset size √7Γ
I(P-Pwrf)XiLtf= 20
*iidjn-83 Ky
-I-TtergetKTsii-049 '∙.
2-ι
2-z
2-3
2-4
2-3
-⅛-iid: n
—φ- ∙Root KT： π
■ 4- T⅛rget KT： n
Coreset size √n
2-ι
2-z
2-≡
2-4
2-s
2-s
I(P-Pwrf)XiLtf=IOO
Coreset size √∩
2-ι
2-3
2-3
Core set size √7Γ
∖(P-Poutik(×%d=20
I(舒-Polrt)k(X%cf = 50	I(P- Pβut)k(X*)L d= 100
Coreset size vn	Coreset size √n
2-e
2-7
2T
2-9
l(∕jin - Pout)fafL d = 100
^2i	2^^
Coreset size √n^
-w-iid:n
.. ∙T⅛rget KT: n
Figure 2: MMD and single-function integration error for Gaussian k and standard Gaussian P in Rd.
Without using a square-root kernel, target KT matches the MMD performance of root KT and
improves upon i.i.d. MMD and single-function integration error, even in d = 100 dimensions.
Function testbed To evaluate the ability of generalized KT to improve integration both inside and
outside of H, we evaluate integration error for (a) a random element of the target kernel RKHS
(f (x) = k(X0, x) described in App. I), (b) moments (f (x) = x1 and f(x) = x12), and (c) a standard
numerical integration benchmark test function from the continuous integrand family (CIF, Genz,
1984), fciF(x) = exp(-d P；=i |xj - Uj |) for Uj drawn i.i.d. and uniformly from [0,1].
Generalized KT coresets For an 8-component mixture of Gaussians target P, the top row of Fig. 1
highlights the visual differences between i.i.d. coresets and coresets generated using generalized
KT. We consider ROOT KT with GAUSS k, TARGET KT with GAUSS k, and KT+ (α = 0.7) with
LAPLACE k, KT+ (α = 2) with IMQ k (ν = 0.5), and KT+(α = 3) with B-SPLINE(5) k, and
note that the B -SPLINE(5) and LAPLACE k do not admit square-root kernels. In each case, even
for small n, generalized KT provides a more even distribution of points across components with
fewer within-component gaps and clumps. Moreover, as suggested by our theory, target KT
and ROOT KT coresets for GAUSS k have similar quality despite TARGET KT making no explicit
use of a square-root kernel. The MMD error plots in the bottom row of Fig. 1 provide a similar
conclusion quantitatively, where we observe that for both variants of KT, the MMD error decays
as n-2, a significant improvement over the n- 1 rate of i.i.d. sampling. We also observe that the
empirical MMD decay rates are in close agreement with the rates guaranteed by our theory in Tab. 3
(n-2 for Gauss, B-spline, and IMQ and n- 1α = n-0.36 for Laplace). We provide additional
visualizations and results in Figs. 4 and 5 of App. I, including MMD errors for M = 4 and M = 6
component mixture targets. The conclusions remain consistent with those drawn from Fig. 1.
8
Published as a conference paper at ICLR 2022
Target KT vs. i.i.d. sampling For Gaussian P and Gaussian k, Fig. 2 quantifies the improve-
ments in distributional approximation obtained when using target KT in place of a more typical
i.i.d. summary. Remarkably, target KT significantly improves the rate of decay and order of
magnitude of mean MMDk(P, Pout), even in d = 100 dimensions with as few as 4 output points.
Moreover, in line with our theory, target KT MMD closely tracks that of root KT without using
krt. Finally, TARGET KT delivers improved single-function integration error, both of functions in
the RKHS (like k(X0, ∙)) and those outside (like the first moment and CIF benchmark function),
even with large d and relatively small sample sizes.
KT+ vs. standard MCMC thinning For the MCMC targets, we measure error with respect to
the input distribution Pin (consistent with our guarantees), as exact integration under each posterior
P is intractable. We employ KT+ (α = 0.81) with LAPLACE k for Goodwin and Lotka-Volterra
and KT+ (α = 0.5) with IMQ k (ν = 0.5) for Hinch. Notably, neither kernel has a square-
root with fast-decaying tails. In Fig. 3, we evaluate thinning results from one chain targeting each
of the Goodwin, Lotka-Volterra, and Hinch posteriors and observe that KT+ uniformly improves
upon the MMD error of standard thinning (ST), even when ST exhibits better-than-i.i.d. accuracy.
Furthermore, KT+ provides significantly smaller integration error for functions inside of the RKHS
(like k(X0, ∙)) and outside of the RKHS (like the first and second moments and the benchmark CIF
function) in nearly every setting. See Fig. 6 of App. I for plots of the other 9 MCMC settings.
MMDk(⅛,Pout)
∖(Pin - POUt)Xll
∣(P∕n-‰)k(X,)∣
χoaΛIdΛ>-l
MH,vαv UFp。。D
2-10
2-16
2-6
2-10
2-12
2-12
2-14
2-18
2-10
2-14
2-16
∣(尹⅛n 一 ^,oυt)⅛∕F∣
-4-ST：n-018 ∖.
- -∣- KT+: ∏-° ≡2
Coreset size √n^
2-2
2-3
2-4
2-5
MMDk(⅛,Pout)
χω0EIde>-l
MH,vαv 且。H-I
Coreset size √n^
-<-ST：n-005
-4-KT+: n^054
Coreset size √n^
∣(^j,in	*Olrt)Xl I
Coreset size √n^
2-20
*ST：n-0 02
- i-KT+：n-050 . **∙
Coreset size √n^
|(尹加 PtOlrt)X： I
Coreset size √n^
i-∙∙∙..
-#-ST： ∏-00* *'■
- 4- kt+： ∏-052
Coreset size √n^
∣(尼加一月OIrt) k(X')∣
►
-+ST： n-02?∙'..›
■ KT+: ∏-047 ,
X :
-4- ST：n-013 **%
- 4- KT+: ∏-06≡ '''%.
Coreset size √n^
l(⅛ - ^,OUt)⅛∕F∣
Coreset size √n^
MMOk(P加,Pwti	∣(¾- ‰)Xι∣
2-8
2-10
2-12
2-14
2-4
2-6
2-8
2-10
2-9
2-11
2-13
2-15
∣(^jin	POlrt)Xl I
23	25	27	23	25	27	23	25	27	23	25	27	23	25	27
Coreset size √n	Coreset size √n	Coreset size √n-	Coreset size √n	Coreset size √n-
Figure 3: Kernel thinning+ (KT+) vs. standard MCMC thinning (ST). For kernels without fast-decaying
square-roots, KT+ improves MMD and integration error decay rates in each posterior inference task.
5	Discussion and Conclusions
In this work, we introduced three new generalizations of the root KT algorithm of Dwivedi &
Mackey (2021) with broader applicability and strengthened guarantees for generating compact rep-
resentations of a probability distribution. Target kt-split provides √n-point summaries with
O(VZlog n/n) integration error guarantees for any kernel, any target distribution, and any func-
tion in the RKHS; power KT yields improved better-than-i.i.d. MMD guarantees even when a
square-root kernel is unavailable; and KT+ simultaneously inherits the guarantees of target KT
and power KT. While we have focused on unweighted coreset quality we highlight that the same
MMD guarantees extend to any improved reweighting of the coreset points. For example, for down-
stream tasks that support weights, one can optimally reweight Pout to approximate Pin in O(n2) time
by directly minimizing MMDk. Finally, one can combine generalized KT with the COMPRESS++
meta-algorithm of Shetty et al. (2022) to obtain coresets of comparable quality in near-linear time.
9
Published as a conference paper at ICLR 2022
Reproducibility Statement
See App. I for supplementary experimental details and results and the goodpoints Python pack-
age
https://github.com/microsoft/goodpoints
for Python code reproducing all experiments.
Acknowledgments
We thank Lucas Janson and Boaz Barak for their valuable feedback on this work. RD acknowledges
the support by the National Science Foundation under Grant No. DMS-2023528 for the Foundations
of Data Science Institute (FODSI).
References
Christoph M Augustin, Aurel Neic, Manfred Liebmann, Anton J Prassl, Steven A Niederer, Gundolf Haase,
and Gernot Plank. Anatomically accurate high resolution modeling of human whole heart electromechanics:
A strongly scalable algebraic multigrid solver method for nonlinear deformation. Journal of computational
physics, 305:622-646, 2016. (Cited on page 1.)
NeCdet Batir. Bounds for the gamma function. Results in Mathematics, 72(1):865-874, 2017. doi:
10.1007/s00025-017-0698-0. URL https://doi.org/10.1007/s00025-017-0698-0. (Cited
on page 26.)
Alain Berlinet and Christine Thomas-Agnan. Reproducing kernel Hilbert spaces in probability and statistics.
Springer Science & Business Media, 2011. (Cited on pages 1, 15, 17, 18, and 26.)
Wilson Ye Chen, Lester Mackey, Jackson Gorham, FranCois-Xavier BrioL and Chris J. Oates. Stein points. In
Proceedings of the 35th International Conference on Machine Learning, 2018. (Cited on page 5.)
Wilson Ye Chen, Alessandro Barp, FranCoiS-Xavier Briol, Jackson Gorham, Mark Girolami, Lester Mackey,
and Chris Oates. Stein point Markov chain Monte Carlo. In International Conference on Machine Learning,
pp. 1011-1021. PMLR, 2019. (Cited on pages 2 and 5.)
Yutian Chen, Max Welling, and Alex Smola. Super-samples from kernel herding. In Proceedings of the Twenty-
Sixth Conference on Uncertainty in Artificial Intelligence, UAI’10, pp. 109-116, Arlington, Virginia, USA,
2010. AUAI Press. ISBN 9780974903965. (Cited on page 2.)
Kacper Chwialkowski, Heiko Strathmann, and Arthur Gretton. A kernel test of goodness of fit. In International
conference on machine learning, pp. 2606-2615. PMLR, 2016. (Cited on page 4.)
Josef Dick, Frances Y Kuo, and Ian H Sloan. High-dimensional integration: The quasi-Monte Carlo way. Acta
Numerica, 22:133-288, 2013. (Cited on page 2.)
Raaz Dwivedi and Lester Mackey. Kernel thinning. arXiv preprint arXiv:2105.05842, 2021. (Cited on pages 1,
2, 3,4, 5, 6,7, 8, 9, 14, 15, 16, 17, 20, 21, 28, 29, and 30.)
Raaz Dwivedi, Ohad N Feldheim, Ori Gurel-Gurevich, and Aaditya Ramdas. The power of online thinning in
reducing discrepancy. Probability Theory and Related Fields, 174(1):103-131, 2019. (Cited on page 2.)
Alan Genz. Testing multidimensional integration routines. In Proc. of international conference on Tools,
methods and languages for scientific and engineering computation, pp. 81-94, 1984. (Cited on page 8.)
Mark Girolami and Ben Calderhead. Riemann manifold Langevin and Hamiltonian Monte Carlo methods.
Journal of the Royal Statistical Society: Series B (Statistical Methodology), 73(2):123-214, 2011. (Cited on
page 21.)
Brian C Goodwin. Oscillatory behavior in enzymatic control process. Advances in Enzyme Regulation, 3:
318-356, 1965. (Cited on pages 8 and 21.)
Jackson Gorham and Lester Mackey. Measuring sample quality with kernels. In Proceedings of the 34th
International Conference on Machine Learning-Volume 70, pp. 1292-1301. JMLR. org, 2017. (Cited on
page 4.)
10
Published as a conference paper at ICLR 2022
Arthur Gretton, Karsten M. Borgwardt, Malte J. Rasch, Bernhard Scholkopf, and Alexander Smola. A kernel
two-sample test. Journal ofMachine Learning Research, 13(25):723-773, 2012. (Cited on pages 1 and 18.)
Heikki Haario, Eero Saksman, and Johanna Tamminen. Adaptive proposal distribution for random walk
Metropolis algorithm. Computational Statistics, 14(3):375-395, 1999. (Cited on page 21.)
Nick Harvey and Samira Samadi. Near-optimal herding. In Conference on Learning Theory, pp. 1165-1182,
2014. (Cited on page 2.)
Fred Hickernell. A generalized discrepancy and quadrature error bound. Mathematics of computation, 67(221):
299-322, 1998. (Cited on page 2.)
Robert Hinch, JL Greenstein, AJ Tanskanen, L Xu, and RL Winslow. A simplified local control model of
calcium-induced calcium release in cardiac ventricular myocytes. Biophysical journal, 87(6):3723-3736,
2004. (Cited on pages 8 and 21.)
Zohar Karnin and Edo Liberty. Discrepancy, coresets, and sketches in machine learning. In Conference on
Learning Theory, pp. 1975-1993. PMLR, 2019. (Cited on pages 2 and 5.)
Simon Lacoste-Julien, Fredrik Lindsten, and Francis Bach. Sequential kernel herding: Frank-Wolfe optimiza-
tion for particle filtering. In Artificial Intelligence and Statistics, pp. 544-552. PMLR, 2015. (Cited on
page 5.)
Qiang Liu, Jason Lee, and Michael Jordan. A kernelized Stein discrepancy for goodness-of-fit tests. In Proc.
of 33rd ICML, volume 48 of ICML, pp. 276-284, 2016. (Cited on page 4.)
Alfred James Lotka. Elements of physical biology. Williams & Wilkins, 1925. (Cited on pages 8 and 21.)
Simon Mak and V Roshan Joseph. Support points. The Annals of Statistics, 46(6A):2562-2592, 2018. (Cited
on page 2.)
Whitney K. Newey and Daniel McFadden. Chapter 36: Large sample estimation and hypothesis testing.
In Handbook of Econometrics, volume 4, pp. 2111-2245. Elsevier, 1994. doi: https://doi.org/10.1016/
S1573- 4412(05)80005- 4. URL https://www.sciencedirect.com/science/article/pii/
S1573441205800054. (Cited on page 27.)
Steven A Niederer, Lawrence Mitchell, Nicolas Smith, and Gernot Plank. Simulating human cardiac electro-
physiology on clinical time-scales. Frontiers in Physiology, 2:14, 2011. (Cited on page 1.)
E Novak and H Wozniakowski. Tractability of multivariate problems, volume ii: Standard information for
functionals, european math. Soc. Publ. House, Zurich, 3, 2010. (Cited on page 2.)
Chris J Oates, Mark Girolami, and Nicolas Chopin. Control functionals for Monte Carlo integration. Journal
of the Royal Statistical Society: Series B (Statistical Methodology), 79(3):695-718, 2017. (Cited on page 4.)
Art B Owen. Statistically efficient thinning of a Markov chain sampler. Journal of Computational and Graph-
ical Statistics, 26(3):738-744, 2017. (Cited on page 1.)
Brooks Paige, Dino Sejdinovic, and Frank Wood. Super-sampling with a reservoir. In Proceedings of the
Thirty-Second Conference on Uncertainty in Artificial Intelligence, pp. 567-576, 2016. (Cited on page 2.)
Jeff M Phillips and Wai Ming Tai. Near-optimal coresets of kernel density estimates. Discrete & Computational
Geometry, 63(4):867-887, 2020. (Cited on page 3.)
Marina Riabiz, Wilson Chen, Jon Cockayne, Pawel Swietach, Steven A Niederer, Lester Mackey, and Chris
Oates. Optimal thinning of MCMC output. arXiv preprint arXiv:2005.03952, 2020a. (Cited on pages 2, 5,
8, and 21.)
Marina Riabiz, Wilson Ye Chen, Jon Cockayne, Pawel Swietach, Steven A. Niederer, Lester Mackey, and
Chris J. Oates. Replication Data for: Optimal Thinning of MCMC Output, 2020b. URL https://doi.
org/10.7910/DVN/MDKNWM. Accessed on Mar 23, 2021. (Cited on page 21.)
Gareth O Roberts and Richard L Tweedie. Exponential convergence of Langevin distributions and their discrete
approximations. Bernoulli, 2(4):341-363, 1996. (Cited on page 21.)
Alessandro Rudi, Ulysse Marteau-Ferey, and Francis Bach. Finding global minima via kernel approximations.
arXiv preprint arXiv:2012.11978, 2020. (Cited on pages 24 and 25.)
11
Published as a conference paper at ICLR 2022
Dino Sejdinovic, Bharath Sriperumbudur, Arthur Gretton, and Kenji Fukumizu. Equivalence of distance-based
and rkhs-based statistics in hypothesis testing. The Annals of Statistics, pp. 2263-2291, 2013. (Cited on
page 4.)
Abhishek Shetty, Raaz Dwivedi, and Lester Mackey. Distribution compression in near-linear time. In Interna-
tional Conference on Learning Representations, 2022. (Cited on page 9.)
Carl-Johann Simon-Gabriel, Alessandro Barp, and Lester Mackey. Metrizing weak convergence with maximum
mean discrepancies. arXiv preprint arXiv:2006.09268, 2020. (Cited on page 1.)
Ingo Steinwart and Andreas Christmann. Support vector machines. Springer Science & Business Media, 2008.
(Cited on pages 22, 25, and 27.)
Ingo Steinwart and Simon Fischer. A closer look at covering number bounds for Gaussian kernels. Journal of
Complexity, 62:101513, 2021. (Cited on pages 25, 27, and 28.)
Marina Strocchi, Matthias AF Gsell, Christoph M Augustin, Orod Razeghi, Caroline H Roney, Anton J Prassl,
Edward J Vigmond, Jonathan M Behar, Justin S Gould, Christopher A Rinaldi, Martin J Bishop, Gernot
Plank, and Steven A Niederer. Simulating ventricular systolic motion in a four-chamber heart model with
spatially varying robin boundary conditions to model the effect of the pericardium. Journal of Biomechanics,
101:109645, 2020. (Cited on page 1.)
Hong-Wei Sun and Ding-Xuan Zhou. Reproducing kernel Hilbert spaces associated with analytic translation-
invariant Mercer kernels. Journal of Fourier Analysis and Applications, 14(1):89-101, 2008. (Cited on
pages 22, 27, and 28.)
Ilya Tolstikhin, Bharath K Sriperumbudur, and Krikamol Muandet. Minimax estimation of kernel mean em-
beddings. The Journal of Machine Learning Research, 18(1):3002-3048, 2017. (Cited on pages 2, 3, 5,
and 29.)
Vito Volterra. Variazioni e fluttuazioni del numero d’individui in specie animali conviventi. 1926. (Cited on
page 21.)
Martin J Wainwright. High-dimensional statistics: A non-asymptotic viewpoint, volume 48. Cambridge Uni-
versity Press, 2019. (Cited on pages 14, 26, and 28.)
Holger Wendland. Scattered data approximation, volume 17. Cambridge university press, 2004. (Cited on
pages 2, 4, 5, 18, 19, and 27.)
Haizhang Zhang and Liang Zhao. On the inclusion relation of reproducing kernel hilbert spaces. Analysis and
Applications, 11(02):1350014, 2013. (Cited on pages 18, 19, and 20.)
Ding-Xuan Zhou. Capacity of reproducing kernel spaces in learning theory. IEEE Transactions on Information
Theory, 49(7):1743-1752, 2003. (Cited on page 28.)
12
Published as a conference paper at ICLR 2022
Appendix
A Details of kt-split and kt-swap
13
B Proof of Thm. 1: Single function guarantees for kt- split	14
C Proof of Cor. 1: Guarantees for functions outside of Hsplit	14
D	Proof of Thm.	2: MMD	guarantee	for target KT	16
E	Proof of Thm.	3: MMD	guarantee	for power KT	16
F	Proof of Thm.	4: Single	function & MMD guarantees for KT+	17
G	Proof of Prop.	1: An interpolation	result for MMD	18
H Sub-optimality of single function guarantees with root KT	19
I Additional experimental results	20
J Upper bounds on RKHS covering numbers	22
K Proof of Tab. 3 results	28
A Details of kt- split and kt-swap
Algorithm 1a: KT-SPLIT - Divide points into candidate coresets of size [n∕2mJ
Tn	Tmnj
Input: kernel ksplit, point sequence Sin = (xi)in=1, thinning parameter m ∈ N, probabilities (δi)i=21
S(j,') ― {} for 0 ≤ j ≤ m and 1 ≤ ' ≤ 2j	// Empty coresets: S(j,') has size b jC after round i
σj,' — 0 for 1 ≤ j ≤ m and 1 ≤ ' ≤ 2j-1	// Swapping parameters
for i = 1, . . . , bn/2c do
S (0,1) .append(xi); S (0,1) .append(x2i)
// Every 2j rounds, add one point from parent coreset S(j-1,') to each child coreset S(j,2'-1), S(j,2')
for (j = 1; j ≤ m and i/2j-1 ∈ N; j = j + 1) do
for ` = 1, . . . , 2j-1 do
(S, S0) — (S(j-1,'), S(j,2'-1));	(x,X) ― get_last_two_Points(S)
// Compute swapping threshold a
a, σj∙,' —get_swap_Params(σj∙,', b ,δ∣s∣∕2 2j-1)for b2= ksplit(x, x) +ksplit(x, x) - 2ksplit(x,X)
// Assign one point to each child after probabilistic swapping
α — ksplit (X,X)-ksplit(x,x)+∑y∈s (ksplit (y,x)-ksplit(y,X))-2∑z∈so(ksplit(z,x)-ksplit(z,X))
(x,X) — (X,x) with probability min(1, ∣ (1 — a) + )
S(j,2'-1) .append(χ);	S(j,2') .append(x)
end
end
end
return (S⑺⑼滔, candidate coresets of size bn/2m c
function get_swap Params (σ, b,δ);
a — max(bσ√2 log(2∕δ), b2)
σ — σ+b2(1 + (b2 — 2a)σ2∕a2)
+
return (a, σ)
13
Published as a conference paper at ICLR 2022
Algorithm 1b: KT-SWAP - Identify and refine the best candidate coreset
Input: kernel k, point sequence Sin = (xi)n=ι, candidate coresets (S(m,`))2mι
S(m,0) — baseline.thinning(Sin, size = ]n/2m」)	// Compare to baseline (e.g., standard thinning)
SKT - S(m,'?) for '? — argmin'∈{o,ι,…,2m} MMDk(Sin, S(m,')) // Select best candidate coreset
// Swap out each point in SKT for best alternative in Sin
for i = 1, . . . , bn/2mc do
I Skt[i] — argminz∈Sjn MMDk(Sin, SKT With Skt[i] = Z)
end
return SKT, refined coreset of size bn/2mc
B Proof of Thm. 1: S ingle function guarantees for kt- s plit
The proof is identical for each index `, so, Without loss of generality, We prove the result for the case
` = 1. Define
Wm , W1,m = Pinksplit - Pou)ksplit = n1 Pχ∈8n ksplit(XL)- n∕2m Px∈S(m,1) ksplit(x, ∙).
Next, We use the results about an intermediate algorithm, kernel halving (DWivedi & Mackey, 2021,
Alg. 3) that Was introduced for the analysis of kernel thinning. Using the arguments from DWivedi
& Mackey (2021, Sec. 5.2), We conclude that KT- SPLIT With ksplit and thinning parameter m, is
equivalent to repeated kernel halving With kernel ksplit for m rounds (With no Failure in any
rounds of kernel halving). On this event of equivalence, denoted by Eequi, DWivedi & Mackey
(2021, Eqns. (50, 51)) imply that the function Wm ∈ Hsplit is equal in distribution to another random
function Wm , Where Wm is unconditionally sub-Gaussian With parameter
σm = √232nr qkksplitk∞ log( 26m?)，
that is,
E[exp(hWm,fiksplit)] ≤ exp(2。器|团后阿)for all f ∈ Hsplit,	(10)
Where We note that the analysis of DWivedi & Mackey (2021) remains unaffected When We replace
kksplit k∞ by kksplit k∞,in in all the arguments. Applying the sub-Gaussian Hoeffding inequality
(WainWright, 2019, Prop. 2.5) along With (10), We obtain that
P[∣hWm,fiksplit∣ >t] ≤ 2exp(-1 t2∕(σm||/|k.)≤ δ0 for t，。%||/|鼠网,2log(箱.
Call this event Esg. As noted above, conditional to the event Eequi, We also have
Wm=d Wfm	=⇒	hWm,fiksplit =d Pinf-P(o1ut)f,
Where =d denotes equality in distribution. Furthermore, DWivedi & Mackey (2021, Eqn. 48) implies
that
P(Eequi) ≥ 1 -pm=12j-1 P= δi.
Putting the pieces together, We have
P[∣Pinf - Poutfl	≤ t]	≥	P(Eequi ∩	EScg)	≥	P(Eequi) —	P(ESg)	≥ I-Pm=I	2j-1 P=/1	Wδ0	= psg,
as claimed. The proof is noW complete.
C PROOF OF COR. 1: GUARANTEES FOR FUNCTIONS OUTSIDE OF HSPLIT
Fix any index ` ∈ [2m], scalar δ0 ∈ (0, 1), and f defined on Sin, and consider the associated vector
g ∈ Rn With gi = f(xi) for each i ∈ [n]. We define tWo extended functions by appending the
domain by Rn as folloWs: For any w ∈ Rn , define f1((x, w)) = f(x) and f2((x, w)) = hg, wi
14
Published as a conference paper at ICLR 2022
(the Euclidean inner product). Then we note that these functions replicate the values of f on Sin,
since f1((xi, w)) = f(xi) for arbitrary w ∈ Rn, and f2((xi, ei)) = hg, eii = gi = f(xi), where ei
denotes the i-th basis vector in Rn . Thus we can write
Pmf - P(Pl)f = P0nfl - P0(P)itfl = P0nf2 -	(11)
for the extended empirical distributions P0。= n Pi==γ δχi,ei and P，(；，, defined analogously. No-
tably, any function of the form f ((x, w)) = (g, Wi belongs to the RKHS of %出 With
..~.. ....
kfkkplit ≤ kgk2	(12)
by Berlinet & Thomas-Agnan (2011, Thm. 5).
By the repeated halving interpretation of kernel thinning (DWivedi & Mackey, 2021, Sec. 5.2), on
an event E of probability at least psg + δ0 We may Write
P0nf2 — P0(Plf2 = Pm=IhWj ,f2ik0plit = Pm=IhWj 人尢曲
Where Wj denotes suitable random functions in the RKHS of k0split, and each f2,j ((x, w)) =
hg(j),wi for g(j) ∈ Rn a sparsification of g with at most j⅛ non-zero entries that satisfy
2	(12)	2	2
E[exp(hWj,f2,jik0pl4) | Wj-ι] ≤ exp(σjISkk；；, ≤ exp(等忸叫|；) ≤ exp(号 jιkfk∞,in)
for W0 , 0 and
σ2 = 4( 2j-Γ )2kksplitk∞,in log( 24m? ) ≤ 2 ∙ n42 log( j?),
since by definition kk0split k∞,in ≤ 2. Hence, by sub-Gaussian additivity (see, e.g., Dwivedi &
Mackey, 2021, Lem. 8), Pinf2 — P(P)itf2 is e2 SUb-GaUSSian with
端 ≤ nkf k∞,in ∙ pm=ι 2jiog(舞)=nkf k∞,in ∙ 2((2m — )回舞)— ((2m — i)(m —1) + m)iog2)
=4 kf k∞,in ∙ 2((2m — 1)log(2mδ?) — m log2)
≤ 8 ∙ 2nΓ kf k∞,in ∙ log( 2mm?)，
i.e.,
万2 ≤ q2m ∙ kf k∞,in ∙ ∕8log(*)	(13)
on the event E, where steP (i) makes use of the following exPressions:
Pjm=1 2j = 2(2m — 1) and	Pjm=1j2j = 2((m — 1)(2m —1)+m).
Moreover, when f ∈ HsPlit , we additionally have f1 in the RKHS of k0sPlit with
Ilf1kk0plit ≤ kf kksplit PkkSPlitk∞,
as argued in the proof of (23). The proof of Thm. 1 then implies that P0nf 1 - P0(p)itfι is eι sub-
Gaussian with
e1 ≤ kfakk0put √⅛2nΓ qkksplitk∞,in ∙ log( 26mm?) ≤ M，kf kksplit PkkSPlitk∞ ∙ J3 log(26mi3, (14)
on the very same event E.
Recalling (11) and putting the pieces together with the definitions (13) and (14), we conclude that
on the event E, the random variable Pinf — P(Pl)itf is e sub-Gaussian for
~ △ ∙ ∕~ ~ ∖
σe , min(σe1 , σe2 )
(13),(14)
≤
min(p2mkf k∞,in, kf kksplit VZkkSPlitk∞)
The advertised high-probability bound (3) now follows from the σe sub-Gaussianity on E exactly as
in the proof of Thm. 1.
15
Published as a conference paper at ICLR 2022
D	Proof of Thm. 2: MMD guarantee for target KT
First, we note that by design, kt-swap ensures
MMDk(Sin,SKT) ≤MMDk(Sin,S(m,1)),
where S(m,1) denotes the first coreset returned by KT-SPLIT. Thus it suffices to show that
MMDk(Sin, S(m,1) ) is bounded by the term stated on the right hand side of (5). Let P(o1ut) ,
n/2m Pχ∈s(m,i) δχ. By design of KT-SPLIT, SuPP(Pou)) ⊆ SuPP(Pin). Recall the set A is such
that supp(Pin ) ⊆ A.
Proof of (5) Let C , Ck,ε(A) denote the cover of minimum cardinality satisfying (4). Fix any
f ∈ Bk. By the triangle inequality and the covering property (4) ofC, we have
(Pin-P(o1ut))f ≤ infg∈C(Pin - P(o1ut))(f - g) + (Pin - P(o1ut))(g)
≤ inf g∈C ∣Pin(f — g)| + ∣POU)(f — g)|+ SuPs∈c∣(Pin - POU))(g)
≤ infg∈C2SuPx∈A |f(x) - g(x)| +SuPg∈C(Pin -P(o1ut))(g)
≤ 2ε + SuPg∈C ∣∣∣(Pin — P(o1ut))(g)∣∣∣.	(15)
Applying Thm. 1, we have
I(Pin - PoU) Xg)I ≤ 2n~ 11g k k q 3 kkk∞,in ∙ log( δ4? )log( δ40 )	(16)
with probability at least 1-δ0-Pjm=1 2- Pn/2 δi = PSg — δ0. A standard union bound then yields
that
SUPg∈C∣(Pin - PoU))(g)| ≤ 2m SUPg∈C kgkkj 8 kkk∞,in」og( δ4? ) [log |C| + log( J)]
probability at least psg - δ0. Since f ∈ Bk was arbitrary, and C ⊂ Bk and thus SuPg∈C kgkk ≤ 1,
we therefore have
MMDk(Sin,S(m,1))=SuPkfkk≤1∣∣∣(Pin-P(o1Ut))f∣∣∣ (≤) 2ε+SuPg∈C∣∣∣(Pin-P(o1Ut))(g)∣∣∣
≤ 2ε+q⅛∞ ∙ 2m J1•焉 )题 ∣c∣+∙g(给],
with probability at least psg - δ0 as claimed.
E	Proof of Thm. 3: MMD guarantee for power KT
Definition of Mα and Rmax Define the kα tail radii,
Rka,n ， min{r : Tka Cr) ≤ kkαnk∞ },	Where Tka (R) , (SUPx ^y∣∣2≥R kN5x -")d")1 ,
Rka,n , min{r *uP∣∣x-yk2≥rlkα(x,y)l≤ k⅛k∞ },	(17)
and the Sin tail radii
RSin , maχx∈Sin kxk2,	and RSin,ka,n 二 min (RSin ,n1+ d Rka,n + n 1 kkak"Lka).	(18)
FUrthermore, define the inflation factor
Mka (n,m, d,δ,δ0,R)，37,1og(翦)[Jlog 仔)+ Bqd 1og(2 + 2 k⅛; (Rka,n + R))],
where Lka denotes a Lipschitz constant satisfying ∣kα(x,y) 一 kα(x,z)∣ ≤ LkaIly 一 z∣∣2 for all
x, y, z ∈ Rd . With the notations in place, we can define the qUantities appearing in Thm. 3:
Ma，Mka(n,m,d,δ*,δ0,Rsin,ka,n) and Rmax，max(R§n, Rka,n∕2m).	(19)
The scaling of these two parameters depends on the tail behavior of kα and the growth of the radii
RSin (which in tUrn woUld typically depend on the tail behavior of P). The scaling ofMα and Rmax
stated in Thm. 3 Under the compactly sUpported or sUbexponential tail conditions follows directly
from Dwivedi & Mackey (2021, Tab. 2, App. I).
16
Published as a conference paper at ICLR 2022
Proof of Thm. 3 The KT- S WAP step ensures that
MMDk(Sin,SαKT) ≤ MMDk(Sin,Sα(m,1)),
where Sα(m,1) denotes the first coreset output by KT-SPLIT with ksplit = kα. Next, we state a key
interpolation result for MMDk that relates it to the MMD of its power kernels (Def. 2) (see App. G
for the proof).
Proposition 1 (An interpolation result for MMD) Consider a shift-invariant kernel k that admits
valid a and 2α-power kernels kα and k2α respectively for some α ∈ [2, 1]. Thenfor any two
discrete measures P and Q supported on finitely many points, we have
MMDk(P,Q) ≤ (MMDka(P, Q))2-1 ∙ (MMDk2α(P, Q))1 -1.	(20)
Given Prop. 1, it remains to establish suitable upper bounds on MMDs of kα and k2α . To this
end, first We note that for any reproducing kernel k and any two distributions P and Q, Holder's
inequality implies that
MMD2k(P, Q) = k(P - Q)kk2k = (P-Q)(P-Q)k ≤ kP - Qk1k(P - Q)kk∞
≤ 2k(P - Q)kk∞.
Now, let Pin and P(αm,1) denote the empirical distributions of Sin and Sα(m,1). Now applying Dwivedi
& Mackey (2021, Thm. 4(b)), we find that
MMDka(Sin, sαm,1) ) ≤ ,2k (Pin- Pamj))kαk∞,in ≤ ^2 ∙ 2m kkαk∞,inMka	(21)
with probability psg - δ0, where Mka was defined in (19). We note that while Dwivedi & Mackey
(2021, Thm. 4(b)) uses kkαk∞ in their bounds, we can replace it by kkαk∞,in, and verifying that
all the steps of the proof continue to be valid (noting that kkα k∞,in is deterministic given Sin).
Furthermore, Dwivedi & Mackey (2021, Thm. 4(b)) yields that
MMDk2a(Sin, SamJ)) ≤ 2mkkak∞,in(2+ Jrn+2 ∙ Rmax ∙ Ma),	(22)
with probability psg - δ0, where we have once again replaced the term kkα k∞ with kkα k∞,in for
the same reasons as stated above. We note that the two bounds (21) and (22) apply under the same
high probability event as noted in Dwivedi & Mackey (2021, proof of Thm. 1, eqn. (18)). Putting
together the pieces, we find that
MMDk(Sin, sam,1)) (≤) (MMDka(Sin, Sam,1))2-1 ∙ (MMDk2a (Sin, sam,1)))1 T
(2 ≤ 2) h2 .三 kkak∞,ifa]T
2n- kkak∞,in
2+
1 -1
a
—(2m	ʌ 2a ∕r) f 1- ɪ (9_i_ / (4π)d/2 n>d2	f
=(m~ kka k∞,in	(2 ∙ MIa)	2a 2+ ∖/ r( d ⑴∙ Rmax ∙ Ma I
as claimed. The proof is now complete.
F Proof of Thm. 4: Single function & MMD guarantees for KT+
Proof of (8) First, we note that the RKHS H of k is contained in the RKHS Ht of kt Berlinet
& Thomas-Agnan (2011, Thm. 5). Now, applying Thm. 1 with ksplit = kt for any fixed function
f ∈ H ⊂ Ht and δ0 ∈ (0, 1), we obtain that
IPinf - P(PI)itf I ≤ kfkkt ∙ √232nr qkktk∞,in ∙ log( 26m? ) J2 log(奈)
≤ kf kkt ∙ 2nτ J 136log(26m?)log(δ0),
(ii)	m
≤ kfkk ∙ ɪ J学kkk∞log(*?)log(J7),
17
Published as a conference paper at ICLR 2022
with probability at least psg. Here step (i) follows from the inequality Ilktl∣∞ ≤ 2, and step (ii)
follows from the inequality IIfkkt ≤ ,]kk∞kf ∣∣k, which in turn follows from the standard facts
that
kfkλk(=i) k√λk， and ∣fkλk+kɑ (≤) kfkλk for λ> 0,f ∈ H,
(23)
see, e.g., Zhang & Zhao (2013, Proof of Prop. 2.5) for a proof of step (iii), Berlinet & Thomas-
Agnan (2011, Thm. 5) for step (iv). The proof for the bound (8) is now complete.

Proof of (9) Repeating the proof of Thm. 2 with the bound (16) replaced by (8) yields that
MMDk(Sin, SKT+ ) ≤ infε,Sin⊂A 2ε + 2n J 16 ∣∣k∣∣∞ log( 26m?) ∙ [log(奈)+ Mk(A,。]
≤ √2 ∙ MtargetKT (k)	(24)
with probability at least psg. Let us denote this event by E1 .
To establish the other bound, first we note that kt- swap step ensures that
MMDk(Sin,SKT+) ≤ MMDk(Sin,SK(mT,+1)),	(25)
where SK(mT,+1) denotes the first coreset output by KT-SPLIT with ksplit = kt. We can now repeat
the proof of Thm. 3, using the sub-Gaussian tail bound (8), and with a minor substitution, namely,
IkαI∞,in replaced by 2IkαI∞. Putting it together with (25), we conclude that
MMDk(Sin, SKT+) ≤ (2n2kkɑ∣∣∞,in)2α (2Ma)I-2α (2+^^∏+1) ∙ Rmax ∙ fMɑ)
=2 2α ∙ MPowerKT (ka),	(26)
with probability at least psg. Let us denote this event by E2 .
Note that the quantities on the right hand side of the bounds (24) and (26) are deterministic given
Sin, and thus can be computed apriori. Consequently, we apply the high probability bound only for
one of the two events E1 or E2 depending on which of the two quantities (deterministically) attains
the minimum. Thus, the bound (9) holds with probability at least psg as claimed.
G Proof of Prop. 1: An interpolation res ult for MMD
For two arbitrary distributions P and Q, and any reproducing kernel k, Gretton et al. (2012, Lem. 4)
yields that
MMD2k(P,Q) = I(P - Q)kI2k.	(27)
Let F denote the generalized Fourier transform (GFT) operator (Wendland (2004, Def. 8.9)). Since
k(x, y) = κ(x - y), Wendland (2004, Thm. 10.21) yields that
2 — ι	r (F(f)Q))2 A
kf Ilk = (2π)d∕2 Rd F(κ)(ω) dω, for f ∈H	(28)
Let κb , F (κ), and consider a discrete measure D = Pin=1 wiδxi supported on finitely many points,
and let Dk(x) , P wik(x, xi) = P wiκ(x - xi). Now using the linearity of the GFT operator F,
we find that for any ω ∈ Rd,
F(Dk)(ω) = F(Pn=I Wiκ(∙-Xi)) = Pn=1 WiF(κ(∙-xi) = (Pn=I Wie-hω,XD ∙ b(ω)
= Db (ω)κb(ω )	(29)
where We used the time-shifting property of GFT that F(κ(∙ 一xi))(ω) = e-hω,xiib(ω) (proven
for completeness in Lem. 1), and used the shorthand Db (ω) , (Pin=1 Wie-hω,xii ) in the last step.
18
Published as a conference paper at ICLR 2022
Putting together (27) to (29) with D = P - Q, we find that
MMDk(P,Q) = (2π)d∕2 RRd D2(ω)b(ω)dω	(30)
=(2∏)d∕2 RRd Db2(ω)bɑ(ω)(bα(ω)) 1-αdω
=M RRd D2(ω0)bα(ω0)dω0 RRd RRd Du)d,，…)d
1 — α
≤ (2π⅛2 RRd d2(ω0)bα(ω0)dω0 (RRd RRd 扰—―bα(Mdω)
1 1	1 — α
=(2∏⅛2 (RRd D2(ω0)bα(ω0)dω0) —α (加 D2⅛α(ω)ω) ɪ
2 1	ʌ	1 — α
=((2π)d∕2 RRd D2(ω0)Kα(ω0)dω0^	((2π)d∕2 RRd D (ω)κ (ω) ω)
(=)(MMDka(P,Q))2— 1 ∙ (MMDk2α(P,Q))1 —1,
1	— a
where step (i) makes use of Jensen S inequality and the fact that the function t → t for t ≥ 0
is concave for α ∈ [2, 1], and step (ii) follows by applying (30) for kernels ka and k2a and noting
that by definition F(kα) = κbα, and F (k2α) = κb2α. Noting MMD is a non-negative quantity, and
taking square-root establishes the claim (20).
Lemma 1 (Shifting property of the generalized Fourier transform) If bκ denotes the generalized
Fourier transform (GFT) (Wendland, 2004, Def 8.9) of the function K : Rd → R, then e~h,xiκ
denotes the GFT of the ShiftedfUnction κ(——Xi) ,for any Xi ∈ Rd.
Proof Note that by definition of the GFT bκ (Wendland, 2004, Def. 8.9), we have
R κ(X)γb(X)dX = R κb(ω)γ (ω )dω,	(31)
for all suitable Schwartz functions γ (Wendland, 2004, Def. 5.17), where γb denotes the Fourier
transform (Wendland, 2004, Def. 5.15) of γ since GFT and FT coincide for these functions (as
noted in the discussion after Wendland (2004, Def. 8.9)). Thus to prove the lemma, we need to
verify that
R K(X — Xi)Y(X)dx = R eTω,xiib(ω)γ(ω)dω,	(32)
for all suitable Schwartz functions γ. Starting with the right hand side of the display (32), we have
R eiω,xiiY(ω)γ(ω)dω = R Y(ω)(eiω,xiiγ(ω))dω = R K(X)Y(X + Xi)dX(= R K(Z — Xi)Y(Z)dz,
where step (i) follows from the shifting property of the FT (Wendland, 2004, Thm. 5.16(4)), and
the fact that the GFT condition (31) holds for the shifted function γ(∙ + Xi) function as well since it
is still a Schwartz function (recall that γY is the FT), and step (ii) follows from a change of variable.
We have thus established (32), and the proof is complete.
H Sub-optimality of single function guarantees with root KT
Define ert as the scaled version of k11, i.e., krt，krt∕kkrtk∞ that is bounded by 1. Then Zhang &
Zhao (2013, Proof of Prop. 2.3) implies that
kfk = √⅛∞ kf kert .
〜
(33)
〜
〜
And thus we also have Hrt = Hrt where Hrt and Hrt respectively denote the RKHSs of krt and krt .
Next, we note that for any two kernels k1 and k2 with corresponding RKHSs H1 and H2 with
H1 ⊂ H2, in the convention of Zhang & Zhao (2013, Lem. 2.2, Prop. 2.3), we have
kfkk2 ≤ β(H1, H2) ≤ Pλ(Hι, H2) for f ∈H.
(34)
19
Published as a conference paper at ICLR 2022
Consequently, we have
Pmaxx∈sm k∕x,x) f⅛ ≤ √≡∞k⅛⅛ (=) ft ≤ Jλ(H, Hrt),	(35)
where in the last step, We have applied the bound (34) with (kι, Hi) J (k, H) and (k2, H) J
(krt,krt) since H ⊂ Hrt = krt.
Next, we use (35) to the kernels studied in Dwivedi & Mackey (2021) where we note that all the
kernels in that work were scaled to ensure kkk∞ = 1 and in fact satisfied k(x, x) = 1. Conse-
quently, the multiplicative factor stated in the discussion after Thm.
be bounded by
√λ(H, Hrt ) given the arguments above.
1,namely, √⅞⅛ f⅛ can
For k = Gauss(σ) kernels, Zhang & Zhao (2013, Prop. 3.5(1)) yields that
λ(H, Hert) = 2d/2.
For k = B-spline(2β + 1, γ) with β ∈ 2N + 1, Zhang & Zhao (2013, Prop. 3.5(1)) yields that
λ(H, Hert) = 1.
For k =Matern(ν, Y) with ν > d, some algebra along with Zhang & Zhao (2013, Prop 3.1) yields
that
λ(H, Hert)
Γ(ν)Γ((ν-d)∕2) ≥ 1
Γ(ν-d∕2)Γ(ν∕2) ≥ 1.
I Additional experimental results
This section provides additional experimental details and results deferred from Sec. 4.
Common settings and error computation To obtain an output coreset of size n 2 with n input
points, we (a) take every n 2-th point for standard thinning (ST) and (b) run KT with m = 2 log2 n
using an ST coreset as the base coreset in kt-swap. For Gaussian and MoG target we use i.i.d.
points as input, and for MCMC targets we use an ST coreset after burn-in as the input (see App. I for
more details). We compute errors with respect to P whenever available in closed form and otherwise
use Pin. For each input sample size n ∈ {24,26,..., 214 } with δi = 2n, we report the mean MMD
or function integration error ±1 standard error across 10 independent replications of the experiment
(the standard errors are too small to be visible in all experiments). We also plot the ordinary least
squares fit (for log mean error vs log coreset size), with the slope of the fit denoted as the empirical
decay rate, e.g., for an OLS fit with slope -0.25, we display the decay rate of n-0.25.
Details of test functions We note the following: (a) For Gaussian targets, the error with CIF
function and i.i.d. input is measured across the sample mean over the n input points and √n output
points obtained by standard thinning the input sequence, since PfCIF does not admit a closed form.
(b) To define the function f : x → k(X0, x), first we draw a sample X 〜 P, independent of the
input, and then set X0 = 2X . For the MCMC targets, we draw a point uniformly from a held out
data point not used as input for KT. For each target, the sample is drawn exactly once and then fixed
throughout all sample sizes and repetions.
I.1	Mixture of Gaussians Experiments
Our mixture of Gaussians target is given by P = M PM=ι N(μj,L) for M ∈ {4,6, 8} where
μι =	[-3,3]>,	μ2 =	[-3,3]>,	μ3	=	[-3,	-3]>,	μ4 =	[3, -3]>,
μ5 = [0, 6]>, μ6 = [-6,0]>,	μ7 = [6,0]>,	μ8 = [0, -6]>.
Two independent replicates of Fig. 1 can be found in Fig. 4. Finally,we display mean MMD (±1
standard error across ten independent experiment replicates) as a function of coreset size in Fig. 5
for M = 4, 6 component MoG targets. The conclusions from Fig. 5 are identical to those from the
bottom row of Fig. 1: TARGET KT and ROOT KT provide similar MMD errors with GAUSS k, and
all variants ofKT provide a significant improvement over i.i.d. sampling both in terms of magnitude
and decay rate with input size. Morever the observed decay rates for KT+ closely match the rates
guaranteed by our theory in Tab. 3.
20
Published as a conference paper at ICLR 2022
KT+ (Laplace) KT+ (Bspline)
i.i.d.
Root KT (Gauss)
Target KT (Gauss) KT+ (IMQ)
KT+ (Laplace)
KT+ (Bspline)
Figure 4: Generalized kernel thinning (KT) and i.i.d. coresets for various kernels k (in parentheses) and
an 8-component mixture of Gaussian target P with equidensity contours underlaid. These plots are
independent replicates of Fig. 1. See Sec. 4 for more details.
-10	0	-10	0
-10	0	-10	0
I.2	MCMC experiments
Our set-up for MCMC experiments follows closely that of Dwivedi & Mackey (2021). For complete
details on the targets and sampling algorithms we refer the reader to Riabiz et al. (2020a, Sec. 4).
Goodwin and Lotka-Volterra experiments From Riabiz et al. (2020b), we use the output of four
distinct MCMC procedures targeting each of two d = 4-dimensional posterior distributions P: (1)
a posterior over the parameters of the Goodwin model of oscillatory enzymatic control (Goodwin,
1965) and (2) a posterior over the parameters of the Lotka-Volterra model of oscillatory predator-
prey evolution (Lotka, 1925; Volterra, 1926). For each of these targets, Riabiz et al. (2020b) provide
2 × 106 sample points from the following four MCMC algorithms: Gaussian random walk (RW),
adaptive Gaussian random walk (adaRW, Haario et al., 1999), Metropolis-adjusted Langevin al-
gorithm (MALA, Roberts & Tweedie, 1996), and pre-conditioned MALA (pMALA, Girolami &
Calderhead, 2011).
Hinch experiments Riabiz et al. (2020b) also provide the output of two independent Gaussian
random walk MCMC chains targeting each of two d = 38-dimensional posterior distributions P:
(1) a posterior over the parameters of the Hinch model of calcium signalling in cardiac cells (Hinch
et al., 2004) and (2) a tempered version of the same posterior, as defined by Riabiz et al. (2020a,
App. S5.4).
Burn-in and standard thinning We discard the initial burn-in points of each chain using the
maximum burn-in period reported in Riabiz et al. (2020a, Tabs. S4 & S6, App. S5.4). Furthermore,
we also normalize each Hinch chain by subtracting the post-burn-in sample mean and dividing each
coordinate by its post-burn-in sample standard deviation. To obtain an input sequence Sin of length
21
Published as a conference paper at ICLR 2022
MMDk(PlPout)
2-5
M
2-ι
M = 4
IMQ k
M = 4
Bspline k
2-7
2≡^
2≡^
2≡^
2≡^
* iid： n-w，
- ⅛ -KT+： n-0-50
* iid： n-w，
-⅛ -KT+： n-0-52
* iid: ɪɪr
■ * -KT+： n
Coreset size √n
Coreset size √n
Coreset size √n^
Coreset size √n^
MMDk{P,Pout)
=*=ud: n
-⅝ Root KT： n-0-50
■ ♦ -T⅛rget KT： n-0∙≡1
Figure 5: Kernel thinning versus i.i.d. sampling. For mixture of Gaussians P with M ∈ {4, 6} com-
ponents and the kernel choices of Sec. 4, the TARGET KT with GAUSS k provides comparable
MMDk (P, Pout) error to the root KT, and both provide an n- 1 decay rate improving significantly
over the n- 1 decay rate from i.i.d. sampling. For the other kernels, KT+ provides a decay rate close
to n- 1 for IMQ and B-SPLINE k, and n-0.35 for LAPLACE k, providing an excellent agreement
with the MMD guarantees provided by our theory. See Sec. 4 for further discussion.








n to be fed into a thinning algorithm, we downsample the remaining even indices of points using
standard thinning (odd indices are held out). When applying standard thinning to any Markov chain
output, we adopt the convention of keeping the final sample point.
The selected burn-in periods for the Goodwin task were 820,000 for RW; 824,000 for adaRW;
1,615,000 for MALA; and 1,475,000 for pMALA. The respective numbers for the Lotka-Volterra
task were 1,512,000 for RW; 1,797,000 for adaRW; 1,573,000 for MALA; and 1,251,000 for
pMALA.
Additional remarks on Fig. 3 When a Markov chain is fast mixing (as in the Goodwin and Lotka-
Volterra examples), We expect standard thinning to have Ω(n-4) error. However, when the chain is
slow mixing, standard thinning can enjoy a faster rate of decay due to a certain degeneracy of the
chain that leads it to lie close to a one-dimensional curve. In the Hinch figures, we observe these
better-than-i.i.d. rates of decay for standard thinning, but, remarkably, KT+ still offers improvements
in both MMD and integration error. Moreover, in this setting, every additional point discarded via
improved compression translates into thousands of CPU hours saved in downstream heart-model
simulations.
J	Upper bounds on RKHS covering numbers
In this section, we state several results on covering bounds for RKHSes for both generic and specific
kernels. We then use these bounds with Thm. 2 (or Tab. 2) to establish MMD guarantees for the
output of generalized kernel thinning as summarized in Tab. 3.
We first state covering number bounds for RKHS associated with generic kernels, that are either (a)
analytic, or (b) finitely many times differentiable. These results follow essentially from Sun & Zhou
(2008); Steinwart & Christmann (2008), but we provide a proof in App. J.2 for completeness.
Proposition 2 (Covering numbers for analytic and differentiable kernels) The following results
hold true.
22
Published as a conference paper at ICLR 2022
MMDk(P∣n, POUt)
___ ___ __i
望 8oeldel-l
MH UlMPooU
Coreset size vn
2-8
2-u>
2-ιz
2-14
∣("⅛) 一 HOμt)X[∣
►
-+STi∏-03*∖
T-KT+: n-3
2-15
2-i7
2-19
I(Pto-Port)XfI
-+ ST:n-° *，
■4-KT+jπ-050
∣(P∕n-Pcwt)k(X,)∣
►
Coreset size vn
2-12
2-14
2-i6
∖(P∣n - PWt)gFl
Coreset size vn
∣(P∕n - Part)⅛∣F∣
Coreset size vn
X 8o*5de7
MHe3πohj
2-z
2-3
2-4
2-5
2-6
MMDk(Pm,Pat)
Coreset size √n-
2-8
2-u>
2-12
2-14
Coreset size vn
∣(P∕n — Pout)Xll
Coreset size √n
2-8
2-u>
2-12
2-14
∣(¾-Pwt)xJl
-4-kt+j∏-0≈ '∙∙.
∣(P∕n-Pcμt)k(X,)∣
A
2-s
2”
2-9
-4-kt+j∏-037 *,∙∙.
*
Coreset size √7Γ
2-u>
2-ιz
2-14
Coreset size √7Γ
W- OWl
ZwIH
2-3
2-4
2-5
2-6
2-7
MMDk(PlniPwt)
^2≡	2= T
Coreset size √n^
X 8u*5deHJ
poou
Coreset size vn
MMDk(PlniPwt)
__ ___ ____ ___J
MOSI
P8∙18dul8pqo-sH
MMDk(PlniPout)
Coreset Size vn
∣("ft> 一 /μt)Xl∣
Coreset size √7Γ
I(Pto-Pwt)XfI
望 8o*sdeu
VTVWd OnoHJ
^2≡	2= T
Coreset size √n^
2-3
2-7
∣(P∕n-Pcwt)k(X,)∣
2τι -+STi∏-03β
-⅛ KT+: n-0≡
-+STi∏-076
■4 κτ+j∏-04β
^2≡^
Coreset size √n^
^2≡	2= T
Coreset size √n^
Coreset size √n^
Coreset size vn
I(Pfrl-Part 用 I
2-14 ►
6、
Coreset Size vn
2-ιo
2-12
2^14
2-i6
∣(P⅛) - Part)X
ST: n7"='	∙∙
--♦-KT+:n-070
2-τ
2-9
2-ιι
2-13
∖(P∣n-Pcut)k(×')∖
Coreset Size vn
∣(P∕n-Pcwt)k(X,)∣
Coreset Size vn
-+STin00β
•♦,KT+:n-g
∣3⅛1 - Part)⅛∣F∣
2^17
Coreset size vn
-⅜-ST:
-4-KT+: n
I(PIn - flout)χll
--⅛-KT+i∏-°∙61
Coreset size vn
I(Pto-Port)X?!
2-5 -+STi∏-0≈
+KT+f-3 A
Coreset size vn
∖(P∣n-Pcut)k(×')∖
I(PIn- ¾ut)⅛3F∣
Coreset Size vn
25
Coreset size √n^
2-ιι
-∙φ- KT+: n
+ST:n"
T-KT+: n-α
X 80*5deHJ
VTVptd UjMPooD
Coreset size √n
Coreset size √n
Coreset size √n
2-ιo
2-7
2-a
2-w
2-9
2-5
2-20
- 4-KT+: n^
-⅝-STin-β
- 4-KT+: n
-H-STiii-0
-4-∙κτ+: ∏∙
+ST: J ∙
-f-ST:n-0
- 4-KT+: n
MMDk(PlniPout)
、.
Coreset size √n^
MMDk(Pln,Pout)
Coreset Size vn
Coreset Size vn
∖(P∣n 一 POlrt)Xll
∖(P∣n-Pθut)k(×')∖
∣(P∕n - Pwt)⅛fF∣
-⅜-STi∏-05s
-4-kt+j∏-°
2^6
2-8
2-u>
2-i2
2^14
I(Pto-Pwt)XfI
∣(P⅛) I %ut)Xι∣
∣(P∕n-Pcwt)k(X,)∣
Coreset size √n^
Coreset size √n^
2 ɪo
*STf-0∙
- ⅜- KT+: n^
+STfi
-4- KT+: n^
+ STi∏-fl44
■■♦■■KT+: ∏-°λ5
∖∙)'r
+ST：n-«R `.
-4-kt+j∏-04s	∙..β
Coreset size √n
∣(P⅛) 一 ≠,Wt)⅛fF∣
►
__ __ ___ ___ _J
MOSI
Z P8∙18dul8plp-sH
+ST:n-2 '、.、、
∙4∙∙KΓ+: n→∙*
∣(P⅛)—痴t)Xl∣
-H-STj∏-035 '⅛.	2-=
-4kt+j∏-053	∖
∖(P∣n-PcutW)∖
Coreset size √n^
∣(P∕n — Pwt)⅛fF∣
Coreset size √n^
∖(P∣n-Pwt)×i∖
+STL"
-4-∙kt+j∏-°
-⅝-STj∏-wλ1
-4kt+j∏-032
23 2s 27
Coreset size √7Γ
23 2s 27
Coreset size √7Γ
23 2s 27
Coreset size √7Γ
+S7n-0∙B
-4-KT+jn-0
23 2s 27
Coreset size √7Γ
23 2s 27
Coreset size √7Γ
M SOeIdeT
I(¾-∕,oλ)^I
，.广、
Figure 6: Kernel thinning+ (KT+) vs. standard MCMC thinning (ST). For kernels without fast-decaying
square-roots, KT+ improves MMD and integration error decay rates in each posterior inference task.
23
Published as a conference paper at ICLR 2022
(a)	Analytic kernels: Suppose that k(x, y) = κ(kx - yk22) for κ : R+ → R real-analytic with
convergence radius Rκ, that is,
,κj)(0)∣ ≤ Cκ(2∕Rκ)j for all j ∈ No	(36)
(j)
for some constant Cκ , where κ+ denotes the right-sided j -th derivative of κ. Then for any set
A ⊂ Rd and any ε ∈ (0, 2), we have
Mk(A,ε) ≤N2(A,rt/2) ∙ (4log(1∕ε) + 2 + 4log(16√CK + 1))d+1,	(37)
where r1 ，min(√√Rκ, ^RK + DA - D∕), and DA，maxχ,y∈∕∣∣x - yk2.	(38)
(b)	Differentiable kernels: Suppose that for X ⊂ Rd, the kernel k : X × X → R is s-times
continuously differentiable, i.e., all partial derivatives ∂α,αk : X × X → R exist and are
continuous for all multi-indices α ∈ Nd with |a| ≤ S. Then, for any closed Euclidean ball
B2(r) contained in X and any ε > 0, we have
Mk(B2(r), ε) ≤ cs,d,k ∙ rd ∙ (1∕ε)"s,	(39)
for some constant cs,d,k that depends only on on s, d and k.
Next, we state several explicit bounds on covering numbers for several popular kernels. See App. J.3
for the proof.
Proposition 3 (Covering numbers for specific kernels) The following statements hold true.
(a)	When k = GAUSS(σ), we have
Mk(B2(r),ε) ≤ CGauss d ∙ (r⅛(4^)d log(1∕ε) ∙ (1 L	IIWhenT ≤ √σ, (40)
kV 2V , , g Gauss,d	loglog(4/G，	~ ( [(3√2rσ)d otherwise,
where CGAUSS,d，(4e+d)e-d ≤ [I：*4e -dfor d = 1	≤ 30 for all d ≥ L (41)
' d	0.05 ∙ d4ee d for d ≥ 2
(b)	When k = MATERN (ν, Y), V ≥ d + 1, thenfor some constant CMATERN,ν,γ,d, we have
Mk(B2(r),ε) ≤ CMATERN,ν,γ,d ∙ rd ∙ (1∕ε)dAV-2C.	(42)
(c)	When k = IMQ(ν, γ), we have
Mk(B2(r),ε) ≤ (1 + 4r)d ∙ (4log(1∕ε) + 2 + Cimq,v,y)d+1,	(43)
where Cimq,v,y，4log(l6(如；7+I+1), and e，min(右,√γ2 +4r2-2r).	(44)
(d)	When k = sinc(Θ), thenfor ε ∈ (0, ɪ), we have
Mk([-r,r]d,ε) ≤ d ∙ (1 + 4r) ∙ (4log(d∕ε) + 2 + 4log 17)2,	(45)
where e，min( √∣, J. + 4r2 — 2r) .	(46)
(e)	When k = B-SPLiNE(2β + 1, γ), then for some universal constant CB-SPLiNE, we have
1
Mk([-2, 2]d,ε) ≤ d ∙ max(γ, 1) ∙ Cb-spline ∙ (d∕ε) β+2 .	(47)
J.1 Auxiliary results about RKHS and Euclidean covering numbers
in this section, we collect several results regarding the covering numbers of Euclidean and RKHS
spaces that come in handy for our proofs. These results can also be of independent interest.
We start by defining the notion of restricted kernel and its unit ball (Rudi et al. (2020, prop. 8)). For
X ⊂ Rd, let |X denotes the restriction operator. That is, for any function f : Rd → R, we have
f|X : X → R such that f|A(x) = f(x) for x ∈ X.
24
Published as a conference paper at ICLR 2022
Definition 3 (Restricted kernel and its RKHS) Consider a kernel k defined on Rd × Rd with the
corresponding RKHS H, any set X ⊂ Rd. The restricted kernel k|X is defined as
k|X : X × X → R such that k|X (x, y) , k|X ×X (x, y) = k(x, y) for all x, y ∈ X,
and H|X denotes its RKHS. For f ∈ H|X, the restricted RKHS norm is defined as follows:
kf kk|X = infh∈H khkk such that h|X = f.
Furthermore, we use Bk|X , {f ∈ H|X : kf kk| ≤ 1} to denote the unit ball of the RKHS
corresponding to this restricted kernel.
In this notation, the unit ball of unrestricted kernel satisfies Bk , Bk d . Now, recall the RKHS
covering number definition from Def. 1. In the sequel, we also use the covering number of the
restricted kernel defined as follows:
M(X ,ε)= Nk∣χ (X ,ε),	(48)
that is Nk(X, ε) denotes the minimum cardinality over all possible covers C ⊂ BkIX that satisfy
BkIX ⊂ Sh∈c{g∈Bk∣χ *uPχ∈χ Ih(X)-g(x)l≤ε}∙
With this notation in place, We now state a result that relates the covering numbers N * (48) and
N Def. 1.
Lemma 2 (Relation between restricted and unrestricted RKHS covering numbers) We have
Nk,ε(X) ≤ Nk*,ε (X)
Proof Rudi et al. (2020, Prop. 8(d,f)) imply that there exists a bounded linear extension operator
E : H|X → H with operator norm bounded by 1, which when combined with Steinwart &
Christmann (2008, eqns. (A.38), (A.39)) yields the claim.
Next, we state results that relate RKHS covering numbers fora change of domain fora shift-invariant
kernel. We use B∣∣∙k (x； r)，{y ∈ Rd : kX - yk ≤ r} to denote the r radius ball in Rd defined by
the metric induced by a norm |卜||.
Definition 4 (Euclidean covering numbers) Given a set X ⊂ Rd, a norm ∣∣∙k, and a scalar ε >
0, we use Nk∣∙k (X,ε) to denote the ε-covering number of X with respect to ∣∣∙∣-norm. That is,
Nk∣∙k (X, ε) denotes the minimum cardinality over all possible covers C ⊂ X that satisfy
X ⊂ ∪z∈cBiHI (z； ε).
When ∣∣∙∣ = ∣∣∙∣q for some q ∈ [1, ∞], we use the shorthandNq，2卜|).
Lemma 3 (Relation between RKHS covering numbers on different domains) Given a shift-
invariant kernel k, a norm ∣∣∙∣ on Rd, and any set X ⊂ Rd, we have
Nk(X,ε) ≤ hNMHlTNk""1’.
Proof Let C ⊂ X denote the cover of minimum cardinality such that
X⊆ Sz∈c BlHl(Z,1).
We then have
(i)	(ii)	|C|
M(X,ε) ≤ Qz∈cM(Bk∙k(z,1),ε) ≤ Qz∈cM(Bk.∣∣,ε) ≤ [M(B∣H∣,ε)],
where step (i) follows by applying Steinwart & Fischer (2021, Lem. 3.11),5 and step (ii) follows
by applying Steinwart & Fischer (2021, Lem. 3.10). The claim follows by noting that C denotes a
cover of minimum cardinality, and hence by definition ∣C∣ = Nk∙∣ (X, 1).	口
5Steinwart & Fischer (2021, Lem. 3.11) is stated for disjoint partition of X in two sets, but the argument
can be repeated for any finite cover of X .
25
Published as a conference paper at ICLR 2022
Lemma 4 (Covering number for product kernel) Given X ⊂ R and a reproducing kernel κ :
X ×X → R ,consider the product kernel k，κ0d : X02d → R defined as
k(x,y) = Qd=I κ(xi ,yi) for x,y ∈ X0d，X × X ... × X ⊂ Rd.
l^^^"^^^{^^^-^^—}
d times
Then the covering numbers of the two kernels are related as follows:
Nk(X叫ε) ≤ [NK(X,ε∕(dkκk∞-1 ))『.	(49)
Proof Let H denote the RKHS corresponding to κ. Then the RKHS corresponding to the kernel k
is given by the tensor product Hk , H × H × . . . × H Berlinet & Thomas-Agnan (2011, Sec. 4.6),
i.e., for any f ∈ Hk , there exists f1, f2, . . . , fd ∈ H such that
f (x) = Qd=Ifi(Xi) for all X ∈ X0d.	(50)
Let Cκ(X, ε) ⊂ Bκ denote an ε-cover of Bκ in L∞ -norm (Def. 1). Then for each fi ∈ H, we have
fi ∈ Cκ(X, ε) such that
supz∈X fi(z) - fei(z) ≤ ε.	(51)
Now, We claim that for every f ∈ Bk, there exists g ∈ Ck，(CK(X, ε))0d such that
d-1
suPx∈xSdIf(X)-g(x)| ≤ dεkκk∞F,	(52)
which immediately implies the claimed bound (49) on the covering number. We now prove the
claim (52). For any fixed f ∈ Hk, let fi, fi denote the functions satisfying (50) and (51) respectively.
d0
Then, we prove our claim (52) with g =	i=1 fi ∈ Ck. Using the convention	k=1 fk(Xk) = 1,
we find that
|f(X) - g(X)| = Qid=1fi(Xi) - Qid=1 fei(Xi)
≤Pid=1fi(Xi)-fei(Xi)Qjd=i+1fj(Xj)Qik-=11fek(Xk)
(51)	d_ 1	d-1
≤ dε ∙ suPh∈Bκ khk∞	≤ dεkκk∞ ,
where in the last step we have used the following argument:
suPz∈x h(x) =supz∈χ h,κ(z, ∙)κ ≤ ∣∣hkκ √κ(z,z) ≤ √∣∣κ∣∣∞ for any h ∈ Bκ.
The proof is now complete.
Lemma 5 (Relation between Euclidean covering numbers) We have
N∞(B2(r), 1) ≤ √πd ∙ h(1 + √d)√2πei	for all d ≥ 1.
Proof We apply Wainwright (2019, Lem. 5.7) with B = B2(r) and B0 = B∞ (1) to conclude that
N (BQ (r) 1) ≤ Vol(2B2(T)+B∞(I)) ≤ Vol (B (2r + ʌ/d)) ≤ nd/2 . (2『+ ʌ/d)d
N∞(B2(r), 1) ≤ VOI(B∞(1)) ≤ Vol(B2(2r 十 Vd)) ≤「(d + ι) (2r 十 Vd),
where Vol(X) denotes the d-dimensional Euclidean volume of X ⊂ Rd, and Γ(a) denotes the
Gamma function. Next, we apply the following bounds on the Gamma function from Batir (2017,
Thm. 2.2):
Γ(b + 1) ≥ (b∕e)b√2πb for any b ≥ 1, and Γ(b +1) ≤ (b∕e)b√e2b for any b ≥ 1.1.
Thus, we have
N∞(B2(r),1) ≤ √2∏πd2d2)d/2 ∙ (2r+√d)d ≤ √∏d ∙ h(1+√d)√2eπi,
as claimed, and we are done.
26
Published as a conference paper at ICLR 2022
J.2 Proof of Prop. 2: Covering numbers for analytic and differentiable
KERNELS
First We apply Lem. 2 so that it remains to establish the stated bounds simply on logNk(X, ε).
Proof of bound (37) in part (a) The bound (37) for the real-analytic kernel is a restatement of
Sun & Zhou (2008, Thm. 2) in our notation (in particular, after making the folloWing substitutions
in their notation: R ∙⅛- 1, Co ∙⅛- Cκ, r ^- Rκ, X ^- A, r ∙⅛- r,, η ∙⅛- ε, D ∙⅛— DA，n ^- d).	□
Proof of bound (39) for part (b): Under these assumptions, SteinWart & Christmann (2008,
Thm. 6.26) states that the i-th dyadic entropy number SteinWart & Christmann (2008, Def. 6.20)
of the identity inclusion mapping from 冗良⑺ to 刀,⑺ is bounded by Csdk ∙ rsi-s/d for
some constant c0s,d,k independent of ε and r. Given this bound on the entropy number, and
applying SteinWart & Christmann (2008, Lem. 6.21), We conclude that the log-covering number
logNk(B2(r),ε) is bounded by ln4 ∙ (cs 4 於，/εyd/ = cs,d,krd ∙ (1∕ε)"s as claimed.	□
J.3 Proof of Prop. 3: Covering numbers for specific kernels
First We apply Lem. 2 so that it remains to establish the stated bounds in each part on the corre-
sponding log Nk .
Proof for Gauss kernel: Part (a) The bound (40) for the Gaussian kernel folloWs directly from
SteinWart & Fischer (2021, Eqn. 11) along With the discussion stated just before it. Furthermore, the
bound (41) for CGauss,d are established in SteinWart & Fischer (2021, Eqn. 6), and in the discussion
around it.	□
Proof for MATERN kernel: Part(b) We claim that MATERN (ν, Y) is [ν — 2 J -times continuously
differentiable Which immediately implies the bound (42) using Prop. 2(b).
To prove the differentiability, we use Fourier transform OfMatern kernels. For k = MATERN(ν, γ),
let κ : Rd → R denote the function such that noting that k(x, y) = κ(x — y). Then using the Fourier
transform of κ from Wendland (2004, Thm 8.15), and noting that κ is real-valued, we can write
k(x, y) = ck,d R cos(ω>(x — y))(γ2 + kωk22)-νdω
for some constant ck,d depending only on the kernel parameter, and d (due to the normalization of
the kernel, and the Fourier transform convention). Next, for any multi-index a ∈ Nd0, we have
2 j=1 aj
∣∂a,a cos(ω>(x - y))(γ2 + kω∣∣2)-ν∣ ≤ Q；=] s；。，(γ2 + kω∣∣2)-ν ≤ k⅛k⅛2F,
where ∂a,a denotes the partial derivative of order a. Moreover, we have
kωk2_，=1，dω =	CH R rd-1	r2 PjT a d. ≤	C R rd-1+2 Pd=	aj-2ν	<<)	∞
(γ2+kωk2)ν dω =	cdJr>0 r	(γ2+r2)ν dr ≤	cd Jr>0 r	j	<	∞,
where step (i) holds whenever
d — 1 + 2 P j=] aj — 2 ν < —1	^⇒ P j=ι aj < ν — d.
Then applying Newey & McFadden (1994, Lemma 3.6), we conclude that for all multi-indices a
such that Pd=] aj ≤ [ν — dJ, the partial derivative ∂a,ak exists and is given by
Ck,d R∂a,acos(ω>(x — y))(γ2 + kωk22)-ν dω,
and we are done.	□
27
Published as a conference paper at ICLR 2022
Proof for IMQ kernel: Part (c) The bounds (43) and (44) follow from Sun & Zhou (2008,
Ex. 3), and noting that N2(B2(r),r/2) is bounded by (1 + 4er )d (Wainwright, 2019, Lem. 5.7). □
Proof for SINC kernel: Part (d) For k = SINC(θ), we can write k(x, y) = Qid=1 κθ(xi - yi)
for kθ : R → R defined as kθ (t)=吗θt) =	,where step ⑴ follows from the fact that
t 7→ sin t/t is an even function. Thus, we can apply Lem. 4. Given the bound (49), and noting that
kκθk∞ = 1, it suffices to establish the univariate version of the bound (45), namely,
Mk([-r,r],ε) ≤ (1 + 给∙ (4log(1∕ε) + 2 + 4log17)2.
To do so, We claim that univariate SINC kernel is an analytic kernel that satisfies the condition (36)
of Prop. 2(a) with κ(t) = SINC(θ√t), RK = 12, and CK = 1; and thus applying the bounds (37)
and (38) from Prop. 2(a) with A = B2d(r) yields the claimed bound (45) and (46). To verify the
condition (36) with the stated parameters, we note that
K⑴=SINC(θ√tr ɪθpt P∞=0 (2j+1)! ∙ (θ√t)2j + 1 = P∞=0 (2j + 1)! ∙ (θ√t)2j
=Pj=0(2j⅛ ∙ O2'",
which implies
∣κ+')(0)∣ = (2-⅛ ∙ θ2jj! ≤ (2∕Rκ)jj! for RK，l∙ infj≥ι((2j + 1)!)1/j =晟
and we are done.	□
Proof for B-spline kernel: Part (e) For k = B-SPLINE(2β + 1, γ), we can write k(x, y) =
Qd=ι Kβ,γ((Xi - yi)) for κβ : R → R defined as Kβ,γ(t) = B-β+2 ~2β+2 1[-1,ι] (Y ∙ t), and thus
we can apply Lem. 4. Given the bound (49), and noting that kκβ,γ k∞ ≤ 1 (Dwivedi & Mackey
(2021, Eqn. 107)), it suffices to establish the univariate version of the bound (47). Abusing notation
and using κβ,γ to denote the univariate B-SPLINE(2β + 1, γ) kernel, we find that
(i)
logNKe,y([-2,2],ε) ≤ Nι([0,γ],I) ∙logNKe,i([-2,2],ε)
(ii)	11
≤ max(Y, I) ∙ CB-SPLINE ∙(1/。β+2 ,
where step (i) follows from Steinwart & Fischer (2021, Thm. 2.4, Sec. 3.3), and for step (ii)
we use the fact that the unit-covering number of [0, γ] is bounded by max(γ, 1), and apply the
covering number bound for the univariate B-splinekernel from Zhou (2003, Ex. 4) (by substituting
m = 2β + 2 in their notation) along with the fact that logNKB ɪ([-1, 1 ], ε) = logNKB i([0,1], ε)
since κβ is shift-invariant.	□
K	Proof of Tab. 3 results
In Tab. 3, the stated results for all the entries in the target KT column follow directly by substi-
tuting the covering number bounds from Prop. 3 in the corresponding entry along with the stated
radii growth conditions for the target P. (We substitute m = 1 log? n since we thin to √n output
size.) For the KT+ column, the stated result follows by either taking the minimum of the first two
columns (whenever the root KT guarantee applies) or using the power KT guarantee. First we
remark how to always ensure a rate of at least O(n-4) even when the guarantee from our theorems
are larger, using a suitable baseline procedure and then proceed with our proofs.
Remark 2 (Improvement over baseline thinning) First we note that the KT-SWAP step en-
sures that, deterministically, MMDk(Sin, SKT) ≤ MMDk(Sin, Sbase) and MMDk(P, SKT) ≤
2 MMDk(P, Sin) + MMDk(P, SbaSe) for SbaSe a baseline thinned coreset of size 2m and any tar-
get P. For example if the input and baseline coresets are drawn i.i.d. and k is bounded, then
28
Published as a conference paper at ICLR 2022
MMDk(Sin, SKT) and MMDk(P, SKT) are O(,2m∕n) with high probability (Tolstikhin et al.,
2017, Thm. A.1), even if the guarantee of Thm. 2 is larger. As a consequence, in all well-defined KT
variants, we can guarantee a rate of n-4 for MMDk(S皿 SKT) When the output size is √n simply
by using baseline as i.i.d. thinning in the KT-SWAP step.
Gauss kernel The TARGET KT guarantee follows by substituting the covering number bound
for the Gaussian kernel from Prop. 3(a) in (6), and the root KT guarantee follows directly from
Dwivedi & Mackey (2021, Tab. 2). Putting the guarantees for the ROOT KT and TARGET KT
together (and taking the minimum of the two) yields the guarantee for KT+.
IMQ kernel The TARGET KT guarantee follows by putting together the covering bound Prop. 3(c)
and the MMD bounds (6).
For the ROOT KT guarantee, we use a square-root dominating kernel krt IMQ(ν0, γ0) Dwivedi &
Mackey (2021, Def.2) as suggested by Dwivedi & Mackey (2021). Dwivedi & Mackey (2021,
Eqn.(117)) shows that krt is always defined for appropriate choices of ν0, γ0. The best ROOT KT
guarantees are obtained by choosing largest possible ν0 (to allow the most rapid decay of tails), and
Dwivedi & Mackey (2021, Eqn.(117)) implies with ν < d, the best possible parameter satisfies
V ≤ d + 2. For this parameter, some algebra shows that max(R[ ORk t / -d,ν,γ n1/2v, leading
to a guarantee worse than n- 1, so that the guarantee degenerates to n- 1 using Rem. 2 for ROOT
KT. When V ≥ d, we can use a MATERN kernel as a square-root dominating kernel from DWivedi
& Mackey (2021, Prop. 3), and then applying the bounds for the kernel radii (17), and the inflation
factor (19) for a generic Matern kernel from Dwivedi & Mackey (2021, Tab. 3) leads to the entry for
the root KT stated in Tab. 2. The guarantee for KT+ follows by taking the minimum of the two.
MATERN kernel For TARGET KT, substituting the covering number bound from Prop. 3(b) in (6)
with R = log n yields the MMD bound of order

log n∙(log n)d∙n2 bν- 2C
n
(53)
which is better than n- 1 only when V > 3d∕2, and simplified to the entry in the Tab. 3 when we
assume V - d is an integer. When V ≤ 3d/2, we can simply use baseline as i.i.d. thinning to obtain
an order n- 1 MMD error as in Rem. 2.
The ROOT KT (and thereby KT+) guarantees for V > d follow from Dwivedi & Mackey (2021,
Tab. 2).
When v ∈ (d, d], we use POWER KT with a suitable a to establish the KT+ guarantee. For
MATERN(v,γ) kernel, the a-power kernel is given by MATERN(αv,γ) if av > d (a proof of
this follows from Def. 2 and Dwivedi & Mackey (2021, Eqns (71-72))). Since LAPLACE(σ) =
MATERn(d++1 ,σ-1), we conclude that its a-power kernel is defined for a > d^ɪ. And us-
ing the various tail radii (17), and the inflation factor (19) for a generic Matern kernel from
Dwivedi & Mackey (2021, Tab. 3), we conclude that Ma -d,kα,δ ，log n log log n, and
max(Rkα,nRkα,n) -d,k。log n, so that Rmax = Od,k° (logn) (18) for SUBEXP P setting. Thus
for this case, the MMD guarantee for √n thinning with POWER KT (tracking only scaling with n)
is
(2m kkak∞)2α (2 ∙ Ma)1-2α(2+ JrnS2 ∙ Rm ax ∙ Ma)"
-d,kα,δ ( √n ) 2α (Vcnloin )1-2α YQog n) d + 2 √cn) 1 -1 = ( cn(log nn1+2d(1 α) ) 4α
where cn = log log n; and we thus obtain the corresponding entry (for KT+) stated in Tab. 3.
sinc kernel The guarantee for TARGET KT follows directly from substituting the covering num-
ber bounds from Prop. 3(d) in (6).
29
Published as a conference paper at ICLR 2022
For the root KT guarantee, we note that the square-root kernel construction of Dwivedi & Mackey
(2021, Prop.2) implies that SINC(θ) itself is a square-root of SINC(θ) since the Fourier transform
of sinc is a rectangle function on a bounded domain. However, the tail of the sinc kernel does
not decay fast enough for the guarantee of Dwivedi & Mackey (2021, Thm. 1) to improve beyond
the n-4 bound of DWiVedi & Mackey (2021, Rem. 2) obtained when running ROOT KT with i.i.d.
baseline thinning.
In this case, TARGET KT and KT+ are identical since krt = k.
B-spline kernel The guarantee for TARGET KT follows directly from substituting the coVering
number bounds from Prop. 3(d) in (6).
For B-SPLINE(2β + 1, γ) kernel, using arguments similar to that in DwiVedi & Mackey (2021,
Tab.4), we conclude that (up to a constant scaling) the α-power kernel is defined to be B-SPLINE(A+
1, Y) whenever A，2αβ + 2a - 2 ∈ 2N0. For odd β we can always take α = 2 and B-SPLINE(β +
1, γ) is a Valid (up to a constant scaling) square-root kernel (DwiVedi & Mackey, 2021). For eVen
β, we have to choose a，β+1 ∈ (1, 1) by taking P ∈ N suitably, and the smallest suitable choice
is p = dβ-1 e = β2 ∈ N, which is feasible as long as β ≥ 2. And, thus B-SPLINE(β + 1,γ)
is a suitable kα for B-SPLINE(2β + 1) for even β ≥ 2 with α = 2β++2 ∈ (2, 1). Whenever the
α-power kernel is defined, we can then apply the various tail radii (17), and the inflation factor (19)
for the power B-spline kernel from Dwivedi & Mackey (2021, Tab. 3) to obtain the MMD rates
for power KT from Dwivedi & Mackey (2021, Tab. 2) (which remains the same as root KT upto
factors depending on α and β).
The guarantee for KT+ follows by taking the minimum MMD error for target KT and root KT
for even β, and α-POWER KT for odd β.
30