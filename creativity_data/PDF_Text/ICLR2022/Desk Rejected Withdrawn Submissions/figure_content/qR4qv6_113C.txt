Figure 1: Initialized wavelet filters pre and post-training. Real part of Morlet wavelet filters ini-tialized with tight-frame (left) and random (right) schemes before (top) and after (bottom) training.
Figure 2:	Parametric scattering network learns dataset specific filters. The graph (top right)shows the filterbank distance over epochs as the filters are trained on different datasets. We visualizedataset specific parameterizations of scattering filterbanks (border colors from the legend) in Fourierspace. Scattering filters optimized for natural (CIFAR-10) and medical image (COVIDx CRX2)become more orientation-selective, i.e., thinner in the Fourier domain. On the other hand, filtersoptimized for texture discrimination (KTH-TIPS2) become less orientation-selective and deviatemost from a tight-frame setup.
Figure 3:	Normalized distances between scattering representations of an image and its defor-mation. Our parametric scattering transform shares similar stability to deformations as the scatteringtransform.
Figure 4: Filters trained on 1188 samples of COVIDx-CRX2 for 500 epochs, the first, third, fifth, andseventh rows correspond to filters optimized from a tight-frame, while the second, fourth, sixth, andeighth rows correspond to tight-frame initialized filters. The filters are displayed in pairs correspondto the ’closest’ (by our distance metric defined above) filters of both types. For instance, the firstfilter of row one matches the first filter of row 2.
Figure 5: Filters trained on 1188 samples of COVIDx-CRX2 for 500 epochs, the first, third, fifth, andseventh rows correspond to filters optimized from a tight-frame, while the second, fourth, sixth, andeighth rows correspond to tight-frame initialized filters. The filters are displayed in pairs correspondto the ’closest’ (by our distance metric defined above) filters of both types. For instance, the firstfilter of row one matches the first filter of row 2. The filters are displayed in increasing order of theirdistances. The top left corner corresponds to the filters that changed the least from their initialization,while the filters in the bottom right corner changed the most.
Figure 6: Filters trained on 1188 samples of KTH-TIPS2 for 500 epochs, the first, third, fifth, andseventh rows correspond to filters optimized from a tight-frame, while the second, fourth, sixth, andeighth rows correspond to tight-frame initialized filters. The filters are displayed in pairs correspondto the ’closest’ (by our distance metric defined above) filters of both types. For instance, the firstfilter of row one matches the first filter of row 2.
Figure 7: Filters trained on 1188 samples of KTH-TIPS2 for 500 epochs, the first, third, fifth, andseventh rows correspond to filters optimized from a tight-frame, while the second, fourth, sixth, andeighth rows correspond to tight-frame initialized filters. The filters are displayed in pairs correspondto the ’closest’ (by our distance metric defined above) filters of both types. For instance, the firstfilter of row one matches the first filter of row 2. The filters are displayed in increasing order of theirdistances. The top left corner corresponds to the filters that changed the least from their initialization,while the filters in the bottom right corner changed the most.
Figure 8: Filters trained on 1190 samples of CIFAR-10 for 500 epochs, the first and third, rowscorrespond to filters optimized from a tight-frame, while the second and fourth rows correspond totight-frame initialized filters. The filters are displayed in pairs correspond to the ’closest’ (by ourdistance metric defined above) filters of both types. For instance, the first filter of row one matchesthe first filter of row 2.
Figure 9: The graph shows the filterbank distance over epochs as the filters, initialized from randominit, are trained on different datasets. To the left, we visualize dataset specific parameterizations ofscattering filterbanks in Fourier space. The graph on the right shows that the randomly initializedfilterbanks become more similar to a tight frame during training.
Figure 10: Example of equivariant filters initialized using tight frame construction (Top) Real partof wavelet filters before optimization (Bottom) Real part of wavelet filters after optimization.
Figure 11: Example of equivariant filters initialized randomly (Top) Real part of wavelet filtersbefore optimization (Bottom) Real part of wavelet filters after optimization.
Figure 12: Normalized distances between scattering representations of an image and its defor-mation. (Top Left) Custom 1 Transformation. (Top Right) Custom 2 Transformation. (Bottom)Shear.
