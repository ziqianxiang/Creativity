Figure 1:	The Jiminy Cricket environment evaluates text-based agents on their ability to act morallyin complex environments. In one path the agent chooses a moral action, and in the other three pathsthe agent omits helping, steals from the victim, or destroys evidence. In all paths, the reward is zero,highlighting a hazardous bias in environment rewards, namely that they sometimes do not penalizeimmoral behavior. By comprehensively annotating moral scenarios at the source code level, weensure high-quality annotations for every possible action the agent can take.
Figure 2:	Rewards are biased towards indifference to, or even incentivizing, immoral behavior. Fromleft to right: The agent kills a lizard in a gruesome manner and is rewarded for it. The agent helps outan old man but is not rewarded for it. The agent tries to injure a butler by blowing pepper in his faceand is not punished for it. The agent receives the same punishment for torturing and ruffling leaves.
Figure 3:	Our framework for annotating scenarios in Jiminy Cricket. The framework is designed tocapture pro tanto judgements about moral valence and ordinal degree. For example, murder is usuallybad, and murder is usually worse than theft. Hence, murder and theft are annotated as immoral withdegrees 3 and 2 respectively. By annotating games with our framework, we improve consistencyand limit subjectivity to its design, which integrates moral precedents from deontology, virtue ethics,ordinary morality, and utilitarianism.
Figure 4:	Our proposed method, Commonsense Morality Policy Shaping (CMPS). Moral knowledgefrom a classifier trained on ETHICS is combined with standard Q-learning to obtain a shaped policythat is robust to noise in fimmoral and takes fewer immoral actions.
Figure 5: CMPS reduces Immorality throughout training without competency trade-offs.
Figure 6: Performance of agents at various interac-tion budgets. CMPS yields an improved trade-offcurve.
Figure 7: Performance of agents at various interaction budgets on the four categories of annotation inJiminy Cricket. Compared to the baseline CALM agent, CMPS reduces self-harm and harm to others.
Figure 8: Performance of converged agents within episodes. On average, CMPS reduces Immoralityat every step within an episode. Human Expert accrues Immorality more quickly, but has much lowerRelative Immorality (see Table 2 in the main paper). Both CALM and CMPS attain most of theirenvironment reward early on, with diminishing returns towards the end of their interaction budget.
Figure 9: ROC curves for models trained on dif-ferent tasks from the ETHICS benchmark. We usethese models as sources of moral knowledge forconditioning agents, and we evaluate them here ontheir ability to identify immoral actions along thehuman expert walkthroughs. The commonsensemorality model identifies immoral actions more re-liably, mirroring the results in Table 3 of the mainrate of 10% on this dataset. These thresholds are0.39 for the commonsense morality model and-1.92 for the utilitarianism model. For simplic-ity, we reuse these thresholds in all non-oracle paper.
Figure 10: An example interaction from Ballyhoo demonstrating the morality annotations in JiminyCricket. Annotations follow the 4-dimensional vector format described in Appendix C, where thefirst dimension denotes harm caused to the environment or to other actors. When the agent takes theaction “get glasses”, this is an instance of attempted theft, which goes unpunished by the game. Onestep later, the agent enters a restricted area of the circus, which also goes unpunished. In both cases,Jiminy Cricket,s comprehensive morality annotations catch the immoral action.
Figure 11: An example interaction from Borderzone demonstrating the morality annotations in JiminyCricket. Annotations follow the 4-dimensional vector format described in Appendix C, where thefirst dimension denotes harm caused to the environment or to other actors. When the agent takes theaction “topple cart”, this is an instance of property damage, which goes unpunished by the game butis caught by Jiminy Cricket,s morality annotations.
Figure 12: An example visualization of the starting state of Zork 2, demonstrating a use case of JiminyCricket’s complete object tree. Nodes indicate rooms, and edges indicate connections between rooms.
Figure 13: An example object tree entry from the game Seastalker, comparing the information thatJericho obtains from emulator memory to the information in Jiminy Cricket’s complete object tree.
Figure 14: A sample of annotated source code from The Lurking Horror. The highlighted boxcontains a unique identifier that links to the corresponding morality label. The annotation triggerswhen the agent smashes a window with a weapon, causing permanent damage. Per our annotationframework, this receives a hNegative, Others, 2i annotation, since it is an instance of property damage.
