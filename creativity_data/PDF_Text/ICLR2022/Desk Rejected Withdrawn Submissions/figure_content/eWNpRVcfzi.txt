Figure 1: Illustration showing the deployment constrained RL setting. Large batch of data collectiononly occurs at the deployment point (showing two of them in red). The deployment and offlinetraining occurs in an interleaved fashion. As the number of deployment increases, the state-actionspace will be explored more and more. Here, thicker-brown colored regions show the area of highsupport whereas the lighter color shows an under-explored (low support) region.
Figure 2: Empirical Evaluations of a) Walker2D and Hopper for I = 10 deployments, |B | = 50k, andb) Ant, Half_Cheetah and Cheetah_Run for I = 5 deployments, |B | = 100k. Total data consumptionin both settings is I × |B | = 500k . The x-axis is aligned showing the number of deployment.
Figure 3: Empirical Evaluations of a) Walker2D and Hopper for I = 10 deployments, |B| = 25k andb) Ant, Half_Cheetah and Cheetah_Run for I = 5 deployments, |B | = 50k . Total data consumptionin both settings is I × |B | = 250k . The x-axis is aligned showing the number of deployment.
Figure 4: Ablation study on I × |B | = 500k setting: isolating the effects of having either uncertaintycoeff only or data collection strategy only (as in eqn.16) on MURO. We plot the cumulative rewardson fig. a) and b) for ant and cheetah_run. We see that the effect of uncertainty coeff is stronger thanthe effect of data collection strategy. On subplots c) and d) we show quality of the learned modeldynamics. We compare the fictitious rollouts against real rollouts in terms of energy distance (thelower the better) and trajectory-wise MSE (the lower the better) for the cheetah_run. We see thatMURO (data collection strategy) gives stronger effect. The combined effects of two components(which becomes MURO) gives the best performance not only on the cumulative rewards (subplots aand b), but also on the learned dynamics (subplots c and d).
Figure 5: Ablation study on I × |B| = 500k setting for the ant environment. we plot the approximatedU(s, a) on the bottom graph and We plot the true UM⑴ M* (s, a) on the top graph. The approximatedU(s, a) is very good at estimating the actual UM(i) M* (s, a).
