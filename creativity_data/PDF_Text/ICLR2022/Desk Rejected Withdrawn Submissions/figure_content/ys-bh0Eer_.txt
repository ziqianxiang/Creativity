Figure 2: Proposed ZeUS algorithm. The components shown in green (i.e. observation encoder, con-text encoder, dynamics model and reward model) are shared across tasks. Components/representationsin red or blue belong to separate tasks.
Figure 3: We compare the performance of the proposed ZeUS algorithm with CaDM, UP-OSI, Hy-perDynamics and ZeUS-no-context-loss algorithms on the heldout evaluation environments (extrapo-lation) for four families of tasks with different dynamics parameters.
Figure 4: (a), (b): We compare the performance of the proposed ZeUS algorithm with CaDM, Hyper-Dynamics ,ZeUS-no-bisim and Meld algorithms on environments with different reward functions. (c):Illustration of the Sawyer-Peg-V0 task.
Figure 5: Norm of pairwise differences of contexts for differenttasks for Cheetah-Run-v0 setup when trained with context loss (left)and without context loss (right).
Figure 6: The performance of all the al-gorithms (on Cheetah-Run-v1) degradesas we move away from the training dis-tribution.
Figure 7:	Variation inCheetah-Run-v0 tasks.
Figure 8: We Compare the performanCe of the proposed ZeUS algorithm with CaDM, UP-OSI, Hy-perDynamics and ZeUS-no-context-loss algorithms on the training environments for four families oftasks with different dynamiCs parameters.
Figure 9: We Compare the performanCe of the proposed ZeUS algorithm with CaDM, UP-OSI, Hy-perDynamics and ZeUS-no-context-loss algorithms on the eValuation enVironments (interpolation)for four families of tasks with different dynamiCs parameters.
Figure 10: Performance of ZeUS on Cheetah-run-v0 task with varying values of the aggregationoperator in the context enocder (in (a)) and varying values of αψ in (b).
