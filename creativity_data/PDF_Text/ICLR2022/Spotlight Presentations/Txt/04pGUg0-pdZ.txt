Published as a conference paper at ICLR 2022
Finite-Time Convergence and Sample Com-
plexity of Multi-Agent Actor-Critic Rein-
forcement Learning with Average Reward
Hairi and Jia Liu	Songtao Lu
Department of Electrical and Computer Engineering IBM Research AI
The Ohio State University	IBM Thomas J. Watson Research Center
Columbus, OH 43210, USA	Yorktown Heights, NY 10598
hairi.1@osu.edu, liu@ece.osu.edu	songtao@ibm.com
Ab stract
In this paper, we establish the first finite-time convergence result of the actor-critic
algorithm for fully decentralized multi-agent reinforcement learning (MARL)
problems with average reward. In this problem, a set of N agents work coop-
eratively to maximize the global average reward through interacting with their
neighbors over a communication network. We consider a practical MARL set-
ting, where the rewards and actions of each agent are only known to itself, and the
knowledge of joint actions of the agents is not assumed. Toward this end, we pro-
pose a mini-batch Markovian sampled fully decentralized actor-critic algorithm
and analyze its finite-time convergence and sample complexity. We show that the
sample complexity of this algorithm is O(N2/e1 2 log(N∕e)). Interestingly, this
sample complexity bound matches that of the state-of-the-art single-agent actor-
critic algorithms for reinforcement learning.
1 Introduction
1) Background and Motivations: In recent years, multi-agent reinforcement learning (MARL)
has found a wide range of applications in networked large-scale systems, such as power grid sys-
tems (Riedmiller et al., 2000), autonomous driving (Yu et al., 2019; Shalev-Shwartz et al., 2016)
and strategic games (Silver et al., 2018; Foerster et al., 2018), to name just a few. Although em-
pirical successes of MARL applications have been widely observed, the fundamental theoretical
understanding of how to develop fast-converging and low sample-complexity MARL algorithms,
two of the most important performance metrics for MARL, remains in its infancy so far (see, e.g.,
(Zhang et al., 2021a) for an excellent survey). In particular, two important aspects of cooperative
MARL algorithm designs deserve special attention:
• First, in the multi-agent collaborative setting, the information structure (i.e., the assumptions of
who have the knowledge of what) is far more complex than its single-agent counterpart and care
must be taken in MARL problem formulations. In the cooperative MARL literature so far, many
existing works assume full knowledge of joint states and joint actions, which often do not hold
true in practice. For example, in autonomous driving (Yu et al., 2019), each vehicle can only
observe/detect the actions of the surrounding vehicles that are within its communication range.
As another example, in power grid networks (Riedmiller et al., 2000), each power distributor
generally does not know the resistor values set by other distributors.
• Second, most MARL theoretical studies in the MARL literature are focused on the discounted
total reward setting, where a hyperparameter γ ∈ (0, 1) is introduced as the discount factor in the
objective function. Although the discounted total reward setting captures the important aspect of
diminishing return in the future, it may not be appropriate for many other applications where the
long-term average reward is of interest. For example, in the optimization of distributed communi-
cation networks with MARL, the typical and natural performance metrics are long-term average
throughput or latency in the steady-state.
The lack of a fundamental understanding on how to develop efficient cooperative MARL algorithms
that consider the above two aspects in terms of information structure, scalability, and communication
1
Published as a conference paper at ICLR 2022
and sample complexities motivates us to fill this gap by developing a fully decentralized cooperative
MARL algorithm in the average reward setting, without assuming joint action knowledge.
2)	Technical Challenges: Developing a fully decentralized cooperative MARL algorithm for the
average reward setting without full joint action knowledge is highly non-trivial and several major
technical challenges naturally arise. First, it is well-known that, even in the single-agent reinforce-
ment learning (RL) setting, the average reward setting is more challenging to analyze compared to
the discounted reward setting, which necessitates different proof techniques (Tsitsiklis & Van Roy,
1999). In MARL, the decentralized nature and the lack of joint action-state information further
complicate the algorithm design and analysis in the average reward setting. Second, due to the lack
of joint action knowledge, the communication costs among agents in MARL will be significantly
increased to achieve a satisfying performance, which implies that low sample and communication
complexities are even more challenging and critical for MARL without joint action information.
3)	Main Results and Contributions: The main contribution of this paper is that we overcome the
aforementioned challenges and develop a consensus-based Markovian sampled decentralized actor-
critic algorithm for MARL. Our key results in this paper are summarized as follows:
•	We propose a batch-sampled actor-critic algorithm that uses consensus updates in TD-sharing
among agents. This batch sampling approach enables more efficient communication compared
to the classical fully decentralized mArl. Specifically, in order to converge to an E neighbor-
hood of the stationary, We require O(E-I log(e-1)) rounds of communication while only needing
O(E-2 log(E-1)) samples. By contrast, the state-of-the-art MARL requires a communication
round per sampling. Also, our algorithm allows the use of constant step-sizes in both the actor
and the critic steps.
•	We provide the first-ever sample complexity analysis in the MARL average reward problem set-
ting without joint action information. Our obtained complexity is O(E-2 log(E-1)), where E is the
closeness to the neighborhood of stationary point (treating network size N as a fixed constant).
It is worth noting that the order-wise sample complexity of our algorithm matches that of the
state-of-the-art single-agent RL algorithms.
2 Related Work
In this section, we provide a quick overview on the closely related work on MARL algorithms and
their theoretical results, along with several notable related counterparts in single-agent RL.
1	) MARL Theoretical Analysis and Algorithm Design: For recent advances in MARL algorithms
and their theoretical results, Zhang et al. (2021a) provided a comprehensive survey. Also, Lee et al.
(2020) highlighted the evolution from single-agent to multi-agent RL from a distributed optimization
perspective. In the broader area of MARL, a line of research has been focused on the MARL policy
evaluation problem. These works analyzed the convergence Doan et al. (2019) and proposed vari-
ous variance reduction of policy evaluation in decentralized MARL algorithms Zhang et al. (2021b).
Doan et al. (2019) used i.i.d. sampling and has shown the sample complexity of O(ET) for their
TD(0) learning algorithm to reach a mean-square error convergence. However, these algorithms do
not involve policy improvement and solely focus on the performance evaluation of given policies. In
the areas of joint policy evaluation and improvement, Foerster et al. (2018) considered multi-agent
actor-critic algorithm that has a centralized critic and decentralized actors, which is different from
our fully decentralized actor-critic algorithm. In contrast, Zhang et al. (2018) established asymp-
totic convergence results for fully decentralized MARL actor-critic algorithms. Concurrent with
our work, Chen et al. (2021) has recently studied the mini-batch Markovian sampling actor-critic
algorithm for a class of discounted reward MARL problems, where the finite-time convergence re-
sult is obtained. They have applied batch sampling for both actor and critic steps and achieved a
sample complexity of O(E-2 log(E-1)), which is the same as ours. We note that, together with our
work, these are the first finite-time convergence results for MARL. However, there are several key
differences between our work and (Chen et al., 2021). First, we focus on the average reward prob-
lem, while Chen et al. (2021) studied the discounted reward setting. Second, in (Chen et al., 2021),
agents share a noisy version of the rewards with the neighbors, which requires a re-sampling process
from every sampled reward instance. In contrast, we allow agents to share local TD-errors with their
neighbors and no re-sampling is required.
2
Published as a conference paper at ICLR 2022
Table 1: Comparison of sample complexity of single-agent (SA) and multi-agent (MA) AC algo-
rithms and TD(0) algorithms at Average Reward (AR) and Discounted Reward (DR) settings.
Paper	Problem	Sampling		Sample Complexity
		actor step	critic step	
Qiu et al. (2021)	SAAR	i.i.d.	Markovian	O(e-3log2 (I1))
-Xu et al. (2020)	SADR	Markovian	Markovian	O(e-2 log(e-1F-
'Zhangetal.(2018)	MAAR	Markovian	Markovian	Asymptotic
Doan et al. (2019)	MADR	N/A	i.i.d	O(L)
Chen et al. (2021)	MADR	Markovian	Markovian	O(e-2log(eT)Γ~
This paper	MAAR	Markovian	Markovian	O(N2∕e2 log(N∕e))
2	) Related Literature in Single-Agent RL: We note that single-agent RL can be viewed as a
centralized approach, where a central controller collects joint actions, rewards and even designs
policies for agents. For the single-agent average reward setting, Tsitsiklis & Van Roy (1999) first
analyzed the asymptotic convergence of TD(λ) algorithm with function approximations in the policy
evaluation problem. Also, Tsitsiklis & Van Roy (2002) provided insights in terms of differences and
connections between average reward and discounted reward of TD-based learning algorithms with
function approximations. Recently, Qiu et al. (2021) analyzed the sample complexity for an actor-
critic algorithm for the average reward problem. In their actor-critic algorithm, they used batch
sampling for the critic learning and i.i.d. sampling for the actor step, with sample complexity being
O(e-3 log2(e-1)). By applying mini-batch sampling update, We are able to improve the sample
complexity by a factor of O(ET). Another closely related work on single-agent RL is (XU et al.,
2020), Where the authors studied the discounted reWard problem. They used batch sampling for both
actor and critic steps in their actor-critic algorithm and developed a new technique to handle bias
error in the critic step, which we also adopted for the average approximation parameter analysis in
our critic step. This achieved the state-of-the-art sample complexity of O(E-2 log(E-1)) for single-
agent RL. In addition, the global convergence of actor-critic algorithm to the optimal policy has
been studied in the case of discounted setting with single time scale in (Fu et al., 2020) and linear
quadratic regulator in (Yang et al., 2019). However, we note that these settings are fundamentally
different from the average reward setting and it will be an interesting future direction to consider
global convergence possibility in the average reward setting.
To conclude this section, we summarize the aforementioned related actor-critic and TD algorithms
and their sample complexity results in Table 1.
3	Multi-Agent Reinforcement Learning with Average Reward
3.1	System Model
Consider a multi-agent system with N agents, denoted by N = {1,…，N}, operating in a net-
worked environment. Let E be the edge set for a given network G = (N, E). To formulate our
MARL problem and facilitate our subsequent discussions, we first define the notion of networked
multi-agent MDP as follows.
Definition 1 (Networked Multi-Agent MDP). Let G = (N, E) be a communication net-
work that connects N agents. A networked multi-agent MDP is defined by following tuple
(S, {Ai}i∈N , P, {Ri}i∈N , G), where S is the global state space observed by all agents, Ai is the
action set for agent i, and P : S × A × S → [0, 1] is a global state transition function, and Ri : S × A
is the local reward function for agent i. Let A = "i∈N Ai be the joint action set of all agents.
In this paper, we assume that the global state space S and action space for agent Ai are finite. As
a result, the joint action space A is also finite for finite N. We also note that at time t ≥ 0, all
agents can observe the current global state st . However, agent i can only observe its own action
ait ∈ Ai, which is the key difference between our model and that in (Zhang et al., 2018), where itis
assumed that the joint actions are observable to all agents. Moreover, each agent can only observe
its own reward rti, i.e., agents do not observe or share rewards with other agents at time t. The
3
Published as a conference paper at ICLR 2022
reward function Ri (s, a) is an expectation given s and a, and the instantaneous reward is denoted
by ri(s, a), i.e., Ri(s, a) = E[ri (s, a)].
We consider policies that are stationary. In our MARL system, each agent chooses its action follow-
ing its local policy πi that is conditioned on the current global state s, i.e., πi (ai | S) is the probability
for agent i to choose an action ai ∈ Ai. Then, the joint policy π : S × A → [0, 1] can be written as
π⑷S) = Πi∈N πi(ai|s).
Moreover, the policies at the agents are parameterized. Specifically, each agent i’s local policy can
be written as ∏i, where θi ∈ Rmi denotes the parameter. We let θ = [(θ1)T,…，(θN)T]T ∈
r£ N=ι mi. Then, We can write the joint policy as follows: ∏ (a|s) = ∏i∈N ∏θi (ai∣s).
3.2	Technical Assumptions
We now state the following assumptions on the positivity and continuity of πθi i (ai |S), which guar-
antee the stationary distribution of {St} under any given policy.
Assumption 1. For any i ∈ N, S ∈ S, ai ∈ Ai and θi ∈ Rmi, the policy function ∏i(ai∣s) ≥ 0.
Also, πθii (S, a) is a continuously differentiable with respect to the parameter θi. In addition, for
any θ, we assume the induced Markov chain {St }t≥0 is irreducible and aperiodic, and its transition
matrix Pθ is Pθ(SIS) = Ea∈∕ ∏θ(a|s) ∙ P(s‘|s, a),	∀s, s’ ∈ S.
Assumption 1 guarantees that the states have a stationary distribution dθ(S) over S given any policy
πθ. As a result, the Markov chain of state action pair {(St, at)} also has a stationary distribution
dθ(s) ∙ ∏θ(a∣S).
Assumption 2. The instantaneous reward rti is uniformly bounded by a constant rmax > 0 for any
i ∈ N and t ≥ 0.
Assumption 2 is common in the literature (see, e.g., (Zhang et al., 2018; Xu et al., 2020; Doan et al.,
2019)) and easy to be satisfied in many practical MDP models with finite state and action spaces.
Assumption 3. Let A be a consensus weight matrix for a given communication network G . There
exists a positive constant η > 0 such that A ∈ RN ×N is doubly stochastic and Aii ≥ η, ∀i ∈ N.
Moreover, Aij ≥ η if i, j are connected, otherwise Aij = 0 for all i, j .
Assumption 3 is standard in the distributed multi-agent optimization literature Nedic & Ozdaglar
(2009). We remark that for a practical choice of A, one can use the following form A =
deg(G)(deg(G) ∙ I - L), where deg(G) is the degree of the graph G (i.e. the maximal vertex de-
gree), I is the identity matrix of conforming dimensionality, and L is the Laplacian matrix of the
graph. It is easy to verify that this matrix is symmetric, doubly stochastic and η ≥ deg(G) ≥ 得.
Assumption 4. Each agent i’s value function is parameterized by the class of linear functions, i.e.,
Vθ(s; W) = Φ(s)tW where Φ(s) = [Φi(s),…，φκ(s)]t ∈ RK is the feature associated with the
state S ∈ S and K < |S|. The feature vectors φ(S) are uniformly bounded for any S ∈ S. Without
loss of generality, we assume that ∣∣Φ(s)∣∣ ≤ 1. Furthermore, the feature matrix Φ ∈ RlSl×K has
full column rank. Also, for any u ∈ RK, Φu = 1, where 1 is an all-one vector.
This assumption on features is standard and has been widely adopted in the literature, e.g.,
(Tsitsiklis & Van Roy, 1999; Zhang et al., 2018; Qiu et al., 2021). This assumption implies the fol-
lowing property: for any policy πθ, the inequality WTAπθW < 0 holds for any W = 0, where Aπθ is
defined as
A∏θ := Es~dθ(s),s'~P(Ts) [(Φ(S′) - Φ(s))Φt(s)].	(1)
This property further implies that for all θ, Aπθ is invertible and λmax(Aπθ + AπTθ) < 0 (Qiu et al.,
2021), where λmaχ(∙) is the largest eigenvalues of the matrix.
Assumption 5. There exists a constant λA > 0 such that λmax(Aπθ + AπTθ) ≤ -λA holds for all
θ ∈ REi∈N mi.
Assumption 5 ensures the optimal approximation wθ for any given policy ∏ is uniformly bounded
(see discussion before Theorem 2 and Lemma 4).
4
Published as a conference paper at ICLR 2022
Assumption 6. Let ψθ (s, a) = Vθ log ∏θ (a|s) be the score function for any state-action pair (s,a).
For any two policy parameters θ, θ′ ∈ R i∈N mi, and any state-action pair (s, a) ∈ S×A, there exist
positive constants such that the following hold: 1): ^ψθ(s,a)∣∣ ≤ Cψ; 2): ∣∣Vθ J(θ) -V J(θ')∣∣ ≤
LJ∣∣θ - θ'∣∣; where J(θ) is defined in (2) and ∣∣ ∙ ∣∣ denotes the l2-norm.
Assumption 6 says that the score function is uniformly bounded for any policy and the gradient of
the objective function has a Lipschitz property with respect to the policy parameter. This assumption
has also been adopted in the analysis of the single-agent actor-critic algorithm in (Qiu et al., 2021).
We note that for the discounted reward problem, this gradient Lipschitz property can be guaranteed
through (Xu et al., 2020, Assumption 2). We note that Assumption 6 can be satisfied by the class of
soft-max policy under the Assumption 1, as in (Guo et al., 2021).
3.3	The Objective Function
The goal of the agents is to find a joint policy πθ to maximize the global average long-term reward.
Mathematically, this can be written as:
maximizeθ
J⑹=T1 * * *→∞ T E(I-I N E ri+j= Edθ(S) ^E ∏θ(a|s) ∙ R(Si a), (2)
t=0	i∈N	s∈S	a∈A
where R(s, a) = N Ei∈N Ri(s, a) is the global average reward function. Let 尸t = Nn Ei∈N ri,
then We have R(s,a) = E[ft+1∣st = s, at = a]. Next, We define the state-action value
function: Q§(s,a) = E[E∞=0尸t+1 — J(θ)∣so = s,ao = a,∏θ], and the state value function
Vθ(s) = Ea∈∕ Qθ(s, a) ∙ ∏θ(a|s). The advantage function is defined as follows:
Advθ (S, a) = Qθ (S, a) - Vθ (S).
(3)
3.4	Policy Gradient Theorem
The gradient of a policy πθ for decentralized policy gradient is stated in the following theorem.
Theorem 1 (Policy Gradient Theorem for MARL (Zhang et al., 2018)). For any θ, let πθ : S × A →
[0, 1] be a policy and let J(θ) be the global average long-term average return defined in (2). Then,
the gradient of J(θ) with respect to parameter θi can be computed as:
Vθi J(θ) = Es〜dθ,a〜∏θ[Vθi log∏θi(ai|s) ∙ Adv®(s,a)].	(4)
4	A Consensus-Based Actor-Critic Algorithm
In this section, we propose a consensus-based actor-critic algorithm that includes two key steps:
actor and critic. In the critic step, the algorithm evaluates the value functions for the policy πθt at
time t. After the critic step, the algorithm enters the actor step, which improves the policy parameter
θt according to the direction from policy gradient as shown in Theorem 1. In both steps, we use
constant step-sizes and adopt batch sampling.
In this paper, we use linear function approximations for the value functions. Specifically, each agent
i has a parameter wi ∈ RK to approximate the global value functions Vθ(s; wi) for each state s ∈ S.
For linear approximation, we have Vθ(s; wi) = φ(s)Twi, where φ(s) ∈ RK denotes the feature for
state s. As a result, the gradient of value function at state s with respect to approximation parameter
wi is φ(s), i.e. Vw Vθ (s; wi) = φ(s).
1) The Critic Step: The critic step is achieved through its own oracle, which is summarized in
Algorithm 1. In the critic step, we allow the agents to communicate the approximation parameters
w(s) with their neighbors via the communication network with consensus weight matrix A. For
agent i ∈ N , the parameter is locally updated by following rules:
μk,τ+1 = (I- β)μk,τ + βrk,τ+ι	⑸
δk,τ = rk,τ+1 - μk,τ+φT (sk,τ+ι)wk - φT ISk,τ )wk	⑹
5
Published as a conference paper at ICLR 2022
1
2
3
4
5
6
7
8
9
10
11
12
13
Algorithm 1:	Mini-batch TD learning for Critic
Input : so, ∏θt, φ, step-size β, critic step iteration number K, critic batch size M, the
communication network A
for k = 0,…，Kc 一 1 do
sk,0 = sk-1,M ( when k = 0, sk,0 = s0);
for all i ∈ N do
for T = 0,…，M - 1 do
Execute action 小丁 〜∏θi(∙∣sk,τ)；
Observe the state sk,τ +1 and reward rki ,τ+1;
UPdate μk,τ+1 J (I - β) ∙ μk,τ + β ∙ rk,τ +1；
UPdate 碓k-rk,τ+ι- μk,τ+φT (sk,τ+I)Wk - φT (sk,τ)Wk;
end
Critic Step: Wk — Wk + MM EM-I δk,τ ∙ φ(sk,τ);
Consensus Update Wk+ι J Ej∈m A(i,j) ∙ Wk;
end
end
Output: sKc-1,M , WKc
β M -1
Wk = Wk + MM ∑ δk,τ ∙ φ(sk,τ),	⑺
τ=0
where β > 0 is the step-size of the critic step, μk T is the estimate of the long-term return of
agent i, and δki ,τ is the local TD-error for agent i at iteration k using sample τ. Here, in each
iteration k in the critic step, the approximation parameter is locally updated through a batch of
sampling as in (7), where the batch size is M . Then, agent i will further update the approximation
parameter Wi through a weighted average of its local and neighboring agents’ parameters as follows:
Wk +ι = Ej∈w A(i,j)Wk. This batched sampling update continues for Kc iterations for each given
policy πθt .
2) The Actor Step: As shown in Theorem 1, the advantage function needs to be known to compute
the gradient. However, from the definition in (3), the joint action a also has to be known to compute
the advantage function, whereas in our model, each agent can only observe its own action. As a
result, an estimation of the advantage function is required. Here, we show that the global TD-error
is an unbiased estimate of the advantage function.
At time t, suppose we have samples st, at, st+1 and the rewards {rti+1}i∈N then the advantage
function is as follows: Adv®(St, at) = E[尸t+ι - J(θ) + Vθ(St+ι) - Vθ(st)∣st, at], and the global
TD-error can be computed as follows: δt = rt+ι - μt + V®(st+ι) - V®(st), where μt+ι = (1 -
α) ∙ μt + α ∙尸t+ι is the estimate for the average long term return, and a is the step-size for the actor
step. Hence, We have that the expected global TD-error is the advantage function, i.e., E[δt∣st, at]=
A®(st, at). Thus, we can use this global TD-error as an unbiased estimate of the advantage function.
For agent i, the local TD-error can be computed as δt = rti+ι - μt + V®(st+ι) - V®(st), where
μt+ι = (1 - α)μt + αr^+ι. We also note that μt = N Ei∈N μt .
Thus, once each agent knows the global TD-error, the policy parameter can be updated according to
the policy gradient rule in (4). However, without any communication, each agent only has the knowl-
edge of its own local TD-error. Moreover, we will show that the networked TD-error is actually the
average of the local TD-errors. Specifically,
δt = rt+1 - μt + V®(St+ι) - V®(St) = N E ri+ι - N E μt + V®(St+ι) - V®(St)
Ni∈N	Ni∈N
=N E [ri+1 - μit + % (St+1) - % (St)] = N E δi.
Ni∈N	Ni∈N
6
Published as a conference paper at ICLR 2022
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
Algorithm 2:	Minibatch-TD sharing for Actor Critic Algorithm
Input : state feature matrix Φ, actor step-size a, Initial parameters θi for all i ∈ N
for t = 0,…，T 一 1 do
critic update: wt, st,0 = Minibatch-TD-critic in Algorithm 1;
for l = 0,…，B - 1 do
for all i ∈ N do
Execute action a； ?〜πθ i (Ml);
Observe the state st,l+1 and reward rti,l+1;
UPdate μt,l+ι J (1 - α) ∙ μt,l + α ∙ ri,ι+ι;
UPdate δt,ι J ri,ι + ι - μt,ι + φT (st,l+1)wt - φT (st,l )wi;
Update ψi,ι J Vθi log % (st,ι, ai,ι);
end
end
δ1,o	…δtN0
Let ∆o =	.	..	.	;
.	..
.δ1,B-1 …δtNB-1.
for i ∈ N do
for k = 0 : tgossip - 1 do
I ∆k+1Gi) J Σj∈Ni A(i,j) ∙ ∆k Cj);
end
end
for all i ∈ N do
Let δt,1B-1 = ∆tgossip(:，i) ;
ACtor Step: θi+ιJ θt+α ∑B-01 弟∙ ψi,ι ；
end
end
Output: θτ with T chosen uniformly from {1,…，T}
For any time t, the average of the local TD-errors is an unbiased estimate of the advantage function.
Therefore, we just need to let each agent communicate with its neighbors so that an average of all
local TD-errors can be reached or estimated for all agents.
From the results in (NediC & Ozdaglar, 2009), We have lim「→∞ AT(x1,…，XN)t =
N Et∈N χt1. However, this convergence is asymptotic, meaning that the exact estimation can
only be achieved with infinite iterations (i.e., τ → ∞). In practice, since one can only apply fi-
nite iterations, we use St to denote the estimate of the global TD-error maintained by agent i after
tgossip iterations of updates at time t, i.e., St = [Atgossip]t∆0, where ∆0 = (δ1,…，δN)t is the N-
dimension vector of local TD-errors at time t. We note that agents do not need to know the weight
information of other agents. Rather, each agent just needs to exchange updated estimate of the lo-
cal TD-errors with its neighbors for tgossip rounds as shown in Lines 11-16 of Algorithm 2. This
communication among agents is also done in a batch fashion, with batch size being B . This implies
that for each outer iteration t ∈{0 …，T - 1}, only tgossip rounds of communication for every B
samples are needed.
Combined with a B-batched Markovian sampling, the parameter θt update for agent i ∈ N can be
B-1
written as follows: θt+ι = θ∖ + B 2Zι=0 δt ι ∙ ψt ι where α is the step-size for the actor step and
ψtt,ι = Vθi logπθti(st,ι, att,ι) is the local score function for agent i using l-th sample at time t. The
actor step of our algorithm is illustrated in Algorithm 2.
7
Published as a conference paper at ICLR 2022
5 Theoretical Convergence Analysis
In this section, we present the convergence results for both the critic and actor steps in Theorems 2
and 3, respectively. Due to space limitation, we relegate the proofs to the supplementary material.
5.1 Convergence Analysis for Critic (Algorithm 1)
For a given policy	∏θ,	We define	b∏θ	=	Es~d@,a~∏g[φ(s)(r(s,a)	-	J(θ))],	where	r(s,a)	=
Nn Ei∈N ri(s, a) and J(θ) are as defined in (2). For all agents, the optimal solution (WU et al.,
2020), (QiU et al., 2021) of this critic learning is wθ = -A-Ib∏θ , where A∏θ is defined as in (1).
The invertiblity of Aπθ is due to the Assumptions 1 and 4 (see more details in (Qiu et al., 2021;
Tsitsiklis & Van Roy, 1999)). Then, the convergence of the critic step is sUmmarized as follows:
Theorem 2 (Convergence and Sample Complexity of the Critic). Suppose that Assumptions 1-5
hold. For any given policy πθ, consider the iteration generated by Algorithm 1. Recall the definition
of λA in the Assumption 5 and let β < min{ 2(1—岂尺—1), 覆, 吉}∙ I then follows that:
N
E[£ l∣wKc - wθIl2] ≤ KN4γ2Kc + κ2'N6β2 +κ3N5γKcβ
i=1
+ 2N(I —8Ae)Kc||wo - wθ||2 + mmN	⑻
where Y := (1-ηN-1)∙(1+2β) < 1 and κ1, κ2', κ3, κ4 are positive constants. Ifwefurther let Kc ≥
2 max{logγ-1 ^N- ,log(i-λA β)-ι 12N ||w； wθ ||2 }, β ≤ min{ N ^K2, 2(1-ηN-1) , λA, λ4A }
and M ≥ 6κ4N, then we have E[EN=ι ||wKC — wθ∣∣2] ≤ E for all i ∈ N with total sample
complexity given by KcM = O(N log(N)).
Theorem 2 establishes a convergence resUlt for the policy evalUation of a given policy πθ . We can
see that oUr constant step-size batch-sampled critic process can achieve the same complexity of
O(E-1) order-wise as the TD(0) learning in Doan et al. (2019), where diminishing step-sizes were
Used. On the other hand, in the single agent average reward setting of QiU et al. (2021), there exists
a non-vanishing error term in their critic convergence. In contrast, with proper choices of iteration
nUmber Kc and batch size M, oUr mean-sqUare error can be arbitrarily small.
5.2 Convergence Analysis for Actor-Critic Algorithm (Algorithm 2)
Define the approximation error introdUced by Using linear approximation in the critic step, ξacpriptircox =
maXθ∈Rfi∈N mi Es~dθ[∣V∏θ(S)-兀Μ(,)12]. For a given policy ∏θ, this error represents the gap
between groUnd trUth valUe fUnction Under sUch policy and the valUe fUnction obtained by the best
possible linear approximation. SUch an error term is standard in the literatUre where linear approx-
imations are adopted (QiU et al., 2021; XU et al., 2020). Let Rw, defined in Lemma 4, be an Upper
bound on ∣∣wθ∣∣ for all policy parameter θ.
Theorem 3 (Overall Convergence Rate and Sample Complexity). Suppose that Assumption 1-6
hold. Consider the actor-critic algorithm in Algorithm 2. Let SteP-Size α = 4lj. It then holds that:
E[∣∣Vθ J(θT)ll2] ≤16LTrmax + 72NEt=1 Ei=ITwi - wθt"2 + I8K3N3(1 - ηN-1)2tgossip
+ 72ξ需o + 288(rmax + Rw)2[1 + (2κ - 1)p] N,	(9)
B(1 - ρ)
where κ3 is a positive constant. Furthermore, let T ≥ 64LJrmax, B ≥ 576 (rmax+2Rw)-P)+(2"1)" N
and the communication round among the agents tgossip ≥ 2 log(1-ηN-i)-1 6*nN. Supposefor the
same setting as in Theorem 1 holds so that E[EN=ι IIwKC — w：||2] ≤ 2⅛N for all 0 ≤ t ≤
T, then we have E[∣∣Vθ J(θt)∣∣2] ≤ E + O(ξ，*。X), with a total complexity of (B + MKc)T =
O(Nr log(N)). And the communication COmPIexity is (Kc +1gossip)T = O(ɪ log(N)).
8
Published as a conference paper at ICLR 2022
(a) System size N = 6.
(b) System size N = 10.
Figure 1: Our TD-sharing algorithm vs classical MARL algorithm.
(c) System size N = 15.
Theorem 3 concludes the overall sample complexity of our proposed actor-critic algorithm. The
sample complexity of O(e-2 log(e-1)) matches the state-of-the-art single-agent actor-critic RL by
Xu et al. (2020) and the discounted MARL by Chen et al. (2021).
We note that the overall communication complexity also matches that of (Chen et al., 2021) in the
discounted reward setting. However, our work is still an improvement compared to the classical
MARL in Zhang et al. (2018) for the average reward setting. Specifically, Zhang et al. (2018) needed
a communication round after each sampling. By contrast, in this paper, we only need a communica-
tion round per O(e-1) sampling. This is thanks to the use of batch sampling in the actor step. Also
because of the batch sampling, we are able to use a constant step-size for both actor and critic steps.
Here, the overall communication cost is measured by the number of communication rounds rather
than the size of bits transmitted over the network. We follow the standard definition of communi-
cation complexity in the literature, which is widely adopted in the literature, see (Chen et al., 2018)
(Zhang et al., 2019). However, we note that tgossip, actor step batch size B and critic iteration rounds
Kc, scale with O(log 1/e), O(1/e) and O(log 1/e) respectively as indicated in the Theorem 3 and
2. The amount of information (in terms of bits) is (KcNK + BNtgOSSiP)T = O( N log N).
6	Experimental Results
In this section, we conduct experiments to compare our proposed consensus-based TD-sharing
MARL algorithm with the most related MARL algorithm 1 in Zhang et al. (2018) that also stud-
ied average reward. To our knowledge, this is the only work that is directly comparable to ours. The
key difference is that the knowledge of joint action is assumed in Zhang et al. (2018), but not in our
work. We vary the system size from N = 6, 10 to 15. The blue curve is our TD-sharing algorithm
and the red curve is classical MARL algorithm in Zhang et al. (2018). The curves represent the
average results of 10 trials and the 95% confidence intervals are also plotted. For the details, see A.1
in Appendix. The results in Figure 1 show that for different system sizes, both algorithms converge
to a reasonable objective value. Note that ifwe use uniformly random policy as the baseline policy,
then the objective values will be around 2 due to the setting of our experiments. All simulation
results are above this threshold and our TD-sharing algorithm converge to a better objective value.
See Section A.2 for addition experiment results.
7	Conclusion and Discussion
In this paper, we studied fully decentralized MARL in average reward setting and proposed a
batch-sampled actor-critic algorithm. Our main contribution is to establish the first finite time con-
vergence result for fully decentralized MARL in average reward setting, where the complexity is
O(e-2 log(e-1)), which matches that of the state-of-the-art single agent RL. The algorithm reaches
such convergence with a better communication efficiency. However, it is still in the preliminary
stage of the convergence analysis of the MARL since we only used the vanilla average. The future
direction will be how to design a more scalable algorithm in terms of system size.
9
Published as a conference paper at ICLR 2022
Acknowledgments
Hairi and Jia Liu’s work has been supported in part by NSF grants CAREER CNS-2110259, CNS-
2112471, CNS-2102233, CCF-2110252, and a Google Faculty Research Award.
References
Rajendra Bhatia. Matrix analysis, volume 169 of. Graduate texts in mathematics, 1997.
Tianyi Chen, Georgios B Giannakis, Tao Sun, and Wotao Yin. Lag: Lazily aggregated gradient for
communication-efficient distributed learning. arXiv preprint arXiv:1805.09965, 2018.
Ziyi Chen, Yi Zhou, Rongrong Chen, and Shaofeng Zou. Sample and communication-efficient
decentralized actor-critic algorithms with finite-time analysis. arXiv preprint arXiv:2109.03699,
2021.
Thinh Doan, Siva Maguluri, and Justin Romberg. Finite-time analysis of distributed td (0) with linear
function approximation on multi-agent reinforcement learning. In International Conference on
Machine Learning ,pp.1626-1635. PMLR, 2019.
Jakob Foerster, Gregory Farquhar, Triantafyllos Afouras, Nantas Nardelli, and Shimon Whiteson.
Counterfactual multi-agent policy gradients. In Proceedings of the AAAI Conference on Artificial
Intelligence, volume 32, 2018.
Zuyue Fu, Zhuoran Yang, and Zhaoran Wang. Single-timescale actor-critic provably finds globally
optimal policy. arXiv preprint arXiv:2008.00483, 2020.
Xin Guo, Anran Hu, and Junzi Zhang. Theoretical guarantees of fictitious discount algorithms
for episodic reinforcement learning and global convergence of policy gradient methods. arXiv
preprint arXiv:2109.06362, 2021.
Sham Machandranath Kakade. On the sample complexity of reinforcement learning. University of
London, University College London (United Kingdom), 2003.
Donghwan Lee, Niao He, Parameswaran Kamalaruban, and Volkan Cevher. Optimization for rein-
forcement learning: From a single agent to cooperative agents. IEEE Signal Processing Magazine,
37(3):123-135, 2020.
David A Levin and Yuval Peres. Markov chains and mixing times, volume 107. American Mathe-
matical Soc., 2017.
Angelia Nedic and Asuman Ozdaglar. Distributed subgradient methods for multi-agent optimiza-
tion. IEEE Transactions on Automatic Control, 54(1):48-61, 2009.
Shuang Qiu, Zhuoran Yang, Jieping Ye, and Zhaoran Wang. On finite-time convergence of actor-
critic algorithm. IEEE Journal on Selected Areas in Information Theory, 2(2):652-664, 2021.
Martin Riedmiller, Andrew Moore, and Jeff Schneider. Reinforcement learning for cooperating and
communicating reactive agents in electrical power grids. In Workshop on Balancing Reactivity
and Social Deliberation in Multi-Agent Systems, pp. 137-149. Springer, 2000.
Shai Shalev-Shwartz, Shaked Shammah, and Amnon Shashua. Safe, multi-agent, reinforcement
learning for autonomous driving. arXiv preprint arXiv:1610.03295, 2016.
David Silver, Thomas Hubert, Julian Schrittwieser, Ioannis Antonoglou, Matthew Lai, Arthur Guez,
Marc Lanctot, Laurent Sifre, Dharshan Kumaran, Thore Graepel, et al. A general reinforcement
learning algorithm that masters chess, shogi, and go through self-play. Science, 362(6419):1140-
1144, 2018.
John N Tsitsiklis and Benjamin Van Roy. Average cost temporal-difference learning. Automatica,
35(11):1799-1808, 1999.
John N Tsitsiklis and Benjamin Van Roy. On average versus discounted reward temporal-difference
learning. Machine Learning, 49(2):179-191, 2002.
10
Published as a conference paper at ICLR 2022
Yue Wu, Weitong Zhang, Pan Xu, and Quanquan Gu. A finite time analysis of two time-scale actor
critic methods. arXiv preprint arXiv:2005.01350, 2020.
Tengyu Xu, Zhe Wang, and Yingbin Liang. Improving sample complexity bounds for (natural)
actor-critic algorithms. arXiv preprint arXiv:2004.12956, 2020.
Zhuoran Yang, Yongxin Chen, Mingyi Hong, and Zhaoran Wang. On the global conver-
gence of actor-critic: A case for linear quadratic regulator with ergodic cost. arXiv preprint
arXiv:1907.06246, 2019.
Chao Yu, Xin Wang, Xin Xu, Minjie Zhang, Hongwei Ge, Jiankang Ren, Liang Sun, Bingcai Chen,
and Guozhen Tan. Distributed multiagent coordinated learning for autonomous driving in high-
ways based on dynamic coordination graphs. IEEE Transactions on Intelligent Transportation
Systems, 21(2):735-748, 2019.
Kaiqing Zhang, Zhuoran Yang, Han Liu, Tong Zhang, and Tamer Basar. Fully decentralized multi-
agent reinforcement learning with networked agents. In International Conference on Machine
Learning, pp. 5872-5881. PMLR, 2018.
Kaiqing Zhang, Zhuoran Yang, and Tamer Bayar. Multi-agent reinforcement learning: A selective
overview of theories and algorithms. Handbook of Reinforcement Learning and Control, pp.
321-384, 2021a.
Xin Zhang, Jia Liu, Zhengyuan Zhu, and Elizabeth S Bentley. Compressed distributed gradient
descent: Communication-efficient consensus over networks. In IEEE INFOCOM 2019-IEEE
Conference on Computer Communications, pp. 2431-2439. IEEE, 2019.
Xin Zhang, Zhuqing Liu, Jia Liu, Zhengyuan Zhu, and Songtao Lu. Taming communication and
sample complexities in decentralized policy evaluation for cooperative multi-agent reinforcement
learning. In Advances Neural Information Processing Systems (NeurIPS), Virtual Event, Decem-
ber 2021b.
A	Appendix
In this section, we provide lemmas that lead to the proof of both Theorem 2 and Theorem 3.
In this paper, We use ∣∣∙∣∣ for 2-norm and ∣∣∙∣∣τv for total variance norm.《，•〉denotes the inner
product. Superscript i in quantity x, i.e. xi , denotes the x quantity correspond to agent i ∈ N .
λ(∙) and σ(∙) denote the eigenvalues and singular values of the corresponding matrix respectively.
All vectors are assumed to be column vector, unless specified. (∙)T is the transpose of an matrix or
vector. We use 1 to denote all-1 vector With a proper dimension. For a matrix A, [A]i represents
the i-th row of matrix A. Let δ = [δ1, ∙∙∙ , δN]T, i.e. the column vector for local TD-errors. In
comparison, δ denotes the scalar global TD-error, i.e. δ = N∙ ∑i∈N δi.
First, we explain the detail of our experiment setup.
A.1 Experiment Setup
We considered the same setting as in the Section 6.1 of Zhang et al. (2018). There are N agents,
each has a binary-valued action space, i.e. Ai = {0, 1}, for all i ∈ N. In addition, in all the results
shown here, we set |S | = 5 states. The elements in the transition matrix are uniformly sampled from
the interval [0, 1] and normalized to be stochastic. We also added 10-5 onto each element to ensure
ergodicity of the MDP such that the Assumption 1 is satisfied. For each agent i and state action pair
(s, a), the mean reward Ri(s, a) is sampled uniformly from [0, 4]. The instantaneous rewards rti are
sampled from the uniform distribution [Ri(s, a) - 0.5, Ri(s, a) + 0.5]. The policy is parameterized
following the Bolzmann policies, i.e.,
πθii (s, ai)
exPgTaiθD
Σbi∈Ai exp(qTbi θi)
11
Published as a conference paper at ICLR 2022
where qsT,bi is the feature vector with the same dimension as θi, for all s ∈ S and i ∈ N. Here,
we set mi =…=mN = 5. The elements of q§,bi are uniformly sampled from [0,1e3]. We set
the dimension for state features K = 3. The feature matrix Φ are insured to have full column. The
stepsizes for classical MARL are set as βw,t = t0⅛1 and βθ,t = to⅛2. The network matrix as chosen
as a ring network with diagonal elements being 0.4 and off diagonal elements 0.3 .
For our algorithm, we used step-sizes α = 1 and β = 0.1. The batch sizes are B = 10, M = 10
and the critic iterations are 10 and actor iterations are T = 100.
A.2 Additional Experiment Results
We have modified classical MARL into i)constant stepsize MARL, ii)batch MARL and iii)batch
constant stepsize MARL. For classical MARL and batch MARL, we chose the stepsizes as βw =
to⅛5 and βθ = t0185 as in the paper (Zhang et al., 2018), and for the constant steptize MARL and
batch constant stepsize MARL, we chose stepsizes to be βw = 0.9 and βθ = 0.01. For batch MARL
and batch constant stepsize MARL, we used batch size as 10. Other parameters are the same as in
the A.1. We vary the system sizes from N = 5 to N = 15 and the empirical comparison results are
in Figure 2 (a)-(c). In addition, we provide the comparison between average reward setting with the
discounted counterpart of our algorithms for discounting factors ranging from γ = 0.1 to γ = 0.999.
As we can see from Figure 2 (a)-(c), our TD-sharing algorithm performs well compared to the base-
line algorithms. Among the modified algorithms, batch constant stepsize MARL shows improve-
ment compared to the classical MARL in all three cases. Moreover in (b) and (c), when system size
is larger, specifically N = 10 and N = 15, either batch modification or constant stepsize modifi-
cation seem to improve the classical MARL. Yet in (a), for smaller system size, i.e. N = 5, only
modifying to the batch size or constant stepsizes don’t seem to improve the performance.
In addition, in (d), for discounted setting, as γ increases and gets closer to 1, the objective value
is closer to the average reward setting. It is because as the discounting factor approaches 1, the
effective horizon, which scales with O( log-Y ) (Kakade, 2003), to an E close stationary point gets
larger and larger. As a result, it will get closer to the average reward setting. However, we can see
average setting value converges to a significantly higher value. More importantly, one advantage
of the average reward setting is that with more samples, the policies can potentially keep updating
and so is the objective value. From Figure 2(d), we can see that as the number of sample increases,
the average reward setting objective value still evolves, which means the policies are keep updating.
However, for the discounted reward case, the extra sample doesn’t affect the objective value.
In Figure 3, we have shown the results of different network structures on the performance when
system size is 10. We compared the ring network, small world network and 2-regular network. The
small world network is generated with mean node degrees being 4 and rewiring probability being
0.2. The entries of matrix A, for both small world network and regular network, are set as the way
discussed after Assumption 3. Different network structures exhibit different performances, but all
are better than baseline value 2. Among these three structures, within given sample numbers, ring
network yields the best result.
A.3 Supporting Lemmas for Theorem 2
Because of the Assumption 1, by (Levin & Peres, 2017, Theorem 4.9), for aperiodic and irreducible
Makrov chains, we can guarantee the following lemma holds:
Lemma 1. For any policy parameter θ ∈ R i∈N mi, consider the MDP with policy πθ and transi-
tion kernel P (∙∣s, a). Let dθ be the stationary distribution of the MDP There exist constants κ > 0
and P ∈ (0,1) such that suPs∈s ||P(st∣so = S) — dθ∣∣τv ≤ κρt, ∀t ≥ 0.
This lemma has been adopted directly as an assumption in many related works in theoretical analysis
of RL (Xu et al., 2020; Chen et al., 2021; Qiu et al., 2021).
As a result of the Lemma 1, the Markov chain of state-action pair {st, at}t≥0 for policy πθ also has
the property of ergodicity. We state this result as the following lemma.
12
Published as a conference paper at ICLR 2022
(a) N = 5
Sample Number	×105
(b) N = 10
(c) N = 15
1.5
S
ɔ
1
0.5
0
----TD-Sharing MARL
Discounted Counterpart with 7=0.1
Discounted Counterpart with 7=0.5
Discounted Counterpart with 7=0.9
----Discounted Counterpart with 7=0.99
----DiScoUnted CoUnterPart With )=0.999
Sample Number	x105
(d) average vs discounted
Figure 2: The empirical comparisons of algorithms
0	1
2	3	4	5	6
Sample Number	×105
Figure 3: Different Network Structures on Performance When N = 10
13
Published as a conference paper at ICLR 2022
Lemma 2. Suppose the Assumption 1 hold, let νθ be the stationary distribution of the state-action
pair MDP. Then, we have
sup ||P(st, at∣S0 = S)- Vθ||tv ≤ κρt,	∀t ≥ 0.	(10)
s∈S
Proof. For any given s0 ∈ S, by definition, we have
||P(st,at∣S0) - Vθ||tv = 2	E	|P(St = s,at = α∣so) - V(s,a)∣
(s,a)∈S×A
=2 E	|P(St	=	s∣so)∏θ(at	=	a∣St	=	S)	-	νθ(s)∏θ(a|s)|
(s,a)∈S×A
=2 E	I(P(St = s|so)- Vs(S))πθ(a|s)|
(s,a)∈S×A
=2 E	πθ(a|S)|P(St = S|S0)- νθ(S)I
(s,a)∈S×A
=2 E IP(St = s|s。)- vΘ(sX
2 s∈S
= IIP (StIS0) - νθs IITV ≤ κρt.
Since it holds for all s° ∈ S, equation 10 holds.	□
As a result of Assumption 5, we have the following lemmas.
Lemma 3. For all policy πθ, we have
(w,A∏θW ≤- λA ||w||2	(II)
where λA is defined in Assumption 5.
Proof. Because of the fact wTAπθ w = wT ATπθ w, we have
WT A∏θ W = 2( wT A∏θ W + WT A∏θ W)
=2 WT (A∏θ+ATθ )W
≤ - λA WTW=- λA ||W||2.	(12)
□
In fact, interestingly enough, the Assumption 5 and Lemma 3 are equivalent in a sense that if the
statement in the Lemma 3 is taken as the assumption, the statement in the Assumption 5 can be
obtained as a result. And the paper (Xu et al., 2020) used the statement in the Lemma 3 as an
assumption, whereas in ours and (Qiu et al., 2021), we assumed Assumption 5.
Lemma 4. For any given policy πθ, the corresponding optimal value function approximation pa-
rameter wΘ is uniformly bounded, specifically, there exists Rw := 4rmax > 0 Such that
I∣wΘII≤ Rw.	(13)
Proof. It's easy to see that J(θ) ≤ rmax from equation 2 and 尸(s, a) ≤ rmax for any (s, a) pair.
Then, we have
I∣wΘII = II-A-θ1b∏θ II
14
Published as a conference paper at ICLR 2022
|| - (Es~dθ(s),s,~P(∙∣s)[(Φ(s′) - φ(s))φτ(s)])-1 ∙ Es~dθ,a~∏θ[φ(s)Es,a) - J(θ))]∣∣
≤
||- (Es~dθ(s),s,~P (∙∣s)[(Φ(s′) - φ(s))φτ (S)DT l∣∙∣∣Es~dθ ,a~∏θ [φ(s*(s,a) - J (θ))]∣∣
σmin (-Es.dθ (s),s′.P (φ)[(Φ(s′) — Φ(s))ΦT (s)]) ."叽7° ,a~πθ [φ(S)Es,a) - J ⑻川
≤
≤
2||Es~d° ,a~∏θ[φ(S)T(S,a) — J 步))]||
λmin(-A∏θ - ATθ )
2Es~d0 ,a~∏θ[∣∣Φ(s)∣∣∙(∣r(s,α)∣ + |J (θ)∣)] = 4rmax
λ	λA
where the third equality used the fact || A-11| = 仃.%)and the second from the last inequality is
from Bhatia (1997) (Proposition In 5.1).	口
Note that, for agent i ∈ N, the estimated long term average reward μk T at sample T of iteration k
in equation 5 can be written as
τ
μ% = β £(1 - β)τ-%ι + (1 - β)τμ0.	(14)
l=1
Lemma 5. For any i ∈ N and t ≥ 0, step size 0 < β < 1, for the estimated long term average
reward for agent i, we have
μt+i = (1- β)μt + β*	(15)
is bounded by rmax, i.e. ∣μt+ι∣ ≤ rmax.
Proof. WLOG, We suppose that 0 < μ0 ≤ rmax, We have
∣μt+ιl = l(i-β)μt + β淄
≤ (1 -β)∣μtl + β∣rt∣.	(16)
By the supposition, we have ∣μ0∣ ≤ rmax. We assume ∣μt∣ ≤ rmax holds for iteration t > 0, then
for t + 1, by equation 16
∣μt+1∣ ≤ (1 - β Xμt∣ + e|ri| ≤ (1 - β)rmax + Br max = rmaχ.
Therefore, Lemma 5 holds by mathematical induction.	口
For a given policy πθ, to establish a bound on the difference between the optimal approximation
parameter w3，we first derive a bound the difference between parameter Wk and the average among
all agents Wk at time k. Then, we derive a bound for the difference between average Wk and the
optimal wθ3 .
We have following notations for the analysis. Given an agent i ∈ N, we consider the consensus
error at time k and we denote Qk = Wk — Wk, where Wk := NN Ei∈N Wk. Then, we denote the
matrix form as Qk = [Qk,…，QN ] ∈ RK × N Then, we have the following lemma.
Lemma 6. Suppose the Assumption 2 and 3 hold. For the consensus error matrix, we have
IIQk+11| ≤κιN2γk∣∣Q0∣∣ + κ2N3β	(17)
where Y := (1 一 nN-1) ∙ (1 +2β) < 1, κι = 2(1 + 2β)(1 + η-(N-1)) and K2
4(1+η-(N-1))rmaχ
1-γ
Proof. By equation 7, the parameter update Wk for agent i at iteration k can be written as follows
i	i	βMi
Wk = Wk + Mf δk,τ ∙ φ(sk,τ)
τ=0
β M-1	τ
=Wk + M E [rk,τ +1 - β E(1 - β)τ-lrk,ι - (1 - β)τμ0
τ=0	l=1
15
Published as a conference paper at ICLR 2022
+ φ(sk,τ +1) Wk - φ(sk,τ ) wk] , φ(sk,τ )
• β M-1
wk + Mf φ(sk,τ 升 φ(sk,τ +1) — φ(sk,τ )]T wk
T = 0
β M-1	T
+ M E (rk,T+1 - βE(I- β)τ-lrk,ι - (1 - β)τμ0)φ(sk,τ).	(18)
T=0	l=1
After a consensus step, the update will be
wk+1 = E A(i,j) ∙ wk
j∈Ni
β M-1
=E A(Kj) ∙ [wk + Mf φ(Sk,τ )[φ(sk,τ +1) - φ(Sk,τ )]T wk
j∈Ni	τ=0
β M-1	τ
+ β ∑ (rk,τ +1 - β ∑(1 - β)τ-l也-(1- β)τμ0)φ(sk,τ)]
τ=0	l=1
β M-1
=E A(Kj) ∙ wk + Mf φ (Sk,τ )[φ (Sk,τ +1) - φ(Sk,τ )]T E A(Kj ) ∙ wk
j∈Ni	T=0	j∈Ni
β M-1	τ
+ ⅛∑ Φ(Sk,τ) E A(i, j) ∙ (rk,τ+1 - β £(1 - β)τ-j - (1 - β)τμ0)
T=0	j∈Ni	l=1
β M-1
=wk ∙ (Ai,:)T + M JS φ(Sk,τ )[φ (Sk,τ +1) - φ(Sk,τ )] Twk ∙ (Ai,:)T
τ=0
β M-1	τ
+ M JS φ(Sk,τ ) Aixrk,τ +1 - β (I - β Y -rk,l -(I- β)τ μ0)	(19)
T =0
l = 1
where Wk = [w1, w2, ∙ ∙ ∙ , wk] ∈ Rk×n is the matrix form of all parameters at time k, Ai,： is
the i-th row of matrix A and rk,l = (r11, ∙ ∙ ∙ , rN). Now We consider the average dynamics of the
algorithm. Recall wk = N ∑i∈N wk, then using equation 19 we have
wk+1 =1E wk+1
i∈N
1	β M-1
=N ΣS (Wk ∙ (Ai,：)T + M Σ φ(Sk,T )[0(Sk,T +1) - φ(Sk,τ )] τwk ∙ (Ai,：)T
)
M-1
τ
+MM
φ(Sk,T )Ai,:(rk,T +1 - β (I - β)τ lrk,l -(I- β )T μ0)
T =0
l=1
1 T β M-1 -	、-/	、- 、仃 1 T
Nwk ∙ 1+ M ∑S φ(Sk,τ)[。(Sk,τ+1) - φ(Sk,τ)] Nwk ∙ 1
T = 0
β M-1	1	T
+ ME φ(Sk,τ)N £ Ai,：(rk,T+1 - βE(I - β)τ-lrk,l - (1 - β)Tμ0)
T=0	i∈N	l=1
β M-1
wk + ME φ(Sk,T)[φ(Sk,τ +1) - φ(Sk,τ)]Twk
T = 0
β M-1	1	τ
+ Mf Φ(Sk,τ) W1T (rk,τ +1 - β £(1 - β )τ-lrk,l - (1 - β)τμ0)
T = 0
l=1
16
Published as a conference paper at ICLR 2022
β M T
=Wk + M E Φ(Sk,τ)[φ(sfe,τ +1) 一 Φ(Sk,τ)]TWk
T = 0
m-1	T
+ MEφ(sk,τ)(rk,τ +1 - β〉3(1 - β)τ l尸k,l - (1 - β)τμ0)	(20)
τ=0	l=1
where rk,l = N Σi∈N 吸,ι.
Given an agent i ∈ N, we consider the consensus error at time k and recall Qk = Wk — Wk. Then,
we have
Qk+ 1 =wk + 1 — Wk+1
β M-1
=Wk ∙ (Ai,:)T — Wk + M ɪ2 φ(sk,τ )[φ(sk,τ +1) 一 φ(Sk,τ )]T(Wk ∙ (Ai,:)T — Wk)
T =0
β M-1	1	τ
+ M E φ(Sk,τ)(Ai,： — NIT)(rk,τ +1 — β E(I — β)τ-'rk,l — (1 — β)τμ0). QI)
T=0	l=1
Then, for the matrix form Qk = [Qk,…)QN] ∈ Rk×n, we have
β M-1
Qk+1 =Qk AT + M ɪ2 φ(sk,τ )[φ(sk,τ +1) — φ(sk,τ )], Qk AT
T =0
β M-1	1	τ
+ M Σ φ(Sk,T)[(A — N IlT )(rk,T +1 — β E(I — βY l『k,l-(\- β)τ μ0)]T
τ=0	l=1
β M-1
=Qk AT + M JS φ(Sk,τ )[φ(sk,τ +1) — φ(Sk,τ )], Qk AT
τ =0
β M-1	τ	1
+Mfφ(sk,τ )[rk,τ +1 —β ∑(1 — β)τ-l rk,l — (1 — β)τ μ0]τ (A — N 11τ)
τ=0	l=1
(22)
where the first equality is due to A being doubly stochastic. For convenience, denote Bk =
M ∑M^01 φ(sk,τ)[φ(sk,τ+1) — φ(sk,τ)]T and Ck = M 工把-1 φ(sk,τ)[rk,T+1 — β ∑T=1(1 —
β)τ-lrk,l — (1 — β)τμ0]τ. Then, iteratively we have
Qk+1 =(I + βBk )QkAT + βck (A — N 11T )
k	k k	[
=∏ (I + βBt)Q0(Aτ )k+1 + β ND(I + βBi)Ct(A — N 11t )Ak-t	(23)
Then, the norm of the consensus error is following
k	k k	1
IIQk+1∣∣ =|| ∏(I + βBt)Q0(Aτ)k+1 + β£∏(I + βBt)Ct(A — N 11τ)Ak-t∣∣
t = 0	t=0 t>t
k	k k	[
≤∣∣ ∏(I + βBt)∣∣∙∣∣Q0(Aτ )k+1∣∣ + βf ∏∣∣(I + βB,)∣∣. ∣∣Ct∣∣∙∣∣(A — N 11τ )Ak-t∣∣.
t = 0	t=0 t>t
(24)
Note that since A is doubly stochastic, so is Aτ. Let (Aτ )ki+1 be the i-th column of matrix (Aτ )k+1.
From Nedic & Ozdaglar (2009), we know that
∣∣Q0 (Aτ )k,+11∣ = ∣∣Q0(Aτ )k+1 — Q0 N 1∣∣
17
Published as a conference paper at ICLR 2022
=Il E((AT j1 - 1)Q0Il
j∈N
≤ E I(AT j1 - NN i∙iiqoii
j三N
1 + rn-(N-1)	-
≤ N ∙2 1-ηN-1 (I - nN-1)k+1 ∙野IIQOII
≤ 2N(1 + η-(N-1))(1 - nN-1)k ∙ IIQ0∣∣.	(25)
HenCe, IlQ0Ak+1Il ≤ 2N2(1 + n-(NT))(I - nN-1)k ∙ IIQ0∣∣. To bound the first term in the RHS
of equation 24, We have
kk
Il ∏(I + βBt)II≤∏I∣/ + βBt∣∣
t=0	t=0
k
≤ ∏(I∣IIl + βI∣Bt∣∣)
t=0
k
≤ ∏(1 + 2β) = (1 + 2β)k+1.	(26)
In order to make sure it converges to the neighborhood of a consensus in the limit, the step size has
to satisfy Y := (1 - nN-1) ∙ (1 + 2β) < 1, which results in β < 2(1-ηN-i). Hence, for the first
term in the RHS of equation 24, We have
k
Il ∏(∕ + βBt)∣∣∙∣∣Q0Ak+1∣∣ ≤ K1N2Yk∣∣Q01∣
t=0
where κ1 = 2(1 + 2β)(1 + n-(NT)).
Furthermore, we have
∣∣(A - N 11t)Ak-t∣∣ = ∣∣Ak-t+1 - N11TIl ≤ 2N2(1 + n-(NT))(I - nN-1)k-t.	(27)
And ∣∣Ct∣∣ ≤ 2Nrmax, where rmax = supi,s,a ri(s, a). This is because
M-1	τ
IICkII = Il而 E φ(Sk,τ )[rk,τ +1-β E((1 - β)τ lrk,l -(I- β)τμ0]Tll
T=0	l=1
M-1	τ
≤而E llφ(Sk,τ )[rk,τ +1 -β E((1 - β)τ lrk,l - (1 - β)τ μ0]T ll
T=0	l=1
M-1	τ
≤ M E llφ(Sk,τ)l1 ∙ llrk,τ +1 - β E(I - βY-rk,l - Q - β)τμ0l1
l=1
T =0
M-1	τ
≤ 而 E [∣∣rk,τ+1∣∣ + β£(1 - β)τ-l∣∣rk,ι∣∣ + (1 - β)τ∣∣μ0∣∣]
T=0	l=1
1 M-1	1 (1 β)τ
≤ 一 T [Nrmax + β ——(一β)-Nrmax + (1 - β)τNrmax] = 2Nrmax.
max	m	max	Imax」	max
m W 1 - (1 - β)
Then for the second term of equation 24, we have
kk
β∑∏II(I + βBf)I∣∙ IICtII ∙ ∣∣(A- nn 11t)Ak-t∣∣
t=0 t>t
18
Published as a conference paper at ICLR 2022
k
≤β£(1 + 2β)k-t ∙ 2Nrmaχ ∙ 2N2(1 + η-(NT))(I-nNT)I
t=0
k
κ2β E Yl
t=0
1 - γk+1
κ2N 3β ——
1-γ
where κ2 = 4(1 + η-(N -1))rmax. Further, for consensus error equation 24, we have
1	k+1
IIQk+ill ≤ KiN2YkIIQo|| + K2N3β —— ≤κ∖N2γk∣∣Qo∣∣ + κgN3β
1-γ
where K = 1κ2γ.
(28)
(29)
□
The corresponding average parameter under the policy πθ will converge to the solution to
the following equation w3= A-1bθ, where Aq = Es〜d@(s)[Φ(s)(Φ(s′) 一 Φ(s))T], b =
E(s,a)〜dθ(s,a)KrGa)- J (θ))φ(s)] and r(s,a) = N EieN Ti(S,a)
Now consider ∣∣Wk - w*∣∣. Recall the from the average parameter equation equation 20 and the
corresponding ODE is
W θ = Aθ wθ + bθ.
(30)
For the difference between average dynamics and the optimal value, we have the following lemma.
Lemma 7. For β ≤ min{每, 吉} and M ≥ (λA + β) 61441-+()；[1"], we have
3 2	λA K	3 2	1	1536(4Rw2 +rm2ax)[1+(κ-1)ρ]
EMwK - wθ∣∣2] ≤ (I - ɪβ) Ilwo - wθ ||2 + (λA + β)-------------(1 -ρ)λaM------------.
(31)
Proof. The proof follows from verifying the Assumption 3 of Xu et al. (2020), then we can apply
the results from Theorem 4 of Xu et al. (2020).
1.	For item 1 in the assumption, it’s easy to check that IIAθII ≤ CA = 4 by Assumption 4 and
bθ ≤ Cb = 2rmax .
2.	For item 2, it holds because of Lemma 3.
3.	For item 3, it holds because of Lemma 1.
And We recall that the bound on ∣∣wQ∣∣ is Rw = 4rmAax. Hence, by Theorem 4 of XU et al. (2020),
β ≤ min{8CA2, λ4A} and M ≥ (λ2A + 2β) 192C(A-+K-1)ρ], equation 31 holds.	□
A.4 Proof of Theorem 2
As a result from Lemma 4 and Lemma 7, we provide the following proof for Theorem 2.
Proof. Therefore, by equation 17 and equation 31, we have
N
E[	IIwKi -wθ3II2]
i=1
NN
≤ 2E[£ IIwK - wκIl2]+ 2E[]T IIwK - w罚2]
i=1	i=1
≤ 2IIQkII2 + 2NE[IIwκ - w3II2]
≤ 2(κ1N2γκIIQoII + κ2N3β)2 + 2N(1 - λAβ)K“w。- wQII2
19
Published as a conference paper at ICLR 2022
2
+ 2N (—+2β)
λA
192(CAR + C2)[l + (κ — l)ρ]
(1 - PDAM
≤ κ1N 4γ2K + κ2N 6β2 + κ3N 5γK β + 2N(1-----------A β )K I∣w0 - w0∣∣2 + Y4 N
8	M
where κ1	=	2κ2∣∣Q0∣∣2, K”
β) 3072(4Rw +rmaχ)[1 + (κ-1)ρ]
β)	(1-ρ)λA	.
2κ22, κ3	=	4κικ2∣∣Qo∣∣ and κ4	=	(λA +
□
A.5 PROOF OF THEOREM 3
We use Wt to denote the optimal value function parameter under policy θt at time t and
Wt = [(WI)T)… ,(WN)t]t ∈ Rn×k, which is the aggregated function approximation pa-
rameters from Line 2 of Algorithm 2. Recall the Si I generated by Line 18 of Algorithm 2,
which is the i-th agent,s estimate of the global TD-error from sample l at time t after con-
sensus. Let	Vi(Wt)=强 ZB-1 si,ι(wt)	∙	ψi,ι	and	Vt(Wt)	=	[(v1(Wt))T,…，(VN(Wt))T]t,
ht(Wt) = -B EB-I δt,ι(Wt ∙ ψh and MWt) =[(同(Wt))T,…，(hN(Wt))T]T, AdvW(s,a)=
Es' 〜P (∙∣s,α),r 〜dr(s,α)[δw (s,ɑ,s/) ∣s,α] and gi(W,θ) = E[Advw (s,a)ψθi (s,ai)], where d (s,a) is
the reward distribution of state-action pair (s, a). By Taylor expansion and the Lipschitz property
from Assumption 6, We have
J(Θt+1) ≥ J(θt) + (Vθ J(θt), Θt+1 - θt) - LJ∣∣θt+ι - θt∣∣2
=J(θt) + α"θ J(θt), Vt(Wt) - Vθ J(θt) + Vθ J(θt)) - LJa2 ∣∣vt(Wt)∣∣2
=J(θt) + α∣∣VθJ(θt)∣∣2 + α”θJ(θt),Vt(Wt) - VθJ(%)〉一 J21∣Vt(Wt)
-Vθ J (θt) + Vθ J (θt)∣∣2
≥ J(θt) + (20 - LJα2)∣∣Vθ J(θt)∣∣2 - (|α + LJ02)∣∣Vt(Wt) - Vθ J(θt)∣∣2
where the last inequality is because
”θ J(θt),Vt(Wt) - Vθ J(θt)> ≥ -2∣∣VθJ(θt)∣∣2 - 1 ∣∣Vt(Wt) - Vθ J(θ)∣∣2,
and
∣∣Vt(Wt) - Vθ J(θt) + VθJ(θt)∣∣2 ≤ 2∣∣Vt(Wt) - Vθ J(θt)∣∣2 + 2∣∣Vθ J(θt)∣∣2.	(32)
Taking expectations on both sides conditioned on the filtration Ft and rearranging the terms, we
have
(20 - LJα2)E[∣∣Vθ J(θt)∣∣2∣Ft] ≤ E[J(θt+ι)∣Ft] - J(θt)
+ (2α + LJα2)E[∣∣Vt(Wt) -VθJ(θt)∣∣2∣Ft].	(33)
Then, we establish upper bound on the third term of the RHS. By definition, we have
∣∣Vt(Wt) -VθJ(θt)∣∣2
=∣∣Vt(Wt)-Vt(Wt) + Vt(Wt) - ⅛t(Wji) + ht(Wji) - g(Wji,θt) + g(Wji,θt) - Vθ JIet)∣∣2
≤ 6∣∣Vt(Wt)-Vt(Wt)∣∣2 +6∣∣Vt(Wt)- ht(Wt)H2 + 6∣∣ht(Wt)-9(匈,θt)∣∣2
+ 6∣∣g(Wt,θt) -VθJ(θt)∣∣2.	(34)
WenOtethat ∣∣Vt(Wt) - Vt(Wt)∣∣2 = ZiEN ∣∣Vi(Wt) - Vi(Wt)∣∣2 and the other three terms in equa-
tion 34 can also be similarly decomposed. For the first term in the RHS of equation 34, we have
∣∣Vi(Wt)-Vi (Wt )∣∣2
20
Published as a conference paper at ICLR 2022
B-1	B-1
=∣∣B E %(Wt) ∙必ι - B E %(w*) ∙必ι∣∣2
ι=0	ι=0
B-1
2
ι=0
1 BT
=∣∣B £[AtgOSSiP]i(wt - WUT)τ[φ(st,ι+ι) - φ(St,ι)] ∙ ψi,ι∣∣2
≤
≤
l=0
,.nmax	Il[Atgossip]i(wt - w*IT)τ[φ(st,ι+ι) - Φ(st,ι)] ∙ ψi,ι∣∣2
l∈{0,∙∙∙ ,B-1}
maχ	∣∣[Atgossip]i∣∣2∣∣[φ(st,ι+1) - φ(st,ι)]∣∣2∣∣wt - WQT∣∣2 ∙∣∣ψi,1∣∣2
l∈{0,…，B-1}
N
≤ 4 ∙ ∣∣Wt - W* ㊈ 1∣∣2=4E ∣∣Wi-W;∣∣2
i=1
where the third equality is from


δi,ι(wt) - δi,ι(w*)
=[Atgossip]iδt,ι(wt) - [Atgossip]i<⅛ (w*)
=[Atgossip]i[St,ι(wt) - δt,ι(wt)]
/ φτ(st,ι+ι)(w1 - w*) - φτ(StJ)(Wt - w*)
[Atgossip ]i
∖φT(St,l+1)HV - W*) — OT(St,l)(WN — w*)
[Atgossip]i(wt - w*1t)t[φ(st,l+ι) - 0(st,，)].
For the second term in the RHS of equation 34, We have
∣∣vi(W*) - ht(W*)∣∣2
B-1	B-1
=∣∣B E M,ι(w*) ∙ 4 - B E M(w*) ∙ ψi,ι∣∣2
ι=0	ι=0
1 B-1
=∣∣ 再 ∑>i,ι(W*)- 3(w*)]∙帙 ∣∣2
ι=0
=∣∣B Σ ([Atgossip]i - NIT) δt,ι(W;) ∙ ψi,ι∣∣2
≤ ι∈{0maB-i}∣∣ (HgOSSip]i- NIT) δt,ιW) ∙ ψi,ι∣∣2
≤ maχ	∣∣[Atgossip]i- N 1τ∣∣2 ∙∣⅛ι(w:)∣∣2 ∙∣∣ψi,,∣∣2
Ι∈{0,…，B — 1}	IN
1 I	-(N-1)
≤ maχ N(2 ; "	_ (1 -档-1)tgossip+1)2 ∙∣∣δt,ι(W;)∣∣2
ι∈{0,…，B-1}	1 — η
≤ 16N2((1 + η-(NT))(I- ηN-1)tgossip)2(rmax + RW)2 = κ3N2(l - ηN-1)2砧加
(35)
(36)
where κ3 = 16(1 + η-(N-1))2(rmax + RW)2. We note that the second equality is because
~.
Si,ι(W;)- δt,ι(W;)
=[Atgossip]iδt,ι(W*) - N 1τδt,ι(W*)
=([Atgossip]i - N1T) δt,ι (w*).
21
Published as a conference paper at ICLR 2022
For the last inequality, We note that δt,ι(w*) is bounded because rewards and feature vectors are
bounded, μi is bounded for constant step size and Wj= is bounded from the critic step. That is, for
j ∈ N entry in δt,ι (WJ) by definition,
δj,ι(w*) = rt,ι - μj,ι + [φ(St,1+1) - φ(st,ι)∖rwt∙
Hence, its 2-norm bound is
l∣δj,ι (w*)M =旧,ι — μj,ι+ [φ(st,ι+ι) — Φ(st,ι)]τ wj∣∣
≤l∣rj,ιll + l∣〃j,ιll + l∣φ(st,ι+ι) — Φ(st,ι)∣∣∙∣∣wj∣∣
≤ rmax + rmax + [∣∣φ(st,ι+ι)∣∣ + ∣∣φ(st,ι)∣∣] ∙ Rw ≤ 2rmax + 2Rw.	(37)
For the last term in equation 34, we have
∣∣g(wj,θt)-Ve J (θt)∣∣2
=l∣Edθt (s,a) [Advw* (s, a)ψet (s, a)] — Erfθt(SjO)[Advθt (s,a>ψθt (s,α)]∣∣2
=l∣Edθt(s,a) [(Advw* (s, a) — Advθt (s, a))ψθt (s, a)]∣∣2
≤ (Edθt(s,a)[∣l(Adv说(s,a) — Advθt(s,a))ψθt(s,a)∣∣])2
≤ (Edθt(s,a)[∣lAdVM(S,a) — AdVθt(S,a)∣∣ ∙ ∣∣ψθt(s,a)∣∣])2
≤ (Edθt(s,a)[∣Adv说(s,a) — AdVθt(s,a)∣])2
=(Edθt(s,a)[∣E[% (s')∣s,a] - VwMS) — E[VθMs')∣s,a] + Vθ* (S)ID2
≤ (Edθt (s,a)[lE[Vw： (s')	—	v⅞(s')∣S, a]l + lVw： (S)-	Vθ*	(S)ID2
≤ (Edθt (s,a)[E[lVw： (s')	—	v⅞(s')I∣S, a] + lVw： (S)-	Vθ*	(S)ID2
=(E[lVw*(S)- Vθ*(S) l] + E[∣VW* (s) — Vθ* (s)|])2
≤ 4(E[∣% (s) - % (s)∣])2 ≤ 4E[|Vw： (s) - Vθ. (s)∣2] ≤ 4g；pp黑.	(38)
For each i ∈ N, we have
∣∣hi(WJ)- gi(wj,θi)∣∣2
1 B-1	1 B-1
=(B	δt,ιι (WJ )ψθi	- Es,α [Advw*	(s,	a)ψθi (S, ai)],	B	δtJ,2 (WJ )ψθi	-	Es,a [Advw*	(s,	a)ψθi (S, ai)D
ιι=0	ι2 = 0
B-1 B-1
=奈EE(δt,ιi (WJ )ψθi - Es,a [AdVwMS, a)ψθi (s, ai)], δt,ι2 (WJ )ψθi - Es,a [AdVwMS, a)%i (s, ai)])
h=0 ι2=0
1	BT
=B2 E llδt,ι (WJ)ψθi - Es,a[AdVwMS,a)ψθi (s,ai)]∣∣2
ι=0
+ B2 E (δt,ιi (WJ)ψθi - Es,a[Advw： (s,a)ψθi (s, ai)],δt,ι2 (WJ)ψθi - Es,a[Advw： (s,a)ψi,ι2 (s,ai)D.
ι1=ι2
Taking expectation over the filtration Ft, We have
E[∣∣ht(WJ) - gi(WJ,θi)∣∣2∣Ft]
1 B - 1
=B2 E E [llδt,ι (WJ)ψθi - Es,a[AdVwMS,a)ψθt (s, ai)] Il2 IFt]
ι=0
+	B2 E E [<δt,ιι (WJ)ψθi - ES,a[AdVw“S, a)ψθi (S, ai)],δt,ι2 (WJ)ψθi - Es,a[Aw： (s,a)ψθi (s,ai)])|Ft]
ι1=ι2
≤ B^ (rmax + Rw 产
+	B2 E E [<δt,ιι (WJ)ψθi - ES,a[AdVw“S, a)ψθi (S, ai)],δt,ι2 (WJ)ψθi - ES,a[AdVw“S, a)ψθi (S, ai)D∣Ft]
ι1=ι2
22
Published as a conference paper at ICLR 2022
where the inequality follows from triangle inequality and the facts that |&内(wt)ψθi| ≤ 2rmax +
2Rw and |Es；a[Advw：(s,α)ψ"(s,αi)]∣ = ∣E[δt,ι1 (Wioψ”]| ≤ 2rmax + 2Rw. WLOG, for the
following term, we suppose lι < l?. Then we have
E [(δt,lι (WJi )ψθi - ES,α[AdVw“s, a)ψlθi (S, Oi儿 δt,l2 (WryΦθi - ES,α [AdVWMs, α)%i (S, Oi)D |FJ
=E IE Wt,11 (Wji)φθi - ES,a[AdVWMS,α)φθ i(S,αi)],δt,i2 (Wji )φθi - ES,a[AdVWMS,α)φθ i(S,ai)])|Ft,iJ |Ft]
=E
=E
[(δt,lι (WJ )φθi - ES,α [AdVW “s, O)φ i (S, a 儿 E [δt,l2 (WJ )φθi - ES,α [Advw： (S, O)φθ i (s, ai )] |Ft,li ])|Ft]
[(δt,lι (WJ)φθi - ES,a[AdVWMS,α)φθ i (S,0i 儿 EMt,l2 (WJ)φθi |Ft,li] - ES,a[AdVWMS, o)φθ i (s,ai)])|Ft]
=E [(δt,lι (WDΦθi - ES,a[AdvW： (S, o)φθi (S, Oi)], E[AdvW^st,l2 ,o* )ψθl |Ft,li ] - ES,o[AdvW： (s, 0)3% (s, oi)])|Ft]
≤E [||St,li (WJ)φθi - Es,o[AdvW* (s, O)φθi(s, Oi)]|| ∙ ||E[AdvW* (s”?, Ot,l2)Φθt Ft,lι] - Es,o[AdvW* (s,O)φθi(s, Oi)]|||Ft]
≤2(2rmax + 2Rw )E [UE[AdvWMSt,l2 , Ot,l2 )φθi |Ft,l1 ] - ES,a[AdvWMs, o)%i (s, Oi)] |||Ft]
≤16(rmax + RW )2K*T1
where the last inequality follows from
||E[AdvW*(St,l2,Ot,l2)Φθi|Ft,l1 ] - Es,o[AdvW;(s,o)Φθi(s,Oi)]||
=H E	AdVWMSt,l2,Ot,l2)φθi(st,l2,Ot,l2)P(st,l2,Ot,l2|Ft,lI)- E AdVW"s,ɑWθi(s, α)νθt (s,o)H
(s/2 ,at,l2 )	(S,a)
≤ E 11AdVWt(S,a)φθi(s,Oi)|| ∙ |P 12-11 (s,O|Ft,l2) - νθt (s,o)|
≤2(2rmax + 2Rw ) ∙ "P'2-l1 (s, O|Ft,l2 ) - ν(s, O)IITV
≤4(rmax + Rw)κρl2-l1 .
Then, we haVe
E[||ht(WJ)-gi(WJ,d)||2|Ft]
≤ "^2 [16B(rmax + Rw )2 + 16(rmax + RW)2κ ^E ?"-']
B 2
l2=l1
≤焉[16B(rmax + Rw )2 + ^rma:+ RW)2KPB ]
B2	1 — ρ
V 16(rmax + RW )2 [1 + (2κ - 1)p]	(39、
≤	B(T-T)	.	( )
Then, we haVe
N
E[||vt(Wt) - Vθ J(θt)H2] ≤24NEIIWi- wJ||2 + 6κ3N3(1 - nN-1)2tgossip
i=1
I qz∣ ^critic	96(rmax + Rw )2 [1 + (2κ - 1)p] N
+ 24ξapprox +-----------6(1 - P)------------N (40)
As a result, substituting equation equation 40 into equation 33 and taking expectation over Ft on
both sides, we haVe
(1 α - LJɑ2)E[HVθJ@)||2]
≤ E[J(θt+ι)] - E[J(θt)] + (2α + LJα2)
N
24N £||Wi-
∖ i=1
wJ||2
23
Published as a conference paper at ICLR 2022
+6κ3N3(1 - nNT)2tgossip + 24ξcpprθχ + 96(rmax + ^)?1+[2" - 1)p] N] .	(41)
B(1 - ρ)
By considering step size α = 4Lj, and dividing both sides of previous equation by ɪ6j, We have
N
E[∣∣Vθ J(θt)∣∣2] ≤16Lj(E[J(θt+ι)] - E[J(θt)])+72NE ||w； - w"∣2
i=1
+ l8κ3Ν3(1 - nNT)2tgossip + 72ξcpprox + 288N(rmax + 冗展)31+'2" - I)p].
B(1 - ρ)
(42)
Let T be a random variable that takes value uniformly among {1,…，T}. Taking summation over
t = {1,…，T} and dividing by T, we have
1T
E[∣Vθ J(θτ^)ll2]= T ∑E[∣∣Vθ J(θt)∣∣2]
t=1
≤ 16Lj(E[J(θτ)] - E[J(θo)])
T
+ 18κ3N3(1 - n
+ 72N
ET=I Ei=ιl∣wi- w"l2
N-1)2tgossip + 72ξacpriptircox + 288
T
(rmax + Rw)2[1 + (2κ - 1)ρ]
B(1 - ρ)
N
≤ 16Lj E[J (θτ)]
T
+ 72N
EN=I ||wi - w"|2
+ 18κ3N3(1 - nN-1)2tgossip
T
+ 72ξacpriptircox + 288
(rmax + Rw)2[1 + (2κ - 1)ρ]
B(1 - ρ)
N.
24