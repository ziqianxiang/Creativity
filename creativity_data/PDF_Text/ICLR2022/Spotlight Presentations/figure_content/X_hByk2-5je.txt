Figure 1: An example structured-decomposable PC. The feedfor-ward order is from left to right; in-puts are assumed to be boolean vari-ables; parameters are labeled on thecorresponding edges. Probabilityof each unit given input assignmentx 1X2x4 is labeled blue next to thecorresponding unit.
Figure 2: Overview of the PC-based (de)compressor. The encoder's side sequentially compressesvariables one-by-one using the conditional probabilities given all sent variables. These probabilitiesare computed efficiently using Alg. 1. Finally, a streaming code uses conditional probabilities tocompress the variables into a bitstream. On the decoder’s side, a streaming code decodes the bitstreamto reconstruct the image with the conditional probabilities computed by the PC.
Figure 3: An example of constructing a HCLT PC given a dataset D with 4 features. (a): Constructthe Chow-Liu Tree over variables X1 , . . . , X4 using D. (b): Replace every variable Xi by itscorresponding latent variable Zi . (c): Attach all Xi back to their respective latent variables Zi .
Figure 4: Using PCs as prior distributions of the IDF model (Hoogeboom et al., 2019). PCs are usedto represent the k sets of latent variables {zi}ik=1.
Figure 5: Good variable orders lead to more efficient computation of Fn (x). Consider the PC Pshown in (a). (b): If variable order X1, X2, X3 is used, we need to evaluate 20 PC units in total. (c):The optimal variable order X3, X2, X1 allows us to compute Fπ(x) by only evaluating 13 PC units.
Figure 6: Convert a product unit with k children into an equivalent PC where every product node hastwo children.
Figure 7: (a-b): An example structured-decomposable PC and a corresponding vtree. (c-d): Convert-ing (b) into an ordered vtree. (d) The converted ordered PC that is equivalent to (a).
