Figure 1: Illustration of our proposed TGNN framework. We first form the graph tensor T bycombining the adversarial graph A (adjacency matrix is visualized that the blue points are edges inthe original graph, while the red ones are perturbed edges) and K predefined robust graphs {Ark|kK=1},then learn robust graph by tensor-based robust graph aggregation. Finally, the learned robust graph Awill be fed into the GNN model and jointly learned with GNN model parameters.
Figure 2: Visualization of the adversarial graph A under metattack (ZUgner & Gunnemann, 2019b) forCora (McCallum et al., 2000) dataset, three predefined robust graphs ArKNN, ArSV D and ArPRUNEand robust graph A learned from TGNN after different epochs of training. Nodes are sorted by classlabels. Blue dots represent edges that are in the original graph A, red dots represent edges that areadded by the adversarial graph (i.e., A - A), and green dots are the edges not included in both Aand A. Class communities are boxed in orange. Core tensor C1 is visualized and the correlationsbetween the learned robust graph A and predefined robust graph Ar are shown.
Figure 3: Results of different models under nettack and random attack.
Figure 4: Visualization comparison between Pro-GNN Jin et al. (2020b) and TGNN on Cora datasetagainst metattack with 25% perturbation rate. The setting is the same as in Figure 2adversarial attacks: nettack Zugner et al. (2018) and random attack in Figure 5 and Figure 6. Similarto Figure 2, the graphs in Figure 5 and Figure 6 are also perturbed in the most severe situation.
Figure 5: Visualization of TGNN and predefined methods against nettack with 5 perturbations pernode on Cora dataset.
Figure 6: Visualization of TGNN and predefined methods against random attack with 100% perturba-tion rate on Cora dataset.
Figure 7: Illustration of different methods of tensor decomposition.
Figure 8: Node classification performance of TGNN with CP decomposition.
Figure 11: Comparison performance of TGNN with different decomposition methods.
Figure 12: Node classification performance of predefined method “SVD” and ablated method“TGNN-S” under different ranks of SVD.
Figure 13: Node classification performance of predefined method “PRUNE” and ablated method“TGNN-P” under different thresholds τ of PRUNE.
Figure 14: Node classification performance of predefined method “KNN” and ablated method“TGNN-K” under different top-k of KNN.
Figure 15: Node classification performance of TGNN tuned with different λ.
Figure 16: Node classification performance of TGNN optimized with different weight decay.
Figure 17: Defense transferability evaluation for the learned robust graph A from TGNN.
Figure 18: Defense performance against Metattack for both structure and feature on Cora dataset.
Figure 19: Defense performance against Metattack on Amazon Computers and Photos datasets.
Figure 20: Defense performance against PGD and Min-Max evasion attacks on Cora dataset.
