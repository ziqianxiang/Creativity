Figure 1: An intuitive scheme demonstrating one step of Byzantine-Tolerant All-Reduce. This is apart of the Algorithm 1 executed between the consecutive SGD steps. Here, t is the step number, xtis the model weights, and ξit is a publicly known random seed for sampling a minibatch.
Figure 2: (Upper-Left, Upper-Middle:) ResNet-18 test accuracy with different robust aggregationtechniques (without attacks). (Other plots:) Effectiveness of Byzantine attacks on BTARD-SGD.
Figure 3: (Upper-Left:) ALBERT-large training objective using AR-SGD and BTARD-CliPPed-SGD(without attacks). (Remaining plots:) Effectiveness of Byzantine attacks on BTARD.
Figure 4: An intuitive scheme of MPRNG based on the generalization of Blum (1983). Here, ||denotes concatenation,㊉ denotes bitwise XOR, h(χ) is a common cryptographic hash function. Thehashed values include the peer identifier i to protect from replay attacks and a large random string sito resist dictionary attacks.
Figure 5: Effectiveness of attacks against BTARD-SGD for the case when 3 of 16 participants areByzantine.
Figure 6: Effectiveness of attacks against BTARD-SGD for the case when Byzantines send incorrectgradients once per T = 10 steps.
Figure 7: Convergence of BTARD-SGD with τ = 1 depending on the maximal number of iterationsM in the CenteredClip procedure.
Figure 8: Effectiveness of attacks against BTARD-SGD for the case when 31 of 64 participants areByzantine.
Figure 9: Effectiveness of the “A little is enough” (ALIE) attack (Baruch et al., 2019) againstBTARD-SGD.
Figure 10: Effectiveness of the Inner product manipulation (IPM) attack (Xie et al., 2020;Allen-Zhu et al., 2021) against BTARD-SGD.
