Figure 1: Examples of APSyn’s attacks for CIFAR-10 (top) and ImageNet (bottom). Each triple con-sists of an image (left), the adversarial program (right), and the adversarial example returned by theprogram (middle). Programs are depicted as images showing the patches’ position and dimensions;the legend shows the scale and shift factors of each patch, one per color channel.
Figure 2:	Effect of number of candidates on the success rate, L2 distortion, and generalization rate.
Figure 3:	Effect of number of patch instructions on APSyn’s success rate, L2 distortion, L0 distor-tion, execution time, generalization rate, and generalization L2 distortion on different datasets.
Figure 4: APSyn’s success rate, L2 and L0 distortion, and execution time for ImageNet.
Figure 5: Comparison of enumerative synthesis vs. full-program optimization.
Figure 6: Examples of the attacks APSyn generated compared to the C&W attack.
Figure 7: Comparison of APSyn with a baseline that does not perform optimization and a baselinethat does not perform adaptive optimization.
