Figure 1: Performance of NFQI and FQI in the background (Panel a) and foreground (Panel b)environments. The bar height represents the mean number of steps in the goal state (with a maximumof 1000 steps); ticks represent 95% confidence intervals over 50 repetitions. NFQI trained with bothdatasets performs better on test data from each of the environments, and substantially better for theforeground test data.
Figure 2: NFQI outperforms related algorithms in a nested Cartpole environment. Increasing theforce on the cart (x-axis) increases the difference in the foreground and background environments.
Figure 3: SHAP plots for background (Panel a) and foreground (Panel b) samples from the Cartpoleenvironment. Each point represents the SHAP value for a single sample and single feature. Themagnitude of SHAP values is similar in both contexts, but foreground SHAP values are shiftedright, suggesting that the foreground policy is compensating for the foreground-specific dynamics.
Figure 4: NFQI is robust to imbalance in foreground and background sample sizes. We fix the totalnumber of training trajectories across both conditions to be 400, and we set the fraction of samplesthat come from the foreground data to 10%, 20%, 30%, 40%, and 50% (where 50% correspondsto balanced sizes). Error bars correspond to 95% confidence intervals. NFQI maintains superiorperformance to FQI despite increasing levels of class imbalance. The foreground dataset is harderto model than the background, but a nested policy better reflects the environments.
Figure 5: NFQI does not estimate practically different policies for two groups when there is nogroup structure. Here, we find that NFQI finds policies that yield similar performance for both theforeground and background group (Panel a) and that NFQI uses sample features similarly acrossgroups to predict rewards (Panel b).
Figure 6: Visualizing FQI and NFQI policies for non-renal and renal patients. Heatmaps indicatethe policyâ€™s repletion recommendation for patients with a given potassium and creatinine level.
Figure 8: Performance of FQI in the Cartpole environment using two different approximation func-tions. Performance of each model is measured as the number of steps before the pole fell or the cartexited the frame. Performance is shown here for a linear model and a neural network.
Figure 9: A neural network-based version of NFQI outperforms related algorithms and a linearmodel-based NFQI in a nested Cartpole environment. Linear NFQI is likely underparameterized forthe Cartpole problem in both the background (Panel a) and foreground (Panel b) environments.
