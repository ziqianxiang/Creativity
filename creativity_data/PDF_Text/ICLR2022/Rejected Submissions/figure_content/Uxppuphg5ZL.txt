Figure 1: Learned simulator schematics. (a) A simulator, s, maps X≤t to a future state Xt+1,using a Predictor that returns Y, which represents information about the system's temporal evo-lution, and an UPDATER which uses Y to update Xt to Xt+1. (b) Forward GNN simulator. ThePredictor maps X≤ directly to Y using fD. (c) Iterative GNN simulator. The iterator refines Yby repeatedly applying fDI. (d) Constraint-based Graph Network simulator (C-GNS). The PREDIC-tor iteratively solves for a Y that satisfies a constraint function, fc, using Vγfc.
Figure 2: Renderings of the physical environments. Videos of the model rollours are available at:sites.google.com/view/constraint-based-simulator.
Figure 3: Test MSE on the node positions predictions across different models. ToP row: 1-stepposition MSE. Bottom row: full 160-SteP rollout MSE. The bar height represents the median MSEsover random seeds. The black cross marks show the MSE metric for each random seed. The blackarrows indicate if MSE metric for a random seeds exceeds the upper y limit of the figure.
Figure 4: Test 1-step MSE error on ROPE as a function of message-passing (MP) steps andsolver iterations. The left five subplots shows performance for different numbers of message-passing steps. The blue and red bars represent the Iterative GNN and C-GNS-GD, respectively,where the bar height is 1-step MSE. The green bars show the Forward GNN (it does not use solveriterations). The rightmost subplot shows the Forward GNN with 1 to 10 MP steps.
Figure 5: Visualization of the constraint landscape for a trained C-GNS-GD. Each subplot cor-responds to a different Rope node. The heatmap,s color shows the constraint value evaluated atdifferent values of Y state. The plot is centered around the ground-truth point. The colored pointsshow the five iterations of the constraint solver, from the initial Y(0) (yellow) to final Y(5) (orange).
Figure 6: Adding hand-designed constraints. (a) The ground truth sequence of rope states, initial-ized at the cyan-colored state, and simulated over 14 time steps, to the final, purple-colored state. (b)The C-GNS-GD’s rollout, without added constraints. (c) The C-GNS-GD’s rollout, with wall, floor,and disk-shaped “forbidden” zones, imposed at test time via hand-designed constraint functions. Avideo of the trajectories is available at Videos.
Figure 7: Generalization to more solver iterations and larger Rope systems at test time. (a) Toprow: test accuracy for ropes with the same lengths as those during training (5-10 nodes). Bottomrow: test accuracy for larger ropes (20 nodes) than during training. Left column: 1-step MSE.
