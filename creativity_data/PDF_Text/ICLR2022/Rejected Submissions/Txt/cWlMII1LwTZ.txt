Under review as a conference paper at ICLR 2022
Task-aware Privacy Preservation
for Multi-dimensional Data
Anonymous authors
Paper under double-blind review
Ab stract
Local differential privacy (LDP), a state-of-the-art technique for privacy preser-
vation, has been successfully deployed in a few real-world applications. In the
future, LDP can be adopted to anonymize richer user data attributes that will be
input to more sophisticated machine learning (ML) tasks. However, today’s LDP
approaches are largely task-agnostic and often lead to sub-optimal performance -
they will simply inject noise to all data attributes according to a given privacy bud-
get, regardless of what features are most relevant for an ultimate task. In this paper,
we address how to significantly improve the ultimate task performance for multi-
dimensional user data by considering a task-aware privacy preservation problem.
The key idea is to use an encoder-decoder framework to learn (and anonymize)
a task-relevant latent representation of user data, which gives an analytical near-
optimal solution for a linear setting with mean-squared error (MSE) task loss.
We also provide an approximate solution through a learning algorithm for general
nonlinear cases. Extensive experiments demonstrate that our task-aware approach
significantly improves ultimate task accuracy compared to a standard benchmark
LDP approach while guaranteeing the same level of privacy.
1	Introduction
In recent years, there has been a tremendous growth in the volume of available data for machine
learning (ML) tasks, leading to increasing emphasis on protecting user privacy. Differential privacy
(DP) (Dwork et al., 2006; 2014) is a state-of-the-art technique for data privacy, and its local variant
- local differential privacy (LDP) (Kasiviswanathan et al., 2011) - provides stronger privacy guar-
antees for individual users without dependence on any trusted third party. In practice, LDP has been
successfully deployed in products of companies like Google (Erlingsson et al., 2014), Apple (Dif-
ferential Privacy Team), and Microsoft (Ding et al., 2017) for some basic frequency or histogram
estimation tasks where raw user data is restricted to an n-bit discrete variable.
In the future, LDP has the promising potential to be adopted in more complex scenarios (Hassan
et al., 2019; Dankar & El Emam, 2013; Zhao et al., 2014; Cortes et al., 2016) (e.g., health care, power
grids, Internet of Things) that feature richer user data attributes that feed into more sophisticated
downstream ML tasks. In such cases, today’s standard task-agnostic LDP approaches may not be
ideal. For example, consider complex user data that must be anonymized before passing it into a
ML task function, such as a neural network classifier for credit scores. A standard approach would
be to simply perturb the data by adding artificial noise whose scale depends on the sensitivity of user
data (i.e. worst-case variation among a user population) and a given privacy budget, regardless of
what ultimate task the anonymized data will be used for. However, as the dimension and variability
of user data inevitably grows, today’s methods would generally have to increase the scale of noise to
provide the same LDP guarantee, even though many data attributes might be highly variable across
a user population, but minimally relevant for a task. As a consequence, one often adds excessive
noise to all data attributes, which can severely degrade an ultimate task’s performance.
To address these challenges, this paper introduces a fundamentally different task-aware LDP ap-
proach. Our method improves the performance of ML tasks that operate on multi-dimensional user
data while still guaranteeing the same levels of privacy. Our key technical insight is to characterize
the dependence of task performance on various user data attributes, which guides how we learn a
concise, task-relevant encoding (i.e. latent representation) of user data. Then, for the same privacy
1
Under review as a conference paper at ICLR 2022
budget, we can directly expose and perturb only the task-relevant encoding rather than raw user data,
which often allows us to add less noise and thereby improve task accuracy (see Section 2 for a con-
crete example). Crucially, user privacy is guaranteed under the same privacy budget according to the
post-processing immunity of DP (Dwork et al., 2014) (i.e., one cannot make the output of a privacy
algorithm less differentially private without additional knowledge). As such, an adversary cannot
decode the anonymized latent representation to reduce the level of privacy. Our method allows us
to learn and expose only high-valued data attributes and flexibly adjust their signal-to-noise ratio
based on their importance to a task. Moreover, when different data attributes are inter-dependent,
task-aware LDP preservation is even more promising in that we can consider the utilities of the un-
derlying orthogonal bases through principal component analysis (PCA) (Dunteman, 1989), instead
of the raw data attributes.
Contributions. In light of prior work, our contributions are three-fold. First, we propose a task-
aware privacy preservation problem in which the effect of noise perturbation to preserve LDP is
effectively considered, based on an encoder-decoder framework (Section 3). Second, in terms of
task-aware privacy preservation, we obtain an analytical near-optimal solution for a linear setting
and MSE task loss, and provide a heuristic learning algorithm for more general settings (Section
4). Third, we validate the effectiveness of our task-aware approach through three real-world experi-
ments, which show our task-aware approach outperforms the benchmark approaches on overall task
loss under various LDP budgets by as much as 73.0% (Section 5). All the proofs are given in the
Appendix.
Related Work. 1) Utility maximization in DP/LDP. Most theoretical DPZLDP research either pro-
vides a utility upper bound for a given privacy budget under some weak assumptions (Alvim et al.,
2011; Kenthapadi et al., 2012; Duchi et al., 2013; Makhdoumi & Fawaz, 2013; Hardt & Talwar,
2010; Wang et al., 2019b; Acharya et al., 2020), or designs optimal privacy preservation mecha-
nisms in some specific use cases (McSherry & Talwar, 2007; Wasserman & Zhou, 2010; Fried-
man & Schuster, 2010; Xiao et al., 2010; Thakurta & Smith, 2013; Kairouz et al., 2014; Geng &
Viswanath, 2015; Liu et al., 2016; Yiwen et al., 2018; Joseph et al., 2019; Gondara & Wang, 2020;
Wang et al., 2020). To the best of our knowledge, with respect to multi-dimensional user data,
Murakami & Kawamoto (2019), Wang et al. (2019a) and Chen et al. (2021) are the only three sim-
ilar works to ours. Murakami & Kawamoto (2019) develops a utility-maximizing LDP framework
under the assumption that some data attributes may not be privacy-sensitive, and hence the utility
improvement is mainly achieved by providing privacy guarantees for only a subset of attributes.
Wang et al. (2019a) mainly focuses on developing novel LDP mechanisms for multi-dimensional
data with an objective of minimizing the worst-case noise variance, which naturally improves util-
ity. Chen et al. (2021) preserves DP for images by adding noise to a latent representation learned
through back-propagation of task loss, where the effect of noise perturbation is not considered. The
key differences of our work are: i) we don’t make additional assumptions on the sensitivity of user
data, ii) our task-aware approach achieves a better task performance than standard LDP benchmarks
by directly studying the dependencies between the task objective and different attributes of user
data, and iii) we effectively capture the effect of noise perturbation resulting from privacy require-
ments. 2) End-to-end (E2E) learning. There has been a wide variety of works training a cascade
of deep neural networks (DNNS) through E2E learning, where a task-specific output is directly pre-
dicted from the raw inputs (Muller et al., 2006; Wang et al., 2012; Donti et al., 2017; Zhou & Tuzel,
2018; Amos et al., 2018). Our work also follows such a practice, but introduces an LDP guarantee
while improving the task performance. 3) DP in deep learning. The popularity of deep learning
also draws great attention to DP preservation therein (Song et al., 2013; Shokri & Shmatikov, 2015;
Abadi et al., 2016; Phan et al., 2016; Papernot et al., 2016; Phan et al., 2017; McMahan et al., 2018;
Wang et al., 2018; Phan et al., 2019; Arachchige et al., 2019; Liu et al., 2020; Mireshghallah et al.,
2020; Bu et al., 2020). Our work is fundamentally different. Instead of preserving LDP during the
learning process, we use learning as a tool to find the salient representation that improves the task
performance under a given privacy budget. In other words, we don’t perturb the gradient for back-
propagation but perturb the representation to guarantee LDP. Furthermore, we don’t specifically deal
with privacy preservation during the offline training process, which requires some ground truth user
data (e.g., from a small set of consenting volunteers). However, LDP of user data is guaranteed after
a trained model is deployed online.
2
Under review as a conference paper at ICLR 2022
2	Background and Motivating Example
-LDP (Kasiviswanathan et al., 2011). Let x ∈ Rn be an individual data sample, and X be the
domain of x, which is assumed to be a compact subset of Rn . A randomized algorithm M : X 7→
Rd is said to satisfy -LDP with privacy-budget > 0, if
Pr[M(x) ∈ S] ≤ ePr[M(x0) ∈ S], ∀x, x0 ∈ X,S ⊆ imM.	(1)
Essentially, when is small, one cannot readily differentiate whether the input of M is an individual
user x or x0 based on M’s outcome.
Laplace mechanism (Dwork et al., 2014). To release a sensitive function g : X 7→ Rd under
-LDP, ∀ > 0, the Laplace mechanism is a widely used mechanism which adds Laplace noise to
function g:
MLap(X, g, e) = g(X) + LaPd(M = 0,b = ；9 ),	(2)
where Lapd(μ, b) is a d-dimensional vector whose elements are i.i.d. Laplace random variables
with mean μ and scale b, which leads its variance to be 2b2. For concreteness, the analysis and
evaluation of this paper focus on the Laplace mechanism although the central idea of learning task-
relevant data representations is applicable to other random privacy mechanisms as well. ∆1g =
maxx,x0∈X kg(X) - g(X0)k1 measures the sensitivity of g under the `1 norm.
A motivating example. Consider an example shown in
Fig. 1. For simplicity, we only consider an example
with two people, Alice and Bob, and two data attributes,
age and wage. Suppose we need to preserve e-LDP for
each person with e = 1 and our task is to estimate the
mean wage as closely as possible. A straightforward task-
agnostic approach will directly expose both the two data
attributes, and add Laplace noise with scale b = 20 to
each attribute. However, a task-aware approach will ex-
pose only the wage attribute and add Laplace noise with
scale b = 10. Both the approaches guarantee LDP under
the same budget (e = 1), but the wage attribute given by
the task-aware approach is less noisy, and we can expect
that the corresponding estimated mean wage (i.e. the ulti-
mate task objective) is close to the real value with a higher
probability.
In more complex scenarios, such as when each data at-
tribute is not redundant but is valued differently in terms
of the considered task or data attributes are dependent but
not perfectly correlated, etc., the optimal solution will not
be as straightforward as the given example and will be ex-
plored in the following sections.
Prw(H) ∈5] ≤ eePr[Λ4(√) ∈ S],
∀x,√ ∈ {(29,31)5(39,41)},5CR2,e= 1
Figure 1: Motivating example. A task-
aware approach (right) is more ideal
than a task-agnostic approach (left) in
terms of a mean wage estimation task,
since the former perturbs the wage at-
tribute with a smaller noise while guar-
anteeing the same LDP budget e.
3	Problem Formulation
We now introduce the task-aware privacy preservation problem depicted in Fig. 2. Let y = f (X) ∈
Rm denote the task output associated with each ground truth data sample X, where f represents the
task function. To guarantee e-LDP for each data sample X, its true value should never be exposed to
the task function. Instead, an estimate of x, denoted by X, is used as the input to the task function
with the corresponding task output y = f (X). The objective is to minimize the overall task loss
L = E[l(y, y)] due to the difference between X and x, where X follows distribution Dx, and l is a
task loss function that captures the discrepancy between task output y and y, such as the common '2
and cross-entropy loss.
More concretely, X is first mapped to a latent representation φ ∈ RZ through an encoder function
φ = ge(X; θe), where θe are a set of encoder parameters. φ is then perturbed by a Laplace noise
vector w ∈ RZ. That is, ge is treated as the sensitive function g in Eq.2. Next, X is reconstructed
3
Under review as a conference paper at ICLR 2022
from φ + W using a decoder function X = gd(φ + w; θd) where θd are a set of decoder parameters.
Note that in reality the encoder is deployed at the end of each individual user and in general has to
be lightweight (e.g., linear or one hidden-layer neural network).
The optimal task-aware X minimizes L while pre-
serving -LDP. In other words, the task-aware pri-
vacy preservation problem aims to co-design en-
coder and decoder, i.e., find proper values for Z, θe
and θd, such that L is minimized and -LDP is pre-
served. Formally,
min	L = Eχ,w [l(y,y)],	(3)
Z,θe ,θd
s.t. y = f (X),	(4)
y = f (gd(ge(x; θe) + W； θd)),	(5)
x 〜Dχ, w 〜LaPZ (0, -1ge).	(6)
Encoder
NOise	DecOder	Function
Task
Loss
Figure 2: Overall architecture of the task-
aware privacy preservation problem.
The difficulty of our task-aware LDP problem
mainly comes from the discrepancy of the measure-
ment of overall task loss L, which depends on Dx
and captures the average performance, and the mechanism of preserving LDP, which depends on X
and focuses only on the worst-case privacy guarantee.
Benchmarks. We now describe two natural approaches to preserve -LDP. First, a task-agnostic
approach adds noise directly to the normalized X1. For convenience we assume X is already nor-
malized, and we have Z = n and ge(X) = X. Second, a privacy-agnostic approach adds noise to φ
obtained by considering the problem defined in Eq.3-6 with a pre-determined Z ≤ n and w being a
zero vector instead. That is, the privacy-preservation part is neglected when designing the encoder,
and hence a proper Z needs to be pre-determined or one would always conclude a larger Z (under
which more information can be delivered when noise is absent) is better. Both two benchmark ap-
proaches still need to determine the optimal decoder parameters θd for input φ + w . Note that for
the task-agnostic approach even though ge is an identity function, the corresponding optimal gd is
usually not an identity function, as exemplified in Section A.7.1.
4 Analysis
In this section, we solve the task-aware privacy preservation problem. Assuming a linear model and
mean-squared error (MSE) task loss, we are able to find near-optimal analytical results, which shed
clear insight on how to co-design an encoder and decoder. We then move to general settings and
present a heuristic learning algorithm which demonstrates strong empirical performance.
4.1	Linear Model with MSE Task Loss
In this subsection, we consider a linear model with MSE task loss. More specifically, encoder
function ge, decoder function gd, and task function f are assumed to be linear functions in their
corresponding inputs, and the loss function is l = ∣∣(y - y)∣∣2∙ The task function f can then be
expressed as f(X) = KX, where K ∈ Rm×n is the task matrix.
Practicality of the setting. Linear transformation is a common encoding and decoding approach for
many dimensionality-reduction techniques, such as PCA. And `2 task loss is widely used in many
application scenarios. For example, given N samples of X, suppose we want to estimate the mean
value of these samples in a few directions, given by task matrix K . Then the sum of the variance of
these estimates by using X instead of X will be NEχ,w [∣K(X - x)∣∣2], so L = Eχ,w [∣K(X - x)∣∣2]=
Ex,w [k(y - y)∣2] is a natural objective function.
Contents. We first summarize key results. For our task-aware approach, the optimal decoder is first
determined in Proposition 1, and then the optimal encoder and the corresponding optimal loss is
1We may either normalize each dimension independently when x is a multi-variate random variable, or
normalize all the dimensions jointly when x is a uni-variate time-series.
4
Under review as a conference paper at ICLR 2022
formulated in Proposition 2-4 under Assumption 1. We then relax Assumption 1 and provide lower
and upper bounds for the optimal loss in Theorem 1 and an approximate solution. All proofs are in
the Appendix.
Detailed analysis. We start our analysis with a few definitions. First, without loss of generality,
We assume the covariance matrix of X - μχ, i.e., E[(x - μχ)(x - μx)>], is positive definite, where
μx ∈ Rn is the mean vector of x. This assumption guarantees X cannot be linear transformed to a
low-dimensional representation without losing information.
We then factorize E[(x - μχ)(x - μχ)>] into LL> through Cholesky decomposition, where L ∈
Rn×n is a lower triangular matrix with positive diagonal entries. For analytical convenience, we let
h = L-I(X - μχ), which can be viewed as another representation of x, with mean μh = 0 and
covariance matrix ∑hh = I. Let Dh denote the distribution of h, and H = {L-1(x - μχ)∖x ∈ X}
denote the compact set that contains all the possible values of h 〜Dh. Since K(X - x) = P(h - h),
where P = KL, working with data representation h with task matrix P is equivalent to using X and
K. Considering zero-centered h instead of original X saves us from considering the constant terms
in the linear encoder and decoder functions.
Let E ∈ RZ ×n and D ∈ Rn×Z denote the encoder and decoder matrix associated with h, i.e.,
φ = Eh and h = D(Eh + w). Without loss of generality, we let Z ≥ n and allow some rows of E
to be zero. Equivalently, based on the relationship between X and h, we have φ = ELT(X -仙方)
and X - μχ = LD(ELT(X 一 小方)+ w). We denote the covariance matrix of W by ∑ww, and it can
be expressed as Σww = σw2 I, where σw2 is the variance of the noise added to each dimension of φ.
We first determine the optimal decoder D that minimizes L for a given encoder E, which is given
by the following proposition.
Proposition 1 (Optimal decoder D that minimizes L). An optimal decoder D that minimizes L for
a given encoder E and σw2 can be expressed as D = E> (EE> + σw2 I)-1, and corresponding L is
L = Tr(P>P) - Tr(P>PE> (EE> +σw2I)-1E),	(7)
where Tr(∙) denotes the trace ofa matrix.
The next main step is to find an encoder E that minimizes Eq.7. Since ∆1ge = maxv,v0∈E(H) kv -
v0k1, where E(H) = {Eh∖h ∈ H} is the image of H under linear transformation E, the design of
encoder E will affect ∆1ge and therefore σw2 , and for different H’s the effect of E is also different
in general. So we need to carefully consider the relationship between E and H.
When computing ∆1ge we can actually use H’s convex hull S instead of H itself, according to the
following lemma. This brings some analytical convenience in the further analysis.
Lemma 1 (Convex hull preserves ∆1ge).
∆1ge = max kv - v0k1.	(8)
v,v0∈E(S)
For encoder E, consider its singular value decomposition (SVD) instead: UΣV >, where U ∈ RZ×Z
and V ∈ Rn×n are orthogonal matrices and Σ ∈ RZ ×n is a rectangular diagonal matrix. And the
singular values are denoted by σι, ∙∙∙ ,σn with ∖σι∖ ≥ ∙∙∙ ≥ ∖σn∖. Then designing E is equivalent
to designing matrix U, V and Σ. The geometric interpretation of applying transform E = UΣV > to
set S consists of three sub-transforms: 1) rotate S by applying rotation matrix V >; 2) scale V >(S)
by applying scaling matrix Σ; 3) rotate ΣV > (S) by applying rotation matrix U. In general, the
choice of any of U, Σ, and V will affect ∆1ge and hence σw2 .
Our overall strategy is to first minimize the loss L and the sensitivity value ∆1ge over U and V .
The resulting U and V only depend on Σ under Assumption 1 (Propositions 2, 3). We then find the
optimal Σ that minimizes the L within a given privacy budget (Proposition 4). By the end, we
relax Assumption 1 to discuss the quality of our solution (Theorem 1).
We start by noting that for two points within a compact set, they must lay on the boundary to have
the maximum `1 distance. We then make the following assumption in terms of ∂S, which is the
boundary of S. It decouples the relationship between the choice of V and the value of ∆1ge .
Assumption 1 (Boundary ∂S is a centered hypersphere). The boundary ∂S is a centered hyper-
sphere of radius r ≥ 0, which is expressed as {h ∈ Rn∖khk22 = r2}.
5
Under review as a conference paper at ICLR 2022
This is a strong assumption, but at the end of this subsection we will give a lower and upper bound of
L for any possible ∂S based on the results under this assumption. Since ∂V (S) = {h ∈ Rn|khk22 =
r2} = ∂S for any orthogonal V , this assumption gives us a nice property: the choice of V doesn’t
affect ∆1 ge and σw2 . Based on the above assumption, we can safely consider the optimal design of
V that minimizes L when Σ and σw2 are given, which leads to the following proposition.
Proposition 2 (Optimal rotation matrix V that minimizes L under Assumption 1). Suppose the
eigen-decomposition of the Gram matrix P>P is expressed as P>PQ = QΛ, where Λ =
diag(λι, ∙∙∙ , λn) ∈ Rn×n is a diagonal matrix whose diagonal elements are eigenvalues with
λι ≥ ∙∙∙ ≥ λn ≥ 0, and Q ∈ Rn×n is an orthogonal matrix whose columns are CorreSponding
normalized eigenvectors. Then, when Σ and σw2 are given, L is minimized for V = Q, any Z ≥ n,
and any orthogonal U. And the corresponding L can be expressed as:
L
nn	2
Xλi-X λi σ2⅛.
(9)
It is clear that choosing a Z > n brings no additional benefit. Hence we can only consider Z = n
for simplicity.
After the first two sub-transforms Σ and V >, the boundary ∂S = {h ∈ Rn|khk22 = r2} becomes
∂ΣV>(S) = {v ∈ Rn| pn=ι v2∕σ2 = r2}, which is a hyperellipsoid. We then have the following
proposition that gives the optimal U which minimizes ∆1ge.
Proposition 3 (Optimal rotation matrix U that minimizes ∆1ge under Assumption 1). For a given
Σ, U = I minimizes ∆1ge, and the corresponding minimum value is
(10)
Next, we need to consider how to design the scaling matrix Σ, or equivalently, the values of
σ2,…,σnn, to minimize Eq.9, which is the only remaining piece. Clearly, for any given σ2, ∙∙∙ ,σn
if we increase them proportionally, σw2 also needs tobe increased proportionally to preserve the same
-LDP. So without loss of generality, we impose an additional constraint Pin=1 σi2 = M, where M
is a positive constant. And the following proposition gives the optimal choice of Σ that minimizes
L and preserves -LDP with the Laplace mechanism.
Proposition 4 (Optimal scaling matrix Σ that minimizes L and preserves -LDP with Laplace mech-
anism under Assumption 1). The optimal choice of σ2, ∙∙∙ , σn that minimize L and preserve E-LDP
with Laplace mechanism under constraint in=1 σi2 = M is given by
σi2
8r2
R
8r2
/)
∀i ∈{1, 2,…，Z0}
∀i ∈{Z0 +1,Z0 + 2, ∙∙∙ ,n}
(11)
where Z0 ≤ n is the largest integer such that:
(1 + Z0 ∙
8r2	8r2
IF) - IF >0,
(12)
and the corresponding L is
i + ”/2 (X E + X λi.
1 + Z0 ∙ 8r2∕e2
i=1	i=Z0+1
(13)
For our task-aware approach, Proposition 1-4 complete the optimal encoder and decoder design that
preserves E-LDP with the Laplace mechanism under Assumption 1.
Validation of Task Loss from Theoretical Results (Fig. 3). We now compare the performance of
our task-aware approach and the benchmark approaches when L = I and Assumption 1 holds. The
derivations of the benchmark approaches are in Section A.7. We consider three different settings
6
Under review as a conference paper at ICLR 2022
which have n = 4 and λ1 = 4 in common. And in setting 1, 2, and 3 we let λ2 = λ3 = λ4
be 0, 1, 2 respectively. For the privacy-agnostic approach2, we use a pre-determined Z = 2. Our
observations are: 1) Compared to the task-agnostic approach, our task-aware approach achieves the
largest improvement in setting 1, because λ2∙.4 = 0 implies that X2：4 are purely redundant. We can
even expect higher gain than setting 1 when We have larger n and zero12：n's, and the gain will be
zero if all the λi ’s are equal. 2) The privacy-agnostic approach completely missed the information
carried by x3:4, which explains the improvement of our task-aware approach for small r/ in setting
2 and 3. We can expect higher gain than setting 3 when we have larger n and larger λ2∕s, and the
gain will be zero if all the missed x/s correspond to zero λ∕s and all the other λ∕s are equal.
Transition to general boundary ∂S. Based
on the results under Assumption 1, we can give
a lower and upper bound of L* for general
∂S, which is not necessarily a centered hyper-
sphere.
Theorem 1 (Lower and upper bound of L for
general boundary ∂S when -LDP is preserved
with Laplace mechanism). Suppose ∂S ⊂
{h ∈ Rn : rm2in ≤ khk22 ≤ rm2ax}. Then when -
LDP is preserved with the Laplace mechanism,
the optimal L is bounded by:
L(rmin ； λl∙n, E) ≤ L* ≤ L(rmax； λ±n, e) (14)
where L(r; λLn, e) is the value of L determined
by Eq.12 and 13 for given radius r, eigenvalues
λ±n and privacy budget e.
--- Task-aware (1)	-	-	Task-aware	(2)	  Task-aware	(3)
--- Task-agnostic (1) -	-	Task-agnostic (2) ...... Task-agnostic	(3)
---Privacy-agnostic (1) -	-	Privacy-agnostic (2).Privacy-agnostic (3)
r/
Figure 3: Theoretical overall task loss L com-
parison when L = I and Assumption 1 holds. We
consider three different settings which have n = 4
and λ1 = 4 in common. Difference between set-
tings: 1)12：4 = 0; 2) λ2∕ = 1; 3) λ2∕ = 2. For
the privacy-agnostic approach we use Z = 2.
Therefore, to preserve e-LDP with the Laplace
mechanism, our task-aware solution for general ∂S is: 1) First, find the smallest rmax and the largest
rmin that bound ∂S; 2) Then assume ∂S is {h ∈ Rn|khk22 = rm2 ax}, and choose the encoder E and
decoder D based on Proposition 2-4. We don’t use the corresponding σw2 however, because it may
guarantee a higher LDP than needed. 3) Next, compute σw2 for real ∂S under decoder D and privacy
budget e.
The associated loss for the task-aware approach is at most L(rmax; λ±n, e). Though in general not
optimal, it differs from L* by at most L(rmax; λ±n, e) - L(rmin； λLn, e). The difference is small
when ∂S is “nearly” a hypersphere, i.e., rmax - rmin ≈ 0.
4.2	General Settings
For more complex scenarios, it is challenging to give an analytical solution to the task-aware pri-
vacy preservation problem, especially when the encoder function ge, decoder function gd, and task
function f correspond to neural networks. Thus, we present a heuristic learning algorithm. (The
benchmark algorithms are given in Section A.7.4 due to space limit.)
Algorithm 1 is our proposed task-aware algorithm for general settings. First, the privacy budget e
and the latent dimension Z are required inputs for the algorithm. In general, Z should be proper,
i.e., it is neither too small (we can find a better solution by choosing a larger Z) nor too big (which
introduces unnecessary complexity). In practice a practitioner may need to determine a proper Z
on a case-by-case basis (See Section A.9 of the Appendix for more details). Next, the algorithm
adopts an alternating iteration approach, where in each epoch, we first update parameters θe, θd by
their corresponding negative gradients in line 3, and then recompute ∆1 ge and re-sample w from
LapZ(0, ∆ιge∕e) in line 4. Note that, in terms of encoder parameter θe, instead of considering the
gradient of L, we add an `2 regularization term ηkθe k2 where η is a positive constant. Therefore,
we update θe with the negative gradient -(VθeL + 2ηθe). Without regularization, the ∣∣θe∣∣2 will
grow to infinity since we can always achieve a smaller L by increasing the scale of φ proportionally.
But it is not a direction we are looking for, since σw2 will also increase proportionally to guarantee
e-LDP.
2 One can use another value of Z, under which the result may be slightly different but our task-aware
approach will still outperform.
7
Under review as a conference paper at ICLR 2022
Algorithm 1 Task-aware Algorithm for -LDP Preservation in General Settings
Require: Privacy budget e and Z
1:	Initialize encoder/decoder parameters θe , θd and noise vector w
2:	for τ ∈ {0, 1,…,Nepochs - 1} do
3:	Update θe and θd with -(Vθe L + 2ηθe) and -V e@ L, respectively, by one or multiple steps
4:	Recompute ∆ιge, and re-sample W from LapZ (0, ∆ιge∕e)
5:	end for
6:	Return θe, θd and ∆1ge
■ Task-aware (Ours) X Task-agnostic ▲ Privacy-agnostic
0.035
0.030
0.025
0.020
0.015
0	0.2	0.4	0.6	0.8	1
ssoj"Ei
noitpmusnoC rewoP fo ES
Figure 4: Results of Hourly Household Power Consumption. Left: Task loss l(y, y) under different
LDP budgets. Right: MSE of power consumption for each hour, when = 5. Our task-aware
approach achieves a lower MSE for all the day-time hours.
5	Evaluation
Our evaluation compares the performance of the proposed task-aware approach and the benchmark
approaches. Three applications and corresponding datasets from the standard UCI Machine Learn-
ing Repository (Dua & Graff, 2017) are considered: mean estimation of hourly household power
consumption, real estate valuation, and breast cancer detection. Configuration and training details
are provided in the appendix due to space limitations.
Mean Estimation of Hourly Household Power Consumption. We first consider a mean estimation
problem, based on measurements of individual household electric power consumption over four
years (Hebrail & Berard, 2012). Each data sample x ∈ R24 is a time-series that contains the hourly
household power consumption for one single day, and our objective is to estimate the mean of the
hourly household power consumption for N days. As discussed in Section 4.1, we can define the
overall task loss in the following way:
24
L = Eχ~Dχ[∣∣K(X — x)k2] = Xk2Eχ~Dχ[∣∣Xi - xik2]	(15)
i=1
where K = diag(kι, k2,…，k24) factors the importance of the mean estimation for each hour. In
our experiment We set k = 2 for i ∈ {9,10,…，20} (i.e., day-time hours) and k = 1 for other
i’s (i.e., night-time hours). And we adopt a linear encoder and decoder model. As the considered
problem is based on a linear model with MSE task loss, we adopt the solutions developed in Section
4.1 for the three approaches (we choose Z = 3 for the privacy-agnostic approach2).
Fig. 4	shows our experimental results. First, on the left, we compare the task loss l(y,y) for the three
approaches under different LDP budgets. For each approach, the overall task loss L decreases when
a larger LDP budget is given. Besides, for a given LDP budget, our task-aware approach always
outperforms the benchmark approaches on overall task loss L, and the maximum improvements
against the task-agnostic and privacy-agnostic approach are 22.9% ( = 10) and 11.7% ( = 5),
respectively. Second, on the right, we select = 5 and compare the MSE of power consumption for
each hour. We see that our task-aware approach achieves a lower MSE for all the day-time hours,
and a similar MSE for the night-time hours. This observation can be explained by three reasons:
1) We select a higher ki for the day-time hours, so our task-aware approach gives higher priority to
8
Under review as a conference paper at ICLR 2022
T Task-aware (Ours)
X Task-agnostic A Privacy-agnostic
Figure	5: Task loss l(y,y) under different LDP budgets for real estate valuation (left) and breast
cancer detection (right).
minimizing the loss for those dimensions in x; 2) Although x has 24 dimensions, the variance in
each dimension can be mostly explained by several common latent dimensions, so our task-aware
approach still achieves a similar MSE for the night-time hours; 3) Our task-aware approach is able
to adopt different scales to different latent dimensions according to their task relevance while the
privacy-agnostic approach cannot.
Next, we consider a real estate valuation problem and a breast cancer detection problem. Both the
problems are not based on the linear model with MSE task loss, so we use Algorithm 1 developed in
Section 4.2 to solve them (we use Z = 3 for both our task-aware approach and the privacy-agnostic
approach for fair comparison; and the performance of the task-aware approach under different Z’s
can be found in Section A.9 of the Appendix).
Real Estate Valuation. For this problem, we use historical real estate valuation data collected from
Taiwan (Yeh & Hsu, 2018), which contains 400+ instances. Here, x ∈ R6 contains 6 attributes
that are highly related to the value of a house, including transaction date, house age, geographic
coordinates, etc. And y ∈ R represents the valuation of a house. We first train a one-hidden-layer
feedforward neural network regression model using the ground truth x and y, to serve as our task
function f. Then, We minimize the '2 loss of y and y, based on a linear encoder and decoder model.
Breast Cancer Detection. For this problem, we use a well-known breast cancer diagnostic dataset
(Street et al., 1993) from Wisconsin, which contains 500+ instances. Here, x ∈ R30 contains 30
attributes that measure 10 features of a cell nucleus. And y is a binary variable that represents a
diagnosis result (malignant or benign). We first train a one-hidden-layer feedforward neural network
classification model using the ground truth x and y, to serve as our task function f. Then we aim to
minimize the cross-entropy loss of y and y, with encoder and decoder both being one-hidden-layer
feedforward neural networks.
Fig. 5	shows the evaluation results. For both problems, we can see our task-aware approach nearly
always outperforms the benchmark approaches on overall task loss L under different LDP budgets,
which demonstrates the effectiveness of our proposed solution. The maximum improvements against
the task-agnostic and privacy-agnostic approach are 21.9% ( = 5) and 13.5% ( = 5) for real estate
valuation, and are 73.0% ( = 20) and 45.6% ( = 20) for breast cancer detection.
6	Conclusion and Future Work
This paper provides a principled task-aware privacy preservation method to improve the privacy-
utility trade-off for ML tasks that increasingly operate on rich, multi-dimensional user data. We
gave an analytical near-optimal solution for a general linear encoder-decoder model and MSE task
loss, and developed a heuristic learning algorithm for more general nonlinear settings. Our evalu-
ation showed that our task-aware approach outperforms the benchmark approaches on overall task
loss under various LDP budgets. Our future work will focus on the analysis of the task-aware pri-
vacy preservation problem for approximate LDP and other LDP mechanisms as well as multi-task
learning.
9
Under review as a conference paper at ICLR 2022
References
Martin Abadi, Andy Chu, Ian Goodfellow, H Brendan McMahan, Ilya Mironov, Kunal Talwar, and
Li Zhang. Deep learning with differential privacy. In Proceedings of the 2016 ACM SIGSAC
conference on computer and communications security, pp. 308-318, 2016.
Jayadev Acharya, Kallista Bonawitz, Peter Kairouz, Daniel Ramage, and Ziteng Sun. Context aware
local differential privacy. In International Conference on Machine Learning, pp. 52-62. PMLR,
2020.
Mario S Alvim, MigUel E Andres, Konstantinos Chatzikokolakis, Pierpaolo Degano, and Catuscia
Palamidessi. Differential privacy: on the trade-off between utility and information leakage. In
International Workshop on Formal Aspects in Security and Trust, pp. 39-54. Springer, 2011.
Brandon Amos, Ivan Dario Jimenez Rodriguez, Jacob Sacks, Byron Boots, and J Zico Kolter. Dif-
ferentiable mpc for end-to-end planning and control. arXiv preprint arXiv:1810.13400, 2018.
Pathum Chamikara Mahawaga Arachchige, Peter Bertok, Ibrahim Khalil, Dongxi Liu, Seyit
Camtepe, and Mohammed Atiquzzaman. Local differential privacy for deep learning. IEEE
Internet of Things Journal, 7(7):5827-5842, 2019.
Zhiqi Bu, Jinshuo Dong, Qi Long, and Weijie J Su. Deep learning with gaussian differential privacy.
Harvard data science review, 2020(23), 2020.
John Casey. A TREATISE OF THE ANALYTICAL GEOMETRY OF THE POINT, LINE, CIRCLE,
AND CONIC SECTIONS. 1893.
Jia-Wei Chen, Li-Ju Chen, Chia-Mu Yu, and Chun-Shien Lu. Perceptual indistinguishability-net
(pi-net): Facial image obfuscation with manipulable semantics. In Proceedings of the IEEE/CVF
Conference on Computer Vision and Pattern Recognition, pp. 6478-6487, 2021.
Jorge Cortes, Geir E Dullerud, Shuo Han, Jerome Le Ny, Sayan Mitra, and George J Pappas. Dif-
ferential privacy in control and network systems. In 2016 IEEE 55th Conference on Decision and
Control (CDC), pp. 4252-4272. IEEE, 2016.
Fida Kamal Dankar and Khaled El Emam. Practicing differential privacy in health care: A review.
Trans. Data Priv., 6(1):35-67, 2013.
Apple Differential Privacy Team. Learning with privacy at scale. URL
https://docs-assets.developer.apple.com/ml-research/papers/
learning-with-privacy-at-scale.pdf.
Bolin Ding, Janardhan Kulkarni, and Sergey Yekhanin. Collecting telemetry data privately. arXiv
preprint arXiv:1712.01524, 2017.
Priya Donti, Brandon Amos, and J Zico Kolter. Task-based end-to-end model learning in stochastic
optimization. In Advances in Neural Information Processing Systems, pp. 5484-5494, 2017.
Dheeru Dua and Casey Graff. UCI machine learning repository, 2017. URL http://archive.
ics.uci.edu/ml.
John C Duchi, Michael I Jordan, and Martin J Wainwright. Local privacy and statistical minimax
rates. In 2013 IEEE 54th Annual Symposium on Foundations of Computer Science, pp. 429-438.
IEEE, 2013.
George H Dunteman. Principal components analysis. Number 69. Sage, 1989.
Cynthia Dwork, Frank McSherry, Kobbi Nissim, and Adam Smith. Calibrating noise to sensitivity
in private data analysis. In Theory of cryptography conference, pp. 265-284. Springer, 2006.
Cynthia Dwork, Aaron Roth, et al. The algorithmic foundations of differential privacy. Foundations
and Trends in Theoretical Computer Science, 9(3-4):211-407, 2014.
10
Under review as a conference paper at ICLR 2022
UJlfar Erlingsson, Vasyl Pihur, and Aleksandra Korolova. Rappor: Randomized aggregatable
privacy-preserving ordinal response. In Proceedings of the 2014 ACM SIGSAC conference on
computer and communications security, pp. 1054-1067, 2014.
Arik Friedman and Assaf Schuster. Data mining with differential privacy. In Proceedings of the 16th
ACM SIGKDD international conference on Knowledge discovery and data mining, pp. 493-502,
2010.
Quan Geng and Pramod Viswanath. The optimal noise-adding mechanism in differential privacy.
IEEE Transactions on Information Theory, 62(2):925-951, 2015.
Lovedeep Gondara and Ke Wang. Differentially private small dataset release using random projec-
tions. In Conference on Uncertainty in Artificial Intelligence, pp. 639-648. PMLR, 2020.
Moritz Hardt and Kunal Talwar. On the geometry of differential privacy. In Proceedings of the
forty-second ACM symposium on Theory of computing, pp. 705-714, 2010.
Muneeb Ul Hassan, Mubashir Husain Rehmani, and Jinjun Chen. Differential privacy techniques
for cyber physical systems: a survey. IEEE Communications Surveys & Tutorials, 22(1):746-789,
2019.
Georges Hebrail and Alice Berard. Individual household electric power consumption data
set, 2012. URL https://archive.ics.uci.edu/ml/datasets/individual+
household+electric+power+consumption.
Matthew Joseph, Jieming Mao, Seth Neel, and Aaron Roth. The role of interactivity in local dif-
ferential privacy. In 2019 IEEE 60th Annual Symposium on Foundations of Computer Science
(FOCS), pp. 94-105. IEEE, 2019.
Peter Kairouz, Sewoong Oh, and Pramod Viswanath. Extremal mechanisms for local differential
privacy. arXiv preprint arXiv:1407.1338, 2014.
Shiva Prasad Kasiviswanathan, Homin K Lee, Kobbi Nissim, Sofya Raskhodnikova, and Adam
Smith. What can we learn privately? SIAM Journal on Computing, 40(3):793-826, 2011.
Krishnaram Kenthapadi, Aleksandra Korolova, Ilya Mironov, and Nina Mishra. Privacy via the
johnson-lindenstrauss transform. arXiv preprint arXiv:1204.2606, 2012.
Yann LeCun, Leon Bottou, Yoshua Bengio, and Patrick Haffner. Gradient-based learning applied to
document recognition. Proceedings of the IEEE, 86(11):2278-2324, 1998.
Changchang Liu, Supriyo Chakraborty, and Prateek Mittal. Dependence makes you vulnberable:
Differential privacy under dependent tuples. In NDSS, volume 16, pp. 21-24, 2016.
Ruixuan Liu, Yang Cao, Masatoshi Yoshikawa, and Hong Chen. Fedsel: Federated sgd under local
differential privacy with top-k dimension selection. In International Conference on Database
Systems for Advanced Applications, pp. 485-501. Springer, 2020.
Ali Makhdoumi and Nadia Fawaz. Privacy-utility tradeoff under statistical uncertainty. In 2013 51st
Annual Allerton Conference on Communication, Control, and Computing (Allerton), pp. 1627-
1634. IEEE, 2013.
H Brendan McMahan, Galen Andrew, Ulfar Erlingsson, Steve Chien, Ilya Mironov, Nicolas Paper-
not, and Peter Kairouz. A general approach to adding differential privacy to iterative training
procedures. arXiv preprint arXiv:1812.06210, 2018.
Frank McSherry and Kunal Talwar. Mechanism design via differential privacy. In 48th Annual IEEE
Symposium on Foundations of Computer Science (FOCS’07), pp. 94-103. IEEE, 2007.
Fatemehsadat Mireshghallah, Mohammadkazem Taram, Ali Jalali, Ahmed Taha Elthakeb, Dean
Tullsen, and Hadi Esmaeilzadeh. A principled approach to learning stochastic representations for
privacy in deep neural inference. arXiv preprint arXiv:2003.12154, 2020.
11
Under review as a conference paper at ICLR 2022
Urs Muller, Jan Ben, Eric Cosatto, Beat Flepp, and Yann L Cun. Off-road obstacle avoidance
through end-to-end learning. In Advances in neural information processing Systems, pp. 739-
746. Citeseer, 2006.
Takao Murakami and Yusuke Kawamoto. Utility-optimized local differential privacy mechanisms
for distribution estimation. In 28th {USENIX} Security Symposium ({USENIX} Security 19), pp.
1877-1894, 2019.
Nicolas Papernot, Martin Abadi, Ulfar Erlingsson, Ian Goodfellow, and Kunal Talwar. Semi-
supervised knowledge transfer for deep learning from private training data. arXiv preprint
arXiv:1610.05755, 2016.
NhatHai Phan, Yue Wang, Xintao Wu, and Dejing Dou. Differential privacy preservation for deep
auto-encoders: an application of human behavior prediction. In Proceedings of the AAAI Confer-
ence on Artificial Intelligence, volume 30, 2016.
NhatHai Phan, Xintao Wu, Han Hu, and Dejing Dou. Adaptive laplace mechanism: Differential
privacy preservation in deep learning. In 2017 IEEE International Conference on Data Mining
(ICDM), pp. 385-394. IEEE, 2017.
NhatHai Phan, Minh Vu, Yang Liu, Ruoming Jin, Dejing Dou, Xintao Wu, and My T Thai. Het-
erogeneous gaussian mechanism: Preserving differential privacy in deep learning with provable
robustness. arXiv preprint arXiv:1906.01444, 2019.
Axel Ruhe. Perturbation bounds for means of eigenvalues and invariant subspaces. BIT Numerical
Mathematics, 10(3):343-354, 1970.
Reza Shokri and Vitaly Shmatikov. Privacy-preserving deep learning. In Proceedings of the 22nd
ACM SIGSAC conference on computer and communications security, pp. 1310-1321, 2015.
Shuang Song, Kamalika Chaudhuri, and Anand D Sarwate. Stochastic gradient descent with differ-
entially private updates. In 2013 IEEE Global Conference on Signal and Information Processing,
pp. 245-248. IEEE, 2013.
W Nick Street, William H Wolberg, and Olvi L Mangasarian. Nuclear feature extraction for breast
tumor diagnosis. In Biomedical image processing and biomedical visualization, volume 1905,
pp. 861-870. International Society for Optics and Photonics, 1993.
Abhradeep Guha Thakurta and Adam Smith. Differentially private feature selection via stability
arguments, and the robustness of the lasso. In Conference on Learning Theory, pp. 819-850.
PMLR, 2013.
John Von Neumann. Some matrix-inequalities and metrization of matric space. 1937.
Di Wang, Marco Gaboardi, Adam Smith, and Jinhui Xu. Empirical risk minimization in the non-
interactive local model of differential privacy. Journal of machine learning research, 21(200),
2020.
Ji Wang, Jianguo Zhang, Weidong Bao, Xiaomin Zhu, Bokai Cao, and Philip S Yu. Not just privacy:
Improving performance of private deep learning in mobile cloud. In Proceedings of the 24th
ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, pp. 2407-
2416, 2018.
Ning Wang, Xiaokui Xiao, Yin Yang, Jun Zhao, Siu Cheung Hui, Hyejin Shin, Junbum Shin, and
Ge Yu. Collecting and analyzing multidimensional data with local differential privacy. In 2019
IEEE 35th International Conference on Data Engineering (ICDE), pp. 638-649. IEEE, 2019a.
Tao Wang, David J Wu, Adam Coates, and Andrew Y Ng. End-to-end text recognition with convolu-
tional neural networks. In Proceedings of the 21st international conference on pattern recognition
(ICPR2012), pp. 3304-3308. IEEE, 2012.
Yu-Xiang Wang, Borja Balle, and Shiva Prasad Kasiviswanathan. Subsampled renyi differential
privacy and analytical moments accountant. In The 22nd International Conference on Artificial
Intelligence and Statistics, pp. 1226-1235. PMLR, 2019b.
12
Under review as a conference paper at ICLR 2022
Larry Wasserman and Shuheng Zhou. A statistical framework for differential privacy. Journal of
the American Statistical Association,105(489):375-389, 2010.
Xiaokui Xiao, Guozhang Wang, and Johannes Gehrke. Differential privacy via wavelet transforms.
IEEE Transactions on knowledge and data engineering, 23(8):1200-1214, 2010.
I-Cheng Yeh and Tzu-Kuang Hsu. Building real estate valuation models with comparative approach
through case-based reasoning. Applied Soft Computing, 65:260-271, 2018.
Nie Yiwen, Wei Yang, Liusheng Huang, Xike Xie, Zhenhua Zhao, and Shaowei Wang. A utility-
optimized framework for personalized private histogram estimation. IEEE Transactions on
Knowledge and Data Engineering, 31(4):655-669, 2018.
Jing Zhao, Taeho Jung, Yu Wang, and Xiangyang Li. Achieving differential privacy of data disclo-
sure in the smart grid. In IEEE INFOCOM 2014-IEEE Conference on Computer Communications,
pp. 504-512. IEEE, 2014.
Yin Zhou and Oncel Tuzel. Voxelnet: End-to-end learning for point cloud based 3d object detection.
In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pp. 4490-
4499, 2018.
13
Under review as a conference paper at ICLR 2022
A Appendix
A.1 Proof of Proposition 1
Proof. We have
L = E[kK(X — x)k2] = E[kP(h — h)k2] = E[kP((DE-I )h + Dw)k2]
= E[Tr(P (DE - I)hh>(DE - I)>P >) + Tr(PDww>D>P>)]
= Tr(P (DE — I)(DE — I)>P >) + Tr(P DΣwwD>P >).
And we can verify that D = E> (EE> + σw2 I)-1 is a zero point of
VL ɪ	ɪ	.
^D = 2PTP((DE - I)E> + D ∙ σWI).
Then we plug the expression of D into Eq.18 and get Eq.7.
(16)
(17)
(18)
(19)
□
A.2 Proof of Lemma 1
In this subsection we give the proof of Lemma 1. Here we treat E as a mapping instead of a matrix,
and its inverse mapping, which is also linear, is denoted by E-1.
We first prove the following lemma.
Lemma 2 (Convex hull after linear transformation). E(S) is the convex hull of E(H).
Proof. Since H ⊆ S, we have E(H) ⊆ E(S). And for any v, v0 ∈ E(S) and δ ∈ [0, 1], we have
δh + (1 - δ)h0 ∈ S, where h ∈ E-1 (v) ∩ S and h0 ∈ E-1 (v0) ∩ S. Thus δv + (1 - δ)v0 =
E(δh + (1 - δ)h0) ∈ E(S). Therefore, E(S) is a convex set containing E(H).
If E(S) is not the convex hull, then we can find a convex set B such that E(H) ⊆ B ⊂ E(S). Then
we have H ⊆ E-1(B)∩S ⊂ S(IfE-1(B)∩S = S, we will have B = E(E-1(B)∩S) = E(S),
which is not true). Besides, for any h, h0 ∈ E-1(B) ∩S and δ ∈ [0, 1], we have δv+ (1 - δ)v0 ∈ B,
where v = E(h) and v0 = E(h0). Thusδh+(1 -δ)h0 ∈ E-1(δv + (1 -δ)v0)∩S ∈ E-1(B) ∩S.
Therefore, E-1 (B) ∩ S is a convex set containing H. This is contradictory to the fact that S is the
convex hull of H. So E(S) must be the convex hull of E(H).	口
Now we can proceed to the proof of Lemma 1.
Proof. Notice that ∆1ge = maxv,v0∈E(H) kv - v0k1, so our target is to prove
max
v,v0∈E(S)
kv-v0k1
max
v,v0 ∈E(H)
kv-v0k1.
(20)
First, since E(H) ⊆ E(S), we have maxv,v0 ∈E(S) kv - v0k1 ≥ maxv,v0 ∈E(H) kv - v0k1.
Next, suppose v1, v2 are the two points in E(S) such that the `1 distance between them is the largest.
Since E(S) is the convex hull of E(H), we can express vi as (∀i ∈ {1, 2}):
p(i)
Vi = Etij vi,j,	QI)
j=1
s.t. Vi,j ∈ E(H),	∀j ∈{1, 2,…，p(i)},	(22)
p(i)
Xti,j = 1, and ti,j ≥ O,	∀j ∈{1,2,…，p(i)},	(23)
j=1
where p(i) is an positive integer, ∀i ∈ {1, 2}.
For convenience, We let A = maXv,vθ∈{Vi j∣∀i,j} Ilv — v0∣∣ι∙ Clearly, A ≤ maXv,v0∈E(H) IIv — v0∣∣ι∙
14
Under review as a conference paper at ICLR 2022
Notice that v1 - v2 can be expressed as the linear combination of v1,j - v2,q, ∀j ∈
{1,2,…，p(1)}, q ∈ {1, 2,…，p(2)}. That is, ∃γj,q ≥ 0 such that:
p(1) p(2)	p(1) p(2)
v1-v2=
Yj,q(VIj- v2,q),	s.t.	γj,q = 1.	(24)
Then we have
p(1) p(2)
kv1 -v2k1 =k XX Yj,q (VIj- v2,q )k1
j=1 q=1
p(1) p(2)
≤ XX kYj,q (VIj- v2,q )k1 =
j=1 q=1
p(1) p(2)
≤	γj qA = A ≤ max
,	v,v0∈E(
j=1 q=1
	(25)
p(1) p(2) XX Yj,q k(VIj- v2,q )ki	(26)
kV-V0k1.	(27)
So we also have maxv,v0∈E(S) kV - V0k1 ≤ maxv,v0∈E(H) kV - V0k1.
Thus ∆1ge = maxv,v0∈E(H) kV - V0k1 = maxv,v0 ∈E(S) kV - V0k1.
□
A.3 Proof of Proposition 2
Proof. We have Tr(P>P) = Pin=1 λi, which is a fixed number. Therefore we focus on maximizing
the second trace term in Eq.7. For any Z ≥ n we have
EE> +	σWI =	UΣΣ>U> + σWI	= Udiag(σ2 +	σW,…足2	+	σW,σW,…，σW)U>.	(28)
X----{----}
Z -n in total
Thus we have for any orthogonal U:
E>(EE> +σw2I)-1E
=V∑>U> ∙ Udiag( 2 1 2，
σ12 + σw2
=V Σ>diag(
=V diag(
'σ2 + σW,
σ12
σn2 + σ
1
σ2 + σ2 ，
σn σw
1
——..
-2 Y ,
ww
1
方,
σw
,3)U> ∙ U∑V>
σ2
σ2 + σW,
2
)V >
σ2 + σ2
σn	σw
(29)
(30)
(31)
(32)
1
w
So E> (EE> + σw2 I)-1E is a positive semi-definite matrix with eigen-values σ2+σ2 ≥ …≥
σ2
2 J 2 ≥ 0. Then by RUhe S trace inequality (Ruhe, 1970) (a corollary of Von Neumanns trace
σn+σw
inequality (Von Neumann, 1937)):
n2
Tr(PTPE>(EE> + σWI)-1E) ≤ X "(33)
w	i=1	σi2 + σw2
and when V = Q the equality holds. So we have Eq.9 for V = Q, any Z ≥ n and any orthogonal
U.	□
A.4 Proof of Proposition 3
In this subsection we give the proof of Proposition 3. For convenience we let a% = r∣σ∕, ∀i ∈
{1,2,…，n}, and then the hyperellipsoid {v ∈ Rn| PNi v2∕σ2 = r2} can be written as {v ∈
Rn I Pn=i v2∕a2 = 1}, which is the standard expression. And We also have ai ≥ a2 ≥ ∙∙∙ ≥ an
Before proving Proposition 3, we first give two lemmas related to the properties ofa hyperellipsoid.
15
Under review as a conference paper at ICLR 2022
. Any tangent hyperplane of hyperellipsoid {v ∈
Lemma 3 (Tangent hyperplane of hyperellipsoid)
n n 22
n
|	vi /ai = } can e expresse as:
n	un
Xujvj = tuXaj2uj2
j=1	j=1
where u1,u2, ∙∙∙ ,Un are the coefficients.
(34)
Proof. It can be easily verified that point V ∈ Rn such that
2
a uj
Vj= / j , j ∈{1,2,…，n},	(35)
VP=TaIuI
is located on the hyperellipsoid. And by adjusting the values of uι, u2,…,un We can express any
point on the hyperellipsoid with Eq.35. Moreover, the tangent hyperplane for point of tangency V
can be expressed as
n
X j = L	(36)
j =1 aj
Plugging Eq.35 into Eq.36 we get Eq.34.	□
Lemma 4 (Locus of the vertices of circumscribed orthotope). The vertices of any orthotope that
circumscribes hyperellipsoid {V	∈	Rn |	in=1 ViI/aiI	=	1}	is on hypersphere {V ∈ Rn |	in=1	ViI	=
Pin=1 aiI}.
Proof. When n = 2, the hypersphere reduces to a circle that is well-known as the orthoptic circle
ofan ellipse (Casey, 1893). We hereby generalize this result to any n.
A vertex of a circumscribed orthotope can be viewed as the intersection of n tangent hyperplanes.
According to Lemma 3, we can express them as:
n	un
X ui,j vj = Λ X αju2,j , ∀i ∈ {1,2,…，n},	(37)
j =1	j=1
where i is the index of the i-th hyperplane. Here we letPn=I u2,j = 1, ∀j ∈ {1,2,…，n}. Besides,
these hyperplanes are perpendicular to each other, so the coefficients also satisfy Pin=1 ui,j ui,k = 0,
∀k = j. So if we let Ω ∈ Rn×n be a matrix with Uij on the i-th row and j-th column, ∀i, j, then Ω
is an orthogonal matrix, and we further have Pn=I U22j = 1, ∀i ∈ {1, 2,…,n}.
Thus the considered vertex satisfies Eq.37, ∀i ∈ {1,2,…,n}, which implies it also satisfies:
n n	nn
X(X ui,jVj)I = XX
ajIuiI,j .	(38)
i=1 j =1	i=1 j =1
For the left hand side, we have
n n	nn	n
(	ui,jVj)I = ΣΣui,j Vj + 2ΣΣui,j ui,k Vj Vp	(39)
i=1 j=1	i=1 j =1	i=1 j 6=p
nn	n	n
= X(XuiI,j)VjI+2X(Xui,j ui,k)Vj Vp = X VjI .	(40)
j=1 i=1	j6=p i=1	j=1
And for the right hand side,
nn	n	n	n
XXajIuiI,j =X(XuiI,j)ajI=XajI.	(41)
i=1 j=1	j=1 i=1	j=1
Thus the vertex is on hypersphere {v ∈ Rn | Pn= 1 Vi = Pn= 1 a2}.	□
16
Under review as a conference paper at ICLR 2022
Since the equation of a centered hypersphere after rotation remains unchanged, we have the follow-
ing corollary.
Corollary 1 (Locus of the vertices of circumscribed orthotope after rotation). The vertices of any
orthotope that circumscribes hyperellipsoid {v ∈ Rn | in=1 vi2/ai2 = 1} after rotation is on hyper-
sphere {v ∈ Rn | Pin=1 vi2 = Pin=1 ai2 }.
Now we can proceed to the proof of Proposition 3.
Proof. We first consider the case when n is a power of 2.
For the rotated hyperellipsoid, We consider whether there's any point V ∈ Rn s.t. ∣∣vkι ≥
Pjn=1 aj2. Suppose we couldn’t find such a point. Then consider any tangent hyperplane whose
normal vector has the following form: (u1,u2, .…，un), s.t. Ui = 土1, ∀i ∈ {1, 2, ∙∙∙ , n}. It can be
expressed as:
n
EujVj= W(U1,U2,…，Un),	(42)
j=1
where W : (uι,u2, ∙ ∙∙ ,un) → R maps (u1,u2,…，un) to a corresponding constant. And we
have W(u1,u2,…，un) < JPn=I j
Since n is a power of 2, we can find a Hadamard matrix Ω in Rn×n whose elements are either 1 or
-1, such that ΩΩ> = nI. We let uij be the element of R on the i-th row and j-th column, ∀i,j, and
consider the intersection of the following n tangent hyperplanes:
n
EuijVj= W(ui,1,ui,2,…，ui,n), ∀i ∈{1, 2,…，n},	(43)
j=1
whose intersection point must satisfy:
n n	nn
X(X
ui,jVj)2 = XX(W(ui,1,ui,2,…，ui,n))2.	(44)
i=1 j=1	i=1 j=1
Similar to the proof of Lemma 4, we can easily prove the left hand side equals n Pjn=1 Vj2, and the
right hand side is strictly less than nPjn=1aj2. Thus the intersection point doesn’t locate on the
hypersphere {V ∈ Rn | Pin=1 Vi2 = Pin=1 ai2}. But since the considered n hyperplanes are also the
surfaces of a circumscribed orthotope, the intersection point is hence a vertex and must be on the
hypersphere {V ∈ Rn|Pin=1 Vi2 =Pin=1ai2}, according to Corollary 1. This contradiction means
that, the assumption that we cannot find a point V ∈ Rn s.t. ∣V∣ι ≥ JPn=I aj is false.
Thus the point V ∈ Rn s.t. ∣V∣ι ≥ JPn=I aj2 exists, and the '1 distance between V and -V (which
both lie on the hyperepllisoid) is 2Pjn=1aj2. Thus we have ∆1ge≥2 JPn=I a
For U =	I,	which means we don’t actually rotate the ellipsoid	{V	∈	Rn | Pin=1	Vi2/ai2	=	1},	we
have for any point on the ellipsoid
n	n	n	2n
(X |Vi|)2	= (X	ai	∙ M)2	≤ (X a2)(X v2)	= X a2,	(45)
i=1	i=1	i	i=1 i=1 i i=1
according to the Cauchy-Schwartz inequality. This implies any point V on the hyperellipsoid has
∣V∣1 ≤ Pjn=1aj2. So ∆1ge ≤ 2Pjn=1aj2. Combined with the result in the above paragraph we
know ∆ιge = 2qPn=1 aj for U = I.
Thus the proposition is proved for n being a power of 2. For other n’s, we can treat the considered
hyperellipsoid as a degenerated hyperellipsoid in space Rn, where n is the smallest power of 2 such
that n > n. This implies the proposition still holds.
Therefore, the proposition is true for any n.
□
17
Under review as a conference paper at ICLR 2022
A.5 Proof of Proposition 4
Proof. First, to preserve -LDP with Laplace mechanism, the minimum σw2 required is:
2	D	Age产 D	4r2	∙ Pn=ι σ2	8r2M
σw =2	^	=2-----—	= 丁
(46)
based on Proposition 3 and constraint Pin=1 σi2 = M.
Next We need to determine σ2, ∙∙∙ , σn. The considered problem is an optimization problem which
aims at minimizing L in Eq.9 under constraint Pin=1 σi2 = M and σi2 ≥ 0 (here we view σi2 instead
of σi as the decision variable). Note that though in Eq.9 we also have σ12 ≥ σn2, we don’t need to
explicitly consider this constraint, because minimizing L will implicitly guarantee that, according to
the rearrangement inequality. This problem can be solved by KarushKuhnTucker (KKT) approach,
with the following Lagrangian function:
n	n	2n	n
F (σ2,…，σi2. ,αι,……)=X % - X %	+ X α,(-σ2)+ β(£ σ2 - M),
i=1	i=1	i w i=1	i=1
(47)
where αι,…,αn and β are Lagrangian multipliers. We know that the solution will automatically
guarantee σ2 ≥ ∙∙∙ ≥ σn, so we can safely assume there exists Z0 ≤ n such that αi = 0 for i ≤ Z0,
and αi > 0 for i > Z0 . Then for i > Z0 we have σi2 = 0, and for i ≤ Z0 we have
VF
vσ2
(σ2+ σW )2
λi
β.
(48)
σ
—
2
w
Combining with PiZ=01 σi2 = M and Eq.46 we eventually get Eq.11. Enforcing σZ2 0 > 0 we get
Eq.12. AndPlUggingEq.11 into Eq.9 we get Eq.13.	口
A.6 Proof of Theorem 1
In this subsection we give the proof of Theorem 1.
We start with two definitions: L*(∂S; P, E) denotes the optimal loss for any boundary ∂S, task
matrix P that preserves -LDP with Laplace mechanism; R(r) = {h ∈ Rn |khk22 = r2} is the
centered hypersphere with radius r.
Next we give the following lemma.
Lemma 5 (Invariance of the optimal loss after scaling).
L*(∂S; P,e) = L*(∂ρ(S); P,ρe),	(49)
where ρ > 0 is a scalar and P(S) = {ρh∣h ∈ S}.
Proof. We only need to consider fixed task matrix P. For any encoder E, decoder D and noise
variance σw2 , if they preserve E-LDP with Laplace mechanism for boundary ∂S, then we have
σw ≥√2 ∙平=√2 ∙ ^Ige,	(50)
where
∆1ρge = ρ max kEh - Eh0 k1 = max kEv - Ev0 k1 .	(51)
h,h0 ∈S	v,v0 ∈ρ(S)
Thus we know encoder E, decoder D and noise variance σw2 also preserve ρE-LDP with Laplace
mechanism for boundary ∂ρ(S). And the reverse also holds true.
So we must have L*(∂S; P,e) = L*(∂ρ(S); P,ρe).	口
Now we can proceed to the proof of Theorem 1.
18
Under review as a conference paper at ICLR 2022
Proof. We first construct a distribution Dh0, s.t. points drawn from Dh0 are uniformly distributed on
R(2n-1). Then h0 〜Dho satisfies 夕%，％，= I. And We also have ∂S0 = R(2n-1), where S0 is the
convex hull of H0 (H0 is the domain of h0 〜Dho). According to Proposition 4, for h0 〜Dho we
have L*(R(2n-1); P, PO = L(2n-1; λ^, ρe), ∀ρ, C > 0.
We next consider scalar P = 2n-1 /rmin and the optimal loss L*(∂ρ(S); P, ρc). For any encoder E,
decoder D and noise variance σw2 , if they preserve ρC-LDP to boundary ∂ρ(S), then they preserve
at least PE-LDP to boundary R(2n-1), since R(2n-1) ⊂ P(S). Thus we have L*(∂ρ(S); P,ρc) ≥
L*(R(2n-1); P,ρc).
This further implies:
L(∂S ； P,e) = L*(∂ρ(S); P,ρe)	(52)
≥L*(R(2n-1); P,ρc) = L(2n-1; λm,ρe) = L(rmi∏; λm,e).	(53)
So the lower bound of Theorem 1 is proved. The upper bound can be proved in the same way. 口
A.7 Benchmarks
A.7. 1 Task loss for task-agnostic approach
One can obtain the resultant optimal L for the task-agnostic approach by letting E = L and using
Eq.7 as stated in Proposition 1. It is worth noting that the associated decoder D = L>(LL> +
σw2 I)-1 is not an identity matrix in general.
Corollary 2 (Optimal L for the task-agnostic approach that preserves C-LDP). For the task-agnostic
approach, the optimal L that preserves C-LDP is
L = Tr(P>P) - Tr(P>PL> (LL> + σw2I)-1L),	(54)
where σW = 2(∆ιge)2∕c2 with ge(x) = X.
A.7.2 Task loss for privacy-agnostic approach
Through similar analysis as Proposition 2, one can obtain the resultant optimal L for the privacy-
agnostic approach, which has a pre-determined Z ≤ n.
Corollary 3 (Optimal L for the privacy-agnostic approach that preserves C-LDP). For the privacy-
agnostic approach with a pre-determined Z ≤ n, the optimal L that preserves C-LDP is
Z2	n
L = Xλi+ X λi.	(55)
i=1	σi2 + σw2	i=Z+1
where σW = 2(∆ιge)2∕c2.
Proof. For privacy-agnostic approach, we have Z ≤ n. Since for encoder we need to select the
top-Z principal components, we have V = Q. Similar to the proof of Proposition 2, for a given
Z ≤ n, we have
EET + σWI = UΣΣ>U> + σWI = Udiag(σ2 + σW,…，σZ + σW)U>
and through similar derivations we eventually get
Z	σ2
Tr(P >PE>(EE> + σW I )-1E) = X λ -ɪ-i-ɪ.
w	i=1	σi2 + σw2
Combined with Eq. 7 we get Eq. 55.
(56)
(57)
□
19
Under review as a conference paper at ICLR 2022
A.7.3 TASK LOSS FOR BENCHMARK APPROACHES WHEN L = I AND ASSUMPTION 1 HOLDS
When L = I and Assumption 1 holds, for the task-agnostic approach, according to Eq. 54, we have
L = τW2τ ∙ Tr(P>P)=］；，即”：2 XX λi.	(58)
1 + σ2,	1 + n ∙ 8r2/e2
w	i=1
For the privacy-agnostic approach, according to Eq. 55 and Eq. 10, and assuming we have equal
σi's and minimum διge, We get
L = IZZ弋/2I 2 XXλi + XX λi,	(59)
1 + Z ∙ 8r2//2
i=1	i=Z +1
Where the value of Z is pre-determined.
A.7.4 Benchmark algorithms under general settings
For the privacy-agnostic approach, We first train the encoder and decoder Without considering pri-
vacy preservation by updating θe and θd with -VθeL and -Re&L, respectively. Next, We fix en-
coder parameters θe and train the decoder With input φ + w (a modification of Algorithm 1 line 3-4).
The task-agnostic approach trains the decoder in the same way, but fixes ge to an identity mapping
function.
A.8 Configuration and Training Details of the Evaluation
Table 1: Evaluation Details
Application	Num of Samples	Train/Test S plit	Training Epochs	Runtime
Household Power	1417	0.7/0.3	NA	< 1 MIN
Real Estate	414	0.7/0.3	2000	< 2 HRS
Breast Cancer	569	0.7/0.3	2000	< 2 HRS
Our evaluation runs on a personal laptop with 2.7 GHz Intel Core I5 processor and 8-GB 1867
MHz DDR3 memory. Our code is based on Pytorch. We use the Adam optimizer and learning
rate 10-3 for all the applications. The number of samples, train/test split, training epochs, and re-
sulting runtime are summarized in Table 1. (Note that the evaluation for hourly household power
consumption is based on the theoretical solutions, so “training epochs”, which is associated with the
gradient-based method, doesn’t apply.) We also provide all our documented code as supplemen-
tary material and will make it publicly-available after the review process. All three datasets
cited in the evaluation are publicly-available from the standard UCI Machine Learning Repository
(Dua & Graff, 2017) and anonymized using standard practices. The individual dataset licenses were
not available.
For task function f, we use a one-hidden-layer feedforward neural network with input size n, hidden
size 1.5n and output size 1 in both the real estate valuation and breast cancer detection experiments.
The activation function used by the hidden layer and output layer is a Rectified Linear Unit (ReLU).
In our experiments, we find that the chosen network architecture is good enough to yield near-zero
loss with ground truth x and y, and to avoid overfitting we don’t choose a deep neural network. For
example, we did not see any task improvement using a two layer network etc.
For the encoder/decoder, we use a one-layer neural network (linear model) with input and output
size n in the real estate valuation experiment. For this experiment, a linear encoder/decoder model
is already enough to provide good performance (see the next subsection for further details). We use
one-hidden-layer feedforward neural network with input size n, hidden size n and output size n in
the breast cancer detection experiment. The activation functions used by the hidden layer and output
layer are a logistic and identity function, respectively.
For the heuristic learning algorithm developed in Section 4.2, we set η = 0.2 and η = 0.001 in real
estate valuation and breast cancer detection experiments, respectively; and in both experiments, for
each epoch we update θe and θd by 15 steps.
20
Under review as a conference paper at ICLR 2022
0.020
0	0.2	0.4	0.6	0.8	1
0.600
(ac37 SSOq 5

Figure 6:	Task loss l(y, y) of our task-aware approach under different Z's for real estate valuation
(left) and breast cancer detection (right).
■ Task-aware (Ours)
X Task-agnostic A Privacy-agnostic
0.020
505
110
000
...
000
(c0)7 SSOqEI
2
♦
O
1/
Figure 7:	Task loss l(y, y) under different LDP budgets for real estate valuation, when a one-hidden-
layer feedforward neural network is adopted for both encoder and decoder.
A.9 A PROPER Z SHOULD BE DETERMINED ON A CASE-BY-CASE BASIS
As mentioned in Section 4.2, a practitioner may need to determine a proper Z on a case-by-case
basis for our task-aware approach. Fig. 6 illustrates the performance of our task-aware approach
under different Z’s for real estate valuation and breast cancer detection experiments. We can observe
that in both two experiments, we obtained the best performance on average when Z = 3, i.e., n/2
for real estate valuation and n/10 for breast cancer detection3.
A.10 Non-Linear Encoder and Decoder Model in Real Estate Valuation
Experiment
Theoretically, increasing the model complexity of the encoder and decoder can potentially provide
a better performance. However, in our real estate valuation experiment we find that linear encoder
and decoder model is already good enough.
To illustrate this, we adopt one-hidden-layer feedforward neural network architecture for both en-
coder and decoder, which has input size n, hidden size n and output size n, and the activation
functions used by the hidden layer and output layer are ReLU and identity function, respectively.
Then we set η = 0.001 and repeat the real estate valuation experiment (with other configurations
being the same). We observe the performance of our task-aware approach is worse in Fig. 7 than in
Fig. 5. The explanation is, due to the unnecessary complexity of the encoder and decoder, itis harder
to learn good encoder and decoder parameters heuristically. Thus, we conclude that using a simple
encoder and decoder, as also observed for the other datasets, is sufficient for high task accuracy.
A.11 Experiment with High-dimensional Data
3The privacy-agnostic approach also achieves the best performance on average under the chosen Z’s.
21
Under review as a conference paper at ICLR 2022
X Task-agnostic A Privacy-agnostic
■ Task-aware (Ours)
1,500.00
1,000.00
500.00
20
.
0
15
0.
10 1/
0.
0.
0000
0505
.......................
2110
(7 SSO*se
.20
0.
.
0
10 1/
0.
.
0
00
.
0
(7 sso&SEl
Figure 8:	Task loss l(y, y) under different LDP budgets for handwritten digit recognition.
To illustrate our task-aware approach in Section 4.2 also works well for high-dimensional data,
such as image data, we consider a handwritten digit recognition problem with well known MNIST
dataset LeCun et al. (1998). Here, x ∈ R784 represents a 28 × 28 image of handwritten digit. And
y ∈ {0,1, •一，9} is a discrete variable represents the digit in the image. We first train a linear
classification model using the ground truth x and y, to serve as our task function f . Then we aim
to minimize the cross-entropy loss of y and y, with linear encoder and decoder. We use Z = 10 for
both our task-aware approach and the privacy-agnostic approach.
Fig. 5 shows the evaluation result. Since the task loss L of the task-agnostic approach is much larger
than the other two approaches, we put it in a separate sub-figure on the left. On the right, we can
see our task-aware approach always outperforms the privacy-agnostic approach on overall task loss
L under different LDP budgets, which demonstrates the effectiveness of our proposed solution. The
maximum improvement against the privacy-agnostic approach is 23.8% ( = 20).
22