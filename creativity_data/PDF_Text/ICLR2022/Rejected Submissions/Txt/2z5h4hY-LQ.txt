Under review as a conference paper at ICLR 2022
GAETS: A Graph Autoencoder Time Series
Approach Towards Battery Parameter
Estimation
Anonymous authors
Paper under double-blind review
Ab stract
Lithium-ion batteries are powering the ongoing transportation electrification rev-
olution. Lithium-ion batteries possess higher energy density and favourable elec-
trochemical properties which make it a preferable energy source for electric ve-
hicles. Precise estimation of battery parameters (Charge capacity, voltage etc) is
vital to estimate the available range in an electric vehicle. Graph-based estima-
tion techniques enable us to understand the variable dependencies underpinning
them to improve estimates. In this paper we employ Graph Neural Networks for
battery parameter estimation, we introduce a unique graph autoencoder time se-
ries estimation approach. Variables in battery measurements are known to have an
underlying relationship with each other in a certain causal structure. Therefore,
we include ideas from the field of causal structure learning as a regularisation to
our learned adjacency matrix technique. We use graph autoencoder based on a
non-linear version of NOTEARS Zheng et al. (2018) as this allowed us to perform
gradient-descent in learning the structure (instead of treating it as a combinatorial
optimisation problem). The proposed architecture outperforms the state-of-the-art
Graph Time Series (GTS) Shang et al. (2021a) architecture for battery parameter
estimation. We call our method GAETS (Graph AutoEncoder Time Series).
1	Introduction and Literature Review
Energy dense Lithium-ion batteries (LiB) are driving the current electrification revolution in the
transportation sector Balasingam & Pattipati (2021). Rapid advancements in battery material science
have enabled inexpensive and long-running LiBs. However, capacity degradation leading to poor
performance are some of the drawbacks of these batteries Zhou et al. (2021). Development of
accurate State-of-Charge estimation algorithms have garnered attention over the past decade as these
metrics translate to available range in an Electric Vehicle Herle et al. (2020).
Battery degradation or capacity fade occurs due to repetitive charge/discharge cycles. Decreased
battery capacity over its usage is an indicator of poor health of the battery Mohtat et al. (2021).
Present battery models available in literature suffer from reliable battery capacity fade predictions
Hinz (2019). This uncertainty in prediction is chiefly due to the non-linear behaviour of battery
discharge characteristics with increased battery age.
Battery Ageing has also been a topic of considerable interest in the energy storage domain Ning
& PoPov (2004); Ning et al. (2006); Peterson et al. (2010); Barre et al. (2013). Empirical battery
models have been used for Remaining Useful Life prediction of batteries Saha & Goebel (2009);
Daigle & Kulkarni (2016); Nuhic et al. (2018); Andre et al. (2013). Simple estimators from Kalman
Filter Andre et al. (2013); Bole et al. (2014) to Reinforcement Learning techniques Unagar et al.
(2020) have been employed for battery parameter estimation.
All the current battery parameter estimation techniques available in literature can be broadly classi-
fied as follows:
1.	Physics-based modeling which employs Partial Differential Equations (PDEs) to compute
equivalent battery parameters Wang et al. (2011)
1
Under review as a conference paper at ICLR 2022
2.	Phenomenological battery modeling, achieved by focused computation of battery capacity
changes corresponding to specific charge/discharge cycles Goebel et al. (2008)
3.	Data-driven estimation models, which provide meaningful insights from historical battery
data and do not involve computation of complex electrochemical models Severson et al.
(2019)
In the present work we use a Graph-based data-driven technique to gain meaningful insights from
battery datasets to improve estimate accuracy. The paper is organised as follows, a brief review of
graph based forecasting techniques is covered in Section 2, the architecture of the proposed Graph-
based estimation technique is presented in Section 3, details about experimentation are covered in
Section 4 followed by conclusion in Section 5.
2	Graph-based Time Series Estimation: Related Work
Battery datasets typically consist of time series Voltage, Current, Temperature and State-of-Charge
values as shown in Fig. 1. Statistical Time series based estimation techniques have been popular
Bhatnagar et al. (2021) for typical time series datasets.
Time (S)
Current
Time (s)
Time (s)
Time (s)
Figure 1: Typical battery discharge characteristics of 18650 cells Herle et al. (2020)
In Multivariate time series scenarios variable dependencies have been investigated to improve esti-
mations Yu et al. (2018). Traffic datasets are one of the prime examples wherein variation in speed
and traffic density insights are useful to accurately predict vehicular traffic in other nodes of the net-
work. There are numerous Graph Neural Network (GNN) based techniques which exploit the graph
structure of datasets to improve prediction accuracy Seo et al. (2016), Li et al. (2018) and Zhao et al.
(2020).
All Graph-based forecasting and estimation approaches available in literature have been validated
using traffic datasets. A more recent variant of Graph Neural Network dubbed GTS (Graph for Time
Series) has been successfully employed to learn specific graph structures to improve prediction
accuracy Shang et al. (2021b). In this paper we build upon the GTS architecture specifically for
battery datasets. Following section elucidates the proposed architecture in greater detail.
3	GAETS Architecture
2
Under review as a conference paper at ICLR 2022
Battery Data
Figure 2: Graph AutoEncoder Time Series (GAETS) architecture
3.1	The method
The architecture of GAETS is as depicted in 2. The objective of the method is to fore-
cast Xt+T +1:t+T +τ, given the observations Xt+1:t+T, where X denotes training data and con-
sists of multiple charge/discharge cycles of battery measurements. The model is denoted as
Xt+T +1:t+T +τ = f(A, w, Xt+1:t+T), where A is the graph structure and is parameterized by w, T
is the input window duration, our goal is to predict future data from time t + T + 1 to t + T + τ ,
here τ is the output prediction window length. The graph structure represented by adjacency matrix
A ∈ {0, 1}n×n is to be parameterized as it is exclusively not available to the forecasting model.
GTS Shang et al. (2021b) parameterizes the graph structure by considering the adjacency matrix A
to be random variable on matrix Bernoulli distribution and is learned as part of the task. We use
Gumbel reparameterization trick as it is used in Shang et al. (2021b) because the gradients fail to
flow through A in Bernoulli sampling.
3.1.1	Encoder-Decoder
The encoder-decoder architecture is used in order to reconstruct the original time series data and to
learn the intermediate represetations. The model assumes an inherent nonlinear Structural Equation
Model (SEM) that connects the node features to the adjacency matrix. The SEM was first proposed
in NOTEARS Zheng et al. (2018).
X(j) =f(X(j),A) = g2(ATg1(X(j)))	(1)
where g1 and g2 are neural networks, encoder and decoder respectively while j represents the node
id. This can be seen as a graph autoencoder. The encoder extracts the features from the original time
series data, by applying a fully connected layer on the convolved original features.
FC (Vec(Conv (X ())
hi
3
Under review as a conference paper at ICLR 2022
where hi is the features extracted in the lower dimensional space. Xi is the ith series of features.
The matrix H of representations his generated by the encoders are used in the graph autoencoder
as well as in the link predictor. In this scenario the vector representations are fed as input to the
link predictor which spits out a scalar. The output scalar decides the existance of a link. These are
represented as hi and hj, the vectors are concatenated and passed through two fully connected layers
to finally get the scalar.
The extracted features along with the sampled graph adjacency matrix is passed through the decoder.
We make use of an MLP as the decoder. The loss incurred by the autoencoder also adds up to the
final loss to be optimized.
3.1.2	Recurrent Networks
In order to estimate the time series predictions based on graphs, we make use of diffusion convolu-
tional GRU as in DCRNN Li et al. (2018) and GTS Shang et al. (2021b).
Rt0 = σ (WR?A	[Xt0	kHt0-1]+bR),	Ct0 = tanh	(WC?A [Xt0 k (Rt0	Ht0-1)]	+ bC),
Ut0 = σ (WU?A	[Xt0	kHt0-1]+bU),	H=Ut0	Ht0-1+(1-Ut0)Ct0,
where
K
Wq?aY = X (θQι (D-1A)k + θQ (D-1A)k) Y,
k=0
where all Ws are corresponding weight matrices, DI and DO are in-degree and out-degree matrix
respectively. θkQ,1 and θk,2 and bQ are the model parameters and K is the hyperparameter corre-
sponding to the degree of diffusion.
3.2	Training
The time series forecasting loss is the base loss which is the loss between the values forecasted by
the models and the ground truth. Hence the first objective is given in 2.
1 t+T +τ
min ltase(Xt+T +1：t+T+τ) = T X ||X0 - Xt
t0 =t+T +1
(2)
The autoencoder compares the reconstructed data against the input data. The autoencoder loss, the
second objective is given in 3.
min Iautoencoder = J X 卜(j)- g2 (AT gl(X(j)))||	(3)
2n j=1
where, n is the number of samples, and min lautoencoder acts as a regularizer to the original GTS
(Shang et al. (2021a)) loss. The original GTS loss is given in 2.
The final loss comprises of the loss incurred by the autoencoder and the base loss. It is given in 4.
loss = lbase (Xt+T +1:t+T +τ ) + lautoencoder
Finally, we arrive at the expression 5 that we need to minimize.
t+T +τ	n
loss = - X	||xo - χto∣∣ + 2n X∣∣χ(j)-g2(ATgι(χ⑶))
t0 =t+T +1
j=1
(4)
(5)
4
Under review as a conference paper at ICLR 2022
4	Experiments
To validate the GAETS architecture we used Lithium-ion Battery Data (2018). All the batteries
listed in the dataset had multiple charge/discharge cycles. We trained the model on two sets of mea-
surement values logged from two separate channels. The data consists of 6 measurements namely:
Voltage, Current, Charge Capacity, Discharge Capacity, Charge Energy and Discharge Energy. Each
measurement is treated as a node and the task is to learn the structure that represents relationship
between variables as well as forecasting the battery parameter of interest. We fix the input horizon
to be 80 and test the data on three different forecasting window horizons of 40, 80 and 120.
In terms of tensor size, the training data is made of (Xtrain, Ytrain) where Xtrain is 1497 signals
with a dimension of6 (for each measurement) and horizon as 80, while Ytrain is 1497 signals with a
dimension of 6 and 40/80/120 horizon values. Validation is done on 213 signals. Meanwhile, testing
data is made of (Xtest, Ytest) where Xtest is 1497 signals with a dimension of 6 (for each measure-
ment) and 80 window ticks, while Ytest is 1497 signals with a dimension of6 and 40/80/120 horizon
values. These datasets are obtained by continuous moving window average across the original long
time series data.
We follow the code implementation in GTS Shang et al. (2021a), using the same setting for the
graph neural network architecture and optimiser. We train each model for 200 epochs, obtain the best
model for validation dataset and test it. Each model is trained from 5 different random initialisations.
The performance result and confidence interval is shown in the chart. Performance is measured
through MAE, RMSE and MAPE values as shown in Fig. 6 following GTS Shang et al. (2021a)
paper. Visual comparison of Battery Voltage, Current and Charge Energy is presented in Fig. 3,4
and 5.
Figure 3: Battery Voltage predictions using GAETS (this work) and GTS Shang et al. (2021a)
(a)	(b)
Figure 4: Battery Current predictions using GAETS (this work) and GTS Shang et al. (2021a)
5
Under review as a conference paper at ICLR 2022
Figure 5: Battery Energy predictions using GAETS (this work) and GTS Shang et al. (2021a)
Figure 6: Evaluation metrics comparing the proposed GAETS architecture with GTS
5	Conclusion
Battery parameter estimation remains to be a challenging and topic of relevance due to the burgeon-
ing number of Electric Vehicles in the past decade. Accurate battery capacity estimation also helps
to predict remaining usage time in battery powered consumer electronics. In this paper we introduce
a Graph AutoEncoder Time Series (GAETS) architecture which exploits the dependencies between
battery parameters (charge capacity, voltage, current etc) to provide precise estimates. We compare
our architecture with the existing Graph Time Series architecture to highlight the effectiveness of
our approach.
References
D Andre, A Nuhic, T Soczka-Guth, and Dirk Uwe Sauer. Comparative study of a structured neural
network and an extended kalman filter for state of health determination of lithium-ion batteries in
hybrid electricvehicles. Engineering Applications OfArtificial Intelligence, 26(3):951-961, 2013.
Balakumar Balasingam and Krishna Pattipati. On the identification of electrical equivalent circuit
models based on noisy measurements, 2021.
Anthony Barre, Benjamin Deguilhem, Sebastien Grolleau, Mathias Gerard, Frederic Suard, and
Delphine Riu. A review on lithium-ion battery ageing mechanisms and estimations for automotive
applications. Journal of Power Sources, 241:680-689, 2013.
Aadyot Bhatnagar, Paul Kassianik, Chenghao Liu, Tian Lan, Wenzhuo Yang, Rowan Cassius, Doyen
Sahoo, Devansh Arpit, Sri Subramanian, Gerald Woo, Amrita Saha, Arun Kumar Jagota, Goku-
lakrishnan Gopalakrishnan, Manpreet Singh, K C Krithika, Sukumar Maddineni, Daeki Cho,
Bo Zong, Yingbo Zhou, Caiming Xiong, Silvio Savarese, Steven Hoi, and Huan Wang. Merlion:
A machine learning library for time series, 2021.
6
Under review as a conference paper at ICLR 2022
Brian Bole, Chetan S Kulkarni, and Matthew Daigle. Adaptation of an electrochemistry-based li-
ion battery model to account for deterioration observed under randomized use. Technical report,
SGT, Inc. Moffett Field United States, 2014.
Matthew Daigle and Chetan S Kulkarni. End-of-discharge and end-of-life prediction in lithium-ion
batteries with electrochemistry-based aging models. In AIAA Infotech@ Aerospace, pp. 2132.
2016.
Battery Data. Center for Advanced Life Cycle Engineering. https://calce.umd.edu/
battery-data/, 2018. [Online; Accessed 19-July-2021].
Kai Goebel, Bhaskar Saha, Abhinav Saxena, Jose R Celaya, and Jon P Christophersen. Prognostics
in battery health management. IEEE instrumentation & measurement magazine, 11(4):33-40,
2008.
Aniruddh Herle, Janamejaya Channegowda, and Dinakar Prabhu. A temporal convolution network
approach to state-of-charge estimation in li-ion batteries, 2020.
Hartmut Hinz. Comparison of lithium-ion battery models for simulating storage systems in dis-
tributed power generation. Inventions, 41(4), 2019.
Yaguang Li, Rose Yu, Cyrus Shahabi, and Yan Liu. Diffusion convolutional recurrent neural net-
work: Data-driven traffic forecasting, 2018.
Peyman Mohtat, Sravan Pannala, Valentin Sulzer, Jason B. Siegel, and Anna G. Stefanopoulou. An
algorithmic safety vest for li-ion batteries during fast charging, 2021.
Gang Ning and Branko N Popov. Cycle life modeling of lithium-ion batteries. Journal of The
Electrochemical Society, 151(10):A1584, 2004.
Gang Ning, Ralph E White, and Branko N Popov. A generalized cycle life model of rechargeable
li-ion batteries. Electrochimica acta, 51(10):2012-2022, 2006.
Adnan Nuhic, Jonas Bergdolt, Bernd Spier, Michael Buchholz, and Klaus Dietmayer. Battery health
monitoring and degradation prognosis in fleet management systems. World Electric Vehicle Jour-
nal, 9(3):39, 2018.
Scott B Peterson, Jay Apt, and JF Whitacre. Lithium-ion battery cell degradation resulting from
realistic vehicle and vehicle-to-grid utilization. Journal of Power Sources, 195(8):2385-2392,
2010.
Bhaskar Saha and Kai Goebel. Modeling li-ion battery capacity depletion in a particle filtering
framework. In Proceedings of the annual conference of the prognostics and health management
society, pp. 2909-2924. San Diego, CA, 2009.
Youngjoo Seo, Michael Defferrard, Pierre Vandergheynst, and Xavier Bresson. Structured sequence
modeling with graph convolutional recurrent networks, 2016.
Kristen A Severson, Peter M Attia, Norman Jin, Nicholas Perkins, Benben Jiang, Zi Yang,
Michael H Chen, Muratahan Aykol, Patrick K Herring, Dimitrios Fraggedakis, et al. Data-driven
prediction of battery cycle life before capacity degradation. Nature Energy, 4(5):383-391, 2019.
Chao Shang, Jie Chen, and Jinbo Bi. Discrete graph structure learning for forecasting multiple time
series. CoRR, abs/2101.06861, 2021a. URL https://arxiv.org/abs/2101.06861.
Chao Shang, Jie Chen, and Jinbo Bi. Discrete graph structure learning for forecasting multiple time
series, 2021b.
Ajaykumar Unagar, Yuan Tian, Manuel Arias-Chao, and Olga Fink. Battery model calibration with
deep reinforcement learning, 2020.
John Wang, Ping Liu, Jocelyn Hicks-Garner, Elena Sherman, Souren Soukiazian, Mark Verbrugge,
Harshad Tataria, James Musser, and Peter Finamore. Cycle-life model for graphite-lifepo4 cells.
Journal of power sources, 196(8):3942-3948, 2011.
7
Under review as a conference paper at ICLR 2022
Bing Yu, Haoteng Yin, and Zhanxing Zhu. Spatio-temporal graph convolutional networks: A deep
learning framework for traffic forecasting. Proceedings of the Twenty-Seventh International Joint
Conference on Artificial Intelligence, Jul 2018. doi: 10.24963/ijcai.2018/505. URL http:
//dx.doi.org/10.24963/ijcai.2018/505.
Ling Zhao, Yujiao Song, Chao Zhang, Yu Liu, Pu Wang, Tao Lin, Min Deng, and Haifeng Li. T-gcn:
A temporal graph convolutional network for traffic prediction. IEEE Transactions on Intelligent
Transportation Systems,21(9):3848-3858, Sep 2020. ISSN 1558-0016. doi: 10.1109∕tits.2019.
2935152. URL http://dx.doi.org/10.1109/TITS.2019.2935152.
Xun Zheng, Bryon Aragam, Pradeep Ravikumar, and Eric P. Xing. Dags with no tears: Continuous
optimization for structure learning, 2018.
Kate Qi Zhou, Yan Qin, Billy Pik Lik Lau, Chau Yuen, and Stefan Adams. Lithium-ion battery state
of health estimation based on cycle synchronization using dynamic time warping, 2021.
8