Under review as a conference paper at ICLR 2022
Self-consistent Gradient-like Eigen Decom-
position in Solving SCHRODINGER Equations
Anonymous authors
Paper under double-blind review
Ab stract
The Schrodinger equation is at the heart of modern quantum mechanics. Since
exact solutions of the ground state are typically intractable, standard approaches
approximate Schrodinger,s equation as forms of nonlinear generalized eigen-
value problems F(V )V = SVΛ in which F(V ), the matrix to be decom-
posed, is a function of its own top-k smallest eigenvectors V , leading to a “self-
consistency problem”. Traditional iterative methods heavily rely on high-quality
initial guesses of V generated via domain-specific heuristics methods based on
quantum mechanics. in this work, we eliminate such a need for domain-specific
heuristics by presenting a novel framework, Self-consistent Gradient-like Eigen
Decomposition (SCGLED) that regards F (V ) as a special “online data genera-
tor”, thus allows gradient-like eigendecomposition methods in streaming k-PCA
to approach the self-consistency of the equation from scratch in an iterative way
similar to online learning. With several critical numerical improvements, SC-
GLED is robust to initial guesses, free of quantum-mechanism-based heuristics
designs, and neat in implementation. our experiments show that it not only can
simply replace traditional heuristics-based initial guess methods with large perfor-
mance advantage (achieved averagely 25x more precise than the best baseline in
similar wall time), but also is capable of finding highly precise solutions indepen-
dently without any traditional iterative methods.
1 Introduction
While the many-body Schrodinger equation governs all quantum-mechanical systems, it can be
solved analytically only for extremely simple ones like an isolated hydrogen atom. Nonetheless, a
series of important approximation theories are developed so that it can be solved numerically for
many relevant molecules and materials including tens to thousands of electrons, making it possible
for physicists and chemists to explore the properties of matters in an ab-initio or first-principle way,
serving as a foundation of computational physics, chemistry and material science research.
Among those approximation theories, two mainstream directions involve the Hartree-Fock (Hartree,
1928; Hartree & Hartree, 1935) and density functional theories (Hohenberg & Kohn, 1964) that
either approximate the Schrodinger equation as a “Hartree-Fock” equation or as a “Kohn-Sham
equation” (Kohn & Sham, 1965). While very different in nature, both approximated equations are
finally formed as a nonlinear, generalized eigenvalue problem F(V )V = SV Λ in which F(V ) and
S are N X N real symmetric matrices, Λ = diag(λι,…，λk) is a k X k matrix containing the
top-k smallest eigenvalues, and V = [vι,…，vk] is an N X k matrix containing the corresponding
top-k eigenvectors. interestingly, the matrix F which we aim to decompose is explicitly defined as
a given function of the eigenvectors V (denoted as F(V) : RN×k → RN×N), leading to a “cause-
and-effect dilemma” or “self-consistency problem”. That is, the form of the equation is defined by
its final solution, but how does one know the solution if the form of the equation is not determined?
The dominant method in solve such equations is generally referred to as Self-Consistent Fields
(SCFs). SCFs are the main component of nearly all mainstream quantum chemistry and solid-state
physics software. The general idea is to perform a fixed-point iteration, that is, guess an initial
solution V0 from scratch, then solve F (Vk-1)Vk = SVkΛk repeatedly to obtain eigenvectors Vk at
the kth iteration, k = 1, 2, .…，until ∣∣F(Vk) 一 F(Vk-ι)k is less than a given convergence threshold.
Unfortunately, there is no guarantee that such an iteration can always lead to a converged solution
1
Under review as a conference paper at ICLR 2022
(Froese Fischer, 1987). Actually, SCFs are extremely sensitive to the selection of initial guess V0.
Without a high-quality initialisation, SCFs easily fail and oscillate between two or more different
results.
Till now, all popular choices for the initial guess are heuristics-based, highly reliant on specialized
prior knowledge of quantum mechanics. For example, the SAD method (Van Lenthe et al., 2006)
applies the physical intuition that molecular electron densities can be approximated via the sum of
atomic electron densities. Here, the core Hamiltonian method ignores all interactions between elec-
trons, which simplifies the equation to a standard eigen-decomposition problem. More methods and
details can be found in (Lehtola, 2019). Besides the prerequisite of domain-specific theories, such
methods are also sophisticated in implementation to achieve satisfactory convergence performance,
which is a main barrier for practitioners to build high-performance solvers from scratch.
Meanwhile, in the machine learning community, researchers are facing the challenge of analyzing
real-time, online data represented as streams. In contrast to the normal case that data is fully avail-
able offline, online data is received sequentially and may even change over time, thus specialized
methods are developed to dynamically adapt to new patterns in the data stream, which is called
stochastic, streaming or online algorithms. Specially, a series of works (Oja, 1982; Tang, 2019;
Allen-Zhu & Li, 2017; Gemp et al., 2021) focus on stochastic k-PCA, which aim to estimate the
top-k principal components of a data stream in a real-time manner. To handle the stochasticity
of data, such stochastic k-PCA methods usually contain gradient-like eigen decomposition. When
a new data sample is available, the eigenvectors will be updated towards a gradient-like direction
computed by the new sample, with a small learning rate.
In this work, we noticed that F (V ) in the aforementioned eigen-decomposition problem is sub-
F=F(V1)
ject to concurrent update during the sequential update of V towards self-consistency: V1 -→
F=F(V2)
V2 --------→ ….In this case F (V) can be regarded as a special online data generator , which
shares similarities with the online learning setting that online data is concurrently updated during
the sequential learning process. In this way, we explore the possibility of applying gradient-like
eigen-decomposition in stochastic k-PCA methods to handle the self-consistency of approximated
Schrodinger equations. Together with several numerical improvements to enhance the smoothness
of optimization, we developed Self-consistent Gradient-like Eigen Decomposition (SCGLED), an
efficient solver for the self-consistent approximated Schrodinger equations, SCGLED is robust to
initial guesses V0, free of quantum-mechanism-based heuristics design, and neat in implementation.
While it can simply replace traditional heuristics-based initial guess methods with performance ad-
vantage, it is also capable of finding highly precise solutions without any traditional SCF iteration.
2 Related work
The computational theories for quantum many-body systems, especially for determining the wave
function of Schrodinger equations, has a long history starting from 1920s. There are three main-
stream theories: Hartree-Fock theory (Hartree, 1928; Hartree & Hartree, 1935), density functional
theory (Hohenberg & Kohn, 1964) and quantum Monte Carlo. With the prosperity of deep learning
and differentiable optimization in recent years, there are a series of works focusing on deep-learning-
aided wave function representation of quantum Monte Carlo methods such as FermiNet (Pfau et al.,
2020) and PauliNet (Hermann et al., 2020). For density functional theory, there are also some works
using neural networks to learn the exchange-correlation functional (Li et al., 2021; Kasim & Vinko,
2021). However, these works focus more on improving simulation accuracy towards physical re-
ality by using neural networks as a better functional approximator, while our work’s focus is very
different, stressing on the optimization efficiency while the equation is completely given. There
are also works on direct optimization for Kohn-Sham equations by total energy minimization (Yang
et al., 2006), which model the problem as a constrained optimization problem instead, and more
domain-specific knowledge is involved, while our work tries to solve the equation from a purely
optimization-based aspect.
For gradient-like eigen-decomposition, most of the works focus on stochastic k-PCA, which esti-
mates the top-k principal components of a data stream. Let x ∈ Rd denote a random data sample at
time step t, Vi ∈ Rd, i = 1, 2,…，k denote the estimate of ith principal component (eigenvector of
2
Under review as a conference paper at ICLR 2022
“Self-consistent”
Generalized Eigen-
decomposition
Definition of F(VF)
Figure 1: An visualization of the problem. S, H ∈ RN ×N and Ueff : RN ×N → RN ×N are given
input. The solution V * should obey both the generalized eigen-decomposition and the definition of
F(V), which leads to a “self-consistent” problem.
E[XX>]) at time t, corresponding to the ith largest eigenvalue. η denotes the learning rate.
Oja's algorithm: Vi J Vi + η(xx>vi),∀i = 1, ∙∙∙ ,k and (vι, ∙∙∙ ,vk) J QR(v1, ∙∙∙ ,vk)
Here QR(vι,…，Vk) is the Gram-Schmidt decomposition that orthonormalizes Vt,…，vk. There
are also several follow-up works (Sanger, 1989; Tang, 2019) that improve the performance, in which
a most recent one is EigenGame (Gemp et al., 2021)
EigenGame: Nrvi J 2x[x>Vi — ^X
j<i
hx>Vi, x>Vji >
hx>Vj ,x>Vji X Vj\, ∀i = 1,…，k
R	0	R	Vi0
VRVi J Vvi — (Vvi,viivi, V0 J Vi + ηVRVi and Vi J	—, ∀i = 1,…，k.
i	kVi k
3	Problem description
In this paper, while what We want to solve is the approximated Schrodinger Equations, whose phys-
ical background is elaborated in Appendix A, we abstract it mathematically as the following type of
nonlinear generalized eigenvalue problem1
F(V)V = SVΛ,	(1)
where
•	F(V): an N × N real symmetric matrix to be decomposed, which is defined in equation 2
as a function of V .
•	S: an N × N positive semi-definite matrix, which is a constant input in the problem.
•	Λ: A = diag(λι,…，λk) is a k X k diagonal matrix containing the top-k smallest eigen-
values.
•	V: V = [vi,…，Vk] is an N × k matrix containing k column eigenvectors corresponding
to the top-k smallest eigenvalues.
The definition of F(V) : RN×k → RN×N is as follows:
F(V) d=efH+ Ueff(2VV>),	(2)
in which H is an N × N real symmetric matrix, which is given in this problem. Ueff : RN ×N →
RN×N is a given function. We also define P(V) = 2VV> for convenience. To conclude, the input
1While the regular eigenvalue problem can be described as finding V that obeys AV = V Λ in which A is
an N X N matrix to be decomposed, A = diag(λι,…，λN) contains all eigenvalues and V = (vι,… ,vn )
contains the corresponding eigenvectors, a generalized eigenvalue problem adds an additional matrix B with
the form AV = BVA. When B = I, it degenerates to a regular eigenvalue problem.
3
Under review as a conference paper at ICLR 2022
of the problem is S, H, Ueff(∙) and k, and the output of the problem is the eigenvectors V * that
obeys both equation 1 and equation 2. The top-k smallest eigenvalues of F (V*) are guaranteed to
be negative.
To make it more clear, a toy example is provided as follows:
1.0	0.6953	-1.1204
0.6953	1.0	,H= -0.9584
-0.9584
-1.1204
,k=1
[Ueff (P)]uv =	PλσEuvλσ -
λ,σ
2 ^X Pλσ Euλσv,
λ,σ
E11
0.7746
0.4441
0.4441	0.4441
0.5697 ,E12 = E21 = 0.2970
0.2970	0.5697 0.4441
0.4441 , E22 = 0.4441 0.7746
in which P = 2VV>, Ueff(P) ∈ R2×2, E is a2 × 2 × 2 × 2 tensor. The solution of the toy example
0 3655	0 5939
should be V* = (0.5489, 0.5489)>, in this case F(V*) = -0.5939 -0.3655 , and the result of
top-1 eigen-decomposition
-0.3655
-0.5939
-0.5939	1.0
-0.3655 V = 0.6953
0.6953
1.0
VΛ
will happen to be exactly V* = (0.5489, 0.5489)> with the smallest eigenvalue λ1 = -0.5782,
while the other one is [1.2115, -1.2115]> with eigenvalue λ2 = 0.6703.
4	Solving approximated SCHRODINGER equations using
self-consistent gradient-like eigen decomposition
First, notice that the stochastic k-pCA methods usually can be generalized to decompose a real
symmetric matrix M. For oja’s algorithm (oja & Karhunen, 1985), that is
Vi — Vi + ηMvi ∀i = 1,…，k and (vι,…，Vk) — QR(VI,…，V),	(3)
in which vit is the eigenvector corresponding to the ith largest eigenvalue.
Due to the lack of efficiency, such decomposition methods are not favorable for traditional eigen-
decomposition (M is a given constant input) compared with classical algorithms such as QR itera-
tion. However, as stochastic algorithms, they have a unique advantage that they can adapt to dynamic
change of M, which suits the sticking point in equation 1 that F(V) is subject to concurrent update
when V changes. This motivates US to apply them to tackle the approximated Schrodinger equations.
Together with the orthogonalization technique introduced in Appendix B which transforms the gen-
eralized eigenvalue problem into a standard one, we replace M in equation 3 with F0 = X>F(V)X,
and update F0 in each time step immediately after each update ofV to maintain the self-consistency,
which forms the initial version of our proposed algorithm, self-consistent gradient-like eigen decom-
position (SCGLED), shown in Algorithm 1. Note that we need the eigenvectors corresponding to
top-k smallest eigenvalues rather than the largest ones, so we decompose -F0 instead of F0. Dif-
ferent from traditional SCF method shown in Appendix B where Vt0 is purely a temporary variable
that should be discarded after each iteration, Vt0 in our proposed algorithm is more likely a “training
variable” that is first randomly initialized and then trained during the whole iterative process.
While the convergence analysis of Algorithm 1 is heavily blocked by the intrinsic nonlinearity of
approximated Schrodinger equations, which is fundamentally complex in computational physics, we
instead use heuristics to boost the empirical convergence performance in later paragraphs, and prove
the correctness of our algorithm under some robustness assumption of F(V) on the convergence
point, with the following proposition
Proposition 1. If Algorithm 1 converges to a stable convergence point V* and for a small pertur-
bation towards V*, [X> F(V*)X - X>F(V* + )X](V* + ) = O(2), then V* is the solution
of equation 1.
The proof is deferred to Appendix C.
4
Under review as a conference paper at ICLR 2022
Algorithm 1 The vanilla version of self-consistent gradient-like eigen decomposition (SCGLED)
Input: H, S, Uff(∙) in equation 1 and equation 2, learning rate η > 0
Output: V *, the solution of equation 1
1:	Initialize V0 ∈ RN ×k randomly.
2:	Find X satisfying X>SX = I.
3:	while V0 is not converged do
4:	V — XV0
5:	F0 J X>F(V)X following equation 2
6:	Update V0 for one-step decomposition of -F0 using equation 3.
7:	end while
8:	V * J XV0
However, this initial version is of poor efficiency and stability. The computational efficiency is
blocked by the Gram-Schmidt process which is highly order-preserving thus cannot be decentral-
ized/vectorized. Also, due to the existence of F (V) = H +Ueff(P (V)) that is sensitive to the change
of V, the iteration process is highly nonlinear. In this case oscillation will easily occur which hinders
the iteration process toward convergence. To tackle these problems, we made several improvements
to Algorithm 1 as follows.
First, we replace the classical Oja’s algorithm with the decentralized version of EigenGame (Gemp
et al., 2021). EigenGame replaces the time-consuming QR decomposition by a generalized Gram-
Schmidt step in its gradient Vvi, which makes it theoretically harder to analyse (since the orthonor-
mality of eigenvectors is not guaranteed during the iteration), but with better empirical performance
due to its decentralized nature. Its procedure is as follows:
Vvi J 2M [vi - X v>MvjVji, VRVi J Vvi - hVvi, Vi加 ∀i = 1,…，k
j<i Vj>MVj
0	R	vi0
Vi J Vi + ηv vi, and Vi J H 0∣∣ ∀i = 1,…，k
i	kvi0 k
(4)
(5)
Second, to reduce oscillation during the iteration process, we introduce the damping technique for
the update of F. That is,
Ft = (1 - α)Ft-1 + αF (Vt),	(6)
in which α is the mixing hyperparameter between 0 and 1. Here we set it as 0.2.
Third, the selection of learning rate η is highly tricky for different molecule inputs. To enhance
the robustness of the algorithm towards learning rate, we introduce the momentum method for the
update of V0 as follows:
mt = βmt-1 + ηVV 0,	(7)
V0 = V0 + mt,	(8)
in which the momentum term β is set to 0.9.
Fourth, instead of updating F in every iteration, we control the update interval of F via a param-
eter IF . The first reason is for efficiency, since V0 only update slightly in each time step with a
small learning rate η, it may not be necessary to do a fresh computation of F(V) in each time step,
especially considering that the computation of Ueff(P (V)) is relatively time-consuming. The sec-
ond reason is for stability, since the damping technique in equation 6 will degenerate if previously
updated Ft-1 and current F(V) are too close.
Summarizing all considerations above, our proposed algorithm is shown in Algorithm 2
5 Experiments
In this section, we perform extensive performance benchmarks on W4-17 dataset(Karton et al.,
2017), which is also applied in prior benchmark work (Lehtola, 2019). All the 160 singlet molecules
in the W4-17 dataset are used to evaluate the performance of our proposed algorithm. Our algorithm
5
Under review as a conference paper at ICLR 2022
Algorithm 2 Self-consistent gradient-like eigen decomposition (SCGLED)
Input: H, S, Uff(∙) in equation 1 and equation 2, total number of iterations T, learning rate η, F's
update ratio IF
Output: V * *, the solution of equation 1
1:	Initialize V0 ∈ RN ×k randomly.
2:	F — H
3:	m J 0N×k
4:	Find X satisfying X>SX = I.
5:	for t = 0,1, 2, ∙∙∙ ,T do
6:	if t mod IF = 0 then
7:	V J XV0
8:	FJ (1 - α)F + αF(V)
9:	F0 J X>FX
10:	end if
11:	Obtain VRV0 for one-step decomposition of -F0 using equation 4.
12:	m J βm + ηVRV0
13:	V0JV0+mt
14:	Normalize all column vectors in V0 following equation 5.
15:	end for
16:	V * J XV0
is implemented in Python with NumPy, and optimized via Numba (Lam et al., 2015). The learning
rate η is set to be 10-2. The effective potential matrix function Ueff(∙) in Algorithm 2 is based on
Hartree-Fock theory and provided by PySCF (Sun et al., 2018). We use the standard 6-31G basis
set (Ditchfield et al., 1971) for the computation of all molecules. All experiments are run on a AMD
Ryzen 7 5800H CPU (8 cores, 16 threads, 3.2-4.4GHz) with 16GB memory. For the reproducibility
of the result, in all experiments we initialize V0 in Algorithm 2 by I0 where I is a k × k identity
matrix.
5.1 SCGLED as an initial guess method
A direct application of our proposed method is to provide an initial guess for the traditional SCF
method shown in Algorithm 3. We compare with the following popular initial guess methods that
are widely applied in quantum chemistry and solid-state physics software. All of them highly rely
on domain-specific heuristics.
• Hcore: Core Hamiltonian method, which obtains the guess orbitals from the diagonalization
of the core Hamiltonian H, ignoring all interelectronic interactions.
• atom (Van Lenthe et al., 2006): Superposition of atomic HF density matrices.
• minao: Superposition of atomic densities projected in a minimal basis obtained from the
first contracted functions in the cc-pVTZ or cc-pVTZ-PP basis set.
• huckel (KartOn et al., 2017): Parameter-free HUckel guess.
In the experiment, we use PySCF’s integrated implementation for all the initial guess baselines.
PySCF (Python-based Simulations of Chemistry Framework, (Sun et al., 2018)) is an open-source,
highly popular quantum chemistry software in Python, whose computationally critical parts are
implemented and optimized in C to guarantee efficiency.
We evaluate the performance of an initial guess method from two aspects
• Precision: the distance between the initial guess and the final converged solution of equa-
tion 1, measured by the averaged energy error over 160 molecules. (expected to beas small
as possible)
• Convergence: the ratio that the initial guess can successfully lead to a converged solution
via traditional SCF iteration, measured by the number of molecules that failed to converge
in SCF iteration with a certain initial guess method. (expected to be as few as possible)
6
Under review as a conference paper at ICLR 2022
^obω A≡,c,uuj
(a) Time-precision evaluation
Figure 2: Performance evaluation of initial guess methods
bc,≡,c,>uou IoU aιes£ s-nu-oE)*
8060
4020
(b) Time-convergence evaluation
Initial guess methods are expected to be very rapid compared with main SCF iterations, so we restrict
the range of T from 200 to 10,000, corresponding to 5-250 milliseconds, while traditional methods
take around 30 milliseconds. We also set F’s update interval IF = 50 in this experiment.
The result of performance evaluation is shown in Figure 2. While traditional initial guess meth-
ods are parameter-free heuristics, SCGLED is iterative thus the performance and time cost are di-
rectly influenced by the number of iterations T . As a result, SCGLED is shown as a curve in time-
performance space while traditional methods are shown as points. In both Figure 2a and Figure 2b,
SCGLED’s curve lies at the lower-left direction of traditional methods, indicating that our method
achieves better results for both precision and convergence ability. Comparing the result of the best
baseline “minao” and SCGLED at T = 1000 in Figure 2a, we can find that averagely SCGLED
is 25x more precise than minao (0.013379 Hartree vs. 0.343194 Hartree in energy error) while the
wall time are very close (26.3 ms vs. 28.6 ms). Our proposed method not only performs better or
close to traditional methods given the same time, but also provides more flexible options, such as
paying more time to achieve better performance in time-rich tasks, or sacrificing performance to sat-
isfy rigorous time limitation, which is inconceivable for traditional methods due to their heuristics
nature. A more detailed, per-molecule result is shown in Appendix E.
(a) IF -precision relation
Figure 3: IF -performance relation of SCGLED
Oooooo
0 8 6 4 2
>uouu 3JeLΠ snuOE)
1510	25	50
The update interval ofF(⅛)
(b) IF -convergence relation
For SCGLED, we also study the influence of IF, the parameter to control F’s update interval, to
the performance, shown in Figure 3. The IF -performance relation is shown as a U-shaped curve,
which indicates that IF should be set to a moderate value, neither too large nor too small. The best
value of IF (the bottom of the U-shaped curve) is relevant to the total number of iterations T : IF
should be smaller for small T so F can be updated for reasonable times in very limited iterations,
and should be moderately larger for large T so that the convergence acceleration technique (such as
the damping technique in equation 6) works better.
7
Under review as a conference paper at ICLR 2022
5.2 SCGLED as a full solver
While gradient-based methods are widely used in machine learning in ways that do not require
extreme precision, it is usually computationally intractable in other fields that require high precision,
especially scientific computing, due to its low convergence rate. However, a counterintuitive result
is that our proposed gradient-like method can produce highly precise solutions of equation 1 in a
reasonable number of iterations.
(a) Benzene
(C6H6)
Figure 4: Performance of SCGLED for solving molecules independently.
(b) n-Pentane
(C5H12)
(c) Chloroethane
(C2ClH5)
(d) Formonitrile
oxide (HCNO)
Figure 5: Visualization of electron density for some molecules, solved via SCGLED.
The result that our proposed method acts as a full solver (without any traditional SCF iteration)
is shown in Figure 4. The convergence criterion is selected as the default setting in PySCF. That
is, the difference of a molecule’s total energy before and after a single-step SCF iteration should
be less than 10-10, which is extremely strict. IF is set as 100 since T is relatively large in this
scenario. It shows that our proposed method successfully solved more than half of the molecules
within 20,000 iterations, and 155 out of 160 molecules within 1 million iterations. If we replace the
simple damping technique in Algorithm 2 with a more powerful DIIS method (Pulay, 1980) for the
last 10% iterations2, we can successfully solve all 160 molecules with very high precision. Some of
the highly precise solutions are visualized in Figure 5 by VMD (Humphrey et al., 1996), in which
the coordinate and type of atoms are given for each molecule, and the electron densities are solved
by SCGLED, represented as isosurfaces shown as grey surface around the molecule.
6 Conclusion
In this work, We solve the approximated Schrodinger equations from scratch with gradient-like
eigen-decomposition. This work contributes to both the field of computational physics and machine
learning as follows:
2E.g., for T = 10000, damping is applied for the first 9000 iterations, and We apply DIIS for the last 1000
iterations (10 actual DIIS computations are done since IF = 100).
8
Under review as a conference paper at ICLR 2022
•	For computational physics, beside the performance advantage, this work shows the possi-
bility to solve the approximated Schrodinger equations from a purely optimization-based
aspect, without any heuristics method based on prior quantum mechanism knowledge to
bootstrap the solving stage. In this way the solving of approximated Schrodinger equations
can be stripped out from its physical background, studied independently as a mathematical
optimization problem.
•	For machine learning, this work explores a brand new area of “self-consistent” eigen-
value problems, especially approximated SchrOdinger equations, for stochastic eigen-
decomposition methods such as Oja’s algorithm and EigenGame, which are previously
regarded as specialized methods for k-PCA. While such methods can properly handle
stochasticity, this work shows that they are also capable of handling self-consistency, which
leads to a potential of application in a broader field of scientific computing.
References
Zeyuan Allen-Zhu and Yuanzhi Li. First efficient convergence for streaming k-pca: A global, gap-
free, and near-optimal rate. In 2017 IEEE 58th Annual Symposium on Foundations of Computer
SCience (FOCS),pp. 487-492, 2017. doi: 10.1109/FOCS.2017.51.
R. Ditchfield, W. J. Hehre, and J. A. Pople. Self-consistent molecular-orbital methods. ix. an ex-
tended gaussian-type basis for molecular-orbital studies of organic molecules. The JOUrnaI of
ChemiCaI Physics, 54(2):724-728, 1971. doi: 10.1063/1.1674902. URL https://doi.org/
10.1063/1.1674902.
Charlotte Froese Fischer. General hartree-fock program. COmPUter PhySiCS COmmUniCations,
43(3):355-365, 1987. ISSN 0010-4655. doi: https:〃doi.org/10.1016/0010-4655(87)
90053-1. URL https://www.sciencedirect.com/science/article/pii/
0010465587900531.
Ian M. Gemp, Brian McWilliams, Claire Vernade, and Thore Graepel. Eigengame: PCA as a nash
equilibrium. In 9th International COnferenCe on Learning RePreSentations, ICLR 2021, VirtUaI
Event, AUStria, May 3-7, 2021. OpenReview.net, 2021. URL https://openreview.net/
forum?id=NzTU59SYbNq.
D. R. Hartree. The wave mechanics of an atom with a non-coulomb central field. part i. theory
and methods. Mathematical Proceedings of the Cambridge Philosophical Society, 24(1):89-110,
1928. doi: 10.1017/S0305004100011919.
Douglas Rayner Hartree and W. Hartree. Self-consistent field, with exchange, for beryl-
lium. PrOCeedingS of the Royal SOCiety of London. SerieS A - MathematiCaI and
PhySiCaI Sciences, 150(869):9-33, 1935. doi: 10.1098∕rspa.1935.0085. URL https://
royalsocietypublishing.org/doi/abs/10.1098/rspa.1935.0085.
Jan Hermann, Zeno Schatzle, and Frank Noe. Deep-neural-network solution of the electronic
SchrOdinger equation. NatUre Chemistry, 12(10):891-897, October 2020. ISSN 1755-
4349. doi: 10.1038∕s41557-020-0544-y. URL https://www.nature.com/articles/
s41557-020-0544-y. Number: 10 Publisher: Nature Publishing Group.
John Hertz, Anders Krogh, and Richard G Palmer. IntrOdUCtiOn to the theory of neural computation.
CRC Press,2018.
P. Hohenberg and W. Kohn. Inhomogeneous electron gas. Phys. Rev., 136:B864-B871, Nov
1964. doi: 10.1103∕PhysRev.136.B864. URL https://link.aps.org/doi/10.1103/
PhysRev.136.B864.
William Humphrey, Andrew Dalke, and Klaus Schulten. VMD - Visual Molecular Dynamics.
JOUrnaI OfMolecular Graphics, 14:33-38, 1996.
Amir Karton, Nitai Sylvetsky, and Jan M. L. Martin. W4-17: A diverse and high-confidence
dataset of atomization energies for benchmarking high-level electronic structure methods. JOUrnaI
of Computational ChemiStry, 38(24):2063-2075, 2017. doi: https://doi.org/10.1002/jcc.24854.
URL https://onlinelibrary.wiley.com/doi/abs/10.1002/jcc.24854.
9
Under review as a conference paper at ICLR 2022
M. F. Kasim and S. M. Vinko. Learning the exchange-correlation functional from nature
with fully differentiable density functional theory. Phys. Rev. Lett., 127:126403, SeP 2021.
doi: 10.1103/PhysRevLett.127.126403. URL https://link.aps.org/doi/10.1103/
PhysRevLett.127.126403.
W. Kohn and L. J. Sham. Self-consistent equations including exchange and correlation effects.
Phys. Rev., 140:A1133-A1138, Nov 1965. doi: 10.1103∕PhysRev.140.A1133. URL https:
//link.aps.org/doi/10.1103/PhysRev.140.A1133.
Siu Kwan Lam, Antoine Pitrou, and Stanley Seibert. Numba: A llvm-based Python jit comPiler. In
Proceedings of the Second WorkshoP on the LLVM ComPiler InfrastrUcture in HPC, LLVM ,15,
New York, NY, USA, 2015. Association for Computing Machinery. ISBN 9781450340052. doi:
10.1145/2833157.2833162. URL https://doi.org/10.1145/2833157.2833162.
Susi Lehtola. Assessment of Initial Guesses for Self-Consistent Field Calculations. SuPerPosition
of Atomic Potentials: Simple yet Efficient. Journal of Chemical Theory and Computation, 15
(3):1593-1604, March 2019. ISSN 1549-9618. doi: 10.1021∕acs.jctc.8b01089. URL https:
//doi.org/10.1021/acs.jctc.8b01089. Publisher: American Chemical Society.
Li Li, Stephan Hoyer, Ryan Pederson, Ruoxi Sun, Ekin D. Cubuk, Patrick Riley, and Kieron Burke.
Kohn-sham equations as regularizer: Building prior knowledge into machine-learned physics.
Phys. Rev. Lett., 126:036401,Jan 2021. doi: 10.1103∕PhysRevLett.126.036401. URL https:
//link.aps.org/doi/10.1103/PhySRevLett.126.036401.
Richard M. Martin. Electronic Structure: BaSic Theory and Practical Methods. Cambridge Univer-
sity Press, 2004. doi: 10.1017/CBO9780511805769.
Erkki Oja. Simplified neuron model as a principal component analyzer. Joumal of mathematical
biology, 15(3):267-273, 1982.
Erkki Oja and Juha Karhunen. On stochastic approximation of the eigenvectors and eigenvalues of
the expectation of a random matrix. Joumal of Mathematical Analysis and APPIications, 106(1):
69-84, February 1985. ISSN 0022-247X. doi: 10.1016/0022-247X(85)90131-3. URL https:
//www.sciencedirect.com/science/article/pii/0022247X85901313.
David Pfau, James S. Spencer, Alexander G. D. G. Matthews, and W. M. C. Foulkes. Ab ini-
tio solution of the many-electron schrodinger equation with deep neural networks. Phys. Rev.
ReSearch, 2:033429, Sep 2020. doi: 10.1103∕PhysRevResearch.2.033429. URL https:
//link.aps.org/doi/10.1103/PhySRevReSearch.2.033429.
Peter Pulay. Convergence acceleration of iterative sequences. the case of scf iteration.
ChemicaI PhySicS Letters, 73(2):393-398, 1980. ISSN 0009-2614. doi: https://doi.org/
10.1016/0009-2614(80)80396-4. URL https://www.sciencedirect.com/science/
article/pii/0009261480803964.
Terence D. Sanger. Optimal unsupervised learning in a single-layer linear feedforward neu-
ral network. Neural Networks, 2(6):459^73, 1989. ISSN 0893-6080. doi: https://doi.org/
10.1016/0893-6080(89)90044-0. URL https://www.sciencedirect.com/science/
article/pii/0893608089900440.
Qiming Sun, Timothy C. Berkelbach, Nick S. Blunt, George H. Booth, Sheng Guo, Zhendong Li,
Junzi Liu, James D. McClain, Elvira R. Sayfutyarova, Sandeep Sharma, Sebastian Wouters, and
Garnet Kin-Lic Chan. Pyscf: the python-based simulations of chemistry framework. WIRES
ComPutational Molecular Science, 8(1):e1340, 2018. doi: https://doi.org/10.1002/wcms.1340.
URL https://onlinelibrary.wiley.com/doi/abs/10.1002/wcms.1340.
Attila Szabo and Neil S Ostlund. Modem quantum chemistry: introdUction to advanced electronic
Structure theory. Dover Publications, Inc., 1996.
Cheng Tang. Exponentially convergent stochastic k-pca without variance reduction. In
H. Wallach, H. Larochelle, A. Beygelzimer, F. d'Alche-Buc, E. Fox, and R. Garnett
(eds.), AdVanceS in Neural Information ProceSSing Systems, volume 32. Curran Asso-
ciates, Inc., 2019. URL https://proceedings.neurips.cc/paper/2019/file/
38faae069a1371784081ea9ad9b279d0- Paper.pdf.
10
Under review as a conference paper at ICLR 2022
JH Van Lenthe, R Zwaans, Huub JJ Van Dam, and MF Guest. Starting scf calculations by superpo-
sition of atomic densities. JoUmal of CompUtational Chemistry, 27(8):926-932, 2006.
Chao Yang, Juan C. Meza, and Lin-Wang Wang. A constrained optimization algorithm for total en-
ergy minimization in electronic structure calculations. JoUrnal of CompUtational Physics, 217(2):
709-721, 2006. ISSN 0021-9991. doi: https://doi.org/10.1016/j.jcp.2006.01.030. URL https:
//www.sciencedirect.com/science/article/pii/S0021999106000325.
A Physical Background
In this section, we briefly introduce the physical background of the problem in section 3. We refer
to (Szabo & Ostlund, 1996; Martin, 2004) for more details.
In computational physics, a foundation problem is to solve the Schrodinger equation of a many-body
quantum system
H ∣Ψi = E ∣Ψi
where H is the Hamilton operator for a system of M nuclei and N electrons described by their
coordinates RA and ri . With the Born-Oppenheimer approximation (nuclei are much heavier than
electrons), we consider the electrons to be moving in the field of fixed nuclei, thus the kinetic energy
of the nuclei (approximated as zero) and the repulsion between the nuclei (approximated to be
constant) can be neglected. In this case we write H as
H
N	NM
-X 1V2 -XX	ZA
々2	i 々L |ri- RA |
i=1	i=1 A=1
X---{---} '------{------}
kinetic energy of the coulomb attraction be-
NN
+X X
i=1 j=i+1
'------
|ri
rj|
repulsion between elec-
1
electrons	tween electrons and nu-	trons
clei
and Ψ(rι,…，rN) the electronic wave function, which should be normalized (i.e., <Ψ∣Ψ) =
R Ψ*(rι,…,rN)Ψ(rι,…,rN)drι …drN = 1). For convenience, let operator h(i) = 一ɪV2 一
PM=I ∣ri-RA∣ so H Can be rewritten as H = Pi=I h⑶ + Pi=I ρN=i+ι p⅛. ACeOrding to
the variational principle, the problem of finding solution Ψ for the ground state energy E0 can be
transformed to the following constrained optimization problem
min hΨ∣ H ∣Ψi	s.t. <Ψ∣Ψ> = 1
Since the multi-electron wave function Ψ(rι,…,tn) is computationally intractable when
N is large, a basic way is to approximate it as the product of N orbital wave function
Ψ1(r1)Ψ2(r2)…Ψn(rN) satisfying hψi∣ψii = ψ ψi(r)ψi(r)dr = 1, ∀i ∈ 1 …N, which is called
“Hartree approximation”. We also expand ψi (r) = PuK=1 Cuiφ(r) as a linear combination of K
“basis functions” which is fixed and given, in this case our task becomes to determine the value of
all Cui so as to determine the approximated wave function. To construct a Lagrange multiplier
N
L = hψl H lψi — Xei(hψilψii — 1)
i=1
we have
N
hΨ∣ H ∣Ψi =E / Ψ*(rι,…，rN)h(i)Ψ(rι,…,rN)drι …drN
i=1
NN 1
+ Ψ*(rι,…，rN)£ E	■~~∣Ψ(rι, ∙∙∙ ,rN)drι …drN
i=1 j=i+1 |ri - rj |
N	1NN	1
=工 J ψt(r)h(i)ψi(r)dr +2∑^ Ej ψ*(ri)ψ*(r7-) |r - r ,| ψi Cri)M (rj )dridrj
11
Under review as a conference paper at ICLR 2022
XX CuiCviZ φu(r)h(i)φv(r)dr
i=1 u,v
1NN	1
+2∑Σ E CuiCλjCσjCvi	φu(ri)φλ(rj) ∣~~ɪ~~∣ Φσ(rj)φvgdridrj
i=1 j6=i u,v,λ,σ	|ri - rj|
and
NN
X^i(hψi[ψii - I)= Xq( / ψ*(r)ψi(r)dr - I)
i=1	i=1
=Xq(X CuiCviZ φU(r)φv(r)dr - I)
i=1	u,v
Let	Huv	=	Φ φu(r)h(i)φv(r)dr,	Suv	=	J φu(r)φv(r)dr	and	Euvλσ	=
J φu(rι)Φλ(r2) I，r21 φσ(r2)φv(r1)dr1dr2 which are all constants since {φi} are given functions,
we have
N	NN
L = XXCuiCviHuv + 1XX X CuiCλjCσjCviEuvλσ
i=1 u,v
i=1 j 6=i u,v,λ,σ
∂L
∂Ci
N
- X i(X CuiCviSuvdr - 1)
i=1	u,v
=2 X Cvi(Huv + X XCλjCσjEuvλσ-iSuv)
v
j(6=i) λ,σ
Let ∂CL- = 0, ∀i = 1 ∙∙∙ N,υ = 1 ∙∙∙ K and We have
v
Cvi(Huv +	CλjCσjEuvλσ) =
j(6=i) λ,σ
€i ECviSuv,∀i = 1…N,u = 1…K
v
Let Pλσ	=	j(6=i)	Cλj Cσj,	[Ueff(P )]uv	=	λ,σ PλσEuvλσ,	Fuv	=	Huv +	[Ueff(P )]uv and Λ
diag(6ι, ∙∙∙ , 6n), P, Ueff(P), F ∈ Rk×k, we have the matrix form of the above equation
FC = SCΛ
which is a generalized eigenvalue problem where the matrix F to be decomposed is defined by the
eigenvectors C.
Actually, there are several improved approximation theories based on the Hartree approximation
mentioned above, in which the definitions of P and Ueff(P) are different. A most influential one
is the Hartree-Fock theory in which the multi-electron wave function is approximated by a slater
determinant
X2(x1)…XN (xι)
X2(x2)	…	XN (x2)
..	..	..
.	..
X2(XN)	… Xn (XN)
to conform to the antisymmetry principle Ψ(∙∙∙ , Xi, ∙∙∙ , Xj, •…) = 一Ψ(∙∙∙ , Xj, ∙∙∙ , Xi, •…)
whose famous representation is Pauli exclusion principle. In this way Puv = 2 PiN/2 Cλj Cσj (or in
matrix form, P = 2CC>) and [Ueff(P)]uv = Pλ,σ PλσEuvλσ — 2 Pλ,σ PλσEuλσv, in which an
“exchange term” —1 Pλ C PλσEuλσv is added.
2 ,σ
ψ(x1,…，xN) = -7=
N!
X1(X1)
X1(X2)
X1(XN)
B	Self-Consistent Field (SCF) method
Self-Consistent Field (SCF) is a standard method to solve equation 1. An initial density matrix
P0 is generated via heuristics based on prior quantum mechanism knowledge, then the generalized
12
Under review as a conference paper at ICLR 2022
eigen-decomposition problem F (Pt-1)Vt = SVtΛt is repeatedly solved to obtain eigenvectors Vt
and density matrix Pt = 2匕匕> at the t-th iterations, t = 1, 2, ∙∙∙, until |Pt - Pt-ι∖ is less than the
convergence threshold. The detailed routine is shown in Algorithm 3.
To solve the generalized eigen-decomposition problem, it should be transformed to standard form
first. To achieve this, the orthogonalization technique introduced in (Szabo & Ostlund, 1996) is
applied to eliminate the overlap matrix S. First, find a linear transformation X so that X> SX = I .
There are several ways to achieve this, a popular one is named “canonical orthogonalization”
which lets X = Udiag(s-1/2), where U and s are all eigenvectors and eigenvalues of S. Note
that all eigenvalues of S are positive so there is no difficulty of taking square roots. Then let
V0 = X-1V (V = XV0), we have F (V)XV0 = SXV 0Λ. Multiply X> on the left and we
haveX>F(V)XV0 = X>SXV 0Λ. LetF0(V) = X>F(V)X, we have
F0(V)V0 = V0Λ	(9)
which is a standard eigen-decomposition problem.
Algorithm 3 Self-Consistent Field (SCF) method
Input: H, S, Ueff(∙) in equation 1 and equation 2. Converge threshold e.
Output: V *, the solution of equation 1
Obtain initial density matrix P0 via initial guess methods (e.g., SAD or core Hamiltonian).
Find X satisfying X> SX = I .
t J 0
while ∖Pt - Pt-1 ∖ < do
Ft J H + Ueff(Pt)
Ft0 J X> FtX
tJt+1
Obtain precise eigenvectors Vt0 of Ft0-1 corresponding to the top-k smallest eigenvalues via
classical eigen-decomposition methods such as QR iteration.
Vt J XVt0
Pt J 2VtVt>
end while
V * — Vt
C Proof
Proof of Proposition 1:
Proof. V* being the solution of equation 1 means that V * contains the generalized eigenvectors
corresponding to the top-k smallest generalized eigenvalues of [F (V*), S]. In Algorithm 1, we
denote the converged V0 in the final step as V *0. With the orthogonalization technique introduced in
Appendix B, V* being the solution of equation 1 is equivalent to
1.	V*0 = X-1V * contains the eigenvectors corresponding to the top-k smallest eigenvalues
ofF*0.
2.	F*0 = X>F(V*)X.
When V0 in the iteration of Algorithm 1 is equal to the converged solution V*0, F*0 = X>F(V*)X
holds. Since V *0 is already converged, the one-step decomposition of -F*0 will produce no up-
date for V*0. For Oja's algorithm equation 3, letting M = -F*0, this means (v*, ∙∙∙ ,v* =
QR(v* + ηMv*, ∙∙∙ , v* + ηMvk), η > 0. Note that v*, ∙∙∙ , v* are orthonormal guaranteed by the
QR decomposition. Considering that the QR decomposition is implemented via the Gram-Schmidt
process, starting from i = 1, we have
β1 - 1
βιv* = v* + ηMv* ⇒ Mv* = β1——v*
1	1	1	1 η1
β2v2* = v2* + ηMv2* - [(v2* + ηM v2*)>v1*]v1*
13
Under review as a conference paper at ICLR 2022
=v； + ηMv2 - [v；>v； + ηv2>M>v"v；
=说 + ηMv2 - [nv；> β一1 v；]v；
2	2	2 η 11
β2 - 1
=v； + nMv； ⇒ Mv； =----v；
2	2	2 η2
in which βι = ||v； + ηMv[k,β2 = kv； + nMv； - [(v； + nMv；)>v；]v；k, .…are normalization
factors. Therefore, v；,…，vk are all eigenvectors of -F；0.
To show that v；, ∙∙∙ , v； are eigenvectors corresponding to the top-k eigenvalues, We mainly follow
(Oja & Karhunen, 1985) and (Hertz et al., 2018). We start from k = 1 to show that v1； should
correspond to the largest eigenvalue λ1 of -F；0 to be a stable convergence point.
First, for v1, the QR decomposition degenerates to normalization, that is
F0 - X>F(v1)X,
v0
v1 - vι + η(-F0)vι,	vι 一方1
Assuming η is small enough, it can be expanded as a power series of η. By ignoring O(η2 ) terms,
we have
F 0 J X > F (vι)X, vι J vι + η∆vι,	∆vι = (-F 0)vι — [v> (-F 0)vι]vι
While we have a converged solution v1； , we already know that it is an eigenvector but do not know
which eigenvalue it corresponds to. In this case, we assume that after a series of iterations, v1 is
very close to the eigenvector corresponding to the αth largest eigenvalue (denoted as vα) of the final
converged matrix -F；0 = -X>F(v1；)X, that is
v1 = vα +
where is a very small perturbation vector. Since we already know that v1； is an eigenvector, we
have v1； = vα .
LetM = -F；0 = -X>F(v1；)X andE = X>F(v1；)X - X>F(v1)X = -F0 - M ⇒ -F0 =
M + E. From the assumption in the proposition, we have Ev1 = O(2 ). Then we do one-step
iteration as follows:
∆v1 = (-F0)v1 - [v1> (-F0)v1]v1
= (M + E)v1 - [v1> (M + E)v1]v1
=M(vα+) - [(vα + )>M(vα + )](vα + ) + O(2)
=(M+E)(vα+)-[(vα+)>(M+E)(vα+)](vα+)
=λαvα+M- (vα>Mvα)vα - (>Mvα)vα - (vαM )vα - (vα>Mvα) + O(2)
= M - 2λα(>vα)vα - λα + O(2)
Now we want to analyse the direction of ∆v1 to see whether it can conquer the perturbation and
converge to v1； = vα stably. We do it by multiplying another eigenvector vβ> on the left (ignoring
the O(2 ) term)
vβ>∆v1 = (M>vβ)> - 2λα(>vα)δαβ - λαvβ>
= (λβ - λα)vβ> - 2λα(>vα)δαβ
We notice that, if β > α (i.e., λβ > λα), there will always exist a direction so that both vβ> and
vβ> ∆v1 are larger than zero. In this case v1 will flip to the other eigenvector thus cannot converge
to v α stably. Therefore, α should be 1 so that v1； = vα corresponds to the largest eigenvalue of
-F；0.
For top-k case, take k = 2 as an example, notice that the Gram-Schmidt process not only normalize
the eigenvector v2 but also orthogonalize it towards v1, so (v2 + ∆v2)>v1 = (∆v2)>v1 = 0, and
we already know that v1 will converge to the eigenvector corresponding to the largest eigenvalue.
Therefore we can only select other eigenvectors out of v1 to analyse the direction of ∆v2, which
shows that v2 will converge to the eigenvector corresponding to the second largest eigenvalue.
□
14
Under review as a conference paper at ICLR 2022
D	Full- s olver Performance Benchmark
While SCGLED is not targeted to be an extremely precise (convergence threshold less than 10-10),
end-to-end solving technique due to its first-order nature, we still compare its performance toward
traditional SCF methods in a full-solver setting for reference.
We test three full-solving schemes
•	Independent SCGLED: applying our proposed method, SCGLED, as a full solver without
any tranditional SCF methods.
•	SCF + minao: applying the traditional SCF method with “minao” as the initial guess
method, which performs best within traditional methods as shown in subsection 5.1, and
acts as the default setting in PySCF.
•	SCF + SCGLED: applying the traditional SCF method with SCGLED as the initial guess
method.
with three settings for heuristics convergence acceleration techniques
•	Vanilla: no convergence acceleration method is applied.
•	Damping: the damping technique shown in equation 6 is applied in SCGLED or SCF
iteration.
•	DIIS: the DIIS technique (Pulay, 1980) is applied in independent SCGLED or SCF itera-
tion. Note that DIIS is not applied when SCGLED is served as an initial guess method.
So excluding vanilla SCGLED in Algorithm 1 whose empirical performance is too poor for bench-
marking, we have 8 test methods in total to be benchmarked. In Table 1, we evaluate these methods
from two aspects
•	Convergence: evaluated via the number of successfully solved molecules within the total
160 singlet molecules in W4-17 dataset.
•	Efficiency: evaluated via the averaged3 end-to-end time cost of the method along the
molecules that are successfully solved.
For the parameter setting, when SCGLED is served as an initial method, we set T = 5000 and
IF = 50 for Vanilla and Damping cases, which is relatively large since their performance are more
sensitive to the quality of initial guess. For the DIIS case which are relatively not so sensitive to
the initial guess, we set T = 200 and IF = 25. When SCGLED is running independently without
traditional SCF iterations, the parameter setting stays the same as in subsection 5.2.
	Vanina	Damping	DIIS
Independent SCGLED	—	155 / 574.3 ms	160 / 657.9 ms
SCF + minao	141 /332.6 ms	159 / 244.3 ms	160/ 160.9 ms
SCF + SCGLED	149/190.3 ms	159 / 207.1 ms	160 / 148.7 ms
Table 1: Benchmark results for three full-solving schemes with three heuristics convergence accel-
eration settings. In each cell, the former is the number of successfully solved molecules within 160
test molecules, and the latter is the averaged time cost.
The benchmark result is shown in Table 1 and Figure 6. While independent SCGLED works in the
full-solver setting, there is still a performance gap with other methods that target for full-solving
performance. Instead, SCF + SCGLED works best, especially in the Vanilla case that both the
convergence performance (unsolved molecules from 19 to 11) and efficiency performance (aver-
aged time cost from 332.6 ms to 190.3 ms) are significantly improved. For the Damping and DIIS
case, the performance advantages are narrowed since the heuristics convergence acceleration tech-
niques themselves become a more dominant factor for end-to-end performance. Also note that, as an
3 Note that the time cost grows exponentially towards the size of the molecule, so the distribution of time
cost is quite skewed along different size of molecules. For this reason we take the logarithm of the time cost
before the average.
15
Under review as a conference paper at ICLR 2022
Figure 6: Full-solver Performance Benchmark.
optimization-based method, SCGLED brings more randomness compared with traditional heuristics
initial guess methods that are built on domain knowledge. Therefore, while SCF + SCGLED per-
forms better for most of the molecules, its distribution of time costs is wider, shown as curves with
smaller slope in Figure 6, and the end of the curve in Damping and DIIS settings can correspond to
larger time cost compared with SCF + minao.
E	Result Per Molecule
In this section, we provide the description of the full numerical result listed in the supplementary
material of this paper, for all the 160 singlet molecules in the W4-17 dataset. For each molecule and
method, we list four values as follows:
•	Energy: the total Hartree-Fock energy of the molecule computed with the method (Unit:
Hartree, 1 Hartree = 4.3598 × 10-10 Joule).
•	Energy error: the difference between the computed energy above and the exact Hartree-
Fock energy listed in the second column of the table (expected to be as small as possible).
Note that we only keep 6 decimals due to the space limit, while the converge criterion is
stricter, so there will be some cases that the error is 0.000000 while the number of iterations
in the fourth line is not equal to zero.
•	Wall time: the wall time to run the method for the corresponding molecule.
•	Convergence: whether the computed result can reach to a converged solution with the
vanilla SCF iteration shown in Algorithm 3 (cannot reach a converged solution via SCF:
X; can reach a converged solution via SCF: ✓; already a converged solution: ✓✓). If it can
reach to a converged solution, we also show the number of SCF iterations it costs. If the
number of SCF iterations is equal to 0, it means that the method already reaches a precise
(converged) solution before the SCF iteration.
In the result table, we bold the result if it is a dominated result over the baselines (the energy error
and wall time are both smaller than the best of the baseline methods while the number of iterations is
not larger than the best baseline). We UnderIine the result if it takes more time than the best baseline
while the other target values are dominated. The HCore method are not taken into account here since
both the energy error and the convergence performance are very unsatisfactory, even though it is
extremely fast.
The table shows that
•	75 out of 160 molecules contain at least one dominated result (in bold).
•	155 out of 160 molecules contain at least one more precise result (marked with underline).
16
Under review as a conference paper at ICLR 2022
•	72 out of 160 molecules contain at least one result that already reached the converged solu-
tion (marked with ✓✓, the number of SCF iterations is equal to 0) within 10,000 iterations
of SCGLED. That is, we already obtained the converged, precise solution. No further SCF
iterations are needed.
•	14 out of 160 molecules are successfully led to convergence by SCGLED while all the four
baseline methods failed to do so.
The full table of numerical result can be found in “full_numerical_result.pdf” as a SUP-
plementary material of this paper.
17