Published as a conference paper at ICLR 2021
Interpreting Knowledge Graph Relation
Representation from Word Embeddings
Carl Alien1*, Ivana BalazeviC1* & Timothy Hospedales1,2
1 University of Edinburgh, UK 2 Samsung AI Centre, Cambridge, UK
{carl.allen, ivana.balazevic, t.hospedales}@ed.ac.uk
Ab stract
Many models learn representations of knowledge graph data by exploiting its
low-rank latent structure, encoding known relations between entities and enabling
unknown facts to be inferred. To predict whether a relation holds between entities,
embeddings are typically compared in the latent space following a relation-specific
mapping. Whilst their predictive performance has steadily improved, how such
models capture the underlying latent structure of semantic information remains
unexplained. Building on recent theoretical understanding of word embeddings,
we categorise knowledge graph relations into three types and for each derive
explicit requirements of their representations. We show that empirical properties of
relation representations and the relative performance of leading knowledge graph
representation methods are justified by our analysis.
1	Introduction
Knowledge graphs are large repositories of binary relations between words (or entities) in the form
of (subject, relation, object) triples. Many models for representing entities and relations have been
developed, so that known facts can be recalled and previously unknown facts can be inferred, a task
known as link prediction. Recent link prediction models (e.g. Bordes et al., 2013; Trouillon et al.,
2016; Balazevic et al., 2019b) learn entity representations, or embeddings, of far lower dimensionality
than the number of entities, by capturing latent structure in the data. Relations are typically represented
as a mapping from the embedding of a subject entity to those of related object entities. Although the
performance of link prediction models has steadily improved for nearly a decade, relatively little is
understood of the low-rank latent structure that underpins them, which we address in this work. The
outcomes of our analysis can be used to aid and direct future knowledge graph model design.
We start by drawing a parallel between the entity embeddings of knowledge graphs and context-free
word embeddings, e.g. as learned by Word2Vec (W2V) (Mikolov et al., 2013a) and GloVe (Pennington
et al., 2014). Our motivating premise is that the same latent word features (e.g. meaning(s), tense,
grammatical type) give rise to the patterns found in different data sources, i.e. manifesting in word co-
occurrence statistics and determining which words relate to which. Different embedding approaches
may capture such structure in different ways, but if it is fundamentally the same, an understanding
gained from one embedding task (e.g. word embedding) may benefit another (e.g. knowledge
graph representation). Furthermore, the relatively limited but accurate data used in knowledge graph
representation differs materially from the highly abundant but statistically noisy text data used for
word embeddings. As such, theoretically reconciling the two embedding methods may lead to unified
and improved embeddings learned jointly from both data sources.
Recent work (Allen & Hospedales, 2019; Allen et al., 2019) theoretically explains how semantic
properties are encoded in word embeddings that (approximately) factorise a matrix of pointwise
mutual information (PMI) from word co-occurrence statistics, as known for W2V (Levy & Goldberg,
2014). Semantic relationships between words, specifically similarity, relatedness, paraphrase and
analogy, are proven to manifest as linear geometric relationships between rows of the PMI matrix
(subject to known error terms), of which word embeddings can be considered low-rank projections.
This explains, for example, the observations that similar words have similar embeddings and that
embeddings of analogous word pairs share a common “vector offset” (e.g. Mikolov et al., 2013b).
* Equal contribution
1
Published as a conference paper at ICLR 2021
Table 1: Score functions of representative linear link prediction models. R ∈ Rde ×de and
r ∈ Rde are the
relation matrix and translation vector, W ∈ Rde ×dr ×de is the core tensor and bs, bo ∈ R are the entity biases.
Model	Linear Subcategory		Score Function
TransE	(Bordes et al., 2013)	additive	-kes + r - eok22
DistMult	(Yang et al., 2015)	multiplicative (diagonal)	es>Reo
TuckER	(Balazevic et al., 2019b)	multiplicative	W×1es ×2r ×3eo
MuRE	(BalazeviC et al., 2019a)	multiplicative (diagonal) + additive	-kRes + r - eok22 + bs + bo
We extend this insight to identify geometric relationships between PMI-based word embeddings
that correspond to other relations, i.e. those of knowledge graphs. Such relation conditions define
relation-specific mappings between entity embeddings (i.e. relation representations) and so provide
a “blue-print” for knowledge graph representation models. Analysing the relation representations
of leading knowledge graph representation models, we find that various properties, including their
relative link prediction performance, accord with predictions based on these relation conditions,
supporting the premise that a common latent structure is learned by word and knowledge graph
embedding models, despite the significant differences between their training data and methodology.
In summary, the key contributions of this work are:
•	to use recent understanding of PMI-based word embeddings to derive geometric attributes of
a relation representation for it to map subject word embeddings to all related object word
embeddings (relation conditions), which partition relations into three types (§3);
•	to show that both per-relation ranking as well as classification performance of leading link
prediction models corresponds to the model satisfying the appropriate relation conditions, i.e. how
closely its relation representations match the geometric form derived theoretically (§4.1); and
•	to show that properties of knowledge graph representation models fit predictions based on relation
conditions, e.g. the strength of a relation’s relatedness aspect is reflected in the eigenvalues of its
relation matrix (§4.2).
2	Background
Knowledge graph representation: Recent knowledge graph models typically represent entities
es, eo as vectors es, eo ∈ Rde, and relations as transformations in the latent space from subject to
object entity embedding, where the dimension de is far lower (e.g. 200) than the number of entities
ne (e.g. > 104). Such models are distinguished by their score function, which defines (i) the form of
the relation transformation, e.g. matrix multiplication and/or vector addition; and (ii) the measure
of proximity between a transformed subject embedding and an object embedding, e.g. dot product
or Euclidean distance. Score functions can be non-linear (e.g. Dettmers et al., 2018), or linear and
sub-categorised as additive, multiplicative or both. We focus on linear models due to their simplicity
and strong performance at link prediction (including state-of-the-art). Table 1 shows the score
functions of competitive linear knowledge graph embedding models spanning the sub-categories:
TransE (Bordes et al., 2013), DistMult (Yang et al., 2015), TuckER (Balazevic et al., 2019b) and
MuRE (Balazevic et al., 2019a).
Additive models apply a relation-specific translation to a subject entity embedding and typically use
Euclidean distance to evaluate proximity to object embeddings. A generic additive score function is
given by φ(es, r, eo) = -kes+r-eok22+bs+bo. A simple example is TransE, where bs =bo =0.
Multiplicative models have the generic score function φ(es, r, eo) =es>Reo, i.e. a bilinear product of
the entity embeddings and a relation-specific matrix R. DistMult is a simple example with R diagonal
and so cannot model asymmetric relations (Trouillon et al., 2016). In TuckER, each relation-specific
R=W×3 r is a linear combination of dr “prototype” relation matrices in a core tensor W ∈ Rde×dr×de
(×n denoting tensor product along mode n), facilitating multi-task learning across relations.
Some models, e.g. MuRE, combine both multiplicative (R) and additive (r) components.
Word embedding: Algorithms such as Word2Vec (Mikolov et al., 2013a) and GloVe (Pennington
et al., 2014) generate low-dimensional word embeddings that perform well on downstream tasks
(Baroni et al., 2014). Such models predict the context words (cj) observed around a target word (wi)
in a text corpus using shallow neural networks. Whilst recent language models (e.g. Devlin et al.,
2018; Peters et al., 2018) achieve strong performance using contextualised word embeddings, we
focus on “context-free” embeddings since knowledge graph entities have no obvious context and,
importantly, they offer insight into embedding interpretability.
2
Published as a conference paper at ICLR 2021
Levy & Goldberg (2014) show that, for a dictionary of ne unique words and embedding dimension
de ne, W2V’s loss function is minimised when its embeddings wi , cj form matrices W, C ∈
Rde ×ne that factorise a pointwise mutual information (PMI) matrix of word co-occurrence statistics
(PMI(Wi ,cj ) = log PPIWPc))), subject to a shift term. This result relates W2V to earlier count-based
embeddings and specifically PMI, which has a history in linguistic analysis (Turney & Pantel, 2010).
From its loss function, GloVe can be seen to perform a related factorisation.
Recent work (Allen & Hospedales, 2019; Allen et al., 2019) shows how the semantic relationships
of similarity, relatedness, paraphrase and analogy are encoded in PMI-based word embeddings
by recognising such embeddings as low-rank projections of high dimensional rows of the PMI
matrix, termed PMI vectors. Those semantic relationships are described in terms of multiplicative
interactions between co-occurrence probabilities (subject to defined error terms), that correspond to
additive interactions between (logarithmic) PMI statistics, and hence PMI vectors. Thus, under a
sufficiently linear projection, those semantic relationships correspond to linear relationships between
word embeddings. Note that although the relative geometry reflecting semantic relationships is
preserved, the direct interpretability of dimensions, as in PMI vectors, is lost since the embedding
matrices can be arbitrarily scaled/rotated if the other is inversely transformed. We state the relevant
semantic relationships on which we build, denoting the set of unique dictionary words by E :
•	Paraphrase: word subsets W, W * ⊆E are said to paraphrase if they induce similar distributions
over nearby words, i.e. p(E∣W) ≈ p(E∣W *), e.g. {king} paraphrases {man, royal}.
•	Analogy: a common example of an analogy is “woman is to queen as man is to king” and can
be defined as any set of word pairs {(wi, wi*)}i∈I for which it is semantically meaningful to say
“wa is to wa* as wb is to wb*” ∀a, b ∈ I.
Where one word subset paraphrases another, the sums of their embeddings are shown to be equal
(subject to the independence of words within each set), e.g. wking ≈ wman + wroyal. An in-
teresting connection is established between the two semantic relationships: a set of word pairs
A= {(wa, wa*), (wb, wb*)} is an analogy if {wa, wb*} paraphrases {wa*, wb}, in which case the em-
beddings satisfy w0* -Wa ≈ Wb* -Wb (“vector offset”).
3 From analogies to knowledge graph relations
Analogies from the field of word embeddings are our starting point for developing a theoretical basis
for representing knowledge graph relations. The relevance of analogies stems from the observation
that for an analogy to hold (see §2), its word pairs, e.g {(man, king), (woman, queen), (girl, princess)},
must be related in the same way, comparably to subject-object entity pairs under a common knowledge
graph relation. Our aim is to develop the understanding of PMI-based word embeddings (henceforth
word embeddings), to identify the mathematical properties necessary for a relation representation to
map subject word embeddings to all related object word embeddings.
Considering the paraphrasing word sets {king} and {man, royal} corresponding to the word embed-
ding relationship Wking ≈ Wman +Wroyal (§2), royal can be interpreted as the semantic difference
between man and king, fitting intuitively with the relationship Wroyal ≈ Wking -Wman. Fundamen-
tally, this relationship holds because the difference between words that co-occur (i.e. occur more
frequently than if independent) with king and those that co-occur with man, reflects those words that
co-occur with royal. We refer to this difference in co-occurrence distribution as a “context shift”,
from man (subject) to king (object). Allen & Hospedales (2019) effectively show that where multiple
word pairs share a common context shift, they form an analogy whose embeddings satisfy the vector
offset relationship. This result seems obvious where the context shift mirrors an identifiable word, the
embedding of which is approximated by the common vector offset, e.g. queen and woman are related
by the same context shift, i.e. Wqueen
≈ Wwoman+Wroyal , thus Wqueen-Wwoman ≈ Wking -Wman .
However, the same result holds, i.e. an analogy is formed with a common vector offset between
embeddings, for an arbitrary (common) context shift that may reflect no particular word. Importantly,
these context shift relations evidence a case in which it is known how a relation can be represented,
i.e. by an additive vector (comparable to TransE) if entities are represented by word embeddings.
More generally, this provides an interpretable foothold into relation representation.
Note that not all sets of word pairs considered analogies exhibit a clear context shift relation, e.g. in
the analogy {(car,engine), (bus,seats)}, the difference between words co-occurring with engine and
car is not expected to reflect the corresponding difference between bus and seats. This illustrates how
3
Published as a conference paper at ICLR 2021
(a) Similarity (b) Relatedness (c) Specialisation (d) Context-shift (e) Gen. context-shift
Figure 1: Relationships between PMI vectors (black rectangles) of subject/object words for different relation
types. PMI vectors capture co-occurrence with every dictionary word: strong associations (PMI > 0) are shaded
(blue define the relation, grey are random other associations); red dash = relatedness; black dash = context sets.
analogies are a loosely defined concept, e.g. their implicit relation may be semantic or syntactic, with
several sub-categories of each (e.g. see Gladkova et al. (2016)). The same is readily observed for the
relations of knowledge graphs. This likely explains the observed variability in “solving” analogies
by use of vector offset (e.g. KOPer et al., 2015; Karpinska et al., 2018; Gladkova et al., 2016) and
suggests that further consideration is required to represent relations (or solve analogies) in general.
We have seen that the existence of a context shift relation between a subject and object word implies
a (relation-specific) geometric relationship between word embeddings, thus the latter provides a
necessary condition for the relation to hold. We refer to this as a “relation condition” and aim to
identify relation conditions for other classes of relation. Once identified, relation conditions define
a mapping from subject embeddings to all related object embeddings, by which related entities
might be identified with a proximity measure (e.g. Euclidean distance or dot product). This is the
precise aim of a knowledge graph representation model, but loss functions are typically developed
heuristically. Given the existence of many representation models, we can verify identified relation
conditions by contrasting the per-relation performance of various models with the extent to which
their loss function reflects the appropriate relation conditions. Note that since relation conditions are
necessary rather than sufficient, they do not guarantee a relation holds, i.e. false positives may arise.
Whilst we seek to establish relation conditions based on PMI word embeddings, the data used to train
knowledge graph embeddings differs significantly to the text data used by word embeddings, and the
relevance of conditions ultimately based on PMI statistics may seem questionable. However, where
a knowledge graph representation model implements relation conditions and measures proximity
between embeddings, the parameters of word embeddings necessarily provide a potential solution
that minimises the loss function. Many equivalent solutions may exist due to symmetry as typical
for neural network architectures. We now define relation types and identify their relation conditions
(underlined); we then consider the completeness of this categorisation.
•	Similarity: Semantically similar words induce similar distributions over the words they co-occur
with. Thus their PMI vectors and Word embeddings are Similar (Fig 1a).
•	Relatedness: The relatedness of two words can be considered in terms of the words S ⊆ E with
which both co-occur similarly. S defines the nature of relatedness, e.g. milk and cheese are related by
S= {dairy, breakfast, ...}; and |S| reflects the strength of relatedness. Since PMI vector components
corresponding to S are similar (Fig 1b), embeddings of S-related words have SimiIar components in
the SUbSPaCe VS that spans the projected PMI vector dimensions corresponding to S. The rank of
VS is thus anticipated to reflect relatedness strength. Relatedness can be seen as a weaker and more
variable generalisation of similarity, its limiting case where S=E, hence rank(VS) =de.
•	Context-shift: As discussed above, words related by a common difference between their distribu-
tions of co-occurring words, defined as context-shifts, Share a common VeCtOr OffSet between word
embeddings. Context might be considered added (e.g. man to king), termed a specialisation (Fig 1c),
subtracted (e.g. king to man) or both (Fig 1d). These relations are 1-to-1 (subject to synonyms) and
include an aspect of relatedness due to the word associations in common. Note that, specialisations
include hyponyms/hypernyms and context shifts include meronyms.
•	Generalised context-shift: Context-shift relations generalise to 1-to-many, many-to-1 and many-
to-many relations where the added/subtracted context may be from a (relation-specific) context
set (Fig 1e), e.g. any city or anything bigger. The potential scope and size of context sets adds
variability to these relations. The limiting case in which the context set is “small” reduces to a 1-to-1
context-shift (above) and the embedding difference is a known VeCtOr offset. In the limiting case
of a “large” context set, the added/subtracted context is essentially unrestricted such that only the
relatedness aspect of the relation, and thus a common SUbSPaCe component of embeddings, is fixed.
4
Published as a conference paper at ICLR 2021
Categorisation completeness: Taking intuition from Fig 1 and considering PMI vectors as sets of
word features, these relation types can be interpreted as set operations: similarity as set equality;
relatedness as subset equality; and context-shift as a relation-specific set difference. Since for any
relation each feature must either remain unchanged (relatedness), change (context shift) or else be
irrelevant, we conjecture that the above relation types give a complete partition of semantic relations.
Table 2: Categorisation of WN18RR relations.
Type	Relation	Examples (subject entity, object entity)
R	verb_group derivationally_related_form also_see	(trim_down_VB_1, cut_VB_35), (hatch_VB_1, incubate_VB_2) (lodge_VB_4, accommodation_NN_4), (question_NN_1, inquire_VB_1) (clean_JJ_1, tidy_JJ_1), (ram_VB_2, screw_VB_3)
S	hypernym instance_hypernym	(land_reform_NN_1, reform_NN_1), (prickle-weed_NN_1, herbaceous_plant_NN_1) (yellowstone_river_NN_1, river_NN_1), (leipzig_NN_1, urban_center_NN_1)
C	member_of_domain_usage member_of_domain_region member_meronym has_part synset_domain_topic_of	(colloquialism_NN_1, figure_VB_5), (plural_form_NN_1, authority_NN_2) (rome_NN_1, gladiator_NN_1), (usa_NN_1, multiple_voting_NN_1) (south_NN_2, sunshine_state_NN_1), (genus_carya_NN_1, pecan_tree_NN_1) (aircraft_NN_1, cabin_NN_3), (morocco_NN_1, atlas_mountains_NN_1) (quark_NN_1, physics_NN_1), (harmonize_VB_3, music_NN_4)
3.1	Categorising Real Knowledge Graph Relations
Analysing the relations of popular knowledge graph datasets, we observe that they indeed imply (i) a
relatedness aspect reflecting a common theme (e.g. both entities are animals or geographic terms);
and (ii) contextual themes specific to the subject and/or object entities. Further, relations fall under a
hierarchy of three relation types: highly related (R); generalised specialisation (S); and generalised
context-shift (C). As above, “generalised” indicates that context differences are not restricted to be
1-1. From Fig 1, it can be seen that type R relations are a special case of S, which are a special case of
C. Thus type C encompasses all considered relations. Whilst there are many ways to classify relations,
e.g. by hierarchy, transitivity, the proposed relation conditions delineate relations by the required
mathematical form (and complexity) of their representation. Table 2 shows a categorisation of the
relations of the WN18RR dataset (Dettmers et al., 2018) comprising 11 relations and 40,943 entities.1
An explanation for the category assignment is in Appx. A. Analysing the commonly used FB15k-237
dataset (Toutanova et al., 2015) reveals relations to be almost exclusively of type C, precluding a
contrast of performance per relation type and hence that dataset is omitted from our analysis. Instead,
we categorise a random subsample of 12 relations from the NELL-995 dataset (Xiong et al., 2017),
containing 75,492 entities and 200 relations (see Tables 8 and 9 in Appx. B).
3.2	Relations as mappings between embeddings
Given the relation conditions of a relation type, we now consider mappings that satisfy them and
thereby loss functions able to identify relations of each type, evaluating proximity between mapped
entity embeddings by dot product or Euclidean distance. We then contrast our theoretically derived
loss functions, specific to a relation type, with those of several knowledge graph models (Table 1) to
predict identifiable properties and the relative performance of different knowledge graph models for
each relation type.
R: Identifying S -relatedness requires testing both entity embeddings es, eo for a common subspace
component VS , which can be achieved by projecting both embeddings onto VS and comparing their
images. Projection requires multiplication by a matrix Pr ∈ Rd×d and cannot be achieved additively,
except in the trivial limiting case of similarity (Pr = I) when r ≈ 0 can be added.
Comparison by dot product gives (Pres)>(Preo) =es>Pr>Preo =es>Mreo (for relation-specific
symmetric Mr =Pr>Pr). Euclidean distance gives kPres -Preok2 = (es -eo)>Mr(es -eo) =
kPresk2 -2es>Mreo+ kPreok2.
S/C: The relation conditions require testing for both S-relatedness and relation-specific entity
component(s) (vrs, vro). This is achieved by (i) multiplying both entity embeddings by a relation-
specific projection matrix Pr that projects onto the subspace that spans the low-rank projection of
dimensions corresponding to S, vrs and vro (i.e. testing for S-relatedness while preserving relation-
specific entity components); and (ii) adding a relation-specific vector r = vro - vrs to the transformed
subject entity embeddings.
1We omit the relation “similar_to” since its instances have no discernible structure, and only 3 occur in the
test set, all of which are the inverse of a training example and trivial to predict.
5
Published as a conference paper at ICLR 2021
Comparing the transformed entity embeddings by dot product equates to (Pres + r)>Preo; and by
Euclidean distance to kPres + r - Preok2 = kPres + rk2 - 2(Pres + r)>Preo + kPreok2 (cf
MuRE: kRes + r - eo k2).
Contrasting these theoretically derived loss functions with those of knowledge graph models (Table
1), we make the following predictions:
P1: The ability to learn the representation of a relation is expected to reflect:
(a)	the complexity of its type (R<S<C) independently of model choice; and
(b)	whether relation conditions (e.g. additive/multiplicative interactions) are met by the model.
P2: Knowledge graph relation representations reflect the following type-specific properties:
(a)	relation matrices for relatedness (type R) relations are highly symmetric;
(b)	offset vectors for relatedness relations have low norm; and
(c)	as a proxy to the rank ofVS, the eigenvalues of a relation matrix reflect relatedness strength.
To elaborate, our core prediction P1(b) anticipates that: (i) additive-only models (e.g. TransE) are
not suited to identifying the relatedness aspect of relations, except in limiting cases of similarity,
requiring a zero vector); (ii) multiplicative-only models (e.g. DistMult) should perform well on type R
relations, but are not suited to identifying entity-specific features of type S/C (an asymmetric relation
matrix in TuckER may help compensate); and (iii) the loss function of MuRE closely resembles that
derived for type C relations, which generalise all others, and is thus expected to perform best overall.
4	Evidence linking knowledge graph and word embeddings
We test whether the predictions P1 and P2, made on the basis of word embeddings, apply to
knowledge graph relations by analysing the performance and properties of competitive knowledge
graph models. We compare TransE, DistMult, TuckER and MuRE, which entail different forms
of relation representation, on all WN18RR relations and a similar number of NELL-995 relations
(spanning all relation types). All models have a comparable number of free parameters.
Since for TransE, the logistic sigmoid cannot be applied to the score function to give a probabilistic
interpretation comparable to other models, for fair comparison we include MuREI, a constrained
variant of MuRE with Rs = Ro = I , as a proxy to TransE. Implementation details are included in
Appx. D. For evaluation, we generate 2ne evaluation triples for each test triple (ne = |E| denoting
the number of entities) by fixing the subject entity es and relation r and replacing the object entity
eo with each entity in turn and then keeping eo and r fixed and varying es. Each model’s scores for
the evaluation triples are ranked to give the standard metric Hits@10 (Bordes et al., 2013), i.e. the
fraction of times a true triple appears in the top 10 ranked evaluation triples.
4.1	P1: Justifying the relative performance of knowledge graph models
Ranking performance: Tables 3 and 4 report Hits@10 for each relation and include the relation
type as well as known confounding influences: percentage of relation instances in the training and
test sets (approximately equal), the actual number of instances in the test set (causing some results
to be highly granular), Krackhardt hierarchy score (See Appx. E) (Krackhardt, 2014; Balazevic
et al., 2019a) and maximum and average shortest path between any two related nodes. A further
confounding effect is dependence between relations: Lacroix et al. (2018) and Balazevic et al. (2019b)
independently show that constraining the rank of relation representations is beneficial for datasets
with many relations due to multi-task learning, particularly when the number of instances per relation
is low. This is expected to benefit TuckER on the NELL-995 dataset (200 relations).
As predicted in P1(a), all models tend to perform best at type R relations, with a clear performance gap
to other relation types. Also, performance on type S relations appears higher in general than type C.
In accordance with P1(b), additive-only models (TransE, MuREI) perform worst on average since all
relation types involve (multiplicative) relatedness. Best performance is achieved on type R relations,
which can be represented by a small/zero additive vector. Multiplicative-only DistMult performs well,
sometimes best, on type R relations, fitting expectation as it can represent those relations and has
no inessential parameters, e.g. that may overfit to noise, which may explain instances where MuRE
performs slightly worse. As expected, MuRE, performs best overall (particularly on WN18RR),
and most strongly on S and C type relations, predicted to require both multiplicative and additive
components. Comparable performance of TuckER on NELL-995 may be explained by its multi-task
learning ability.
6
Published as a conference paper at ICLR 2021
Table 3: Hits@10 per relation on WN18RR.
Relation Name	Type	%	#	Khs	Max/Avg Path		TransE	MuREI	DistMult	TuckER	MuRE
verb_group	R	1%	39	0.00	-	-	0.87	0.95	0.97	0.97	0.97
derivationally_related_form	R	34%	1074	0.04	-	-	0.93	0.96	0.96	0.96	0.97
also_see	R	2%	56	0.24	44	15.2	0.59	0.73	0.67	0.72	0.73
instance_hypernym	S	4%	122	1.00	3	1.0	0.22	0.52	0.47	0.53	0.54
synset_domain_topic_of	C	4%	114	0.99	3	1.1	0.19	0.43	0.42	0.45	0.53
member_of_domain_usage	C	1%	24	1.00	2	1.0	0.42	0.42	0.48	0.38	0.50
member_of_domain_region	C	1%	26	1.00	2	1.0	0.35	0.40	0.40	0.35	0.46
member_meronym	C	8%	253	1.00	10	3.9	0.04	0.38	0.30	0.39	0.39
has_part	C	6%	172	1.00	13	2.2	0.04	0.31	0.28	0.29	0.35
hypernym	S	40%	1251	0.99	18	4.5	0.02	0.20	0.19	0.20	0.28
all		100%	3134				0.38	0.52	0.51	0.53	0.57
Table 4: Hits@10 per relation on NELL-995.											
Relation Name	Type	%	#	Khs	Max/Avg Path		TransE	MuREI	DistMult	TuckER	MuRE
teamplaysagainstteam	R	2%	243	0.11	10	3.5	0.76	0.84	0.90	0.89	0.89
clothingtogowithclothing	R	1%	132	0.17	5	2.6	0.72	0.80	0.88	0.85	0.84
professionistypeofprofession	S	1%	143	0.38	7	2.5	0.37	0.55	0.62	0.65	0.66
animalistypeofanimal	S	1%	103	0.68	9	3.1	0.50	0.56	0.64	0.68	0.65
athleteplayssport	C	1%	113	1.00	1	1.0	0.54	0.58	0.58	0.60	0.64
chemicalistypeofchemical	S	1%	115	0.53	6	3.0	0.23	0.43	0.49	0.51	0.60
itemfoundinroom	C	2%	162	1.00	1	1.0	0.39	0.57	0.53	0.56	0.59
agentcollaborateswithagent	R	1%	119	0.51	14	4.7	0.44	0.58	0.64	0.61	0.58
bodypartcontainsbodypart	C	1%	103	0.60	7	3.2	0.30	0.38	0.54	0.58	0.55
atdate	C	10%	967	0.99	4	1.1	0.41	0.50	0.48	0.48	0.52
locationlocatedwithinlocation	C	2%	157	1.00	6	1.9	0.35	0.37	0.46	0.48	0.48
atlocation	C	1%	294	0.99	6	1.4	0.22	0.33	0.39	0.43	0.44
all		100%	20000				0.36	0.48	0.51	0.52	0.52
Other anomalous results also closely align with confounding factors. For example, all models perform
poorly on the hypernym relation, despite it having a relative abundance of training data (40% of all
instances), which may be explained by its hierarchical nature (Khs ≈ 1 and long paths). The same
may explain the reduced performance on relations also_see and agentcollaborateswithagent. As
found previously (Balazevic et al., 2019a), none of the models considered are well suited to modelling
hierarchical structures. We also note that the percentage of training instances of a relation is not a
dominant factor on performance, as would be expected if all relations could be equally represented.
Classification performance: We further evaluate whether P1 holds when comparing knowledge
graph models by classification accuracy on WN18RR. Independent predictions of whether a given
triple is true or false are not commonly evaluated, instead metrics such as mean reciprocal rank and
Hits@k are reported that compare the prediction of a test triple against all evaluation triples. Not
only is this computationally costly, the evaluation is flawed if an entity is related to l > k others (k
is often 1 or 3). A correct prediction validly falling within the top l but not the top k would appear
incorrect under the metric. Some recent works also note the importance of standalone predictions
(Speranskaya et al., 2020; Pezeshkpour et al., 2020).
Since for each relation there are ne2 possible entity-entity relationships, we sub-sample by computing
predictions only for those (es, r, eo) triples for which the es, r pairs appear in the test set. We split
positive predictions (σ(φ(es,r, e0)) > 0.5) between (i) known truths - training or test/validation
instances; and (ii) other, the truth of which is not known. We then compute per-relation accuracy
over the true training instances (“train”) and true test/validation instances (“test”); and the average
number of “other” triples predicted true per es, r pair. Table 5 shows results for MuREI, DistMult,
TuckER and MuRE. All models achieve near perfect training accuracy. The additive-multiplicative
MuRE gives best test set performance, followed (surprisingly) closely by MuREI, with multiplicative
models (DistMult and TuckER) performing poorly on all but type R relations in line with P1(b), with
near-zero performance on most type S/C relations. Since the ground truth labels for “other” triples
predicted to be true are not in the dataset, we analyse a sample of “other” true predictions for one
relation of each type (see Appx. G). From this, we estimate that TuckER is relatively accurate but
pessimistic (〜0.3 correct of the 0.5 predictions ≈ 60%), MuREI is optimistic but inaccurate (〜2.3 of
7.5≈ 31%), whereas MuRE is both optimistic and accurate (〜1.1 of 1.5 ≈ 73%).
Summary: Our analysis identifies the best performing model per relation type as predicted by P1(b):
multiplicative-only DistMult for type R, additive-multiplicative MuRE for types S/C; providing a
basis for dataset-dependent model selection. The per-relation insight into where models perform
7
Published as a conference paper at ICLR 2021
Table 5: Per relation prediction accuracy for MuREI (MI), (D)istMult, (T)uckER and (M)uRE (WN18RR).
Relation Name	Type	#train	#test	MI	Accuracy (train)		M	Accuracy (test)				# Other “True”			
					D	T		MI	D	T	M	MI	D	T	M
															
verb_group	R	15	39^	1.00	1.00	1.00	1.00	0.97	0.97	0.97	0.97	8.3	1.7	0.9	2.7
derivationally_related_form	R	1714	1127	1.00	1.00	1.00	1.00	0.96	0.94	0.95	0.95	8.8	0.5	0.6	1.7
also_see	R	95	61	1.00	1.00	1.00	1.00	0.64	0.64	0.61	0.59	7.9	1.6	0.9	1.9
instance_hypernym	S	52	122	1.00	1.00	1.00	1.00	0.32	0.32	0.23	0.43	1.3	0.4	0.3	0.9
member_of_domain_usage	C	545	43	0.98	1.00	1.00	1.00	0.02	0.00	0.02	0.00	1.5	0.6	0.0	0.3
member_of_domain_region	C	543	42	0.88	0.89	1.00	0.93	0.02	0.02	0.00	0.02	1.0	0.4	0.8	0.7
synset_domain_topic_of	C	13	115	1.00	1.00	1.00	1.00	0.42	0.10	0.14	0.47	0.7	0.6	0.1	0.2
member_meronym	C	1402	307	1.00	1.00	1.00	1.00	0.22	0.02	0.01	0.22	7.9	3.4	1.5	5.6
has_part	C	848	196	1.00	1.00	1.00	1.00	0.24	0.05	0.09	0.22	7.1	2.4	1.3	3.9
hypernym	S	57	1254	1.00	1.00	1.00	1.00	0.15	0.02	0.02	0.22	3.7	1.2	0.0	1.7
all		5284	3306	0.99	0.99	1.00	0.99	0.47	0.37	0.37	0.50	5.9	1.2	0.5	2.1
poorly, e.g. hierarchical or type C relations, can be used to aid and direct future model design.
Analysis of the classification performance: (i) shows that MuRE is the most reliable fact prediction
model; and (ii) emphasises the poorer ability of multiplicative-only models to represent S/C relations.
4.2	P2: Properties of relation representation
P2(a)-(b): Table 6 shows the symmetry score (∈ [-1, 1] indicating perfect anti-symmetry to symmetry;
see Appx. F) for the relation matrix of TuckER and the norm of relation vectors of TransE, MuREI
and MuRE on the WN18RR dataset. As expected, type R relations have materially higher symmetry
than both other relation types, fitting the prediction of how TuckER compensates for having no
additive component. All additive models learn relation vectors of a noticeably lower norm for type R
relations, which in the limiting case (similarity) require no additive component, than for types S or C.
P2(c): Fig 2 shows eigenvalue magnitudes (scaled relative to the largest and ordered) of relation-
specific matrices R of MuRE, labelled by relation type, as predicted to reflect the strength of a
relation’s relatedness aspect. As expected, values are highest for type R relations. For relation types
S and C the profiles are more varied, supporting the understanding that relatedness of such relations
is highly variable, both in its nature (components of S) and strength (cardinality of S).
Table 6: Relation matrix symmetry score [-1.1] for TuckER; and
relation vector norm for TransE, MuREI and MuRE (WN18RR).
Relation	Type	Symmetry Score TUCkER	Vector Norm		
			TransE	MuREI	MuRE
verb_group	R	0.52	5.65	0.76	0.89
derivationally_related_form	R	0.54	2.98	0.45	0.69
also_see	R	0.50	7.20	0.97	0.97
instance_hypernym	S	0.13	18.26	2.98	1.88
member_of_domain_usage	C	0.10	11.24	3.18	1.88
member_of_domain_region	C	0.06	12.52	3.07	2.11
synset_domain_topic_of	C	0.12	23.29	2.65	1.52
member_meronym	C	0.12	4.97	1.91	1.97
has_part	C	0.13	6.44	1.69	1.25
hypernym	S	0.04	9.64	1.53	1.03
Figure 2: Eigenvalue magnitudes of
relation-specific matrices R for MuRE
by relation type (WN18RR).
5 Conclusion
Many low-rank knowledge graph representation models have been developed, yet little is known of
the latent structure they learn. We build on recent understanding of PMI-based word embeddings to
theoretically establish a set of geometric properties of relation representations (relation conditions)
required to map PMI-based word embeddings of subject entities to related object entities under
knowledge graph relations. These conditions partition relations into three types and provide a basis
to consider the loss functions of existing knowledge graph models. Models that satisfy the relation
conditions of a particular type have a known set of model parameters that minimise the loss function,
i.e. the parameters of PMI embeddings, together with potentially many equivalent solutions. We
show that the better a model’s architecture satisfies a relation’s conditions, the better its performance
at link prediction, evaluated under both rank-based metrics and accuracy. Overall, we generalise
recent theoretical understanding of how particular semantic relations, e.g. similarity and analogy,
are encoded between PMI-based word embeddings to the general relations of knowledge graphs.
In doing so, we provide evidence in support of our initial premise: that common latent structure is
exploited by both PMI-based word embeddings (e.g. W2V) and knowledge graph representation.
8
Published as a conference paper at ICLR 2021
Acknowledgements
Carl Allen and Ivana Balazevic were supported by the Centre for Doctoral Training in Data Science,
funded by EPSRC (grant EP/L016427/1) and the University of Edinburgh.
References
Carl Allen and Timothy Hospedales. Analogies Explained: Towards Understanding Word Embed-
dings. In International Conference on Machine Learning, 2019.
Carl Allen, Ivana Balazevic, and Timothy Hospedales. What the Vec? Towards Probabilistically
Grounded Embeddings. In Advances in Neural Information Processing Systems, 2019.
Ivana Balazevic, Carl Allen, and Timothy M Hospedales. Multi-relational PoinCare Graph Embed-
dings. In Advances in Neural Information Processing Systems, 2019a.
Ivana Balazevic, Carl Allen, and Timothy M Hospedales. TuckER: Tensor Factorization for Knowl-
edge Graph Completion. In Empirical Methods in Natural Language Processing, 2019b.
Marco Baroni, Georgiana Dinu, and Germdn Kruszewski. Don't Count, Predict! A Systematic
Comparison of Context-Counting vs. Context-Predicting Semantic Vectors. In Association for
Computational Linguistics, 2014.
Antoine Bordes, Nicolas Usunier, Alberto Garcia-Duran, Jason Weston, and Oksana Yakhnenko.
Translating Embeddings for Modeling Multi-relational Data. In Advances in Neural Information
Processing Systems, 2013.
Tim Dettmers, Pasquale Minervini, Pontus Stenetorp, and Sebastian Riedel. Convolutional 2D
Knowledge Graph Embeddings. In Association for the Advancement of Artificial Intelligence,
2018.
Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: Pre-training of Deep
Bidirectional Transformers for Language Understanding. In North American Chapter of the
Association for Computational Linguistics, 2018.
Anna Gladkova, Aleksandr Drozd, and Satoshi Matsuoka. Analogy-based Detection of Morphological
and Semantic Relations With Word Embeddings: What Works and What Doesn’t. In NAACL
Student Research Workshop, 2016.
Lawrence J Hubert and Frank B Baker. Evaluating the Symmetry of a Proximity Matrix. Quality &
Quantity, 13(1):77-84, 1979.
Marzena Karpinska, Bofang Li, Anna Rogers, and Aleksandr Drozd. Subcharacter Information in
Japanese Embeddings: When Is It Worth It? In Workshop on the Relevance of Linguistic Structure
in Neural Architectures for NLP, 2018.
Diederik P Kingma and Jimmy Ba. Adam: A Method for Stochastic Optimization. In International
Conference on Learning Representations, 2015.
Maximilian Koper, Christian Scheible, and Sabine Schulte im Walde. Multilingual reliability and
"semantic" structure of continuous word spaces. In International Conference on Computational
Semantics, 2015.
David Krackhardt. Graph Theoretical Dimensions of Informal Organizations. In Computational
Organization Theory. Psychology Press, 2014.
Timothee Lacroix, Nicolas Usunier, and Guillaume Obozinski. Canonical Tensor Decomposition for
Knowledge Base Completion. In International Conference on Machine Learning, 2018.
Omer Levy and Yoav Goldberg. Neural Word embedding as Implicit Matrix Factorization. In
Advances in Neural Information Processing Systems, 2014.
9
Published as a conference paper at ICLR 2021
Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Corrado, and Jeff Dean. Distributed Representations
of Words and Phrases and their Compositionality. In Advances in Neural Information Processing
Systems, 2013a.
Tomas Mikolov, Wen-tau Yih, and Geoffrey Zweig. Linguistic regularities in continuous space word
representations. In North American Chapter of the Association for Computational Linguistics,
2013b.
Jeffrey Pennington, Richard Socher, and Christopher Manning. Glove: Global Vectors for Word
Representation. In Empirical Methods in Natural Language Processing, 2014.
Matthew E Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, and
Luke Zettlemoyer. Deep Contextualized Word Representations. In North American Chapter of the
Association for Computational Linguistics, 2018.
Pouya Pezeshkpour, Yifan Tian, and Sameer Singh. Revisiting Evaluation of Knowledge Base
Completion Models. In Automated Knowledge Base Construction, 2020.
Marina Speranskaya, Martin Schmitt, and Benjamin Roth. Ranking vs. Classifying: Measuring
Knowledge Base Completion Quality. In Automated Knowledge Base Construction, 2020.
Kristina Toutanova, Danqi Chen, Patrick Pantel, Hoifung Poon, Pallavi Choudhury, and Michael
Gamon. Representing Text for Joint Embedding of Text and Knowledge Bases. In Empirical
Methods in Natural Language Processing, 2015.
Theo Trouillon, Johannes Welbl, Sebastian Riedel, Eric Gaussier, and Guillaume Bouchard. Complex
Embeddings for Simple Link Prediction. In International Conference on Machine Learning, 2016.
Peter D Turney and Patrick Pantel. From Frequency to Meaning: Vector Space Models of Semantics.
Journal of Artificial Intelligence Research, 37:141-188, 2010.
Wenhan Xiong, Thien Hoang, and William Yang Wang. DeepPath: A Reinforcement Learning
Method for Knowledge Graph Reasoning. In Empirical Methods in Natural Language Processing,
2017.
Bishan Yang, Wen-tau Yih, Xiaodong He, Jianfeng Gao, and Li Deng. Embedding Entities and
Relations for Learning and Inference in Knowledge Bases. In International Conference on Learning
Representations, 2015.
10
Published as a conference paper at ICLR 2021
A Categorising WN18RR Relations
Table 7 describes how each WN18RR relation was assigned to its respective category.
Table 7: Explanation for the WN18RR relation category assignment.
Type	Relation	Relatedness	Subject Specifics	Object Specifics
R	verb_group derivationally_related_form also_see	both verbs; similar in meaning different syntactic categories; semantically related semantically similar	- - -	- - -
S	hypernym instance_hypernym	semantically similar semantically similar	instance of the object instance of the object	- -
C	member_of_domain_usage member_of_domain_region member_meronym has_part synset_domain_topic_of	loosely semantically related (word usage features) loosely semantically related (regional features) semantically related semantically related semantically related	usage descriptor region descriptor collection of objects collection of objects broad feature set	broad feature set broad feature set part of the subject part of the subject domain descriptor
B Categorising NELL-995 Relations
Categorisation of NELL-995 relations and the explanation for the category assignment of are shown
in Tables 8 and 9 respectively.
Table 8: Categorisation of NELL-995 relations.
Type	Relation	Examples (subject entity, object entity)
R	teamplaysagainstteam clothingtogowithclothing agentcollaborateswithagent	(rangers, mariners), (phillies, tampa_bay_rays) (shirts, trousers), (shoes, black_shirt) (white_stripes, jack_white), (barack_obama, hillary_clinton)
S	professionistypeofprofession animalistypeofanimal chemicalistypeofchemical	(trial_lawyers, attorneys), (engineers, experts) (cats, small_animals), (chickens, livestock) (moisture, gas), (oxide, materials)
C	athleteplayssport itemfoundinroom bodypartcontainsbodypart atdate locationlocatedwithinlocation atlocation	(joe_smith, baseball), (chris_cooley, football) (bed, den), (refrigerator, kitchen_area) (system002, eyes), (blood, left_ventricle) (scotland, n2009), (wto, n2003) (medellin, colombia), (jackson, wyoming) (ogunquin, maine), (palmer_lake, colorado)
Table 9: Explanation for the NELL-995 relation category assignment.
Type	Relation	Relatedness	Subject Specifics	Object Specifics
R	teamplaysagainstteam clothingtogowithclothing agentcollaborateswithagent	both sport teams both items of clothing that go together both people or companies; related industries	- - -	- - -
S	professionistypeofprofession animalistypeofanimal chemicalistypeofchemical	semantically related (both profession types) semantically related (both animals) semantically related (both chemicals)	instance of the object instance of the object instance of the object	- - -
C	athleteplayssport itemfoundinroom bodypartcontainsbodypart atdate locationlocatedwithinlocation atlocation	semantically related (sports features) semantically related (room/furniture features) emantically related (specific body part features) loosely semantically related (start date features) semantically related (geographical features) semantically related (geographical features)	athlete descriptor item descriptor collection of objects broad feature set part of the subject part of the subject	sport descriptor room descriptor part of the subject date descriptor collection of objects collection of objects
C S plitting the NELL-995 Dataset
The test set of NELL-995 created by Xiong et al. (2017) contains only 10 out of 200 relations present
in the training set. To ensure a fair representation of all training set relations in the validation and test
sets, we create new validation and test set splits by combining the initial validation and test sets with
the training set and randomly selecting 10,000 triples each from the combined dataset.
11
Published as a conference paper at ICLR 2021
D Implementation Details
All algorithms are re-implemented in PyTorch with the Adam optimizer (Kingma & Ba, 2015) that
minimises binary cross-entropy loss, using hyper-parameters that work well for all models (learning
rate: 0.001, batch size: 128, number of negative samples: 50). Entity and relation embedding
dimensionality is set to de = d = 200 for all models except TuckER, for which dr = 30 (Balazevic
et al., 2019b).
E Krackhardt Hierarchy Score
The Krackhardt hierarchy score measures the proportion of node pairs (x, y) where there exists a
directed path x → y, but not y → x; and it takes a value of one for all directed acyclic graphs, and
zero for cycles and cliques (Krackhardt, 2014; Balazevic et al., 2019a).
Let M ∈ Rn×n be the binary reachability matrix of a directed graph G with n nodes, with Mi,j = 1
if there exists a directed path from node i to node j and 0 otherwise. The Krackhardt hierarchy score
of G is defined as:
Kh _ Pi=1 Pj=1 ɪ(Mij == 1 ∧ Mj,i == O)
sG =	Pn=1 Pn=1 l(Mi,j ==1)
(1)
F Symmetry Score
The symmetry score∈ [-1, 1] (Hubert & Baker, 1979) for a relation matrix R∈Rde×de is defined as:
PP R R	(PPi=j Rij )2
=T Ti=j R R -	de(de-1)
PP r2 _ (P Pi=j Rij )2
乙乙i=j Rij	de(de-1)一
where 1 indicates a symmetric and -1 an anti-symmetric matrix.
(2)
G	“Other” Predicted Facts
Tables 10 to 13 shows a sample of the unknown triples (i.e. those formed using the WN18RR
entities and relations, but not present in the dataset) for the derivationally_related form (R),
instance_hypernym (S) and synset_domain_topic_of (C) relations at a range of probabilities
(σ(φ(es, r, eo)) ≈ {0.4, 0.6, 0.8, 1}), as predicted by each model. True triples are indicated in
bold; instances where a model predicts an entity is related to itself are indicated in blue.
12
PUbliShed as a ConferenCe PaPersICLR 2021
Table 10: "Other" facts as predicted by MuRE/.
Relation (Type)	σ(≠(es,r,eo)) ≈ 0.4	σ(φ(es,r, eo)) ≈ 0.6	σ(≠(es,r, eo)) ≈ 0.8	σ(≠(es,r,eo)) ≈ 1
derivationally_ related_form (R)	(equalizerJSIN_2, set_off_VB_5) (constellation JSIN_2, satellite_NN_3) (shrink_VB_3, subtraction_NN_2) (continue_VB_l0, proceed_VB_l) (SUPPort_VB_6, defend_VB_5) (shutter_NN_l, fill_up_VB_3) (yawning_NN_l, patellar_reflex_NN_l) (yaw_NN_l, spiral_VB_l) (stratum_NN_2, social_group_NN_l) (duel_VB_l, scuffle_NN_3)	(extrapolation	_1, maths_NN_l) (spread_VB_5, circularize_VB_3) (flauntJSIN_1, showing JSIN_2) (extrapolate_VB_3„ synthesis_NN_3) (strategist	machination J^N_1) (CrUSh_VB_4, grind_VB_2) (spike_VB_5, steady_VB_2) (licking_NN_l, vanquish_VB_l) (synthetical_JJ_l, synthes izer_NN_2) (realization J2, embodiment J^N_3)	(sewerJSIN_2, stitcherJSIN_1) (lard_VB_l, vegetable) (snuggle_NN_1, draw_close_VB_3) (train_VB_3, training_NN_1) (scratch_VB_3, skin_sensation_NN_l) (scheme_NN_5, Schematization	_1) (ordain_VB_3, vest_VB_l) (lie_VB_l, front_endJ^N_1) (tread_NN_l, step_NN_9) (register_NN_3, file_away_VB_l)	(trail^B_2, trail^B_2) (worship_VB_1, worship_VB_1) (steer_VB_l, steer_VB_l) (sort_out_yB_l, sort_out_yB_l) (makeJull_yB_l, makeJull_yB_l) (utilize_VB_l, utilize_VB_l) (geology_NN_l, geology JSIN_1) (zoology JSIN_2, zoology JSIN_2) (uranology_NN_l, uranology_NN_l) (travel_VB_l, travel_VB_l)
instance_ hypernym (S)-	(thomas_aquinas_NN_l, martyr_NN_2) (volcano_islands_NN_l, volcano_NN_2) (cape_horn_NN_l, urban_center_NN_l) (bergen_NN_l, national_capital_NN_l) (marshall_NN_2, generalship J^N_1) (nansen_NN_l, ve nturer_NN_2) (wisconsin_NN_2, state_capital_NN_l) (prussia_NN_l, stockade_NN_2) (de_mille_NN_l, dancing-master_NN_l) (aegean_sea_NN_l, aegean_island_NN_l)	(taiwan_NN_l, asian_nation_NN_l) (st._gregory_of_n._NN_l, canonization J∖INJI) (st._gregory_of_n._NN_l, saint_VB_2) (mccormick_NN_l, ftnd_VB_8) (St._gregory」JsINbishop JSlN_1) (richardJ}uckminsterJ^.J^N_l, technologicalJIJJ2) (thomas_aquinas_NN_l, archbishop_NN_l) (marshallNN2,general_officer_NN_l) (newman_NN_2, primateship_NN_l) (thomas_the_apostle_NN_l, sanctify_VB_1)	(prophets JSlN_1, gospels JSlN_1) (malcolm_x_NN_l, passive_resister_NN_l) (taiwan_NN_l, national_capitalJ>^N_1) (truth_NN_5, abolitionismJSIN_1) (thomas_aquinas_NN_l, saint_VB_2) (central_america_NN_l, s._am._nation_NN_l) (de_mille_NN_l, dance_VB_l) (st._gregory_i_NN_l, apostle_NN_3) (fertile_crescent_NN_l, asian_nation_NN_l) (robert_owen_NN_l, industry_NN_1)	(hels inki_NN_l, urban_center_NN_l) (mannheim_NN_l, stockade_NN_2) (nippon_NN_l, nippon_NN_l) (victor hugo NN 1, novel NN 1) (regiomontanus_NN_1, uranology_NN_l) (prophets_NN_1, book_NN_10) (thomas_aquinas_NN_l, churchJ^ather_NN_l) (woody_guthrie_1, minstrel_VB_l) (central america NN 1, c. am. ration NN 1) (aegean_sea_NN_l, island_NN_l)
synset_domain_ topic_of (O	(write_VB_8, tape_VB_3) (introvert	_1, scientific_disciplineJ^N_l) (libel_NN_l, slur_NN_2) (etymologizing_NN_l, law_NN_l) (temple_NN_4, place_of_worship_NN_l) (trial_impression_NN_l, proof_VB_l) (friend_of_the_courtJ^N_l, war_machine_NN_l) (multiv._analys is_NN_l, applied_math_NN_l) (sell_VB_l, transaction_NN_l) (draw_VB_6, represent_VB_9)	(draw_VB_6, creative_j)erson_NN_l) (suborder	taxonomic_group_NN_l) (draw_VB_6, draw_VB_6) (first_sacker JSlN_1, b allgame _NN_2) (alchemizemodify_VB_3) (sermon_NN_l, sermon_NN_l) (saint_VB_2, catholic_church_NN_l) (male_JJ_l, masculine JIJJ2) (fireSB^3, zoology_NN_2) (sell_VB_l, sell_VB_l)	(libel_NN_l, sully_VB_3) (relationship_NN_4, relationship_NN_4) (etymologizing_NN_l, Iingu istics_NN_l) (turn_VB_12, cultivation_NN_2) (brynhild_NN_l, mythologize_VB_2) (bry nh ild_NN_l, myth_NN_l) (ass ist_NN_2, am. _football_game_NN_1) (mitzvah_NN_2, human_acIivity_NN_1) (drive_NN_12, drive_VB_8) (relationship JSlN_4, biology JSlN_1)	(libel_NN_l, disparagement J∖IN_1) (roll-on_roIl-offJSINJL, transport JSlN_1) (prance_VB_4, equestrian_sport_NN_l) QibeiJSINtraducement_NN_l) (sellJVBj, selling_NN_lJ (trot_VB_2, rideJiorseback_VB_l) (prance_VB_4, rideJiorseback_VB_l) (galloprideJiorseback_VB_l) (brynhild_NN_l, mythology_NN_2) (drive_NN_12, badmintonJMN_1)

PUbliShed as a ConferenCe PaPersICLR 2021
Table 11: "Other” facts as predicted by DistMult.
Relation (Type)	σ(φ(es,r, eo)) ≈ 0.4	σ(φ(es,r, eo)) ≈ 0.6	σ(φ(es,r,eo)) ≈ 0.8	σ(φ(es,r, eo)) ≈ 1
derivationally_ related_form (R)	(Stagundercover_work_1) (printJVB ji, publisher	) (crier_NN_3, PitChman	) (playJVB~26, tum_NN_10) (ColmtjV'B/, reciteJVB) (vividness_NN_2, imbue (sea^new_NN_l, IarusJVN_1) (alkali_NN_2, acidify_VBJ2) (see_VB_I7, understandJVB) (ShUnhedging_NN_2)	(dishJ^N_2, Ste心NN) (exposeJVB_3, show_NN_l) (system_NN_9, orderlinessJSIN_1) (spread_NN_4f strewJVB_1) (take_down_VB_2, put_VB_2) (wrestleJVB_4, wrestler JSllSl_1) (antotF._OFganiSm不N_1, epiphytic_JJJL) (duelJVBJ, slugfest_NN_1) (vocal_NN_2, rock_starJVN_l) (smelling_NN_lf scent	(shrink_NN_l, pedology JVN_1) (finish_VB _6, finishing_NN_2) (play JVB J26, playing_NN_3) (centralization_lf unite_VB_6) (existence_NN_l, livingJ^lN_3) (mouth_VB_3, sassing_NN_I) (constellation_NN_2, starJVN_1) (Print_VB_4, publishing_house_NN_l) (puzzleJVBJ2, secret_NN_3) (uranologyJVN_1,	(alliterateJVB_1, versifierJSllSl_1) (geolOgyJ^N_l, structural_JJ_5) (resectamputation	) (nutrition_NN_3, man_NN^) (saint JSllSl_3„ sanctify JVB (right_^elder_NN_l, leftfield_NN_l) (HSLVB_4, slope_NN_2) (lieutenancy_NN_1, captain_NN_I) (tread_1„ step_VB_7) (exenteration	_lf enucleate_VB_2)
instance_ hypernym (S)	(Wisconsin JSINJ2, urban_centerJSIN_1) (marshallJ2f lieutenant_general_NN_1) (abidjan_NN_I, cote_d'ivoire_NN_l) (worldjwar_i_NN_I, urban_center_NN_I) (st.j)aul_NN_2, evangelist_NN_2) (deep_south_NN_l, urban_center_NN_I) (nuptse_NN_I, urban_center_NN_I) (ticino_NN_I, urban_center_NN_I) (aegean_seaJVN_l, aegean_islandJVN_l) (cowpens_NN_I, war_of_am.^nd._NN_I)	(mississippi_river_NN_I, american_stateJSIN_l) (r._e._byrd_NN_I, commissioned_officerJSIN_l) (kobenhavn_NN_1, urban_center_NN_l) (the_gambia_NN_l, africa_NN_I) (tirich_mir_NN_I, urban_center_NN_I) (r._erd小N_1, militaiy_advisor_NN_l) (r._e._byrd_NN_I, aide-de-campJ^N_1) (tampa_bay_NN_I, urban_center_NN_I) (tidewater_regionJ^N_l, south_NN_I) (r. _e.^yrd_NN_l, exec utiv e_officer_NN_l)	(deep_south_NN_l, southJVN_l) (CaPital_of_gambia_NN_1, urban_center_NN_l) (southjwest_africa_NN_I, africa_NN_I) (brandenburg_NN_l, urban_center_NN_I) (sierra_nevada_NN_l, urban_center_NN_I) (malcolmu_NN_1, emancipationist不N_1) (north_platte_riverJVN_l, urban_center_NN_I) (oslo_NN_lf urban_center_NN_l) (zaire_river_NN_I, urban_center_NN_I) (transylvanian_alps_NN_I, urban_center_NN_I)	(helsinki_NN_l, urban_center_NN_l) (the_nazarene_NN_l, save_VB_7) (irish_capital_NN_l, urban_center_NN_l) (r. _erd小N_1, insp ector_gen eral_NN_l) (r._e._byrdJ^N_l, chief_of_staff_NN_l) (central_americaJSIN_l, c._am._nation_NN_I) (malcolm^)c_NN_I, environmentalistJSIN_l) (th e_nazaren e_NN_l› Christian (thomas_aquinas_NN_I, church^fatherJVN_l) (the_nazarene_NN_l, el_nino_NN_2)
synset_domain_ topic_of (C)	(limitationJSINtrammel_VB_2) (light_colonel_NN_l, colonel_NN_l) (nurse_VB_l, nursing_NN_l) (sermonJSIN_1, prophesy_VB_2) (libel_NN_l, practice_of_law_NN_l) (slugger_NN_l, baseball_player_NN_l) (rna_NN_lf chemistry	_1) (metrify_VB_l, versify_VB_l) (trialJ.mpressionJSIN_l, publish_VB_I) (turn JVB_12, plowman_NN_l)	(roll-on_roll-off_NN_lf transport_1) (hizb^it-tahrirJVN_l, asia_NN_l) (slugger_NN_lf s oftb all_gam e_NN_l) (sermon_NN_I, sermonize_VB_1) (drawJVB	drawer_NN_3) (turnyBJ2, PlOWKNJ) (assist_NN_2f softball_game_NN_l) (COilnCiN_2, assembly_NN_4) (throughput_1, turnout_NN_4) (CreanIBb」, cream	(etymologizing_lf explanation	_1) (ferry—VB_3, travel_1) (public_prosecutor_NN_I, prosecute_VB_2) (alchemize_VB_l, modify_VB_3) (HbeLNNlt libel_VB_l) (turn^BJ2, ∕zZZjvδJ) (hitJ^NJ, hit VBJ) (fire _VB _3, Jlaming小N_1) (ring_NN^f, chemical_chain_NN_l) (Iibidinal_energy_NN_1, charge_NN_9)	matte_NN_2) (etymologizing_NN_I, derive_VB_3) (hole_o utJVB_1„ hole_NN_3) (relationship _4„ relation	) (drive_NN_12, badminton	) (etymologizing_NN_I, etymologize_VB_2) (matrix_algebra_NN_I, diagonalizationJSIN_1) (CabinetWOrk_NN_2, woodworking_NN_l) (cabinetworkJVN_2, bottom_VB_l) (cabinetworkJVN_2, UpholsterJVB_I)
PUbliShed as a ConferenCe PaPersICLR 2021
Table 12: "Othel∙” facts as predicted by TuckER.
	Relation (Type)	b（0（es，/，e。））上。-4	σ(φ(es,r, eo)) ≈ 0.6	σ(φ(es,r, eo)) ≈ 0.8	七 1
	derivationally_ related_form (R)	(tymp anist_NN_l, gong_NN_2) (indicationJSlN_1, signalize_VB_2) (turn_over_VB_3, rotationJSlN_3) (date_VB_5, geological_dating_NN_l) (set_VB_23, emblem_NN_2) (tyro_NN_l, start_VB_5) (identification JSlN_1, name_VB_5) (stabber_NN_l, thrust_VB_5) (justification JSlN_1, apology_NN_2) (manufactureprevarication_NN_l)	(mash_NN_2, mill_VB_2) (walk_VB_9, ^j,mmerJ^rameJSlN_1) (use_VB_5, utility_NN_2) (music al instrumentJSlN _1, write_VB_6) '(lining_NN_3, yvrap_up_VB_l) (scrap_VB_2, struggle_NN_2) (tape_VB_3, tape_recorderJSlN_1) (vindicate _Vj Ustificatio n_NN_2) (IeachingJSlN_1, percolate_VB_3) (synchronize_VBsynchroscopeJSlN_1)	(take_chances_VB_1, venture_NN_l) (shutter_NN_l, fill_up_VB_3) (exit_NN_3, leave JVB_1) (tremblerJSlN_1, vibrate_VB_l) (mo tivatorJSIN_1, tripJVB_4) (SiIPPOrt_ VB_6, indorsementJSlN_1) (federateconfederation JSlN_1) (take_over_VB_6, return_NN_7) (yvait_on_VB_l, sUpporterJSlN_3) (denote_VB_3, promulgation JSlN _1)	(venturerJSlN^2, venturerJSlN) (dynamitist_NN_l, dynamitist_NN_l) (IoveJVBJ, lover_NN_2) (snuggle_NN_1, squeeze_VB_8) (departed mJ, die_VB_2) (position_VB_l, placementJSlN _1) (repentant_JJ_l, rep ent ant J_1) (tread_NN_l, step_VB_7) (stockist_NN_l, stockist_NN_l) (philan thropist_NN_l, philanthropist_NN_l)
	instance_ hypernym (S) 一	(deep_south_NN_l, south_NN_l) (st. _j)aul_NN_2, organist_NN_l) (Helsinki JSlN_1, urban_center_NN_l) (malcolm_x_NN_l, emancipationist JSlN_1) (thomas_the_apostle_NN_l, ChUrdl_fa ther_NN」) (st. _gregory_of_n. _NN_1, SermonizerJSlN_1) (robert_owen_NN_l, movie_maker_NN_l) (theresa_NN_l, monk_NN_l) (st. _j)aul_NN_2, philosopher_1) (ibn-roshd_NN_l, pedagogue JSIN_1)	(thomas_aquinas_NN_l, bishop_NN_l) (irish_capital_NN_l, urban_center_NN_l) (thomas_the_apostle_NN_l, apostle_NN_2) (st. _p aul_NN_2, apostle_NN_3) (mccormick_NN_l, painter JSlN_1) (thomas_the_apostle_NN_l, troglodyteJSlN_1) (mccormick_NN_l, electric al _engineerJSlN_1) (mississippi_river_NN_l, american_state_NN_l)	(COWPenSJN_1, siege_NN_l) (mccormick_NN_l, armsJnanufacturer JSlN_1) (tho mas_ the_apostle_NN_l, evangelist JSlN) (mccormickJSIN_1, technologist JSlN_1) (st._gregory_i_NN_l, church_Jather_NN_l)	(r._e. _byrd_NN_l, siege_NN_l) (ShaWJ^N_3, wo men's.rightistqiN_1) (aegean_sea_NN_l, aegean_island_NN_l) (thomas_aquinas_NN_l, churchJ^ather_NN_l)
	synset_domain_ topic_of (C)	(ro ll~on_ro U- off JSlN_1, motorcar JSlN_1) (libel_NN_l, legislature_NN_1) (roll-on_roIl-off JSlN_1, passenger_vehicIe_NN_1)	(drive JSlN_12, badmintonJSlN_1)		
PUbliShed as a ConferenCe PaPersICLR 2021
Table 13: "Othel∙” facts as predicted by MuRE.
Relation (Type)	σ(≠(es,r,eo)) ≈ 0.4	σ(≠(es,r,eo)) ≈ 0.6	σ(≠(es,r,eo)) ≈ 0.8	σ(φ(es,r,eo)) ≈ 1
derivationally_ related_form (R)	(surround_VB_1, wall_NN_l) (u npleasantJ[JJ[, unpalatableness JSlNJL) (love_VB_3, enjoyment_NNJ2) (magn itude_NN_l,	) (testify_VB_2, information J^N_1) (connect_VB_6, COnVergingJ^NJI) (connect_VB_6, connexionJSlN_4) (operate _VB _4, psyop_NN_l) (market_VB_l, trade_NN_4) (operate JVB_4, mission_NN_2)	(word_p icture_NN_l, sketch JVB (develop JVB JlO, adjustment_4) (gloss_VB_3, commentary_NN_l) (violate_VB_2, violation_NN_3) (suffocate_VB_l, strangler_tree_NN_l) (number^VB pointJVN_12) (develop _VB_10, organic process _NN_1) (plication_NN_l, twist_VB_4) (split_up_VB_3, separation JSlN) (plication_NN_l, wrinkle_VB_2)	(smeUingJ^N_l, wind_VB_4) (try_out_VB_l, somatic_cell_nuclear_transplantation_NN_l) (lighting_NN_4, set_pn JireJVBJL) (.Symphalangus_NN_1, one-half_NN_1) (justvalidity_NN_1) (reprove_VB_l, talking_to_NN_l) (sustainJVB_5, beamJVN_2) '(spring_NN_6, hurdle_VB_l) (spark_NN_l, scintillate_VB_1) (utility _NNJ2, functional_JJ_1)	(spoliation J^N, sack JVB Jl) (desire_NN_2, hopeJ2) (Stll用Ie”_3, whine_NN_l) (nasalization _NN_1, sou nd_p ut_VB_l) (tread_NN_l, step_VB_7) (yearn_VB_l, piningJVN_1) (unreliableness_NN_l, arbitrary_JJ_1) (travesty_NN_2, travesty) (spark_NN_l, sparkle_VB_1) (stockist_NN_l, stockist_NN_l)
instance_ hypernym (S) ^	(malcolm_x_NN_1, hipster_NN_1) (the_nazarene_NN_l, judaism_NN_2.) (old_line_stateJ\lN_l, river_NN_l) (r._e._byrdJ^N_1, commissioned_officer_NN_l) (south_kore a_NN_l, peninsula_NN_l) (st._gregory_pf_n. _NN_1, vicar_of_christ_NN_l) (nippon_NN_l, italian_region_NN_l) (robert_owen_NN_1, tycoon_NN_l) (mandalay_NN_1, national_capital_NN_1) (nan_ling_NN_l, urban_center_NN_l)	(central_americaJ^N_1, central_america_NN_1) (st. _gregory_i_1, ch urch_fatherJ\lN_l) (sOUthJcorea_NN_l, african_nation_NN_1) (malcolm_x J^N_1, passive_resister_NN_1) (malcolm_x J^N_1, birth-control_reformer_NN_1) (los_angeles_NN_l, port_NN_l) (great_lake,s_NN_l, Canadian province _NN_1) (transylvanian_alps_NN_1, urban_center_NN_l) (gettysburg_NN_2, siegeJVN_l) (wisconsinJVN_2, geographical_region_NN_l)	(theresa_NN_l, monk_NN_l) (nippon_NN_1, european_nation_NN_l) (great lakes NN 1, river NN 1) (r._e._byrd_NN_l, noncommissioned_officer_NN_l) (world_warJJ^N_l, pitched_battle_NN_l) (irish_capitalJVN_1, urban_centerJVN_l) (volcano_islands_NN_l, urban_center_NN_l) (nippon_NN_l, american_state_NN_1) (Helsinkiurban_centerJ^N_l) (cap ital_pf_gamb ia_NN_l, urban_centerJVN_l)	
synset_domain_ topic_of (C)	(libel_NN_l, criminalJlaw_NN_1) (brynh ild_NN_l, mythology J^N_2) (slugger J^N_1, sport_NN_l) (seliyBJ, law_NN_l) (sem itic_deity_NN_l, mythology_NN_1) (nuclear_deterrence_NN_l, law_NN_l) (recep tion_NN_5, baseball_game_NN_l) (photosynthesisJSlN_1, chemistry_NN_l) (isolde_NN_l, parable_NN_l) (assistJVN_2, court_game_NN_l)	(write_VB_8, transcriptionJSlN) (temple_NN_4, mu.slifnism_NN_2) (assist_NNJ2, hockey_NN_1) (reIationship_NN_4, biology_NN_1) (apostle _NN_3, we stern _church _NN_1) (assist_NNJ2, SPOrtJSlND (trot_VB_2, equestrian_sport_NN_l) (maJVN_l, chemistry_NN_1) (assist_NNJ2, soccer_NN_l) (assist_NNJ2, football_game_NN_l)	(assist_NN_2, am. Joo tb all_game_NN_l) (drive_NN_12, co urt_game_NN_l) (sell_VB_l, offense_NN_3) (slugger_NN_l, softball_game J^N_1) (drive_NN_12, badminton J\!N_1)	
5∖