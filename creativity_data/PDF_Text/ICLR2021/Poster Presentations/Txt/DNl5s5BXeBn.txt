Published as a conference paper at ICLR 2021
Fair Mixup: Fairnes s via Interpolation
Ching-Yao Chuang*
CSAIL, MIT
cychuang@mit.edu
Youssef Mroueh
IBM Research AI
mroueh@us.ibm.com
Ab stract
Training classifiers under fairness constraints such as group fairness, regularizes
the disparities of predictions between the groups. Nevertheless, even though the
constraints are satisfied during training, they might not generalize at evaluation
time. To improve the generalizability of fair classifiers, we propose fair mixup,
a new data augmentation strategy for imposing the fairness constraint. In partic-
ular, we show that fairness can be achieved by regularizing the models on paths
of interpolated samples between the groups. We use mixup, a powerful data aug-
mentation strategy to generate these interpolates. We analyze fair mixup and em-
pirically show that it ensures a better generalization for both accuracy and fairness
measurement in tabular, vision, and language benchmarks. The code is available
at https://github.com/chingyaoc/fair-mixup.
1	Introduction
Fairness has increasingly received attention in machine learning, with the aim of mitigating unjus-
tified bias in learned models. Various statistical metrics were proposed to measure the disparities
of model outputs and performance when conditioned on sensitive attributes such as gender or race.
Equipped with these metrics, one can formulate constrained optimization problems to impose fair-
ness as a constraint. Nevertheless, these constraints do not necessarily generalize since they are
data-dependent, i.e they are estimated from finite samples. In particular, models that minimize the
disparities on training sets do not necessarily achieve the same fairness metric on testing sets (Cotter
et al., 2019). Conventionally, regularization is required to improve the generalization ability of a
model (Zhang et al., 2016). On one hand, explicit regularization such as weight decay and dropout
constrain the model capacity. On the other hand, implicit regularization such as data augmentation
enlarge the support of the training distribution via prior knowledge (Hernandez-Garcla & KOnig,
2018).
In this work, we propose a data augmentation strategy for optimizing group fairness constraints such
as demographic parity (DP) and equalized odds (EO) (Barocas et al., 2019). Given two sensitive
groups such as male and female, instead of directly restricting the disparity, we propose to regularize
the model on interpolated distributions between them. Those augmented distributions form a path
connecting the two sensitive groups. Figure 1 provides an illustrative example of the idea. The
path simulates how the distribution transitions from one group to another via interpolation. Ideally,
if the model is invariant to the sensitive attribute, the expected prediction of the model along the
path should have a smooth behavior. Therefore, we propose a regularization that favors smooth
transitions along the path, which provides a stronger prior on the model class.
We adopt mixup (Zhang et al., 2018b), a powerful data augmentation strategy, to construct the in-
terpolated samples. Owing to mixup’s simple form, the smoothness regularization we introduce has
a closed form expression that can be easily optimized. One disadvantage of mixup is that the inter-
polated samples might not lie on the natural data manifold. Verma et al. (2019) propose Manifold
Mixup, which generate the mixup samples in a latent space. Previous works (Bojanowski et al.,
2018; Berthelot et al., 2018) have shown that interpolations between a pair of latent features corre-
spond to semantically meaningful, smooth interpolation in the input space. By constructing the path
in the latent space, we can better capture the semantic changes while traveling between the sensitive
groups and hence result in a better fairness regularizer that we coin fair mixup. Empirically, fair
* Work done during an internship at IBM Research AI
1
Published as a conference paper at ICLR 2021
(a) Interpolations between Groups
Figure 1: (a) Visualization of the path constructed Via mixup interpolations between groups that
have distribution P0 and P1, respectively. (b) Fair mixup penalizes the changes in model's expected
prediction with respect to the interpolated distributions. The regularized model (blue curve) has
smaller slopes comparing to the unregularized one (orange curve) along the path from P0 to P1,
which eventually leads to smaller demographic parity ∆DP.
(b) Smoothness leads to Fairness
mixup improves the generalizability for both DP and EO on tabular, computer- vision, and natural
language benchmarks. Theoretically, we prove for a particular case that fair mixup corresponds to a
Mahalanobis metric in the feature space in which we perform the classification. This metric ensures
group fairness of the model, and involves the Jacobian of the feature map as we travel along the
path.
In short, this work makes the following contributions:
•	We develop fair mixup, a data augmentation strategy that improves the generalization of group
fairness metrics;
•	We provide a theoretical analysis to deepen our understanding of the proposed method;
•	We evaluate our approach via experiments on tabular, vision, and language benchmarks;
2	Related Work
Machine Learning Fairness To mitigate unjustified bias in machine learning systems, various
fairness definitions have been proposed. The definitions can usually be classified into individual
fairness or group fairness. A system that is individually fair will treat similar users similarly, where
the similarity between individuals can be obtained via prior knowledge or metric learning (Dwork
et al., 2012; Yurochkin et al., 2019). Group fairness metrics measure the statistical parity between
subgroups defined by the sensitive attributes such as gender or race (Zemel et al., 2013; Louizos
et al., 2015; Hardt et al., 2016). While fairness can be achieved via pre- or post-processing, optimiz-
ing fair metrics at training time can lead to the highest utility (Barocas et al., 2019). For instance,
Woodworth et al. (2017) impose independence via regularizing the covariance between predictions
and sensitive attributes. Zafar et al. (2017) regularize decision boundaries of convex margin-based
classifier to minimize the disparaty between groups. Zhang et al. (2018a) mitigate the bias via
minimizing an adversary’s ability to predict sensitive attributes from predictions.
Nevertheless, these constraints are data-dependent, even though the constraints are satisfied during
training, the model may behave differently at evaluation time. Agarwal et al. (2018) analyze the
generalization error of fair classifiers obtained via two-player games. To improve the generalizabil-
ity, Cotter et al. (2019) inherit the two-player setting while training each player on two separated
datasets. In spite of the analytical solutions and theoretical guarantees, game-theoretic approaches
could be hard to scale for complex model classes. In contrast, our proposed fair mixup, is a general
data augmentation strategy for optimizing the fairness constraints, which is easily compatible with
any dataset modality or model class.
Data Augmentation and Regularization Data augmentation expands the training data with ex-
amples generated via prior knowledge, which can be seen as an implicit regularization (Zhang et al.,
2016; HernandeZ-GarCIa & Konig, 2018) where the prior is specified as virtual examples. Zhang
et al. (2018b) proposes mixup, which generate augmented samples via convex combinations of pairs
of examples. In particular, given two examples zi , zj ∈ Rd where z could include both input and
label, mixup constructs virtual samples as tzi + (1 - t)zj for t ∈ [0, 1]. State-of-the-art results
2
Published as a conference paper at ICLR 2021
are obtained via training on mixup samples in different modalities. Verma et al. (2019) introduces
manifold mixup and shows that performing mixup in a latent space further improves the generaliza-
tion. While previous works focus on general learning scenarios, we show that regularizing models
on mixup samples can lead to group fairness and improve generalization.
3	Group Fairnes s
Without loss of generality, we consider the standard fair binary classification setup where we obtain
inputs X ∈ X ⊂ Rd, labels Y ∈ Y = {0, 1}, sensitive attribute A ∈ {0, 1}, and prediction score
Y ∈ [0,1] from model f : Rd → [0,1]. We will focus on demographic parity (DP) and equal-
ized odds (EO) in this work, while our approach also encompasses other fairness metrics (detailed
discussion in section 5). DP requires the predictions Y to be independent of the sensitive attribute
A, that is, P (Y|A = 0) = P (Y|A = 1). However, DP ignores the possible correlations between
Y and A and could rule out the perfect predictor if Y ⊥6⊥ A. EO overcomes the limit of DP by
conditioning on the label Y. In particular, EO requires Y and A to be conditionally independent
with respect to Y, that is, P(Y|A = 1,Y = y) = P(Y|A = 0,Y = y) for y ∈ {0,1}. Given the
difficulty of optimizing the independency constraints, Madras et al. (2018) propose the following
relaxed metrics:
∆DP(f ) = ∣Eχ~p°f(x)- Eχ~p"(x)∣	∆EO(f )= X JEx~pIyf(X) ― Ex~py f (X) I
y∈{0,1}
where We define Pa = P(∙∣A = a) and Py = P(∙∣A = a, Y = y), a,y ∈ {0,1}. We denote the
joint distribution of X and Y by P. Similar metrics have also been used in Agarwal et al. (2018),
Wei et al. (2019), and Taskesen et al. (2020). One can formulate a penalized optimization problem
to regularize the fairness measurement, for instance,
(Gap Regularization): min E(χ,y)~p['(f(x), y)] + λ∆DP(f),	(1)
where ` is the classification loss. In spite of its simplicity, our experiments show that small training
values of ∆DP(f) do not necessarily generalize well at evaluation time (See section 6). To improve
the generalizability, we introduce a data augmentation strategy via a dynamic form of group fairness
metrics.
4	Dynamic Formulation of Fairness: Paths between Groups
For simplicity, we will first consider ∆DP as the fairness metric, and extend our development to
∆EO in section 5. ∆DP provides a static measurement by quantifying the expected difference at
Po and Pi. In contrast, one can consider a dynamic metric that measures the change of Y while
transitioning gradually from P0 to P1 . To convert from the static to the dynamic formulations, we
start with a simple Lemma that bridges two groups with an interpolatorT(X0, X1, t), which generates
interpolated samples between X0 and X1 based on step t.
Lemma 1. Let T : X2 × [0, 1] → X be a function continuously differentiable w.r.t. t such that
T(X0, X1, 0) = X0 and T(X0, X1, 1) = X1. For any differentiable function f, we have
∆DP(f)
[g]f(T (x0,xι,t))dPo(xo )dP1(x1)dt
Jo dt J S-----------7-----}
interpolation
加μf(t)dt
(2)
where we define μf (t) = Eχ∣^p∣,χι~Pιf (T(xo,xι,t)), the expected output of f with respect to
T(Xo, X1, t).
Figure 2 provides an illustrative example of the idea. Lemma 1 relaxes the binary sensitive attribute
into a continuous variable t ∈ [0,1], where μf captures the behavior of f while traveling from group
0 to group 1 along the path constructed with the interpolator T. In particular, given two examples Xo
and X1 drawn from each group, T generates interpolated samples that change smoothly with respect
to t.
3
Published as a conference paper at ICLR 2021
For instance, given two racial backgrounds in the dataset,
μf simulates how the prediction of f changes while the
data of one group smoothly transforms to another. We
can then detect whether there are “unfair” changes in μf
along the path. The dynamic formulation allows US to
measure the sensitivity of f with respect to a relaxed con-
tinuous sensitive attribute t via the derivative 务 μf (t).
Ideally, if f is invariant to the sensitive attribute,奈 μf (t)
should be small along the path from t = 0 to L Impor-
tantly, a small ∆DP does not imply | 务 μf (t)| is small for
t ∈ [0,1] since the derivative could fluctuate as it can be
seen in Figure 2.
Figure 2: The expected output μf (t)
gradually changes as t → L Even when
∆DP is small, ∣dt μf (t)| could still be
large along the path.
4.1	Smoothness Regularization
To make f invariant to t, we propose to regularize the derivative along the path:
(Smoothness Regularizer):
Rτ(f ) = ∕∣ dtμf (t)∣dt.
(3)
Interestingly, RT(f) is the arc length of the curve defined by μf (t) for t ∈ [0,1]. Now, we can
interpret the problem from a geometric point of view. The interpolator T defines a curve μf (t):
[0,1] → R, and ∆DP(f) = ∣μf (0) - μf (1)| is the Euclidean distance between points t = 0 and 1.
∆DP(f) fails to capture the behavior of f while transitioning from P0 to P1. In contrast, regularizing
the arc length RT(f) favors a smooth transition from t = 0 to 1, which constrains the fluctuation of
the function as the sensitive attributes change. By Jensen’s inequality, ∆DP(f) ≤ RT(f) for any f,
which further justifies the validity of regularizing ∆DP(f) with RT (f).
5	Fair Mixup: Regularizing Mixup Paths
It remains to determine the interpolator T. A good interpolater shall (1) generate meaningful inter-
polations, and (2) the derivative of μf (.) with respect to t should be easy to compute. In this section,
we show that mixup (Zhang et al., 2018b), a powerful data augmentation strategy, is itself a valid
interpolator that satisfies both criterions.
Input Mixup We first adopt the standard mixup (Zhang et al., 2018b) by setting the interpolator
as the linear interpolation in input space: T(x0, x1, t) = tx0 + (1 - t)x1. It can be verified that
Tmixup satisfies the interpolator criterion defined in Lemma 1. The resulting smoothness regularizer
has the following closed form expression1:
RmDPixup(f) =
Z01∣∣∣∣Z
〈▽xf (txo + (1 - t)xι), X0 -
x1i dP0(x0)dP1(x1)
dt.
The regularizer can be easily optimized by computing the Jacobian off on mixup samples. Jacobian
regularization is a common approach to regularize neural networks (Drucker & LeCun, 1992). For
instance, regularizing the norm of the Jacobian can improve adversarial robustness (Chan et al.,
2019; Hoffman et al., 2019). Here, we regularize the expected inner product between the Jacobian
on mixup samples and the difference x0 - x1.
Manifold Mixup One disadvantage of input mixup is that the curve is defined with mixup samples,
which might not lie on the natural data manifold. Verma et al. (2019) propose Manifold Mixup,
which generate the mixup samples in the latent space Z . In particular, manifold mixup assumes a
compositional hypothesis f ◦ g where g : X → Z is the feature encoder and the predictor f : Z → Y
takes the encoded feature to perform prediction. Similarly, we can establish the equivalence between
1 exchange the derivative and integral via the Dominated Convergence Theorem
4
Published as a conference paper at ICLR 2021
∆DP and manifold mixup:
∆DP(f ◦ g) =
01 ddt Zf (Mx0) +(I- t)g(x1) )dPo(Xo)dP1(x1)dt
Manifold Mixup
which results in the following smoothness regularizer:
RDmP-mixup(f ◦ g) =
Z01Z
Ozf (tg(x0) + (1- t)g(xι)), g(x0)- g(xι)i dP0(x0)dP1(x1)
dt.
Previous works (Bojanowski et al., 2018; Berthelot et al., 2018) have showed that interpolations
between a pair of latent features correspond to semantically meaningful, smooth interpolations in
input space. By constructing a curve in the latent space, we can better capture the semantic changes
while traveling from P0 to P1 .
Extensions and Implementation The derivations presented so far, can be easily extended to
Equalized Odds (EO). In particular, Lemma 1 can be extended to ∆EO by interpolating P0y and
P1y for y ∈ {0, 1}:
∆EO(f) = X I [ dt Z f(T (x0,xι,t))dP0 (x0)dPy (xι)dt .
y∈{0,1}	0
The corresponding mixup regularizers can be obtained similarly by substituting P0 and P1 in Rmixup
and Rm-mixup with P0y and P1y :
REmOixup(f)
X Z1 IIIIZ
y∈{0,1} 0
hVχf (tx0 + (1 - t)x1),x0 - xιi dP0(x0)dPy(xι)
dt.
Our formulation also encompasses other fairness metrics that quantify the expected difference be-
tween groups. This includes group fairness metrics such as accuracy equality which compares the
mistreatment rate between groups (Berk et al., 2018). Similar to equation (1), we formulate a penal-
ized optimization problem to enforce fairness via fair mixup:
(FairMixup): min E(χ,y)~p['(f(x),y)] + λRmiχup(f).	(4)
Implementation-wise, we follow Zhang et al. (2018b) where only one t is sampled per batch to
perform mixup. This strategy works well in practice and reduce the computational requirements.
5.1	Theoretical Analysis
To gain deeper insight, we analyze the optimal solution of fair mixup in a simple case. In particular,
we consider the classification loss `(f (x), y) = -yf (x) and the following hypothesis class:
H = {f|f(x) = hv, Φ(x)i, v ∈Rm,Φ : X → Rm}.
Define m± = Eχ~p± Φ(x), the label conditional mean embeddings, and m° = Eχ~pcι Φ(x) and
mi = Eχ~Pι Φ(x), the group mean embeddings. We then define the expected difference δ± =
m+ - m- and δ0,1 = m0 -m1. To derive an interpretable solution, we will consider the L2 variants
of the penalized optimization problem. The following proposition gives the analytical solution when
we regularize the model with ∆DP.
Proposition 2. (Gap Regularization) Consider the following minimization problem
min E(x,y)~p ['(f(X),y)] + 21- δDP(f )2 + ʒ2 ι∣f ∣∣H.
f∈H	2	2
For a fixed embedding Φ, the optimal solution f * corresponds to v* given by the following closed
form:
*	1
=λ
λ2
-projδ011 (δ±) I,
where Proj is the soft projection defined as Proju (x) = ||；髀. x.
5
Published as a conference paper at ICLR 2021
The solution v* can be interpreted as the projection of the label discriminating direction δ± on
the subspace that is orthogonal to the group discriminating direction δ0,1. By projecting to this
orthogonal subspace, we can prevent the model from using group specific directions, that are unfair
directions when performing prediction. Interestingly, the projection trick has been used in Zhang
et al. (2018a), where they subtract the gradient of the model parameters in each update step with its
projection on unfair directions. We then prove the optimal solution of fair mixup with the same setup
as above. Similarly, we introduce an L2 variant of the fair mixup regularizer defined as follows:
1
2
RDmPix-u2p(f)
01
hVχf (txo + (1 - t)xι), xo - xιi dP0(x0)dP1(x1) dt,
where we consider the squared absolute value of the derivative within the integral, in order to get a
closed form solution.
Proposition 3. (Fair Mixup) Consider the following minimization problem
min E(x,y)〜P ['(f(X),y)] + ^21 RmPuPf) + ^22 ι∣f ∣∣H.
f∈H	2	2
Let mt = Ex。〜P0,χ1 〜Pi [Φ(tx0 + (1 — t)xι)] be the t dependent mean embedding, and mt its
derivative with respect to t. Let D be a positive-semi definite matrix defined as follows: D =
R1 mit 0 mtdt. Given an embedding Φ, the optimal solution v* has thefollowing form:
v* = (λ1D + λ2Im)-1δ±.
Hence the optimal fair mixup classifier can be finally written as :
f(x) = δ±, (λ1D + λ2Im)-1Φ(x),
which means that fair mixup changes the geometry of the decision boundary via a new dot product in
the feature space that ensures group fairness, instead of simply projecting on the subspace orthogonal
to a single direction as in gap regularization. This dot product leads to a Mahalanobis distance
in the feature space that is defined via the covariance of time derivatives of mean embeddings of
intermediate densities between the groups. To understand this better, given two points x0 in group 0
and x1 in group 1, by the mean value theorem, there exists xc such that:
f(x0) = f(x1) + hVf(xc), x0 - x1i = f(x1) + δ±, (λ1D + λ2I)-1JΦ(xc)(x0 - x1)
Note that D provides the correct average conditioning for JΦ(xc)(x0 - x1), this can be seen from
the expression of mt (D is a covariance of JΦ(χc)(χo - χι)). This conditioned Jacobian ensures
that the function does not fluctuate a lot between the groups, which matches our motivation.
6	Experiments
We now examine fair mixup with binary classification tasks on tabular benchmarks (Adult), visual
recognition (CelebA), and language dataset (Toxicity). For evaluation, we show the trade-offs be-
tween average precision (AP) and fairness metrics (∆DP∕∆EO) by varying the hyper-parameter λ in
the objective. We evaluate both AP and fairness metrics on a testing set to assess the generalizability
of learned models. For a fair comparison, we will compare fair mixup with baselines that optimize
the fairness constraint at training time. In particular, we compare our method with (a) empirical
risk minimization (ERM) that trains the model without regularization, (b) gap regularization, which
directly regularizes the model as given in Equation (1), and (c) adversarial debiasing (Zhang et al.,
2018a) introduced in section 2. Details about the baselines and experimental setups for each dataset
can be found in appendix.
6.1	Adult
UCI Adult dataset (Dua & Graff, 2017) contains information about over 40,000 individuals from
the 1994 US Census. The task is to predict whether the income of a person is greater than $50k
given attributes about the person. We consider gender as the sensitive attribute to measure the
fairness of the algorithms. The models are two-layer ReLU networks with hidden size 200. We only
evaluate input mixup for Adult dataset as the network is not deep enough to produce meaningful
6
Published as a conference paper at ICLR 2021
Figure 3: Adult Dataset. (a,b) The tradeoff between AP and ∆DP∕∆EO. (C) Visualization of the
mixup path for models that regularize ∆DP with different algorithms. We plot the calibrated curve
μf (t) := μf (t) - μf (0) for a better visualization. In this case, μf (0) = 0 and ∣μf (1)| = ∆DP for
all the calibrated curves μf. Therefore, We can compare the ∆DP of each method with the absolute
value of the last points (t = 1). The flatness of the path is highly correlated with the ∆DP.
(a) Attractive
(b) Wavy Hair
(C) Smiling
Figure 4: CelebA Dataset. The tradeoff between AP and ∆DP∕∆EO are shown in the first/second
row for each task. Manifold mixup consistently outperforms the baseline across tasks.
latent representations. We retrain each model 10 times and report the mean accuracy and fairness
measurement. In each trial, the dataset is randomly randomly split into a training, validation, and
testing set with partition 60%, 20%, and 20%, respectively. The models are then selected via the
performance on the validation set.
Figures 3 (a) shows the tradeoff between AP and ∆DP. We can see that fair mixup consistently
achieves a better tradeoff compared to the baselines. We then show the tradeoff between AP and
∆EO in figure 3 (b). For this metric, fair mixup performs slightly better than directly regularizing
the EO gap. Interestingly, fair mixup even achieves a better AP compared to ERM, indicating that
mixup regularization not only improves the generalization of fairness constraints but also overall
accuracy. To understand the effect of fair mixup, we visualize the expected output μ f along the path
for each method (i.e μf as function of t). For a fair comparison, we select the models that have
similar AP for the visualization. As we can see in figure 3 (c), the flatness of the path is highly
correlated to ∆DP. Traininig without any regularization leads to the largest derivative along the
path, which eventually leads to large ∆DP. All the fairness-aware algorithms regularize the slope to
some extent, nevertheless, fair mixup achieves the shortest arc length and hence leads to the smallest
∆DP.
7
Published as a conference paper at ICLR 2021
(a) Input Path
(b) Latent Path
Figure 5: Visualization
of calibrated paths on at-
tractive classification task
for ∆DP regularized mod-
els. The flatness of both in-
put and latent path plays an
important role in regulariz-
ing ∆DP.
6.2	CelebA
Next, we show that fair mixup generalizes well to high-dimensional tasks with the CelebA face
attributes dataset (Liu et al.). CelebA contains over 200,000 images of celebrity faces, where each
image is associated with 40 human-labeled binary attributes including gender. Among the attributes,
we select attractive, smile, and wavy hair and use them to form three binary classification tasks while
treating gender as the sensitive attribute2. The reason we choose these three attributes is that there
exists in all these tasks, a sensitive group that has more positive samples than the other one. For each
task, we train a ResNet-18 (He et al., 2016) along with two hidden layers for final prediction. To
implement manifold fair mixup, we interpolate the representations before the average pooling layer.
The first row in figure 4 shows the tradeoff between AP and ∆DP for each task. Again, fair mixup
consistently outperforms the baselines by a large margin. We also observe that manifold mixup
further boosts the performance for all the tasks. The tradeoffs between AP and ∆EO are shown in
the second row of figure 4. Again, both input mixup and manifold mixup yields well generalizing
classifiers. To gain further insights, we plot the path in both input space and latent space in figure
5 (a) and (b) for the “attractive” attribute classification task. Fair mixup leads to a smoother path
in both cases. Without mixup augmentation, gap regularization and adversarial debiasing present
similar paths and both have larger ∆DP. We also observe that the expected output μf in the latent
path is almost linear with respect to the continuous sensitive attribute t, manifold mixup being the
curve with the smallest slope and hence smallest ∆DP.
6.3	Toxicity Classification
Lastly, we consider comment toxicity classification with Jigsaw toxic comment dataset (Jigsaw,
2018). The data was initially released by Civil Comments platform, which was then extended to a
public Kaggle challenge. The task is to predict whether a comment is toxic or not while being fair
across groups. A subset of comments have been labeled with identity attributes, including gender
and race. It has been shown that some of the identities (e.g., black) are correlated with the toxicity
label. In this work, we consider race as the sensitive attribute and select the subset of comments that
contain identities black or asian, as these two groups have the largest gap in terms of probability of
being associated with a toxic comment. We use pretrained BERT embeddings (Devlin et al., 2019)
to encode each comment into a vector of size 768. A three layer ReLU network is then trained
to perform the prediction with the encoded feature. We directly adopt manifold mixup since input
mixup is equivalent to manifold mixup by simply setting the encoder g to BERT. Similarly, we
retrain each model 10 times using randomly split training, validation, and testing sets, and report
mean accuracy and fairness measurement.
Figures 6 (a) and (b) show the tradeoff between AP and ∆DP∕∆EO, respectively. Again, fair mixup
consistently achieves a better tradeoff for both ∆DP and ∆EO. We then show the visualization of
calibrated paths for ∆DP-regularized models in Figure 6 (c). We can see that even with the powerful
BERT embedding, all the baselines present fluctuated paths with similar patterns. In contrast, fair
mixup introduces a nearly linear curve with a small slope, which eventually leads to the smallest
∆DP.
2Disclaimer: the attractive experiment is an illustrative example and such classifiers of subjective attributes
are not ethical.
8
Published as a conference paper at ICLR 2021
(a)Demographic Parity
Figure 6: Toxic Classification (a,b) The tradeoff between AP and ∆DP∕∆EO. (C) Visualization
of the calibrated paths for models that regularize ∆DP with different algorithms. Interestingly, fair
mixup presents a nearly linear Curve with small slope, while the baselines introduCe “inverted-U”
shaped Curves.
7	Conclusion
In this work, we propose fair mixup, a data augmentation strategy to optimize fairness Constraints.
By bridging sensitive groups with interpolated samples, fair mixup Consistently improves the gen-
eralizability of fairness Constraints aCross benChmarks with different modalities. Interesting future
direCtions inClude (1) generating interpolated samples that lie on the natural data manifold with gen-
erative models or via dynamiC optimal transport paths between the groups (Benamou & Brenier,
2000), (2) extending fair mixup to other group fairness metriCs suCh as aCCuraCy equality, and (3)
estimating the generalization of fairness Constraints (Chuang et al., 2020).
References
Alekh Agarwal, Alina Beygelzimer, Miroslav Dudik, John Langford, and Hanna WallaCh. A re-
duCtions approaCh to fair ClassifiCation. In International Conference on Machine Learning, pp.
60-69, 2018.
Solon BaroCas, Moritz Hardt, and Arvind Narayanan. Fairness and Machine Learning. fairml-
book.org, 2019. http://www.fairmlbook.org.
Jean-David Benamou and Yann Brenier. A Computational fluid meChaniCs solution to the Monge-
KantoroviCh mass transfer problem. Numerische Mathematik, 2000.
RiChard Berk, Hoda Heidari, Shahin Jabbari, MiChael Kearns, and Aaron Roth. Fairness in Crim-
inal justiCe risk assessments: The state of the art. Sociological Methods & Research, pp.
0049124118782533, 2018.
David Berthelot, Colin Raffel, Aurko Roy, and Ian Goodfellow. Understanding and improving inter-
polation in autoenCoders via an adversarial regularizer. In International Conference on Learning
Representations, 2018.
Piotr Bojanowski, Armand Joulin, David Lopez-Pas, and Arthur Szlam. Optimizing the latent spaCe
of generative networks. In International Conference on Machine Learning, pp. 600-609, 2018.
Alvin Chan, Yi Tay, Yew Soon Ong, and Jie Fu. JaCobian adversarially regularized networks for
robustness. In International Conference on Learning Representations, 2019.
Ching-Yao Chuang, Antonio Torralba, and Stefanie Jegelka. Estimating generalization under distri-
bution shifts via domain-invariant representations. International Conference on Machine Learn-
ing, 2020.
Andrew Cotter, Maya Gupta, HeinriCh Jiang, Nathan Srebro, Karthik Sridharan, Serena Wang, Blake
Woodworth, and Seungil You. Training well-generalizing Classifiers for fairness metriCs and other
data-dependent Constraints. In International Conference on Machine Learning, pp. 1397-1405,
2019.
9
Published as a conference paper at ICLR 2021
Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. Bert: Pre-training of deep
bidirectional transformers for language understanding. In NAACL-HLT (1), 2019.
Harris Drucker and Yann LeCun. Improving generalization performance using double backpropa-
gation. IEEE Transactions on Neural Networks, 1992.
Dheeru Dua and Casey Graff. UCI machine learning repository, 2017. URL http://archive.
ics.uci.edu/ml.
Cynthia Dwork, Moritz Hardt, Toniann Pitassi, Omer Reingold, and Richard Zemel. Fairness
through awareness. In Proceedings of the 3rd innovations in theoretical computer science confer-
ence, pp. 214-226, 2012.
Moritz Hardt, Eric Price, and Nati Srebro. Equality of opportunity in supervised learning. In
Advances in neural information processing systems, pp. 3315-3323, 2016.
Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recog-
nition. In Proceedings of the IEEE conference on computer vision and pattern recognition, pp.
770-778, 2016.
Alex Hemandez-GarcIa and Peter Konig. Data augmentation instead of explicit regularization. arXiv
preprint arXiv:1806.03852, 2018.
Judy Hoffman, Daniel A Roberts, and Sho Yaida. Robust learning with jacobian regularization.
arXiv preprint arXiv:1908.02729, 2019.
Jigsaw. Jigsaw unintended bias in toxicity classification, 2018. URL https://www.kaggle.
com/c/jigsaw-unintended-bias-in-toxicity-classification.
Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. arXiv preprint
arXiv:1412.6980, 2014.
Ziwei Liu, Ping Luo, Xiaogang Wang, and Xiaoou Tang. Large-scale celebfaces attributes (celeba)
dataset.
Christos Louizos, Kevin Swersky, Yujia Li, Max Welling, and Richard Zemel. The variational fair
autoencoder. arXiv preprint arXiv:1511.00830, 2015.
David Madras, Elliot Creager, Toniann Pitassi, and Richard Zemel. Learning adversarially fair and
transferable representations. International Conference on Machine Learning, 2018.
Bahar Taskesen, Viet Anh Nguyen, Daniel Kuhn, and Jose Blanchet. A distributionally robust
approach to fair classification. arXiv preprint arXiv:2007.09530, 2020.
Vikas Verma, Alex Lamb, Christopher Beckham, Amir Najafi, Ioannis Mitliagkas, David Lopez-
Paz, and Yoshua Bengio. Manifold mixup: Better representations by interpolating hidden states.
In International Conference on Machine Learning, pp. 6438-6447. PMLR, 2019.
Dennis Wei, Karthikeyan Natesan Ramamurthy, and Flavio du Pin Calmon. Optimized score trans-
formation for fair classification. arXiv preprint arXiv:1906.00066, 2019.
Blake Woodworth, Suriya Gunasekar, Mesrob I Ohannessian, and Nathan Srebro. Learning non-
discriminatory predictors. In Conference on Learning Theory, pp. 1920-1953, 2017.
Mikhail Yurochkin, Amanda Bower, and Yuekai Sun. Training individually fair ml models with
sensitive subspace robustness. In International Conference on Learning Representations, 2019.
Muhammad Bilal Zafar, Isabel Valera, Manuel Gomez Rogriguez, and Krishna P Gummadi. Fair-
ness constraints: Mechanisms for fair classification. In Artificial Intelligence and Statistics, pp.
962-970. PMLR, 2017.
Rich Zemel, Yu Wu, Kevin Swersky, Toni Pitassi, and Cynthia Dwork. Learning fair representations.
In International Conference on Machine Learning, pp. 325-333, 2013.
10
Published as a conference paper at ICLR 2021
Brian Hu Zhang, Blake Lemoine, and Margaret Mitchell. Mitigating unwanted biases with adver-
sarial learning. In Proceedings of the 2018 AAAI/ACM Conference on AI, Ethics, and Society, pp.
335-340, 2018a.
Chiyuan Zhang, Samy Bengio, Moritz Hardt, Benjamin Recht, and Oriol Vinyals. Understanding
deep learning requires rethinking generalization. arXiv preprint arXiv:1611.03530, 2016.
Hongyi Zhang, Moustapha Cisse, Yann N Dauphin, and David Lopez-Paz. mixup: Beyond empirical
risk minimization. In International Conference on Learning Representations, 2018b.
11
Published as a conference paper at ICLR 2021
A Proofs
A.1 Proof of Lemma 1
Lemma 1. Let T : X2 × [0, 1] → X be a function continuously differentiable w.r.t. t such that
T(x0, x1, 0) = x0 and T(x0, x1, 1) = x1. For any differentiable function f, we have
∆DP(f)
d -J7 ( f(T (x0,x1,t))dP0(x0)dP1(x1)dt
Jo dt J S---------{z----}
interpolation
Proof. The result follows from the fundamental theorem of calculus. In particular, given an inter-
polator T, we first rewrite the ∆DP with the T:
∆DP(f) = ∣Eχ~Pof(x) - Eχ~pf(x)∣
=∣Eχ0~P0,χ1~P1f(xo) - f(xi)∣
=lEχo~Po,χι~P1f(T(x0, x1, 0)) -
Exo~Po,xι~P1f(T(x0,x1,1))|.
Not that Eχ0~P0,χ1~P1 f (T(x0, χι,t)) is a real-valued continuous function on t ∈ [0,1]. Therefore,
we have the following equivalence via the fundamental theorem of calculus:
∆DP(f) = ∣Eχ0~P0,x1~P1f(T(x0,x1,0)) - Eχ0~P0,χ1~P1f(T(x0,x1,1))|.
1d
dt Exo-Po,xι~P1f(T(x0,x1,t)) .
□
A.2 Proof of Proposition 2
Proposition 2. (Gap Regularization) Consider the following minimization problem
min E(x,y)~p ['(f(X),y)] + ^221 δDPf )2 + -2- ||f ||H.
f∈H	2	2
For a fixed embedding Φ, the optimal solution f * corresponds to v* given byfollowing closedform:
v* = λ1，士 - projδ011 (δ土)
where Proj is the soft projection defined as Proju (x) = 口μ+. X.
Proof. The problem above can be written as follows:
min L(V) := -(hv,δ±i) + λ| hv,δ0,ιi |2 + λ2||v||2
v∈Rm	2	2
Setting first order condition to zero
▽vL(V) = -δ± + λ1δ0,1 0 δ0,1v + λ-v = 0,
we obtain
(λ1δ0,1 0 δ0,1 + λ-Im)V* =δ±.
By inverting and applying the Sherman-Morrison Lemma, we have
V* = (λ1δ0,1 0 δ0,1 + λ-Im)-1δ±
= λι 1 (λ^Im + δ0,1 0 δo,ι) δ±
一λ-1 It	(λ1 )2δo,1 0 δo,1! δ
=λ1 Vm - MEr J
δ0,1 0 δ0,1
Im - λ2+∣∣δo,1∣d δ±.
12
Published as a conference paper at ICLR 2021
Note the soft projection on a vector u is defined as follows:
projuβ(x)
U 0 U
-------------x
l∣u∣l2 + β
It follows that
v* =( 卜士 - projδ011 3±)),
which can be interpreted as the projection of the label discriminating direction δ± on the subspace
that is orthogonal to the group discriminating direction δ0,1.	□
A.3 Proof of Proposition 3
Proposition 3. (Fair Mixup) Consider the following minimization problem
min E(x,y)〜P ['(f (x),y)∖ + -R RmPuPf) + T ||f ||H.
f∈H	2	2
Define mt = Eχ0〜pcι,χι〜Pi [Φ(txo + (1 一 t)xι)∖ be the t dependent mean embedding, and mt
its derivative with respect to t. Let D be a positive-semi definite matrix defined as follows: D =
RImt 0 mtdt. Given an embedding Φ, the optimal solution v* has thefollowing form:
v* = (λ1D+λ2Im)-1δ±.
Proof. For t ∈ [0,1∖, We note by Pt the distribution of T(xo, xι,t), for xo 〜Po, xι 〜Pi, and note
mt = Ex〜Pt Φ(x), and mt its time derivative. We consider the '2 variant of RT(f) in the analysis:
2T(f)
d
dtμf ⑴
dt = Zo ∖d
2
hv, mt i dt
= / ∣hv,mti∣2 dt = (v，(/ m10 mtdt)v
We then expand mt when T is mixup:
mt = dtExO〜P0,x1 〜Pi φ(tx0 + (1 - t)x1) = ExO〜P0,x1 〜Pi Jφ(tx0 + (1 一 t)xi)(x0 一 x1)
where J denotes the Jacobian. Note that D = ROLmt 0 mtdt, hence for the classification with fair
mixup regularizer, the problem is equivalent to:
min L(V) := -(hv,δ±i) + λ hv,Dvi + λ2llvll2
v∈Rm	2	2
Setting first order condition we obtain (λ1D + λ2Im)v* = δ±, which gives the optimal solution
v* = (λ1D+λ2Im)-1δ±.
The corresponding optimal fair mixup classifier can be finally written as
f(x) = δ±,(λ1D+λ2Im)-1Φ(x).
□
B	Experiment Details
Adult We follow the preprocessing procedure of Yurochkin et al. (2019) by removing some fea-
tures in the dataset3. We then encode the discrete and quantized continuous attributes with one-hot
encoding. We retrain each model 10 times with batch size 1000 and report the mean accuracy and
fairness measurement. The models are selected via the performance on validation set. In each trial,
the dataset is randomly split into training and testing set with partition 80% and 20%, respectively.
The models are optimized with Adam optimizer (Kingma & Ba, 2014) with learning rate 1 × e-3 .
For DP, we sample 500 datapoints for each A ∈ {0, 1} to form a batch. Similarly, for EO, we sample
250 datapoints for each (A, Y ) pair where A, Y ∈ {0, 1}.
3https://github.com/IBM/sensitive-subspace-robustness
13
Published as a conference paper at ICLR 2021
CelebA Model-wise, we extract the feature of size 512 after the average pooling layer of ResNet-
18. A two-layer ReLU network with hidden size 512 is then trained to perform prediction. Per-
centage of positive-labeled datapoints for attractive, wavy hair, and smiling that is male are 22.7%,
18.36%, and 34.6%, respectively. We use the original validation set of CelebA to perform model
selection and report the accuracy and fairness metrics on the testing set. The visualization paths
are also plotted with respect to the testing data. To implement manifold mixup, we interpolate the
spatial features before the average pooling layer. Similarly, all the models are optimized with Adam
optimizer with learning rate 1 × e-3.
Toxicity Classification We download the Jigsaw toxic comment dataset from Kaggle website4.
Percentage of positive-labeled datapoints for black and asian are 18.8% and 6.4%, respectively,
which together results in a dataset of size 22835. We retrain each model 10 times with batch size
200 and report the mean accuracy and fairness measurement. The models are selected via the per-
formance on validation set. The batch-sampling and data splitting procedure is the same as the one
for Adult dataset. The models are again optimized with Adam optimizer with learning rate 1 × e-3 .
C Additional Experiments
C.1 Training Performance
In Figure 7, we show the training performance for Adult dataset. As expected, GapReg outperforms
Fair mixup on the training set since it directly optimizes the fairness metric. The results also support
our motivation: the constraints that are satisfied during training might not generalize at evaluation
time.
Figure 7: Training Performance on Adult Dataset. The tradeoff between AP and ∆DP∕∆EO on
training set.
C.2 Evaluation Metric
The relaxed evaluation metric could overestimate the performance when the predicted confidence is
SignifiCantly different between groupS. For inStanCe, a ClaSSifier f Can be Completely unfair while
SatiSfying thiS Condition: f(x) = 1 w.p. 60%, 0 w.p. 40% on P0, and f(x) = 0.6 w.p. 100% on
P1 . ThiS SatiSfieS thiS eXpeCtation-baSed Condition. However, it iS highly unfair if we binarize the
prediCtion by Setting the threShold = 0.5.
To overcome this issue, let ft be the binarized predictor ft(x) = l(f (x) ≥ t), we evaluate the
model with average ∆DP (∆DP) defined as follows:
∆DP(f) = |T| X ∣Eχ~Poft(χ) - Eχ~Pιft(χ)∣;
|T| t∈T
∆EO(f )=看X X ∣Eχ~pyft(X)- Eχ~pyft(x)∣,
t∈T y∈{0,1}
4https:〃www.kaggle.com/c/jigsaw-unintended-bias-in-tOXiCity-ClaSSifiCation/data
14
Published as a conference paper at ICLR 2021
where T is a set of threshold values. ∆DP averages the ∆DP with binarized predictions derived via
different thresholds. For instance, by averaging the ∆DP with thersholds T = [0.1,0.2,… .,0.9],
∆DP = 0.5 instead of 0 for the example above, which captures the unfairness between groups. We
report ∆DP for each methods with thersholds T = [0.1,0.2,… .,0.9] in Figure 8. Similarly, fair
mixup exhibits the best tradeoff comparing to the baselines for demographic parity. For equalized
odds, the performances of fair mixup and GapReg are similar, where fair mixup achieves a better
tradeoff when ∆EO is small.
(a) Demographic Parity
Figure 8: Average ∆DP and ∆EO on Adult Dataset.
ΔEO
(b) Equalized OddS
C.3 Smaller Model Size
To examine the effect of model size, we reduce the hidden size from 200 to 50 and show the result in
Figure 9. Overall, the performance does not vary significantly after reducing the model size. We can
again observe that fair mixup outperform the baselines for ∆DP. Similar to the results in section
C.2, the performances of fair mixup and GapReg are similar, where fair mixup achieves a better
tradeoff when ∆EO is small.
(a) Demographic Parity
(b) Equalized OddS
Figure 9: Reducing the Model Size on Adult Dataset.
15