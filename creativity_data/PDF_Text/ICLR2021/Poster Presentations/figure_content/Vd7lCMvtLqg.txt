Figure 1: Anchor & Transform (ANT) consists of two components: 1) Anchor： Learn embeddings A ofa small set of anchor vectors A = {aι,…,a∣A∣}, ∣A∣ << ∣V ∣ that are representative of all discrete objects, and 2)Transform： Learn a sparse transformation T from the anchors to the full embedding matrix E. A and T aretrained end-to-end for specific tasks. ANT is scalable, flexible, and allows the user to easily incorporate domainknowledge about object relationships. We further derive a Bayesian nonparametric view of ANT that yields anextension nbANT which automatically tunes ∣A∣ to achieve a balance between performance and compression.
Figure 2: An illustration of initialization strategiesfor anchors combining ideas from frequency andk-means++ clustering initialization. Clustering ini-tialization picks anchors to span the space of allobjects after frequent objects have been selected.
Figure 3: nbANT accurately selects theoptimal ∣A∣ to minimize eq (5), therebyachieving a balance between perfor-mance and compression.
Figure 4: ANT converges faster and to abetter validation loss than the baselines.
Figure 5: Generalized nonlinear mixture of anchors Ai,..., AM and transformations Ti,…，TM, E =∑M=ι softmax(Tm)Am (Softmax across rows of Tm). Different sparse transformations can be learned fordifferent initializations of anchor embeddings.
Figure 6: Incorporating domain knowledge into ANT given object relationship graphs (left) with extractedpositive pairs P and negative pairs N. Transformations between negative (unrelated) pairs are sparsely 'ι-penalized while those between positive (related) pairs are not. The linear transformation coefficients tu and tvof negative pairs (u, v) are also discouraged from sharing similar entries.
Figure 7: A 3D version of the 2D plot shown in Figure 3 where We simplified the plot by only showing gridpoints with an equal number of user and movie anchors for Movielens 25M. Here We provide several orientationviews of the full 3D plot across user anchors (x-axis), movie anchors (y-axis), and objective value of eq (34)(z-axis). NBANT reaches the objective value indicated by the shaded red plane which is close to the optimalobjective value as computed over all grid search experiments for user and movie anchors. Therefore, NBANTcan efficiently optimize ∣A∣ to achieve a balance between performance and compression, eventually reaching agood value of eq (5) from just one run.
Figure 8: Using nbANT for onlinelearning increases ∣A∣ with more databefore natural clusters emerge, and ∣A∣decreases to a similar value (8) as thenon-online version in Table 3.
