Figure 1: RNNLogic consists of a rule generator pÎ¸ and a reasoning predictor pw . Given a query,the rule generator generates logic rules for the reasoning predictor. The reasoning predictor takesthe generated rules as input, and reasons on a knowledge graph to predict the answer. RNNLogic isoptimized with an EM-based algorithm. In each iteration, the rule generator produces some logicrules, and we update the reasoning predictor to explore these rules for reasoning. Then in the E-step,a set of high-quality rules are identified from all generated rules via posterior inference. Finally in theM-step, the rule generator is updated to be consistent with the high-quality rules identified in E-step.
Figure 2: Performance w.r.t. # logic rules. RNNLogic achievescompetitive results even with 10 rules per query relation.
Figure 3: Performance w.r.t. em-bedding dimension.
Figure 4: Performance w.r.t. # training triplets. RNNLogic ismore robust to data sparsity even without using embeddings.
