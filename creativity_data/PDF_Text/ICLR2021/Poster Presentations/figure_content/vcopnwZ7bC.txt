Figure 1: (a) A simple grid world with the task “make bridge”, which can be decomposed intomulti-level subtask structure. (b) The representation of subtask structure within the agent memorywith horizontal update and vertical expansion at each time step. The black arrow indicates a copyoperation. The expansion position is the memory slot where the vertical expansion starts and ismarked blue.
Figure 2: Dataflow of how Mt-1 will be updated in Mt for three memory slots when the expansionposition is at a (a) low, (b) middle, or (c) high position. Blue arrows and red arrows corresponding tothe vertical expansions and horizontal updates. (d) is a snapshot of t = 5 from the grid-world exam-ple Figure 1b. The subtask-update behavior corresponds to the memory-update when the expansionposition is at the high position.
Figure 3: Visualization of the learnt expanding positions on Craft. We present π and the actionsequence. The four subtasks are GetW ood, GoT oolshded, GetGrass and GoW orkbench. In theaction sequence, “u” is either picking up/using the object. Each ground truth subtask is highlightedwith an arrow of different colors.
Figure 4: Visualization of the learnt expanding positions of Dial domain. The task is to press thenumber sequence [9, 8, 6, 3]. We plot the ∏avg. Our threshold selection algorithm produce a upperbound and and lower bound, and the final threshold is computed as the average. The task boundaryis detected as the last time step of a segment above the final threshold. The frames at the detectedtask boundary show that the robot just finishes each subtask.
Figure 5: Visualization of the learnt expanding positions of Kitchen. The subtasks are Microwave,Bottom Knob, Hinge Cabinet and Slider. We show the upper bound, lower bound and final thresholdproduced by our detection algorithm.
Figure 6: Ablation study for task alignment accuracy for all settings.
Figure 7: The behavior cloning results when sketch information is provided. For Craft, we definesuccess as the completion of four subtasks. For Dial, the total maximum return is 4.
Figure 8: Task alignment results of compILE on Craft.
Figure 9: More results on π in Craft. The model is able to robustly switch to a higher expandingposition at the end of subtasks. The model will also sometimes discover multi-level hierarchy.
Figure 10: Behavior Cloning for Craft.
Figure 13: The behavior cloning results in Dial domain.
Figure 14: Task alignment accuracy with varying hyperparameters in Craft. We change the depthsin the first row and memory size in the second row.
Figure 15: Task alignment accuracy in Dial. In (a) and (c) we change the depths while in (b) and (d)we change the memory size.
Figure 16: Visualization of the learnt expanding positions of Kitchen. The subtasks are Microwave,Bottom Knob, Hinge Cabinet and Slider.
Figure 17: Visualization of the learnt expanding positions of Kitchen. The subtasks are Kettle,Bottom Knob, Hinge Cabinet and Slider.
Figure 18: More task decomposition visualization in Kitchen. Our algorithm seems to recover theskill boundary for the first four trajectories but fails in the last two. Nevertheless, one can see thatour model still display the peak patterns for each subtask, and a more advanced post-processingthresholding method might be able to recover the task boundary.
