Table 1: Returns from baseline methods andDDL (ptrain = 0.05 and pinfer = 0.1) on theDoomTakeCover-v0 environment.
Table 2: Returns from a random policy, World Mod-els and DDL (ptrain = 0.05 and pinfer = 0.1) on theCarRacingFixedN and the original CarRacing-v0 en-vironments.
Table 3: RNN’s loss with and without dropout (ptrain = 0.05 and pinfer = 0) during training.
Table 4: Returns of the controller with different frequencies to randomize the dropout mask.
Table 5: Returns from World Models, L2-Regularized World Models (λ = 0.001), Dropout WorldModels (ptrain = 0.05 and pinfer = 0.0), Noisy (N (0, 10-8)) World Models, and DDL (ptrain = 0.05and pinfer = 0.1) on the CarRacingFixedN and the original CarRacing-v0 environments.
Table 6: Returns from Population World Models (PWM) Episode Randomization, PWM Step Ran-domization, Noisy World Models, and DDL (ptrain = 0.05 and pinfer = 0.1) on the CarRacingFixedNand the original CarRacing-v0 environments.
Table 7: Architecture for VAE (V ) in DoomTakeCover and CarRacing.
Table 8: Architecture for the dynamics model (M) in DoomTakeCover and CarRacing.
Table 9: Architecture for the controller (C) in DoomTakeCover and CarRacing.
