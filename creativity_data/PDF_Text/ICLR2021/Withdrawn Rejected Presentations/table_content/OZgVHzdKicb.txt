Table 1: Runtimes for evaluating a single input point and running one epoch of RL usingfeedforward, meta-NML, and naive CNML classifiers. Meta-NML provides over a 1600xspeedup compared to naive CNML. For a full list of runtimes see Appendix A.3.3.
Table 2: Runtimes for evaluating a single input point using feedforward, meta-NML, and naive CNML classifiers.
Table 3: Runtimes for completing a single epoch ofRL according to Algorithm 2. We collect 1000 samples in theenvironment with the current policy for each epoch of training. The naive CNML runtimes are extrapolated basedon the per-input runtime in the previous table. These times indicate that naive CNML would be computationallyinfeasible to run in an RL algorithm, whereas meta-NML is able to achieve performance much closer to that ofan ordinary feedforward classifier and make learning possible.
Table 4: General hyperparameters used across all domains.
Table 5: Hyperparameters we tuned for the Zigzag Maze task. Bolded values are what we use for the final runsin Section 6.
Table 6: Hyperparameters we tuned for the Spiral Maze task. Bolded values are what we use for the final runs inSection 6.
Table 7: Hyperparameters we tuned for the Sawyer Push task. Bolded values are what we use for the final runsin Section 6.
Table 8: Hyperparameters we tuned for the Sawyer Pick-and-Place task. Bolded values are what we use for thefinal runs in Section 6.
Table 9: Hyperparameters we tuned for the Sawyer Door Opening task. Bolded values are what we use for thefinal runs in Section 6.
