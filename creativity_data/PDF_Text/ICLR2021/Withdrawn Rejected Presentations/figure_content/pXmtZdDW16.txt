Figure 1: Representing a ridesharing/pickup and delivery problem as an MRRC problem2	Multi-robot scheduling problem formulationWe formulate a multi-robot reward collection problem (MRRC) as a discrete-time, discrete-state(DTDS) sequential decision-making problem. (For a closely related continuous-time and continuous-state (CTCS) formulation of IPMS problems, see Appendix A.1). For the DTDS formulation, timeadvances in fixed increments ∆ and each such time-step is considered a decision epoch. (For theCTCS formulation, the times when a robot arrives at a task or completes a task are considered asdecision epochs.) At such decision epochs (which occur at every time-step in our discrete-timemodel), we reassign all available robots to remaining tasks. We use k to index the decision epochsand let tk denote the time that epoch k occurs (in discrete-time tk = k ∙ ∆). We assume that ateach decision epoch, we are newly given the duration of time required for a robot to complete eachtask, which we call task completion time. Such task completion times may be constants or randomvariables, and in either case, they are determined by current state (e.g., locations of the robot and thetask) at each epoch.2 We consider initial tasks as nodes in a fully connected graph. For the edge fromtask p to task q, we denote as pT,Tq . The edge weight assigned is the task completion time for a robotthat has just completed task p to subsequently complete task q. Let ETT, WTT be the set of all pT,Tqand the set of corresponding weights. All elements of WTT are multiples of ∆).
Figure 2: State representation and main inference procedureRandom graphEmbedding3.2	Inference with random PGM and random graph embedding with GNNRandom PGM. Denote the set of all random variables in the inference problem as X = {Xi}.
Figure 3: Illustration of overall pipeline of our method4 SCHEDULING MRRC WITH Random structure2vecAs illustrated in Appendix A.2, MRRC problems with no randomness induces Bayesian networkswith factorization k φ (hk, yk) i,j φ (hi, hj). Therefore, according to Lemma 1, we are justifiedto use random structure2vec to design a method to learn solutions to our MRRC problems.
Figure 4: Representing MRRC as a random Bayesian NetworkA.2 Bayesian Network representationHere we illustrate that robot scheduling problem randomly induces a random Bayesian Network fromstate st. See figure 4. Given starting state st and action at, a person can repeat a random experiment of“sequential decision making using policy φ”. In this random experiment, We can define events 'Howrobots serve all remaining tasks in which sequence’. We call such an event a ‘scenario’. For example,suppose that at time-step t we are given robots {A, B}, tasks {1, 2, 3, 4, 5}, and policy φ. Onepossible scenario S * can be {robot A serves task 3 → 1 → 2 and robot B serves task 5 → 4}. Definerandom variable {{Hj} a task characteristic, e.g. ‘The time when task k is serviced’. The questionis, ‘Given a scenario S*, what is the relationship among random variables {Hk}’ {yk} (inputs insection 4.1)? Recall that in our sequential decision making formulation we are given all the ‘taskcompletion time’ information in the st description. Note that, task completion time is only dependent11Under review as a conference paper at ICLR 2021on the previous task and assigned task. In our example above, under scenario S * 'when task 2 isserved’ is only dependent on ‘when task 1 is served’. That is, P(H2∖H1,H3, S*) = P(H2∣H1, S*).
