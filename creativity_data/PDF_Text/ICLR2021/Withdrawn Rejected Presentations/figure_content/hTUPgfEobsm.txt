Figure 1: Disentangled representation of affine transformations on the MNIST dataset. c1: rotation,c2 : horizontal zoom, c3 : vertical zoom, c4 : horizontal skew, c5 : vertical skew, c6 : horizontal trans-lation, c7 : vertical translation. To the best of our knowledge, ADIS-GAN is the first algorithm thatcan disentangle an entire affine transformation in a self-supervised manner.
Figure 2: The main framework of ADIS-GAN. D stands for discriminator, E stands for encoder, Gstands for generator. xfake is the generated image, xreal is the image sampled from training dataset,xtransform is the affine transformed image. The generation process of xtransform is demonstrated inFigure 3. z is latent noise sampled from normal distribution. ctrreaanlsform is the semantic latent vectorssampled from uniform distribution. ctrreaanlsform has two usages: 1. It is used to generate xfake andcompute mutual information loss. 2. It is used to generate xtransform together with xreal and computeaffine regularization loss (see Figure 3). The meaning of the superscript “real” refers to the initialstate before the transformation and subscript “transform” refers to the final state after the transfor-mation. I(ci0nfo; xfake) is the mutual informaion loss. Ladv(D, G) is the GAN loss. Laffine is the affineregularization loss. Figure 3 illustrates how to calculate the affine regularization loss Laffine.
Figure 3: Affine regularizer diagram. Inputs: ctrreaanlsform sampled from Unif(-1,1) and xreal sam-pled from training data. Output: xtransform and ctrreaanl0sform. The affine regularizer loss is: Laffine =Pi ||c(i)trreaanlsform - c(i)trreaanl0sform||22,i ∈ {θ,p,q,x,y}. θ: rotation, p: horizontal zoom, q: verticalzoom, x: horizontal translation, y : vertical translation. E stands for encoder, Flow 1 and Flow 2 aredefined in Section 4.1 and Figure 4. Relative transform is defined in Section 4.2 Equation 9.
Figure 4: Conversion between latent vectors and affine matrix. Flow 1: convert the latent vectors c toaffine matrix M. Flow 2: convert the affine matrix Mto latent vectors c. c stands for semantic latentvectors. C stands for affine parameters such as rotation (θ), zoom (p, q) and translation (x, y). Mstands for affine matrix. “NormLA” and “M Initialization” are described in Section 4.1.1. “NormAL”and “MLE” are described in Section 4.1.2.
Figure 5: Illustration of relative affine transformation. Solid line stands for the affine transformationbetWeen tWo real images. Dashed line stands for the affine transformation betWeen one real imageand the imaginary image basis.
Figure 6: Roll attribute on CelebA dataset.
Figure 7: Vertical (left) and horizontal (right) zoom attributes on CelebA dataset.
Figure 9: Illustration of scalability. case 1 (row 1 and 2): use two latent vectors to represent horizon-tal and vertical direction separately. case 2 (row 3): use one latent vector to represent the horizontaland vertical as a merged representation. You may refer to Appendix I for the derivation.
