Figure 2: An example of prediction procedures in N-Bref pipeline. AST is expanded in a breadth-first manner.
Figure 3: The backbone neural architecture design for DT-Solver and SC-Gen. N1,N2,N3 indicates thenumber of times to repeat the block in the architectures.
Figure 4: Sensitivity analysis of each design component over dataset complexity for <math.h>. EaCh sampleis trained for 10 epochs for simplicity. ‘Trans’ Refers to the baseline transformer.
Figure 1:	Isomorphic Strings/*Input: s = ”egg”, t = ”add”Output : trueInput: s = ”foo”, t = ”bar”Output : falseInput: s = ”paper”, t = ”title”Output : true*/bool isIsomorphic ( char* s , char* t) {/* same length */int len = strlen (s);/* for ascii code */char hashs [128] = {0};char hasht [128] = {0};int i;int x;int y;for (i = 0; i < len ; i++) {x = s[i];
Figure 2:	Multiply Strings/*Input : num1 = ”2” , num2 = ”3Output: ”6”Input : num1 = ”123” , num2 = ”456Output: ”56088”*/char * multiply ( char * num1 , char * num2) {int len1 = 0;int len2 = 0;int *prod [100] = {0};char ans [100] = {0};int i;int j;int k;int c;len1 = strlen ( num1 ) ;len2 = strlen (num2) ;for (i = len1 - 1; i >= 0; i--) {k = len1 - 1 - i ;
Figure 3: <math.h> random generated exam-	Figure 4:	<String.h> with bsnum	Jple with %um J 1 bddepth J 4 bsize J 2∙	4 bsdepth J 2 bssize J 1.
