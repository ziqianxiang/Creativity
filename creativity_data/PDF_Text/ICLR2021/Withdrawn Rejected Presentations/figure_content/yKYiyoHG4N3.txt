Figure 2: Example of an AST deriva-tion of Cat(Cat(<0>,<1>),<0>).
Figure 3: Example of a partial pro-gram. n4 is a leaf node with non-terminal symbol ½.
Figure 1: Examplegrammar for a simplelanguage.
Figure 4: Left: our neural model. A vector h associated with a nonterminal is used to predict adistribution over grammar rules. Each rule instantiates new nonterminals which receive updatedvectors based on LSTMs. Right: partial programs are taken from the worklist, analyzed, and expanded,then the new partial programs are added to the worklist.
Figure 5: Inference rules describing procedure INFEASIBLE(P, φ) for specification φ consisting ofpositive examples E+ and negative examples E-. Rules (a)-(b) of the form P ,→ (φ+, φ-) generatea pair of logical formulas over- and under- approximating the semantics of partial program P. Thenotation ψ [z/y] denotes substituting variable y with z in formula ψ.
Figure 6: Fraction of programs equivalentto target regex based on score gap with themodel-optimal program.
Figure 7: Fraction of solved programs versusthe number of explored states.
Figure 8:	Regex CFG. Here k ∈ Z+ and c is a character class, such as <a>, <1>, etc.
Figure 9:	Φ+,- in the regex domain. Here we omit the T1 and k case. The encoding for non-terminalsymbols is rule (a) in Figure 5 where > = star(<any>) and ⊥ = <null>.
