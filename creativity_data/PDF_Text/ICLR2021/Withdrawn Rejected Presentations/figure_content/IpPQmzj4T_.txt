Figure 1: Illustration of our proposed teleport graph convolution layer. In this layer, the centernode (green node) aggregates information from its local neighborhood (blue nodes), a feature-awareneighborhood (purple nodes), and a structure-aware neighborhood (yellow nodes).
Figure 2: Illustration of our proposed method to construct structural features for a node. Given acenter node (green node), We first compute similarity scores between it and each of its neighboringnodes. Then, we rank these scores and select the k-largest values to form its structural feature vector.
Figure 3: Illustration of our proposed teleport graph convolutional networks. In this example, theinput graph contains five nodes, each of which has two features. We first use a GCN layer to learna new feature embedding for each node. Each of the following two blocks contains a TeleGCL anda pooling layer to reduce graph size. The outputs of all convolution layers are globally reduced andfed into the final multi-layer perceptron for prediction.
Figure 4: Comparison of TeleGCNs with teleportfunctions of different thresholds on PTC, PRO-TEINS, and REDDIT-BINARY datasets.
Figure 5: Visualization of teleported nodes. In these graphs, green nodes are center nodes. Yellownodes are teleported to center nodes by our structure-aware teleport function. From these graphs,we can see that the teleported nodes (yellow) share similar structural patterns as center nodes.
