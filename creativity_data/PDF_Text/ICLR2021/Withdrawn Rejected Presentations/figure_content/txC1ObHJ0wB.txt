Figure 1: WS-NAS benchmarking. Green blocks indicate which aspects of NAS are benchmarkedin different works. A search algorithm usually consists of a search space that encompass manyarchitectures, and a policy to select the best one. P indicates a training protocol, and f a mappingfunction from the search space to a neural network. (a) Early works fixed and compared the metricson the proxy task, which doesn’t allow for a holistic comparison between algorithms. (b) TheNASBench benchmark series partially alleviates the problem by sharing the stand-alone trainingprotocol and search space across algorithms. However, the design of the weight-sharing search spaceand training protocol is still not controlled. (c) We fill this gap by benchmarking existing techniquesto construct and train the shared-weight backbone. We provide a controlled evaluation across threebenchmark spaces.
Figure 2: Constructing a super-net2019) separate the encoding into cell parameters, which define the basic building blocks of a network,and macro parameters, which define how cells are assembled into a complete architecture.
Figure 3: Kendall-Tau Vs sparse Kendall-Tau.
Figure 4: Super-net evaluation. We collect allexPeriments across 3 benchmark sPaces. (Top)Pairwise Plots of suPer-net accuracy, final Perfor-mance, and the sParse Kendall-Tau. Each PointcorresPonds to statistics comPuted over a trainedsuPer-net. (Bottom) SPearman correlation coeffi-cients between the metrics.
Figure 5: Batch normalization instandalone and super-net training.
Figure 6: Validation of BN.
Figure 7: Loss landscapes.
Figure 8: Learning rate on NASBench-201.
Figure 9: NASBench-101 dynamic channel.
Figure 10: Influence of factors on the final model. We plot the difference in percent betweenthe searched model’s performance with and without applying the corresponding factor. For thehyper-parameters of Pws, the baseline is Random NAS, as reported in Table 4. For the other factors,the baseline of each search space uses the best setting of the hyper-parameters. Each experiment wasrun at least 3 times.
