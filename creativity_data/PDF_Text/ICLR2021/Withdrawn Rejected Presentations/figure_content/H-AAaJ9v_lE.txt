Figure 1: The architecture of LDNN for solving nonlinear V-F-H-IEs. The first network approxi-mates the solution of IE y(x). This network has M-layer and feed forward neural network is thestructure of it. H1 is introduced as a orthogonal layer which consists of p neurons with {Li}ip=0(Legendre polynomials) as activation functions. Other layers have f, hyperbolic tangent as activa-tion functions. The second network with the nodes makes the desired model and the output of it, isRm (consider Eq. (14)). The outputs of LDNN are y(x) and Rm .
Figure 2: Results of Experiment 1. Exact solution yt(x) = ex, predicted solution yp(x) by LDNN.
Figure 3: Results of Experiment 2. Exact solution yt (x) = cos(x), predicted solution yp(x) byLDNN.
Figure 4: Results of Experiment 3. Exact solution yt(x) = x2 - 2, predicted solution yp(x) byLDNN.
Figure 5: Results of Experiment 4. Exact solution yt(x) = Ï‡2 + 2, predicted solution yp(x) byLDNN.
