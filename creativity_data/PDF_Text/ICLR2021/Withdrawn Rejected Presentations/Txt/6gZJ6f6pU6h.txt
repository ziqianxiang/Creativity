Under review as a conference paper at ICLR 2021
M ULTI-EPL:
Accurate M ulti - source D OMAIN A DAPTATION
Anonymous authors
Paper under double-blind review
ABSTRACT
Given multiple source datasets with labels, how can we train a target model with
no labeled data? Multi-source domain adaptation (MSDA) aims to train a model
using multiple source datasets different from a target dataset in the absence of
target data labels. MSDA is a crucial problem applicable to many practical cases
where labels for the target data are unavailable due to privacy issues. Existing
MSDA frameworks are limited since they align data without considering condi-
tional distributions p(x∣y) of each domain. They also do not fully utilize the target
data without labels, and rely on limited feature extraction with a single extractor.
In this paper, we propose MULTI-EPL, a novel method for multi-source domain
adaptation. MULTI-EPL exploits label-wise moment matching to align condi-
tional distributions p(x∣y), uses pseudolabels for the unavailable target labels, and
introduces an ensemble of multiple feature extractors for accurate domain adapta-
tion. Extensive experiments show that Multi-EPL provides the state-of-the-art
performance for multi-source domain adaptation tasks in both of image domains
and text domains.
1	INTRODUCTION
Given multiple source datasets with labels, how can we train a target model with no labeled data?
A large training data are essential for training deep neural networks. Collecting abundant data is
unfortunately an obstacle in practice; even if enough data are obtained, manually labeling those data
is prohibitively expensive. Using other available or much cheaper datasets would be a solution for
these limitations; however, indiscriminate usage of other datasets often brings severe generalization
error due to the presence of dataset shifts (Torralba & Efros (2011)). Unsupervised domain adap-
tation (UDA) tackles these problems where no labeled data from the target domain are available,
but labeled data from other source domains are provided. Finding out domain-invariant features has
been the focus of UDA since it allows knowledge transfer from the labeled source dataset to the
unlabeled target dataset. There have been many efforts to transfer knowledge from a single source
domain to a target one. Most recent frameworks minimize the distance between two domains by
deep neural networks and distance-based techniques such as discrepancy regularizers (Long et al.
(2015; 2016; 2017)), adversarial networks (Ganin et al. (2016); Tzeng et al. (2017)), and generative
networks (Liu et al. (2017); Zhu et al. (2017); Hoffman et al. (2018b)).
While the above-mentioned approaches consider one single source, we address multi-source domain
adaptation (MSDA), which is very crucial and more practical in real-world applications as well as
more challenging. MSDA is able to bring significant performance enhancement by virtue of ac-
cessibility to multiple datasets as long as multiple domain shift problems are resolved. Previous
works have extensively presented both theoretical analysis (Ben-David et al. (2010); Mansour et al.
(2008); Crammer et al. (2008); Hoffman et al. (2018a); Zhao et al. (2018); Zellinger et al. (2020))
and models (Zhao et al. (2018); Xu et al. (2018); Peng et al. (2019)) for MSDA. MDAN (Zhao et al.
(2018)) and DCTN (XU et al. (2018)) build adversarial networks for each source domain to generate
features domain-invariant enough to confound domain classifiers. However, these approaches do
not encompass the shifts among source domains, counting only shifts between source and target
domain. M3SDA (Peng et al. (2019)) adopts moment matching strategy but makes the unrealistic
assumption that matching the marginal probability P(X) would guarantee the alignment of the con-
ditional probability p(x∣y). Most of these methods also do not fully exploit the knowledge of target
1
Under review as a conference paper at ICLR 2021
domain, imputing to the inaccessibility to the labels. Furthermore, all these methods leverage one
single feature extractor, which possibly misses important information regarding label classification.
In this paper, We propose MULTI-EPL (Multi-source domain adaptation with Ensemble of feature
extractors, Pseudolabels, and Label-wise moment matching), a novel MSDA framework which mit-
igates the limitations of these methods of not explicitly considering conditional probability p(x∣y),
and relying on only one feature extractor. The model architecture is illustrated in Figure 1. Multi-
EPL aligns the conditional probability p(x∣y) by utilizing label-wise moment matching. We employ
pseudolabels for the inaccessible target labels to maximize the usage of the target data. Moreover,
generating an ensemble of features from multiple feature extractors gives abundant information
about labels to the extracted features. Extensive experiments show the superiority of our methods.
Our contributions are summarized as follows:
•	Method. We propose MULTI-EPL, a novel approach for MSDA that effectively ob-
tains domain-invariant features from multiple domains by matching conditional probability
p(x∣y), utilizing pseudolabels for inaccessible target labels to fully deploy target data, and
using an ensemble of multiple feature extractors. It allows domain-invariant features to be
extracted, capturing the intrinsic differences of different labels.
•	Analysis. We theoretically prove that minimizing the label-wise moment matching loss is
relevant to bounding the target error.
•	Experiments. We conduct extensive experiments on image and text datasets. We show
that 1) Multi-EPL provides the state-of-the-art accuracy, and 2) each of our main ideas
significantly contributes to the superior performance.
2	Related WORK
Single-source Domain Adaptation. Given a labeled source dataset and an unlabeled target dataset,
single-source domain adaptation aims to train a model that performs well on the target domain.
The challenge of single-source domain adaptation is to reduce the discrepancy between the two
domains and to obtain appropriate domain-invariant features. Various discrepancy measures such as
Maximum Mean Discrepancy (MMD) (Tzeng et al. (2014); Long et al. (2015; 2016; 2017); Ghifary
et al. (2016)) and KL divergence (Zhuang et al. (2015)) have been used as regularizers. Inspired from
the insight that the domain-invariant features should exclude the clues about its domain, constructing
adversarial networks against domain classifiers has shown superior performance. Liu et al. (2017)
and Hoffman et al. (2018b) deploy GAN to transform data across the source and target domain, while
Ganin et al. (2016) and Tzeng et al. (2017) leverage the adversarial networks to extract common
features of the two domains. Unlike these works, we focus on multiple source domains.
Multi-source Domain Adaptation. Single-source domain adaptation should not be naively em-
ployed for multiple source domains due to the shifts between source domains. Many previous works
have tackled MSDA problems theoretically. Mansour et al. (2008) establish distribution weighted
combining rule that the weighted combination of source hypotheses is a good approximation for the
target hypothesis. The rule is further extended to a stochastic case with joint distribution over the
input and the output space in Hoffman et al. (2018a). Crammer et al. (2008) propose the general
theory of how to sift appropriate samples out of multi-source data using expected loss. Efforts to
find out transferable knowledge from multiple sources from the causal viewpoint are made in Zhang
et al. (2015). There have been salient studies on the learning bounds for MSDA. Ben-David et al.
(2010) found the generalization bounds based on H∆H-divergence, which are further tightened by
Zhao et al. (2018). Frameworks for MSDA have been presented as well. Zhao et al. (2018) pro-
pose learning algorithms based on the generalization bounds for MSDA. DCTN (XU et al. (2018))
resolves domain and category shifts between source and target domains via adversarial networks.
M3 SDA (Peng et al. (2019)) associates all the domains into a common distribution by aligning the
moments of the feature distributions of multiple domains. Lin et al. (2020) focus on the visual sen-
timent classification tasks and attempts to find out the common latent space of source and target
domains. Wang et al. (2020) consider the interactions among multiple domains and reflect the infor-
mation by constructing knowledge graph. However, all these methods do not consider multimode
structures (Pei et al. (2018)) that differently labeled data follow distinct distributions, even if they
are drawn from the same domain. Also, the domain-invariant features in these methods contain the
label information for only one label classifier which lead these methods to miss a large amount of
2
Under review as a conference paper at ICLR 2021
Figure 1: MULTI-EPL for n=2. MULTI-EPL consists of n pairs of feature extractor and label
classifier, one extractor classifier, and one final label classifier. Colors and symbols of the markers
indicate domains and class labels of the data, respectively.
label information. Different from these methods, our frameworks fully count the multimodal struc-
tures handling the data distributions in a label-wise manner and minimize the label information loss
considering multiple label classifiers.
Moment Matching. Domain adaptation has deployed the moment matching strategy to minimize
the discrepancy between source and target domains. MMD regularizer (Tzeng et al. (2014); Long
et al. (2015; 2016; 2017); Ghifary et al. (2016)) can be interpreted as the first-order moment while
Sun et al. (2016) address second-order moments of source and target distributions. Zellinger et al.
(2017) investigate the effect of higher-order moment matching. M3SDA (Peng et al. (2019)) demon-
strates that moment matching yields remarkable performance also with multiple sources. While
previous works have focused on matching the moments of marginal distributions for single-source
adaptation, we handle conditional distributions in multi-source scenarios.
3	PROPOSED Method
In this section, we describe our proposed method, MULTI-EPL. We first formulate the problem
definition in Section 3.1. Then, we describe our main ideas in Section 3.2. Section 3.3 elaborates
how to match label-wise moment with pseudolabels and Section 3.4 extends the approach by adding
the concept of ensemble learning. Figure 1 shows the overview of MULTI-EPL.
3.1	Problem Definition
Given a set of labeled datasets from N source domains Si,..., SN and an unlabeled dataset from a
target domain T, we aim to construct a model that minimizes test error on T. We formulate source
domain Si as a tuple of the data distribution μs∙i on data space X and the labeling function lsi: Si =
(μSi,Is). Source dataset drawn with the distribution μsi is denoted as XSi = {(XSi,yfi)}；=1.
Likewise, the target domain and the target dataset are denoted as T = (μτ, IT) and XT = {χT }；=「
respectively. We narrow our focus down to homogeneous settings in classification tasks: all domains
share the same data space X and label set C.
3.2	Overview
We propose Multi-EPL based on the following observations: 1) existing methods focus on aligning
the marginal distributions P(X) not the conditional ones p(x∣y), 2) knowledge of the target data is not
fully employed as no target label is given, and 3) there exists a large amount of label information loss
since domain-invariant features are extracted for only one label classifier. Thus, we design Multi-
EPL aiming to solve the limitations. Designing such method entails the following challenges:
3
Under review as a conference paper at ICLR 2021
1.	Matching conditional distributions. HoW can We align the conditional distribution,
p(x∣y), of multiple domains not the marginal one, P(X) 2
2.	Exploitation of the target data. How can we fully exploit the knowledge of the target data
despite the absence of the target labels?
3.	Maximally utilizing feature information. How can we maximally utilize the information
that the domain-invariant features contain?
We propose the following main ideas to address the challenges:
1.	Label-wise moment matching (Section 3.3). We match the label-wise moments of the
domain-invariant features so that the features with the same labels have similar distributions
regardless of their original domains.
2.	Pseudolabels (Section 3.3). We use pseudolabels as alternatives to the target labels.
3.	Ensemble of feature representations (Section 3.4). We learn to extract ensemble of fea-
tures from multiple feature extractors, each of which involves distinct domain-invariant
features for its own label classifier.
3.3	Label-wise Moment Matching with pseudolabels
We describe how MULTI-EPL matches conditional distributions p(x∣y) of the features from multi-
ple distinct domains. In MULTI-EPL, a feature extractor fe and a label classifier fic lead the features
to be domain-invariant and label-informative at the same time. The feature extractor fe extracts fea-
tures from data, and the label classifier 九 receives the features and predicts the labels for the data.
We train fe and fic, according to the losses for label-wise moment matching and label classification,
which make the features domain-invariant and label-informative, respectively.
Label-wise Moment Matching. To achieve the alignment of domain-invariant features, we define
a label-wise moment matching loss as follows:
Llmm,K = ∣c । ( 2 1)Tt ∑∑lnDr Σ fe(XD)k - n⅛ ∑ f^,)kI,⑴
I「	/	k=1 D,D c∈C	，DCj;yD = C	D ,Cj；yD' =C
j	2
where K is a hyperparameter indicating the maximum order of moments considered by the loss, D
and D' are two distinct domains amongst the N +1 domains, and nDc is the number of data labeled
as C in XD. We introduce pseudolabels for the target data, which are determined by the outputs of
the model currently being trained, to manage the absence of the ground truths for the target data. In
other words, we leverage flc(fe(xτ)) to give the pseudolabel to the target data XT. Drawing the
pseudolabels using the incomplete model, however, brings mis-labeling issue which impedes further
training. To alleviate this problem, we set a threshold T and assign the pseudolabels to the target
data only when the prediction confidence is greater than the threshold. The target examples with
low confidence are not pseudolabeled and not counted in label-wise moment matching.
By minimizing Llmm,k , the feature extractor fe aligns data from multiple domains by bringing
consistency in distributions of the features with the same labels. The data with distinct labels are
aligned independently, taking account of the multimode structures that differently labeled data fol-
low different distributions.
Label Classification. The label classifier flc gets the features projected by fe as inputs and makes
the label predictions. The label classification loss is defined as follows:
ι 义 ι nsi	。。
LlC = N Σn- ELCe (flc (fe (xSi )) , ySi ) ,	(2)
i=1 S j=1
where LCe is the softmax cross-entropy loss. Minimizing LlC separates the features with different
labels so that each of them gets label-distinguishable.
3.4	Ensemble of Feature Representations
In this section, we introduce ensemble learning for further enhancement. Features extracted with the
strategies elaborated in the previous section contain the label information for a single label classifier.
However, each label classifier leverages only limited label characteristics, and thus the conventional
scheme to adopt only one pair of feature extractor and label classifier captures only a small part of
4
Under review as a conference paper at ICLR 2021
the label information. Our idea is to leverage an ensemble of multiple pairs of feature extractor and
label classifier in order to make the features to be more label-informative.
We train multiple pairs of feature extractor and label classifier in parallel following the
label-wise moment matching approach explained in Section 3.3. Let n denote the num-
ber of the feature extractors in the overall model. We denote the n (feature extractor, la-
bel classifier) pairs as (fe,ι,fic,ι), (fe,2,fic,2),..., (fe,n,fic,n) and the n resultant features as
feat1,feat2,..., featn where feati is the output of the feature extractor fe,” After obtaining
n different feature mapping modules, We concatenate the n features into one vector feat final =
concαt(feαt1,feαt2,..., featn). The final label classifier fic,finai takes the concatenated feature
as input, and predicts the label of the feature.
Naively exploiting multiple feature extractors, however, does not guarantee the diversity of the fea-
tures since it resorts to the randomness. Thus, We introduce a new model component, extractor
classifier, which separates the features from different extractors. The extractor classifier fec gets the
features generated by a feature extractor as inputs and predicts which feature extractor has generated
the features. For example, if n = 2, the extractor classifier fec attempts to predict whether the input
feature is extracted by the extractor fe,ι or fe,2. By training the extractor classifier and multiple
feature extractors at once, we explicitly diversify the features obtained from different extractors. We
train the extractor classifier utilizing the feature diversifying loss, L fd：
1 S 1 nSi ʌ	L	1 工 A	T
Lfd = N+ι IΣΣΣLce(fe,k(χjo,k) + 行EELce(fe,k(χj ),k)
N + 1 ∖i=1 nSi j=1 k=1	nT j=1 k=1
where n is the number of feature extractors.
(3)
3.5	MULTI-EPL: Accurate Multi-source Domain Adaptation
Our final model Multi-EPL consists of n pairs of feature extractor and label classifier,
(fe,1,fic,1), (fe,2,fic,2),..., (fe,n ,fic,n), one extractor classifier fec, and one final label classifier
fic,finai. We first train the entire model except the final label classifier with the loss L:
n	n
L = ɪ2 Llc,k + α	Llmm,K,k + βLfd,	(4)
k = 1	k = 1
where Lic,k is the label classification loss of the classifier fic,k, Llmm,κ,k is the label-wise moment
matching loss of the feature extractor fe,k, and α and β are the hyperparameters. Then, the final
label classifier is trained with respect to the label classification loss Llcfinal using the concatenated
features from multiple feature extractors.
4 A NALYSIS
We present a theoretical insight regarding the validity of the label-wise moment matching loss. For
simplicity, we tackle only binary classification tasks. The error rate of a hypothesis h on a domain
D is denoted as ED (h) = Pr{h(x) = Id (x)} where Id is the labeling function on the domain D.
We first introduce k-th order label-wise moment divergence.
Definition 1. Let D and D' be two domains over an input space X ⊂ Rn where n is the dimension
of the inputs. Let C be the set of the labels, and μc(x) and μC(x) be the data distribution given
that the label is c, i.e. μc(x) = μ(x∣y = c) and μC(x) = μ'(x∣y = c) for the data distribution μ
and μ' on the domains D and D', respectively. Then, the k-th order label-wise moment divergence
d>LM,k (D, D') of the two domains D and D' over X is defined as
d-LM,k (D, D')
n	n	n	n
EE P(C)I μc(X) ∏ (Xj Yj dχ - P(C)I μC(X) ∏ (Xj Yi dχ
c∈c i∈∆k	JX	j=ι	JX	j=1
(5)
where ∆k = {i = (iι, ...,in) ∈ Nn | En=I ij = k} is the set of the tuples of the nonnegative
integers, which add up to k, p(c) and p,(c) are the probability that arbitrary data from D and D' to
be labeled as c respectively, and the data X ∈ X is expressed as (xι,..., Xn).	□
The ultimate goal of MSDA is to find a hypothesis h with the minimum target error. We nevertheless
train the model with respect to the source data since ground truths for the target are unavailable. Let
5
Under review as a conference paper at ICLR 2021
N datasets be drawn from N labeled source domains Si,..., SN respectively. We denote i-th
source dataset XSi as {(x：i, yfi )}n![ The empirical error of hypothesis h in i-th source domain
Si estimated with XSi is formulated as 联Si (h) = ^1- En=I 1h(χSi)=y$i ∙ Given a weight vector
α = (αι, α2,..., αN) such that EN=I αi = 1, the weighted empirical source error is formulated
as ^α(h) = EN= 1 αi^Si (h). We extend the theorems in Ben-David et al. (2010); Peng et al. (2019)
and derive a bound for the target error ET(h), for h trained with source data, in terms of k-th order
label-wise moment divergence.
Theorem 1. Let H be a hypothesis space of VC dimension d, nSi be the number of sam-
ples from source domain Si, m = EN=I nSi be the total number of samples from N source
domains Si,..., SN, and β = (βι,..., Bn) with βi = nmi. Let US define a hypothesis
h = arg minh∈HEa(h) that minimizes the weighted empirical source error, and a hypothesis
hT = arg minh∈HEτ(h) that minimizes the true target error Then, for any δ ∈ (0,1) and E > 0,
there exist N integers n；,..., nN and N constants an,..., anN such that
N	(	n	∖
ET (A) ≤ ET (hT)+ ηα,β,m,δ + E + Eai 2% + an fd,LM,k(Si,T)	(6)
i=1	∖	k=1	)
with probability at least 1 - δ, where ηɑ,β,m,δ
λi = minh∈H{Eτ (h) + ESi (h)} ∙
4
2d(log( 2m )+1)+2log( 4)
m
and
□
)
Proof. See the Appendix A.1.	口
Speculating that all datasets are balanced against the annotations, i.e., P(C) = p'(c) = ∣C∣ for any
C ∈ C, LlmmK is expressed as the sum of the estimates of dLM,k with k = 1,...,K. The theorem
provides an insight that label-wise moment matching allows the model trained with source data to
have performance comparable to the optimal one on the target domain.
5	Experiments
We conduct experiments to answer the following questions of MULTI-EPL.
Q1 Accuracy (Section 5.2). How well does Multi-EPL perform in classification tasks?
Q2 Ablation Study (Section 5.3). How much does each component of Multi-EPL contribute
to performance improvement?
Q3 Effects of Degree of Ensemble (Section 5.4). How does the performance change as the
number n of the pairs of the feature extractor and the label classifier increases?
5.1	Experimental Settings
Datasets. We use three kinds of datasets, Digits-Five, Office-Caltech 101, and Amazon Reviews2.
Digits-Five consists of five datasets for digit recognition: MNIST3 (LeCun et al. (1998)), MNIST-
M4 (Ganin & Lempitsky (2015)), SVHN5 (Netzer et al. (2011)), SynthDigits6 (Ganin & Lempitsky
(2015)), and USPS7 (Hastie et al. (2001)). We set one of them as a target domain and the rest as
source domains. Following the conventions in prior works (XU et al. (2018); Peng et al. (2019)),
we randomly sample 25000 instances from the source training set and 9000 instances from the
target training set to train the model except for USPS for which the whole training set is used.
Ihttps://people.eecs.berkeley.edu∕~ jhoffman/domainadapt/
2httρs://github.com/KeiraZhao/MDAN/blob/master/amazon .npz
3http://yann.lecun.com/exdb/mnist/
4http://yaroslav.ganin. net
5http://ufldl.stanford.edu/housenumbers/
6http://yaroslav.ganin. net
7https://Www.kaggle.com/bistaumanga/usps-dataset
6
Under review as a conference paper at ICLR 2021
Table 1: Summary of datasets.
	Datasets	Features	Labels	Training set	Test set	Properties
	MNIST	1x28x28	10	60000	10000	Grayscale images
	MNISrM	3x32x32	10	59001	9001	RGB images
Digits-Five	SVHN	3x32x32	10	73257	26032	RGB images
	SynthDigits	3x32x32	10	479400	9553	RGB images
	USPS	1x16x16	10	7291	2007	Grayscale images
	Amazon	3x300x300	1q-"	958^	958^	RGB images
Office-	Caltech	Variable	10	1123	1123	RGB images
CaltechIO	DSLR	3x1000x1000	10	157	157	RGB images
	Webcam	Variable	10	295	295	RGB images
	Books	5000	2	2000	4465	5000-dim vector
Amazon	DVDs	5000	2	2000	3586	5000-dim vector
Reviews	Electronics	5000	2	2000	5681	5000-dim vector
	Kitchen appliances	5000	2	2000	5945	5000-dim vector
Office-Caltech10 is the dataset for image classification with 10 categories that Office31 dataset and
Caltech dataset have in common. It involves four different domains: Amazon, Caltech, DSLR, and
Webcam. We double the number of data by data augmentation and exploit all the original data
and augmented data as training data and test data respeCtiVely.Amazon Reviews dataset contains
customers' reviews on 4 product categories: Books, DVDs, Electronics, and Kitchen appliances.
The instances are encoded into 5000-dimensional vectors and are labeled as being either positive or
negative depending on their sentiments. We set each of the four categories as a target and the rest
as sources. For all the domains, 2000 instances are sampled for training, and the rest of the data are
used for the test. Details about the datasets are summarized in Table 1.
Competitors. We use 3 MSDA algorithms, DCTN (XU et al. (2018)), M3SDA (Peng et al. (2019)),
and M3SDA-β (Peng et al. (2019)), with state-of-the-art performances as baselines. All the frame-
works share the same architecture for the feature extractor, the domain classifier, and the label classi-
fier for consistency. For Digits-Five, we use convolutional neural networks based on LeNet5 (LeCun
et al. (1998)). For Office-Caltech 10, ResNet50 (He et al. (2016)) pretrained on ImageNet is used as
the backbone architecture. For Amazon Reviews, the feature extractor is composed of three fully-
connected layers each with 1000, 500, and 100 output units, and a single fully-connected layer with
100 input units and 2 output units is adopted for both of the extractor and label classifiers. With
Digits-Five, LeNet5 (LeCun et al. (1998)) and ResNet14 (He et al. (2016)) without any adaptation
are additionally investigated in two different manners: Source Combined and Single Best. In Source
Combined, multiple source datasets are simply combined and fed into a model. In Single Best, we
train the model with each source dataset independently, and report the result of the best performing
one. Likewise, ResNet50 and MLP consisting of 4 fully-connected layers with 1000, 500, 100, and
2 units are investigated without adaptation for Office-Caltech10 and Amazon Reviews, respectively.
Training Details. We train our models for Digits-Five with Adam optimizer (Kingma & Ba (2015))
with βι = 0.9, β2 = 0.999, and the learning rate of 0.0004 for 100 epochs. All images are scaled
to 32 × 32 and the mini batch size is set to 128. We set the hyperparameters α = 0.0005, β = 1,
and K = 2. For the experiments with Office-Caltech10, all the modules comprising our model are
trained following SGD with the learning rate 0.001, except that the optimizers for feature extractors
have the learning rate 0.0001. We scale all the images to 224 × 224 and set the mini batch size to
48. All the hyperparameters are kept the same as in the experiments with Digits-Five. For Amazon
Reviews, we train the models for 50 epochs using Adam optimizer with βι = 0.9, β2 = 0.999, and
the learning rate of 0.0001. We set α = β = 1, K = 2, and the mini batch size to 100. For every
experiment, the confidence threshold T is set to 0.9.
5.2	Performance Evaluation
We evaluate the performance of MULTI-EPL with n = 2 against the competitors. We repeat ex-
periments for each setting five times and report the mean and the standard deviation. The results
are summarized in Table 2. Note that Multi-EPL provides the best accuracy in all the datasets,
showing its consistent superiority in both image datasets (Digits-Five, Office-Caltech10) and text
dataset (Amazon Reviews). The enhancement is remarkable especially when MNIST-M is the target
domain in Digits-Five, improving the accuracy by 11.48% compared to the state-of-the-art methods.
7
Under review as a conference paper at ICLR 2021
Table 2: Classification accuracy on Digits-Five, Office-Caltech10, and Amazon Reviews with and
without domain adaptation. The letters before and after the slash represent source domains and a
target domain respectively. In Digits-Five, T, M, S, D, and U stands for MNIST, MNIST-M, SVHN,
SynthDigits, and USPS respectively. In Office-Caltech 10 and Amazon Reviews, We indicate each
domain using the first letter of its name. SC and SB indicate Source Combined and Single Best,
respectively. Note that MULTI-EPL shows the best performance.
(a) Digits-FiVe
Method	M+S+D+U/T	T+S+D+U/M	T+M+D+U/S	T+M+S+U/D	T+M+S+D/U	Average
LeNet5 (SC)	97.58±0.18	61.72±1.38	75.15±0.76	80.29±0.66	81.58±1.51	79.27±0.90
ResNet14 (SC)	98.22±0.26	63.53±0.84	79.08±1.63	92.85±0.48	94.51 ±0.31	85.64±0.70
LeNet5 (SB)	97.09±0.14	51.10±1.87	76.75±0.57	79.92±0.50	83.28±0.92	77.63±0.80
ResNet14 (SB)	97.07±1.03	49.48±1.30	81.40±0.70	91.79±0.53	91.54±2.68	82.33±1.25
DCTN	99.28±0.06	71.99±1.58	78.34±1.10	91.55±0.65	98.43±0.23	87.92±0.72
M3SDA	98.75±0.05	67.77±0.71	81.75±0.61	88.51 ±0.29	97.17±0.22	86.79±0.38
M3SDA-β	98.99±0.03	72.47±0.19	81.40±0.28	89.51 ±0.37	97.40±0.19	87.95±0.21
Multi-EPL (n=2)	99.31±0.04	83.95±0.90	86.93±0.39	93.15±0.17	98.49±0.08	92.37±0.31
		(b)	Office-Caltech10			
Method	C+D+W/A	A+D+W/C	A+C+W/D	A+C+D/W	Average
ReSNet50 (SC)	95.47±0.25	91.59±0.51	99.36±0.78	99.26±0.37	96.42±0.48
ResNet50 (SB)	95.03±0.48	89.05±0.88	99.87±0.28	98.24±0.61	95.55±0.56
DCTN	95.05±0.24	90.60±0.71	100.0±0.00	99.46±0.62	96.28±0.39
M3SDA	95.14±0.31	93.59±0.40	99.49±0.53	99.86±0.19	97.02±0.36
M3SDA-β	94.36±0.26	91.70±0.71	99.75±0.35	99.39±0.15	96.30±0.37
Multi-EPL (n=2)	95.74±0.29	93.91±0.28	99.87±0.28	99.86±0.19	97.35±0.26
(c) Amazon Reviews					
Method	D+E+K/B	B+E+K/D	B+D+K/E	B+D+E/K	Average
MLP (SC)	79.76±0.70	82.18±0.59	84.42±0.27	87.23±0.51	83.40±0.52
MLP (SB)	79.00±0.92	80.38±0.61	84.76±0.45	87.46±0.36	82.90±0.58
DCTN	78.92±0.56	81.22±1.01	83.56±1.52	86.47±0.71	82.54±0.95
M3SDA	78.97±0.79	80.51±0.99	83.63±0.68	85.99±0.85	82.27±0.83
M3SDA-β	80.26±0.43	81.80±0.72	85.02±0.34	86.99±0.56	83.52±0.51
Multi-EPL (n=2)	81.14±0.29	83.13±0.45	86.47±0.35	88.53±0.33	84.82±0.35
5.3	Ablation Study
We perform an ablation study on Digits-Five to identify what exactly enhances the performance of
Multi-EPL. We compare Multi-EPL with 3 of its variants: Multi-0, Multi-PL, and Multi-
EPL-R. Multi-0 aligns moments regardless of the labels of the data. Multi-PL trains the model
without ensemble learning. MULTI-EPL-R exploits ensemble learning strategy but relies on ran-
domness without the extractor classifier and the feature diversifying loss.
The results are shown in Table 3. By comparing Multi-0 with Multi-PL, we observe that con-
sidering labels in moment matching plays a significant role in extracting domain-invariant features.
The remarkable performance gap between Multi-PL and Multi-EPL with n = 2 verifies the ef-
fectiveness of ensemble learning. Comparing Multi-EPL and Multi-EPL-R, Multi-EPL shows
a better performance than Multi-EPL-R in half of the cases; this means that explicitly diversifying
loss often helps further improve the accuracy, while resorting to randomness for feature diversifica-
tion also works in general. Hence, we conclude that we are able to apply ensemble learning approach
without concern about the redundancy in features.
5.4	Effects of Ensemble
We vary n, the number of pairs of feature extractor and label classifier, and repeat the performance
evaluation on Digits-Five. The results are summarized in Table 3. While an ensemble of two pairs
gives much better performance than the model with a single pair, using more than two pairs rarely
brings further improvement. This result demonstrates that two pairs of feature extractor and label
classifier are able to cover most information without losing important label information in Digits-
Five. It is notable that increasing n sometimes brings small performance degradation. As more
feature extractors are adopted to obtain final features, the complexity of final features increases. It
8
Under review as a conference paper at ICLR 2021
Table 3: Experiments with MULTI-EPL and its variants.
Method	M+S+D+U/T	T+S+D+U/M	T+M+D+U/S	T+M+S+U/D	T+M+S+D/U	Average
Multi-0	98.75±0.05	67.77±0.71	81.75±0.61	88.51±0.29	97.17±0.22	86.79±0.38
Multi-PL	99.14±0.06	79.32±0.73	84.77±0.39	91.91±0.05	98.49±0.16	90.73±0.28
Multi-EPL-R (n=2)	99.34±0.05	83.24±0.81	86.96±0.34	92.88±0.15	98.56±0.17	92.20±0.30
Multi-EPL (n=2)	99.31±0.04	83.95±0.90	86.93±0.39	93.15±0.17	98.49±0.08	92.37±0.31
Multi-EPL (n=3)	99.31 ±0.05	82.78±0.67	87.10±0.29	92.85±0.24	98.48±0.09	92.10±0.27
Multi-EPL (n=4)	99.30±0.07	82.74±0.55	86.65±0.41	92.86±0.15	98.50±0.08	92.01±0.25
is harder for the final label classifier to manage the features with high complexity compared to the
simple ones. This deteriorates the performance when We exploit more than two feature extractors.
6	Conclusion
We propose MULTI-EPL, a novel framework for the multi-source domain adaptation problem.
Multi-EPL overcomes the problems in existing methods of not directly addressing conditional
distributions of data p(x∣y), not fully exploiting knowledge of target data, and missing large amount
of label information. MULTI-EPL aligns data from multiple source domains and the target domain
considering the data labels, and exploits pseudolabels for exploiting unlabeled target data. Multi-
EPL further enhances the performance by generating an ensemble of multiple feature extractors.
Our framework exhibits superior performance on both image and text classification tasks. Consid-
ering labels in moment matching and adding ensemble learning idea is shown to bring remarkable
performance enhancement through ablation study. Future works include extending our approach to
other tasks such as regression, which may require modification in the pseudolabeling method.
9
Under review as a conference paper at ICLR 2021
REFERENCES
Shai Ben-David, John Blitzer, Koby Crammer, Alex Kulesza, Fernando Pereira, and Jennifer Wort-
man Vaughan. A theory of learning from different domains. Mach. Learn., 79(1-2):151-175,
2010.
Koby Crammer, Michael J. Kearns, and Jennifer Wortman. Learning from multiple sources. JMLR,
2008.
Yaroslav Ganin and Victor S. Lempitsky. Unsupervised domain adaptation by backpropagation. In
ICML, 2015.
Yaroslav Ganin, Evgeniya Ustinova, Hana Ajakan, Pascal Germain, Hugo Larochelle, Francois
Laviolette, Mario Marchand, and Victor Lempitsky. Domain-adversarial training of neural net-
works. JMLR, 2016.
Muhammad Ghifary, W. Bastiaan Kleijn, Mengjie Zhang, David Balduzzi, and Wen Li. Deep
reconstruction-classification networks for unsupervised domain adaptation. In ECCV, 2016.
Trevor Hastie, Jerome H. Friedman, and Robert Tibshirani. The Elements of Statistical Learning:
Data Mining, Inference, and Prediction. Springer Series in Statistics. Springer, 2001.
Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recog-
nition. In CVPR, 2016.
Judy Hoffman, Mehryar Mohri, and Ningshan Zhang. Algorithms and theory for multiple-source
adaptation. In NIPS, 2018a.
Judy Hoffman, Eric Tzeng, Taesung Park, Jun-Yan Zhu, Phillip Isola, Kate Saenko, Alexei A. Efros,
and Trevor Darrell. Cycada: Cycle-consistent adversarial domain adaptation. In ICML, 2018b.
Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In ICLR, 2015.
Yann LeCun, Leon Bottou, Yoshua Bengio, and Patrick Haffner. Gradient-based learning applied to
document recognition. Proceedings of the IEEE, 86(11):2278-2324, 1998.
Chuang Lin, Sicheng Zhao, Lei Meng, and Tat-Seng Chua. Multi-source domain adaptation for
visual sentiment classification. In AAAI, 2020.
Ming-Yu Liu, Thomas Breuel, and Jan Kautz. Unsupervised image-to-image translation networks.
In NIPS, 2017.
Mingsheng Long, Yue Cao, Jianmin Wang, and Michael I. Jordan. Learning transferable features
with deep adaptation networks. In ICML, 2015.
Mingsheng Long, Han Zhu, Jianmin Wang, and Michael I. Jordan. Unsupervised domain adaptation
with residual transfer networks. In NIPS, 2016.
Mingsheng Long, Han Zhu, Jianmin Wang, and Michael I. Jordan. Deep transfer learning with joint
adaptation networks. In ICML, 2017.
Yishay Mansour, Mehryar Mohri, and Afshin Rostamizadeh. Domain adaptation with multiple
sources. In NIPS, 2008.
Yuval Netzer, Tao Wang, Adam Coates, Alessandro Bissacco, Bo Wu, and Andrew Y Ng. Reading
digits in natural images with unsupervised feature learning. 2011.
Zhongyi Pei, Zhangjie Cao, Mingsheng Long, and Jianmin Wang. Multi-adversarial domain adap-
tation. In AAAI, 2018.
Xingchao Peng, Qinxun Bai, Xide Xia, Zijun Huang, Kate Saenko, and Bo Wang. Moment matching
for multi-source domain adaptation. In ICCV., 2019.
Marshall Harvey Stone. Applications of the theory of boolean rings to general topology. Transac-
tions of the American Mathematical Society, 1937.
10
Under review as a conference paper at ICLR 2021
Baochen Sun, Jiashi Feng, and Kate Saenko. Return of frustratingly easy domain adaptation. In
AAAI,2016.
A. Torralba and A. A. Efros. Unbiased look at dataset bias. In CVPR, 2011.
E. Tzeng, J. Hoffman, K. Saenko, and T. Darrell. Adversarial discriminative domain adaptation. In
CVPR, 2017.
Eric Tzeng, Judy Hoffman, Ning Zhang, Kate Saenko, and Trevor Darrell. Deep domain confusion:
Maximizing for domain invariance. CoRR, abs/1412.3474, 2014.
Hang Wang, Minghao Xu, Bingbing Ni, and Wenjun Zhang. Learning to combine: Knowledge
aggregation for multi-source domain adaptation. In ECCV,, 2020.
Ruijia Xu, Ziliang Chen, Wangmeng Zuo, Junjie Yan, and Liang Lin. Deep cocktail network: Multi-
source unsupervised domain adaptation with category shift. In CVPR, 2018.
Werner Zellinger, Thomas Grubinger, Edwin Lughofer, Thomas Natschlager, and Susanne
Saminger-Platz. Central moment discrepancy (CMD) for domain-invariant representation learn-
ing. CoRR, abs/1702.08811,2017.
Werner Zellinger, Bernhard Alois Moser, and Susanne Saminger-Platz. Learning bounds for
moment-based domain adaptation. CoRR, abs/2002.08260, 2020.
Kun Zhang, Mingming Gong, and Bernhard Scholkopf. Multi-source domain adaptation: A causal
view. In AAAI, 2015.
Han Zhao, Shanghang Zhang, Guanhang Wu, Jose M. F. Moura, Joao Paulo Costeira, and Geoffrey J.
Gordon. Adversarial multiple source domain adaptation. In NIPS, 2018.
Jun-Yan Zhu, Taesung Park, Phillip Isola, and Alexei A. Efros. Unpaired image-to-image translation
using cycle-consistent adversarial networks. In ICCV, 2017.
Fuzhen Zhuang, Xiaohu Cheng, Ping Luo, Sinno Jialin Pan, and Qing He. Supervised representation
learning: Transfer learning with deep autoencoders. In IJCAI, 2015.
11
Under review as a conference paper at ICLR 2021
A A PPENDIX
A.1 Proof FOR Theorem 1
In this section, We prove Theorem 1 in the paper. We first define k-th order label-wise moment
divergence d,LM*, and disagreement ratio eg(hi,h?) of the two hypotheses h1,h2 ∈ H on the
domain D.
Definition 1. Let D and D' be two domains over an input space X ⊂ Rn where n is the dimension
of the inputs. Let C be the set of the labels, and μc (x) and μC(x) be the data distributions given
that the label is c, i.e. μc(x) = μ(x∣y = C) and μC(x) = μ'(x∣y = C) for the data distribution μ
and μ on the domains D and D', respectively. Then, the k-th order label-wise moment divergence
d>LM,k (D, D') of the two domains D and D' over X is defined as
n
dLM,k (D, D')
n	n
ΣΣ Ip(C) / μc(X) ∏ (Xj )ij dx — p'(c)
c∈C i∈∆k	JX j = 1
L
n
μC(X) ∏ (Xj)ij dχ
j=1
⑺
where ∆k = {i = (i∖,...,in) ∈ N；| En=I ij = k} is the set of the tuples of the nonnegative
integers, which add up to k, p(c) and p'(c) are the probability that arbitrary data from D and D' to
be labeled as C respectively, and the data X ∈ X is expressed as (xι,...,Xn).	口
Definition 2. Let D be a domain over an input space X ⊂ Rn with the data distribution μ(x).
Then, we define the disagreement ratio ED (h1,h2) of the two hypotheses h1,h2 ∈ H on the domain
D as
ed (h1,h2) = PrJhI(X) = h2(x)].	⑻
x~μ(x)
□
Theorem 2. (Stone-Weierstrass Theorem (Stone (1937))) Let K be a compact subset of Rn and
f : K → R be a continuous function. Then, for every E > 0, there exists a polynomial, P : K → R,
such that
sup |f (x) - P(x)| < E.	(9)
x∈K
□
Theorem 2 indicates that continuous functions on a compact subset of Rn are approximated with
polynomials. We next formulate the discrepancy of the two domains using the disagreement ratio
and bound it with the label-wise moment divergence.
Lemma 1. Let D and D' be two domains over an input space X ∈ Rn, where n is the dimension of
the inputs. Then, for any hypotheses h1,h2 ∈ H and any E > 0, there exist ne ∈ N and a constant
an such that
1 ne
IED (h1, h2) - ED' (h1, h2)| ≤ 2ane ɪ2 dLM,k (D, D') + E.
k = 1
(10)
□
Proof. Let the domains D and D' have the data distribution of μ(x) and μ'(x), respectively, over an
input space X, which is a compact subset of Rn, where n is the dimension of the inputs. For brevity,
we denote ∣ed(h1,h2) - ED'(hi, h2)∣ as Δdd. Then,
∆D,D' = I Ed (hi,h2) — ED' (hi,h2)∣
≤ SUP ∣ ED (hl,h2) — ED' (hl,h2)∣
h1,h2 ∈H
SuP I Pr [hi(x) = h2(x)] - Pr [hi(x) = h2(X)]
h1,h2 ∈H Ix~"(x)	χ~μ'(χ)
(11)
SuP 1	μ(x)lh1(x)=h2(x)dx - / μ'(x)lh1(χ)=h2(χ)dx .
h1,h2 ∈H i JX	JX
For any hypotheses h1,h2, the indicator function Ih1(χ)=h2(χ) is Lebesgue integrable on X, i.e.
1hι(x)=h2(x) is a L1 function. Since a set of continuous functions is dense in L1(X), for every
12
Under review as a conference paper at ICLR 2021
E > 0, there exists a continuous L1 function f defined on X such that
IIhI(X)=h2(x)- f (X)I ≤ 4
(12)
for every X ∈ X, and the fixed hi and h? that drive equation 11 to the supremum. Accordingly,
f (X)- 4 ≤ IhI(X) = h2 (x) ≤ f (X) + 4 -	(13)
By integrating every term in the inequality over X, the inequality,
L 4(X)f (X)dx - 4 ≤ L μ(X)IMX)=MX)dx ≤ L μ(X)f (X)dx + E,
(14)
follows. Likewise, the same inequality on the domain Df with μ' instead of μ holds. By subtracting
the two inequalities and reformulating it, the inequality,
E
-2 ≤
/ μ (X)IhI(X)=h 2 (x) dx - / μ (X)Ih1(x)=h2(x)dx -
JX	JX
|(〃(X)f (X)dx -L
μ (X) f (X) dx ≤ I,
(15)
is induced. By substituting the inequality in equation 15 to the equation 11,
Δd,d' ≤ ∣/ μ(x)f(x)dx -/
μf(X)f (X)dx +E.
(16)
By the Theorem 2, there exists a polynomial P(x) such that
SUP If(X) — P(X)∣ < E,
x∈X	4
and the polynomial P(x) is expressed as
(17)
nc
P(X) = E Eain(Xj 户,
(18)
k=1 i∈∆k	j=1
where ne is the order of the polynomial, ∆k = {i = (i1, ...,in) ∈ NnI £；=1 j = k} is the set of
the tuples of the nonnegative integers, which add up to k, ai is the coefficient of each term of the
polynomial, and X = (x1,X2,... ,Xn). By applying equation 17 to the equation 16 and substituting
the expression in equation 18,
Δd'd ≤ J/ μ(x)P(x)dx -/ μf(x)P(x)dx +
n	nc	n	n	nc	n
I 4(X)∑∑ S∏(xj )ij dx —	μf (x)∑∑ S∏
JX	k=1 i∈∆k j = 1	JX	k = 1 i∈∆k j=1
(Xj )ij dx + E
ne	n	n
∑ ∑ ai lZ(X)∏
k = 1 i∈∆k 'X j = 1
n,
n	n
(Xj)ij dx - ai	μf(x) ɪɪ (Xj)ij dx
JX	j=1
ne	n	n
E∑>i∣	〃(x)∏
k = 1 i∈∆k	JX	j = 1
n	n
(Xj)ij dx —	μf(x) ∏ (Xj)ij dx
JX	j=1
ne	p
∑∑∣α”∑
k = 1 i∈∆k 'jX c∈C
n,
n	「	n
p(c)μC(X) ∏ (XjYj dx -	∑ pf (C)μC(X) ∏ (Xj Yj dx
j = 1	JX c∈C	j = 1
+ e,
≤
≤
n
，e
k = 1
n
，e
n
n
j
E
+ E
+ E
(19)
where p(c) and pf(c) are the probability that an arbitrary data is labeled as class C in domain D and
Df, respectively, and g(x) = μ(x∣y = C) and μC(x) = μf(x∣y = C) are the data distribution given
13
Under review as a conference paper at ICLR 2021
that the data is labeled as class C on domain D and D', respectively. For a∆k = maxi∈∆k ㈤
E Lf
Z A , Xx g。
ne
δd,d' ≤ Ea∆k
k=1
i∈∆,
■k
c∈C
n	Zl	n
p(c)μc(χ) ∏ (Xj )ij dχ -	E p'(c)μC(χ) ∏ (Xj )ij dχ
j=1	JX c∈C	j=1
ne
≤ ∑a∆k
k=1
∑ ∑ P(C)
i∈∆k c∈C
n	n	n
μc(X) ∏ (Xj Yi- P(C)I μC(X) ∏ (Xj Yi
j=ι	JX	j=1
ne
≤ E a∆k dLM.k (d,d') + W
k=1
1 ne
≤ 2ane ^f dLM,k (D, D') + w,
k=1
for ane = 2 max1≤k≤ne a∆k .
(20)
□
Let N datasets be drawn from N labeled source domains Si, S2,..., SN respectively. We denote
i-ith source dataset {(χSi, ySi )}；=： as Xs「The empirical error of hypothesis h in i-th source
domain Si estimated with XSi is formulated as WSi (h) = n1- En=I 1h以$£ )=ysi. Given a positive
weight vector α = (αι, α2,..., αN) such that EN=I αi = 1 and αi ≥ 0, the weighted empirical
source error is formulated as ^α(h) = EN=I αi^si (h).
Lemma 2. Fo)r N source domains Si, S2,..., SN, let nsi be the number of samples from source
domain Si, m = EN=I nsi be the total number of samples from N source domains, and β =
(βι, β2,..., Bn ) with βi = nSi. Let Wa (h) be the weighted true source error which is the weighted
SUmOf WSi (h) = Prx〜μ(χ) [h(X) = y]. Then,
(-2mw2 ∖
EN a2 I	(21)
Proof. It has been proven in Ben-David et al. (2010).
We now turn our focus back to the Theorem 1 in the paper and complete the proof.
Theorem 1. Let H be a hypothesis space of VC dimension d, nsi be the number of sam-
ples from source domain Si, m = EN=I nS∙i be the total number of samples from N source
domains Si,..., SN, and β = (βι,..., Bn) with βi = Inm. Let us define a hypothesis
h = arg minh∈HWa(h) that minimizes the weighted empirical source error, and a hypothesis
hT = arg minh∈HWτ(h) that minimizes the true target error Then, for any δ ∈ (0,1) and W > 0,
there exist N integers n1,..., nN and N constants an,..., anN such that
N	/	nie	∖
WT(R) ≤ WT(hT)+ ηα,β,m,δ + w + E αi I 2λi + ane E dLMk (Si,T)	(22)
i=1	∖	k=1	)
with probability at least 1 - δ, where ηɑ,β,m,δ
λi = minh∈H{Wτ(h) + WSi (h)}∙
4
2d(log( 2m )+1)+2log( 4)
m
and
□
Proof.
'	N	N
∣Wα(h) - WT(h)| = E α∙iWSi (h) - WT(h) ≤ E。？ ks.i (h) - WT(h)|.	(23)
i=1	i=1
We define h* = arg min WSi (h) + WT(h) for every i = 1, 2,...,N for the following equations.
h∈H	t	'''
We also note that the 1-triangular inequality (Crammer et al. (2008)) holds for binary classification
+ W
+ W
□
)
14
Under review as a conference paper at ICLR 2021
tasks, i.e., ED(h1,h2) ≤ ED(hi, h3) + ED(h2,h3) for any hypothesis h1,h2,h3 ∈ H and domain D.
Then,
|ed(h) - ED(h,h')l = |ed(h,lD) - ED(h,h')l ≤ ED(Id,h') = ED(h')	(24)
for the ground truth labeling function Id on the domain D and two hypotheses h, h' ∈ H. Applying
the definition and the inequality to equation 23,
N
IEa (h) -ET(h)| ≤ ^2 ɑi (IESi (h) -ESi (h,hi)1 + IESi (h,h↑) - eT(h, hi )l + |eT(h, h↑) - eT(h) I)
i=1
N
≤ E αi (ESi (h；) + IESi (h, h；) - eT(h, h；)l + eT(h；))
i=1
(25)
By the definition of h*, ESi (h；) + ET(h*) = λi for λi = minh∈H {et(h) + ESi (h)}. Additionally,
according to Lemma 1, for any E > 0, there exists an integer ne and a constant ani such that
1 琥	E
IESi (h,h；) -ET (h,hi )l ≤ 2 an E dLM,k (Si,T ) + 2 .
k = 1
(26)
By applying these relations,
l…	3 ʌ 1
∣Eα(h) -Et(h)∣ ≤Eai I λi + 2 αnJ
i=1	∖
N	1
≤ Eai	λi + 2 a%
i=1	∖
熄	∖
E dLM,k (Si, t) + 5 1
k=1	)
n	∖
E dLM,k (Si, T) I + -.
k=1	I
(27)
By Lemma 2 and the standard uniform convergence bound for hypothesis classes of finite VC di-
mension (Ben-David et al. (2010)),
ʌ ʌ e N ( ι 冠	∖
eT(h) ≤ Ea(I) + 5 + ∑>i λi + 1 anEdLM,k (Si,T)
i=1	∖	k=1	I
1	「 n
ʌ /rʌ , 1 .	, E ,	.
≤ Ea (h) + 2ra,β,m,δ + 2 +	a
i=1
1	E N
≤ Ea (hT) + 2ra,β,m,δ + 2 + ai
i=1
λi + a ani ^E dLM,k (Si ,T) 1
2	'k=1	)
(I n
I λi + 2 ani EdLM,k(Si, T)
(28)
E N	ι
≤ Ea (hT) + ra,β,m,δ + 2 + ai I λi + 2an∣
i=1	∖
* N
≤ eT(hT) + r∣a,β,m,δ + E +ai I 2λi + a嗯
i=1	∖
The last inequality holds by equation 27 with h = hT.
k = 1
n
ɪd，LM,k(Si,T )
k=1
n	∖
Ed'LM,k(Si,T) I .
k = 1	)
□
15