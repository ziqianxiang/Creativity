Under review as a conference paper at ICLR 2021
Hierarchical Probabilistic Model
for Blind Source Separation
via Legendre Transformation
Anonymous authors
Paper under double-blind review
Ab stract
We present a novel blind source separation (BSS) method, called information
geometric blind source separation (IGBSS). Our formulation is based on the log-
linear model equipped with a hierarchically structured sample space, which has
theoretical guarantees to uniquely recover a set of source signals by minimizing
the KL divergence from a set of mixed signals. Source signals, received signals,
and mixing matrices are realized as different layers in our hierarchical sample
space. Our empirical results have demonstrated on images and time series data
that our approach is superior to well established techniques and is able to separate
signals with complex interactions.
1	Introduction
The objective of blind source separation (BSS) is to identify a set of source signals from a set
of multivariate mixed signals1. BSS is widely used for applications which are considered to be the
“cocktail party problem”. Examples include image/signal processing (Isomura & Toyoizumi, 2016),
artifact removal in medical imaging (Vigario et al., 1998), and electroencephalogram (EEG) signal
separation (Congedo et al., 2008). Currently, there are a number of solutions for the BSS problem.
The most widely used approaches are variations of principal component analysis (PCA) (Pearson,
1901; Murphy, 2012) and independent component analysis (ICA) (Comon, 1994; Murphy, 2012).
However, they all have limitations with their approaches.
PCA and its modern variations such as sparse PCA (SPCA) (Zou et al., 2006), non-linear PCA
(NLPCA) (Scholz et al., 2005), and Robust PCA (Xu et al., 2010) extract a specified number of
components with the largest variance under an orthogonal constraint, which are composed of a linear
combination of variables. They create a set of uncorrelated orthogonal basis vectors that represent
the source signal. The basis vectors with the N largest variance are called the principal components
and is the output of the model. PCA has shown to be effective for many applications such as
dimensionality reduction and feature extraction. However, for BSS, PCA makes the assumption
that the source signals are orthogonal, which is often not the case in most practical applications.
Similarly, ICA also attempts to find the N components with the largest variance, but relaxes the
orthogonality constraint. All variations of ICA such as infomax (Bell & Sejnowski, 1995), Fas-
tICA (Hyvarinen & Oja, 2000) and JADE (Cardoso, 1999) separate a multivariate signal into addi-
tive subcomponents by maximizing statistical independence of each component. ICA assumes that
each component is non-gaussian and the relationship between the source signal and the mixed signal
is an affine transformation. In addition to these assumptions, ICA is sensitive to the initialization of
the weights as the optimization is non-convex and is likely to converge to a local optimum.
Other potential methods which can perform BSS include non-negative matrix factorization
(NMF) (Lee & Seung, 2001; Berne et al., 2007), dictionary learning (DL) (Olshausen & Field,
1997), and reconstruction ICA (RICA) (Le et al., 2011). NMF, DL and RICA are degenerate ap-
proaches to recover the source signal from the mixed signal. These approaches are more typically
used for feature extraction. NMF factorizes a matrix into two matrices with nonnegative elements
representing weights and features. The features extracted by NMF can be used to recover the source
1Mixed signals and received signals are used exchangeably throughout this article.
1
Under review as a conference paper at ICLR 2021
signal. More recently there are more advanced techniques that uses Short-time Fourier transform
(STFT) to transform the signal into the frequency domain to construct a spectrogram before apply-
ing NMF (Sawada et al., 2019). However, NMF does not maximize statistical independence which
is required to completely separate the mixed signal into the source signal, and it is also sensitive
to initialization as the optimization is non-convex. Due to the non-convexity, additional constraints
or heuristics for weight initialization is often applied to NMF to achieve better results (Ding et al.,
2008; Boutsidis & Gallopoulos, 2008). DL can be thought of as a variation of the ICA approaches
which requires an over-complete basis vector for the mixing matrix. DL may be advantageous be-
cause additional constraints such as a positive code or a dictionary can be applied to the model.
However, since it requires an over-complete basis vector, information may be lost when reconstruct-
ing the source signal. In addition, like all the other approaches, DL is also non-convex and it is
sensitive to the initialization of the weights.
All previous approaches have limitations such as loss of information or non-convex optimization and
require constraints or assumptions such as orthogonality or an affine transformation which are not
ideal for BSS. In the following, we introduce our approach to BSS, called IGBSS (Information Geo-
metric BSS), using the log-linear model (Agresti, 2012), which can introduce relationships between
possible states into its sample space (Sugiyama et al., 2017). Unlike the previous approaches, our
proposed approach does not have the assumptions or limitations that they require. We provide a flex-
ible solution by introducing a hierarchical structure between signals into our model, which allows
us to treat interactions between signals that are more complex than an affine transformation. Unlike
other existing methods, our approach does not require the inversion of the mixing matrix and is able
to recover the sign of the signal. Thanks to the well-developed information geometric analysis of the
log-linear model (Amari, 2001), optimization of our method is achieved via convex optimization,
hence it always arrives at the globally optimal unique solution. Moreover, we theoretically show
that it always minimizes the KUllback-Leibler (KL) divergence from a set of mixed signals to a set
of source signals. Our experimental results demonstrate that our hierarchical model leads to better
separation of signals inclUding complex interaction sUch as higher-order featUre interactions (LUo &
SUgiyama, 2019) than existing methods.
2	Formulation
BSS is formUlated as a fUnction f that separates a set of received signals X into a set of source
signals Z, i.e., Z = f(X). For example, if one employs ICA based formUlation, the BSS problem
redUces to X = AZ, where the received signal X ∈ RL×M with L signals with the sample size
M is affine transformation of the soUrce signal Z ∈ RN ×M with N signals and a mixing matrix
A ∈ RL×N. The objective is to estimate Z by learning A given X. OUr idea is to Use the log-linear
model (Agresti, 2012), which is a well-known energy-based model, to take non-affine transformation
into accoUnt and formUlate BSS as a convex optimization problem.
2.1	Log-Linear Model on Partially Ordered Set
We Use the log-linear model given in the form of
log p(ω) = X 1sωθs - ψ(θ),	(1)
s∈S
where p(ω) ∈ (0,1) is probability of each state ω ∈ Ω and S ⊆ Ω is a parameter space SUch that
a parameter valUe θs ∈ R is associated with each s ∈ S, and ψ(θ) is the partition fUnction so that
Pω∈Ω p(ω) = 1. In this formulation, We assume that the set Ω of possible states, equivalent to
the sample space in the statistical sense, is a partially ordered set (poset); that is, it is eqUipped
with a partial order “” (Gierz et al., 2003) and 1sω = 1 if s ω and 0 otherwise. This for-
mulation is firstly introduced by Sugiyama et al. (2016) and used to model the matrix balancing
problem (Sugiyama et al., 2017), which includes Boltzmann machines as a special case (Luo &
Sugiyama, 2019). If we index Ω as Ω = {ω1,ω2,..., ω∣Ω∣}, we obtain the following matrix form:
logp = Fθ - ψ(θ),
where P ∈ (0,1严1 with Pi = p(ω%), θ ∈ Riωi such that θi = θωi if ω% ∈ S and θi = 0 otherwise,
F = (fij) ∈ {0, 1}iωi×iωi with fij = 1ωj》匕,and ψ(θ) = (ψ(θ),...,ψ(θ)) ∈ Riωi. Each vector
2
Under review as a conference paper at ICLR 2021
is treated as a column vector, and log is entry-wise operation. This matrix form is often used as a
general form of the log-linear model (Coull & Agresti, 2003) and F is called a model matrix, which
represents relationship between states. The assumption to the log-linear model is that F is needed to
be non-singular, and Sugiyama et al. (2017) showed that Equation (1) with a Poset Ω always provides
a non-singular model matrix; that is, F is regular as long as each entry is given as fij = 1ωj ωi .
This property is powerful in mathematical modeling as we can introduce any partial order structure
into Ω, which We will use to introduce our hierarchical structure in tne next subsection to solve BSS.
2.2	Layer Configuration for Blind Source S eparation
Our key idea is to introduce a hierarchical layered structure into the sample space Ω of the log-linear
model to achieve BSS. We call this model information geometric BSS (IGBSS) as its optimality is
supported by the tight connection between the log-linear model and information geometric property
of the space of distributions (statistical manifold), which will be shown in the next subsection. We
implement three layers of BSS, the mixing layer, the source layer, and the received layer, into Ω
as partial orders and learn the joint representation on it using the log-linear model. The received
layer and the source layer represent the input received signal and the output source signal of BSS,
respectively, and the mixing layer encodes information of how to mix the source signal. In the
following, we consistently assume that L is the number of received signals, M is the sample size,
and N is the number of source signals.
Let us construct three layers in the sample space Ω as
Ω = {⊥}∪A∪Z∪X with A = {a11,..., @ln },
Z = {z11 , . . . , zNM }, and X = {x11 , . . . , xLM }.
The element ⊥ denotes the least element, and it acts
as a partition function and θ⊥ = -ψ(θ) always
holds. We use 2D indexing of elements in each layer
to make the correspondence between our formula-
tion and ICA based formulation clear; that is, these
three layers A, Z, and X are analogue to a mixing
matrix A ∈ RL×N, a source matrix Z ∈ RN×M,
and a received matrix X ∈ RL×M, respectively2.
We will also use symbols ω and s to denote elements
of Ω, i.e., they can be ⊥, ain, znm, and xim. It is
always assumed that the parameter space of the log-
linear model S = A ∪ Z ⊂ Ω, meaning that mixing
and source layers are used as parameters to repre-
sent distributions in our model. Here we introduce a
partial order between layers. Define
aij	zi0j0 ifj = i ,
aij 6 zi0j0 otherwise,
for each element in three layers A, Z, and X, and we do not any ordering among elements in the
same layer. Since it is a partial order, transitivity always holds, for example, a11 x22 as a11 z12
and z12 x22 . The first condition encodes the structure such that the source layer is higher than
the mixing layer, and the second condition encodes that the received layer is higher than the source
layer. An example of our sample space with L = M = N = 2 is illustrated in Figure 1.
The joint distribution for BSS is described by the log-linear model in Equation (1) over the sample
space Ω = {⊥} ∪ A ∪ Z ∪ X equipped with the partial order defined in Equation (2). If we
learn the joint distribution from a received signal X, we will obtain probabilities on the source layer
p(z11), . . . , p(zN M), which represents normalized source signals. The rational of our approach is
given as follows: The connections between each layer is structured so that the log-linear model
performs a similar computation with the ICA based approach X = AZ. Our structure ensures
that each p(xlm) is determined by (θaln)n∈[N] and (θzmn)n∈[N] with [N] = {1, . . . ,N}, as we
always have aln xlm and znm xlm . Moreover, this formulation allows us to model more
complex interaction than affine transformation, such as higher-order interactions, between signals if
2We abuse an entry xlm of X and its corresponding state in X to avoid complicated notations.
a11
a21
a12 z11
a22 z21
z12
z22
x11
x21
x12
x22
Mixing
layer
Source
layer
Received
layer
a11
z11
x11
z12
x12
z21
x21
z22
x22
Figure 1: An example of our sample space.
Dashed lines show removed partial orders to
allow for learning.
zij xi0j0 if j = j ,
zij 6 xi0j0 otherwise
(2)
3
Under review as a conference paper at ICLR 2021
we additionally include partial order structure into Z and/or A, which cannot be treated by a simple
matrix multiplication.
2.3	Optimization
We train the log-linear model by minimizing the KL divergence from an empirical distribution p,
which is identical to the normalized received signal X ∈ RL×M, to the model joint distribution p
given by Equation (1) or, equivalently, maximizing the likelihood. More precisely, we normalize
a given X by dividing each entry by the sum of all entries; that is, an empirical distribution P
is obtained as P(Xlm) = χim/PlmlJ xim. If X contains negative values, an exponential kernel
exp (xlm)/Pl,m exp (xlm) or min-max normalization (xlm +-min(X))/(max(X)+-min(X))
can be used, where is some arbitrary small value to avoid zero probability. We also assume that
p(aln) = 0 and P(Znm) = 0 for all aln ∈ A and Znm ∈ Z. The objective function is given as
P(ω)
argmin DKL (PIlP) = argmin	p(ω)log ^---,	(3)
p∈pθ	p∈pθ ω∈Ω	p(m
where Pθ is the set of distributions that can be represented by Equation (1) with our structured
sample space Ω = {⊥} ∪A∪Z∪X and S = A∪Z.
The remarkable property of our model is that this optimization problem is convex and it is guaranteed
that gradient-based methods can always arrive at the globally optimal unique solution. To show this,
we analyze the geometric structure of the statistical manifold, the set of probability distributions,
generated by the log-linear model. Let Ω+ = Ω \ {⊥}. First We introduce another parameterization
(ηω )ω∈Ω+ of the log-linear model, which is defined as
ηω =	1ωsP(s).	(4)
s∈Ω
Note that η⊥ = 1 always holds and we do not include it into parameters. In addition, for theoretical
consistency we change the parameter space used in Equation (1) from S to Ω+ and assume that
θω = 0 if ω 6∈ S . Again we do not include θ⊥ as a parameter as it is the partition function.
Two parameters (θω)ω∈Ω+ and (ηω)ω∈Ω+ have clear statistical interpretation as it is widely known
that any log-linear model belongs to the exponential family, where θ and η correspond to natural
and expectation parameters, respectively. θ and η are connected via a Legendre transformation
which means that they are both differentiable and have a one-to-one correspondence. To simplify
the notation, we denote by θ and η the corresponding θ and η of the empirical distribution p. Let
P = {p | 0 < P(ω) < 1 for all ω ∈ Ω} be the set of all probability distributions. This set
forms a statistical manifold with dually flat structure, which is the canonical geometric structure in
information geometry (Amari, 2016), with its dual coordinate system ((θω)ω∈Ω+, (ηω)ω∈Ω+); that
is, both of (θω)ω∈Ω+ and (ηω)ω∈Ω+ work as coordinate systems and determine a distribution in p.
The Riemannian metric with respect to θ is given as
∂ηs	∂ logP(ω) ∂logP(ω)
gss0 =师=E[ -∂θs-------------∂θs- J =	1s0-ω 汉⑼-第加0，	⑸
which coincides with the Fisher information (Sugiyama et al., 2017, Theorem 3) and we will use it
for natural gradient.
Now we consider two submanifolds Pθ , Pη ⊆ P, which we define as
Pθ = {P ∈ p	|	θω	= 0,∀ω ∈E} ,	E = Ω+	\S,
Pn = {P ∈ P	|	ηω	= ηω,∀ω ∈M}	,	M = S.
Note that this pθ coincides with that in Equation (3). The submanifold pθ is called an e-flat sub-
manifold and Pη an m-flat submanifold in information geometry. The highlight of considering these
two types of submanifolds is that, if E ∩M = 0 and E ∪M = Ω+, it is theoretically guaranteed
that the intersection Pθ ∩ Pη is always a singleton and it is the optimizer of Equation (3) (Amari,
2009, Theorem 3), that is, it is the globally optimal solution of our model.
Optimization is achieved by e-projection, which seeks Pθ ∩ Pη in the e-flat submanifold Pθ . The
e-projection is always convex optimization as Pθ is convex with respect to θ; this is because θ is
4
Under review as a conference paper at ICLR 2021
Algorithm 1 Information Geometric BSS
1:	Function IGBSS(X, S):
2:	Compute P from X
3:	Compute r^ = (ηs)s∈s fromP
4:	Initialize (θs)s∈S (randomly or θs = 0)
5:	repeat
6:	Compute P using the current parameter (θs )s∈S
7:	Compute (ηs)s∈S from P
8:	(∆ηω )ω∈Z J (ηω )ω∈Z - (∏ω )ω∈Z
9:	(∆ηω )ω∈A - (ηω )ω∈A - (η}ω )ω∈A
10:	Compute the Fisher information matrix for source layer GZ and the mixing layer GA
11:	(θω)ω∈Z J (θω)ω∈Z - GZ-1(∆ηω)ω∈Z
12:	(θω)ω∈A J (θω)ω∈A - GA-1 (∆ηω)ω∈A
13:	until convergence of (θs)s∈S
14:	End Function
a coordinate system of Pθ that is linearly constrained on θ. We can therefore use the standard
gradient descent strategy to optimize the log-linear model. The derivative of the KL divergence with
respect to θs is known to be the difference between expectation parameters η (Sugiyama et al., 2017,
Theorem 2): (∂∕∂θs)DKL(P k p) = η 一 ηs, and the KL divergence DKL(PkP) is minimized if and
only if n=n§ for all S ∈ S.
From our definition of Ω in Equation (2), We have %卜1 = 加工公 for all Zkl ,zk，i ∈ Z. Therefore all
elements in the source layer will learn the same value. This problem can be avoided by removing
some of partial orders betWeen source and received layers. We propose to systematically remove
the partial order zij xi0j0 if i = i0 to ensure ηzkl 6= ηzk0l (see Figure 1), While other strategies are
possible as long as ηzkl 6= ηzk0l is satisfied, for example, random deletion of such orders.
Using the above results, gradient descent can be directly applied to achieve Equation (3). HoWever,
this may need a large number of iterations to reach convergence. To reduce the number of iterations,
We propose to use natural gradient (Amari, 1998), Which is a second-order optimization approach
and Will also alWays find the global optimum. Let us re-index S = A ∪ Z as S = {s1, s2, . . . , s|S|}
and assume that θ = [θsι,..., θs∣s∣ ]t and η =[小]，...，小⑹]t. In each step of natural gradient,
the current θ is updated to θnext by the folloWing formula:
θnext = θ 一 G-1(η 一 η)
where G = (gj) ∈ RlSl×lSl is the Fisher information matrix such that each gj is given as gsisj in
Equation (5).
Although the natural gradient requires much less iterations compared to the gradient descent, matrix
inversion G-1 is computationally expensive as it has the complexity of O(|S|3). In addition, FIM
values are often too small and optimization becomes numerically unstable. To solve these problems,
we separate the update steps in the source layer and the mixing layer:
(θω,next)ω∈Z = (θω )ω∈Z 一 GZ (∆ηω )ω∈Z,	(6)
(θω
,next )ω∈A = (θω )ω∈A 一 GA-1 (∆ηω )ω∈A,	(7)
where GZ and GA are the Fisher information matrices for source and mixing layers, respectively.
Note that this also leads to the same global optimum. They are constructed by assuming all the
other parameters are fixed. This approach reduces the time complexity to O(|Z|3+|A|3). The full
algorithm using natural gradient is given in Algorithm 1. Computation of P from θ and η from P
can be achieved using Equations (1) and (4). We also give more explicit description of P and η for
each layer in Appendix. The time complexity to computeP in Algorithm 1 Line 6 is O(∣Ω∣∣S∣).
The complexity to compute ∆η in Algorithm 1 Line 8 and Line 9 is O(|Z|) + O(|A|) = O(|S|).
Therefore the total complexity of each iteration is O(∣Z∣3+∣A∣3+∣Ω∣∣S∣).
5
Under review as a conference paper at ICLR 2021
Figure 2: First-order interaction experiment.
Figure 3: Third-order interaction experiment.
Table 1: Signal-to-Noise Ratio of reconstructed signal. (*) Results for Figure 2. (f) Results for
Figure 3. Scores are means ± standard deviation after 40 runs. We have applied different weight
initialization after each run.
Exp.	Order	Root Mean Squared Error (RMSE)				Signal-to-noise ratio (SNR) (units in dB)			
		IGBSS	FastICA	DL	NMF	IGBSS	FastICA	DL	NMF
	First*	0.252 ± 0.000	0.300 ± 0.089	0.394 ± 0.041	0.622 ± 0.000	12.588 ± 0.000	11.688 ± 4.829	6.810 ± 0.008	1.704 ± 0.000
1	Second	0.260 ± 0.000	0.285 ± 0.096	0.441 ± 0.080	0.662 ± 0.000	10.729 ± 0.000	12.353 ± 4.255	0.526 ± 0.448	-3.426 ± 0.000
	Thirdt	0.252 ± 0.000	0.260 ± 0.111	0.362 ± 0.030	0.612 ± 0.000	12.588 ± 0.000	12.922 ± 5.590	1.471 ± 0.358	0.039 ± 0.000
	First	0.133 ± 0.000	0.284 ± 0.064	0.474 ± 0.067	0.591 ± 0.000	14.215 ± 0.000	11.218 ± 1.964	2.098 ± 2.140	-0.940 ± 0.000
2	Second	0.256 ± 0.000	0.263 ± 0.066	0.576 ± 0.008	0.684 ± 0.000	10.612 ± 0.000	11.986 ± 2.157	-1.589 ± 0.269	-3.675 ± 0.000
	Third	0.282 ± 0.000	0.239 ± 0.056	0.593 ± 0.007	0.665 ± 0.000	9.346 ± 0.000	11.475 ± 2.145	-2.274 ± 0.227	-4.073 ± 0.000
	First	0.155 ± 0.000	0.699 ± 0.047	0.478 ± 0.121	0.628 ± 0.000	11.285 ± 0.000	10.785 ± 2.176	1.448 ± 4.249	0.628 ± 0.000
3	Second	0.200 ± 0.000	0.280 ± 0.049	0.515 ± 0.007	0.709 ± 0.000	10.862 ± 0.000	10.171 ± 2.353	0.529 ± 0.228	-5.579 ± 0.000
	Third	0.203 ± 0.000	0.239 ± 0.056	0.536 ± 0.006	0.682 ± 0.000	11.075 ± 0.000	11.041 ± 2.708	-0.244 ± 0.185	-4.961 ± 0.000
3	Experiments
We empirically examine the effectiveness of IGBSS to perform BSS using real-world image and
synthetic time-series datasets for an affine transformation and higher-order interactions between
signals. All experiments were run on CentOS Linux 7 with Intel Xeon CPU E5-2623 v4 and Nvidia
QuadroGP1003.
3.1	Blind S ource Separation for Affine Transformations on Images
In our experiments, we use three benchmark images widely used in computer vision from the Uni-
versity of Southern California’s Signal and Image Processing Institute (USC-SIPI)4, which include
“airplane (F-16)”, “lake” and “peppers”. Each image is standardized to have 32x32 pixels with red,
green and blue color channels with integer values between 0 and 255 to represent the intensity of
each pixel. These images shown in Figure 2a are the source signal Z which are unknown to the
model. They are only used as ground truth to evaluate the model’s output. The equation X = AZ
is used to generate the received signal X by randomly generating values for a mixing matrix A
using the uniform distribution which generates real numbers between 1 and 6. The images are then
rescaled to integer values within the range between 0 and 255. The received signal X, which is the
input to the model, is the three images shown in Figure 2b. The three images for the mixed signal
may look visually similar, however, they are actually superposition of the source signal with differ-
ent intensity. The objective of our model is to reconstruct the source signal Z without knowing the
mixing matrix A.
We compare our approach to FaStICA (Hyvarinen & Oja, 2000) with the log cosh function as the
signal prior, dictionary learning (DL) (Olshausen & Field, 1997) with constraint for positive dic-
tionary and positive code, and NMF with the coordinate descent solver and non-negative double
singular value decomposition (NNDSVD) initialization (Boutsidis & Gallopoulos, 2008) with zero
values replaced with the mean of the input.
3The code is available in the supplementary material and will be publicly available online after the peer
review process
4http://sipi.usc.edu/database/
6
Under review as a conference paper at ICLR 2021
Figure 4: Time series signal experiment.
Since BSS is an unsupervised learning problem, the order of the signal is not recovered. We iden-
tify the corresponding signal by taking all permutations of the output and calculate the minimum
euclidean distance with the ground truth. The permutation which returns the minimum error is con-
sidered as the correct order of the image. The scale of the output is also not recovered, thereby we
have used min-max normalization to the output of each model.
Separation results for images are shown in Figure 2. Our proposed approach IGBSS is able to
recover majority of the “shape” of the source signal, while the intensity of each image appears
to larger than the ground truth for all images. Small residuals of each image can be seen on the
other images. For instance, in the airplane (F-16) image, there residuals from the lake image can
be clearly seen. Compared to the reconstruction of IGBSS with FastICA, DL and NMF, IGBSS
performs significantly better as all the other approaches are unable to clearly separate the mixed
signal. FastICA was unable to provide a reasonable reconstruction with 3 mixed signal. To overcome
this limitation of FastICA, we randomly generated another column of the mixing matrix and append
it to the current mixing matrix to create 4 mixed signals as an input to FastICA to recover a more
reasonable signal.
The root mean square error (RMSE) of the Euclidean distance and the signal-to-noise ratio (SNR)
between the reconstruction and the ground truth is calculated to quantify results of each method.
The SNR is computed by SNRdB = 20 log10(znorm/|(z - znorm)|). The full results are shown in
Table 1 (top row for each experiment). In the table, we present three experiments with different RGB
images from USC-SIPI dataset, for each experiment we generate a new mixing matrix, where the
second and the third experiments uses images of “mandrill”, “splash”, “jelly beans” and “mandrill”,
“lake”, “peppers”, respectively. Ground truth and resulting images for second and third experiments
are presented in Supplement. Our results clearly show that IGBSS is superior to other methods, that
is, IGBSS has consistently produced the lowest RMSE error for every experiment. When looking at
the SNR ratio, our model has produce the highest SNR for majority of the cases and is always able
to recover the same result after each run as it is formulated as convex optimization.
3.2	Blind Source Separation with Higher-Order Feature Interactions
We demonstrate the ability of BSS for our model to include higher-order feature interactions in BSS.
We use the same benchmark images in the standard BSS as the source signal Z for our experiment.
We generate the higher-order feature interactions of the received signal by using the multiplicative
product of the source signal. If we take into account up to kth order interaction (k ≤ N),
xlm
X aln znm +ΣΣaln1 n2 zn1mzn2m +ΣΣ Σ
aln1 n2 n3 zn1 mzn2mzn3m
n1 n2>n1
n1 n2>n1 n3>n2
+ …+ Σ... Σ
aln1 ...nk zn1m .
znk m .
n1	nk >nk-1
n
All the other known approaches take into account only first order interactions (that is, affine transfor-
mation) between features. Differently, our model can directly incorporate the higher-order features
as we do not have any assumption of the affine transformation. When we consider up to kth or-
der interactions, we additionally include elements corresponding to new mixing parameters into the
mixing layer. For example, if k = 2, nodes for aln1n2 are added and aln1n2 znm if n1 = n or
7
Under review as a conference paper at ICLR 2021
Table 2: Quantitative results for time-series separation experiment (mean ± standard deviation with
40 runs).
(a) Root Mean Squared Error (RMSE)				(b) Signal-to-noise (SNR) (units in dB)			
Order	IGBSS (min-max)	IGBSS (exp)	FastICA	Order	IGBSS (min-max)	IGBSS (exp)	FastICA
First	0.702 ± 0.000	0.703 ± 0.000	0.414 ± 0.286	First	3.596 ± 0.000	3.600 ± 0.000	15.391 ± 3.813
Second	0.921 ± 0.000	0.921 ± 0.000	1.700 ± 0.167	Second	0.291 ± 0.000	0.042 ± 0.000	-5.803 ± 1.124
Third	0.967 ± 0.000	0.961 ± 0.000	1.388 ± 0.178	Third	0.340 ± 0.000	0.128 ± 0.000	-3.427 ± 1.249
n2 = n. Figure 3 shows experimental results for the third-order feature experiment. Our approach
IGBSS shows superior reconstruction of the source signal to other approaches. All the other ap-
proaches except for NMF is able to achieve reasonable reconstruction. NMF is able to recover the
“shape” of the image, however, unlike IBSS, NMF is a degenerate approach, so it is unable to re-
cover all color channels in the correct proportion, creating discoloring for the image which is clearly
shown in the SNR values. Since the proportion of the intensity of the pixel is not recovered. In terms
of both of the RMSE and the SNR shown in Table 1, IGBSS again shows the best results for both
second- and third-order interactions of signals across three experiments.
3.3	Time Series Data Analysis
We demonstrate the effectiveness of our model on time series data. In our experiments, we cre-
ate three signals with 500 observations each using the sinusoidal function, sign function, and the
sawtooth function. The synthetic data simulates typical signals from a wide range of applications
including audio, medical and sensors. We randomly generate a mixing matrix by drawing from a
uniform distribution with values between 0.5 and 2. In our experiment, we provide comparison of
using both min-max normalization and exponential kernel as a pre-processing step and compare our
approach with FastICA.
Experimental results are illustrated in Figure 4. These results show that IGBSS is superior to all
the ICA approaches because it is able to recover both the shape of the signal and the sign of the
signal, while all the other ICA approaches are only able to recover the shape of the signal and are
unable to recover the sign of the signal. This means that ICA could recover a flipped signal. We
have paired the recovered signal of ICA with the ground truth by finding the signal and sign with
the lowest RMSE error. In any practical application, this is not possible for ICA because the latent
signal is unknown. Through visual inspection, IGBSS is able to recover all visual signals with high
accuracy, while FastICA is only able to recover the first-order interaction and it is unable to produce
a reasonable recovery for second- and third-order interactions. In addition to our visual comparison,
we have also performed a quantitative analysis on the experimental results using RMSE error with
the ground truth. Results are shown in Table 2. FastICA has shown to have better performance for
First-Order interactions. However, for second- and third-order SNR results for FastICA is unable
to recover a reasonable signal because the noise is more dominant. IGBSS has shown superior
performance and is able to recover the signal for second- and third-order interactions with better
scores for both RMSE and SNR.
4	Conclusion
We have proposed a novel blind source separation (BSS) method, called Information Geometric
Blind Source Separation (IGBSS). We have formulated our approach using the log-linear model,
which enables us to introduce a hierarchical structure into its sample space to achieve BSS. We have
theoretically shown that IGBSS has desirable properties for BSS such as unique recover of source
signals as it solves the convex optimization problem by minimizing the KL divergence from mixed
signals to source signals. We have experimentally shown that IGBSS recovers images and signals
closer to the ground truth than independent component analysis (ICA), dictionary learning (DL)
and non-negative matrix factorization (NMF). Thanks to the flexibility of the hierarchical structure,
IGBSS is able to separate signals with complex interactions such as higher-order interactions. Our
model is superior to the other approaches because it is non-degenerate and is able to recover the
sign of the signal. Since our approach is flexible and requires less assumptions than alternative
approaches, it can be applied to various real world applications such as medical imaging, signal
processing, and image processing.
8
Under review as a conference paper at ICLR 2021
References
A.	Agresti. Categorical Data Analysis. Wiley, 3 edition, 2012.
S. Amari. Information geometry on hierarchy of probability distributions. IEEE Transactions on
Information Theory, 47(5):1701-1711, 2001.
ShUn-Ichi Amari. Natural gradient works efficiently in learning. Neural Computation, 10(2):251-
276, 1998.
Shun-Ichi. Amari. Information geometry and its applications: Convex function and dually flat man-
ifold. In F. Nielsen (ed.), Emerging Trends in Visual Computing: LIX Fall Colloquium, ETVC
2008, Revised Invited Papers, pp. 75-102. Springer, 2009.
Shun-Ichi. Amari. Information Geometry and Its Applications. Springer, 2016.
Anthony J Bell and Terrence J Sejnowski. An information-maximization approach to blind separa-
tion and blind deconvolution. Neural Computation, 7(6):1129-1159, 1995.
Olivier Berne, C Joblin, Y Deville, JD Smith, M Rapacioli, JP Bernard, J Thomas, W Reach, and
A Abergel. Analysis of the emission of very small dust particles from spitzer spectro-imagery
data using blind signal separation methods. Astronomy & Astrophysics, 469(2):575-586, 2007.
Christos Boutsidis and Efstratios Gallopoulos. SVD based initialization: A head start for nonnega-
tive matrix factorization. Pattern Recognition, 41(4):1350-1362, 2008.
Jean-Francois Cardoso. High-order contrasts for independent component analysis. Neural Compu-
tation, 11(1):157-192, 1999.
Pierre Comon. Independent component analysis, anew concept? Signal Processing, 36(3):287-314,
1994.
Marco Congedo, Cedric Gouy-Pailler, and Christian Jutten. On the blind source separation ofhuman
electroencephalogram by approximate joint diagonalization of second order statistics. Clinical
Neurophysiology, 119(12):2677-2686, 2008.
B.	A. Coull and A. Agresti. Generalized log-linear models with random effects, with application to
smoothing contingency tables. Statistical Modelling, 3(4):251-271, 2003.
Chris HQ Ding, Tao Li, and Michael I Jordan. Convex and semi-nonnegative matrix factorizations.
IEEE Transactions on Pattern Analysis and Machine Intelligence, 32(1):45-55, 2008.
Gerhard Gierz, Karl Heinrich Hofmann, Klaus Keimel, Jimmie D Lawson, Michael Mislove, and
Dana S Scott. Continuous lattices and domains, volume 93. Cambridge university press, 2003.
Aapo Hyvarinen and Erkki Oja. Independent component analysis: algorithms and applications.
Neural Networks, 13(4-5):411-430, 2000.
Takuya Isomura and Taro Toyoizumi. A local learning rule for independent component analysis.
Scientific Reports, 6:28073, 2016.
Quoc V Le, Alexandre Karpenko, Jiquan Ngiam, and Andrew Y Ng. ICA with reconstruction
cost for efficient overcomplete feature learning. In Advances in Neural Information Processing
Systems 24, pp. 1017-1025, 2011.
Daniel D Lee and H Sebastian Seung. Algorithms for non-negative matrix factorization. In Advances
in Neural Information Processing Systems 13, pp. 556-562, 2001.
Simon Luo and Mahito Sugiyama. Bias-variance trade-off in hierarchical probabilistic models us-
ing higher-order feature interactions. In Proceedings of the 33rd AAAI Conference on Artificial
Intelligence, pp. 4488-4495, 2019.
Kevin P Murphy. Machine Learning: A Probabilistic Perspective. MIT press, 2012.
Bruno A Olshausen and David J Field. Sparse coding with an overcomplete basis set: A strategy
employed by V1? Vision Research, 37(23):3311-3325, 1997.
9
Under review as a conference paper at ICLR 2021
Karl Pearson. LIII. on lines and planes of closest fit to systems of points in space. The London,
Edinburgh, and Dublin Philosophical Magazine and Journal ofScience, 2(11):559-572,1901.
Hiroshi Sawada, Nobutaka Ono, Hirokazu Kameoka, Daichi Kitamura, and Hiroshi Saruwatari. A
review of blind source separation methods: two converging routes to ILRMA originating from
ICA and NMF. APSIPA Transactions on Signal and Information Processing, 8, 2019.
Matthias Scholz, Fatma Kaplan, Charles L Guy, Joachim Kopka, and Joachim Selbig. Non-linear
PCA: a missing data approach. Bioinformatics, 21(20):3887-3895, 2005.
Mahito Sugiyama, Hiroyuki Nakahara, and Koji Tsuda. Information decomposition on structured
space. In 2016 IEEE International Symposium on Information Theory, pp. 575-579, 2016.
Mahito Sugiyama, Hiroyuki Nakahara, and Koji Tsuda. Tensor balancing on statistical manifold. In
Proceedings of the 34th International Conference on Machine Learning, volume 70 of Proceed-
ings of Machine Learning Research, pp. 3270-3279, 2017.
Ricardo Vigario, Veikko Jousmaki, Matti Hamalainen, Riitta Hari, and Erkki Oja. Independent
component analysis for identification of artifacts in magnetoencephalographic recordings. In
Advances in Neural Information Processing Systems 10, pp. 229-235, 1998.
Huan Xu, Constantine Caramanis, and Sujay Sanghavi. Robust PCA via outlier pursuit. In Advances
in Neural Information Processing Systems, pp. 2496-2504, 2010.
Hui Zou, Trevor Hastie, and Robert Tibshirani. Sparse principal component analysis. Journal of
Computational and Graphical Statistics, 15(2):265-286, 2006.
A Appendix
A.1 Parameter Computation for Each Layer
In the following, we give p, η, and the gradient for each layer, which are used in gradient descent.
Received Layer (Input Layer): Probability p(x) on the received layer x ∈ X is obtained as
log p(x) = X 1zxθz + X 1axθa + θ⊥,	(8)
z∈Z	a∈A
ηx =	1xx0 p(x0) = p(x).	(9)
x0∈X
We do not need to compute gradient for the received layer as there is no parameter on this layer and
θx = 0 for all x ∈ X .
Source Layer (Output Layer): Probability p(z) on the source layer for each z ∈ Z is given as
log p(z) = X1z0zθz0 +X 1azθa + θ⊥ =θz+X1azθa+θ⊥,	(10)
z0 ∈Z,	a∈A	a∈A
ηz =	1zxp(x) +	1zz0p(z0) =	1zxp(x) + p(z).	(11)
x∈X	z0∈Z	x∈X
Thus the gradient for the source layer is given as
∂
∂θ-DκL(pkp) = ηz - ^z = EIzWx (p(χ) -p(χ)) + p(z).	(12)
∂θz	x∈X
Mixing Layer: Probability p(a) on this layer for each a ∈ A is given as
log p(a) = X 1a0Waθa0 + θ⊥ = θa + θ⊥,	(13)
a0∈A
ηa =	1aWxp(x) +	1aWzp(z) +	1aWa0p(a0)	(14)
x∈X	z∈Z	a0∈A
=	1aWxp(x) +	1aWzp(z) + p(a).	(15)
x∈X	z∈Z
10
Under review as a conference paper at ICLR 2021
The gradient of the mixing layer is given as
∂
∂θ^DKL(Pkp) = ηa - ηa =
EIaWx (P(X)- P(x))
x∈X
+	1aWzP(z) + P(a).
z∈Z
(16)
Parameter values θa in the mixing layer represent the degree of mixing between source signals.
Hence they can be used to perform feature selection and extraction. For example, if θa = 0 in the
extreme case, the corresponding node a does not have any contribution to the source mixing.
A.2 Feature Extraction for a 2D Point Cloud Experiment
We demonstrate the effectiveness for IGBSS to identify independent components on a 2-dimensional
point cloud to be used for feature extraction or dimensionality reduction. In our experiment, we
generate a 2-dimensional point cloud using two standard Student’s t-distribution with 1.3 degree
of freedom and have scaled the first dimension by 1/5 and the second dimension by 1/10 to the
point cloud, illustrated in Figure 5a. Then we have randomly generated a mixing matrix for our
experiment to generate a mixed signal shown in Figure 5b. We run the experiment on our model
IGBSS using min-max normalization as a pre-processing step and compare it to PCA and ICA. We
apply the reverse transformation of the min-max normalization on the recovered signal and have
plotted the results in Figure 5. From the experimental results, we can see that PCA is able to recover
the same scale of the point cloud. However, the sign of the signal is not recovered as we have
recovered reversed sign of the signal. PCA also recovers signals which are orthogonal to the largest
variance. Therefore the axes of the point cloud recovered by PCA does not align with the source
signal in Figure 5a, that is, the axes do not run parallel to the x- and y- axes but instead is still
in the same orientation as the mixed signal. This is not what we want as the signal is still mixed,
and we would like to recover the signal in the same orientation as the source signal in blind source
separation. ICA aims to recover statistically independent signals that are generally considered as
the axes with the largest variances and not necessarily orthogonal to each other. However, the
limitations of ICA is that it is unable to recover the sign and the scale of the signal. Therefore
the scale of the recovered signal does not match with the source signal. In our experiment, we have
plotted the results with unit variance as the recovered signal is generally unnormalized in ICA. Since
our experiment is synthetically generated, we are able to quantitatively measure the the error in each
approach by normalizing both the recovered signal and the source signal by its standard deviation
then computing the root mean squared error (RMSE) and the signal-to-noise ratio (SNR). The results
of this is shown in Table 3. Our proposed approach IGBSS has clear advantages, where it is able to
recover the same orientation as the source signal as well as preserve the signal.
Table 3: Signal-to-Noise Ratio (SNR) and Root Mean Square Error (RMSE) between the recovered
signal and the latent source signal for the 2-dimensional point cloud experiment.
Model	PCA	ICA	IGBSS
RMSE	2.011	1.445	1.421
SNR	25.997	27.431	27.503
A.3 Runtime Analysis
In our experiment, we used a learning rate of 1.0 for gradient descent. Although the time complex-
ity for each iteration of natural gradient is O(∣Z∣3+∣A∣3+∣Ω∣∣S |), which is larger than O(∣Ω∣∣S |2)
for gradient descent, natural gradient is able to reach convergence faster because it is quadratic
convergence and requires significantly less iterations compared to gradient descent, which linearly
converges. Increasing the size of the input will increase the size of ∣Ω∣ only, while the number of
parameters ∣Z ∣, ∣A∣ remain this same. Since the complexity of natural gradient is linear with re-
spect to the size ∣Ω∣ of the input, increasing the size of the input is unlikely to increase the runtime
significantly. Our experimental analysis in Figure 6 supports this analysis: our model scales lin-
early for both natural gradient and gradient descent when increasing the order of interactions in our
model. This is because for practical application it is unlikely that ∣A∣ > ∣Z ∣. The different between
the runtime for natural gradient and gradient descent becomes larger as the order of interactions
increased.
11
Under review as a conference paper at ICLR 2021
(a) Source Signal
(b) Mixed Signal
(c) PCA Recovery
(d) ICA Recovery
(e) IGBSS Recovery
Figure 5: 2-dimensional point cloud experiment.
A.4 Sign Inversion in ICA
When demonstrate the problem of the sign inversion in ICA. We use the same experimental set-up
explained in Section 3.1 on blind source separation for affine transformation. We run the experiment
on the dataset used for experimental 1 for the first order experiment and have shown the output of
several runs in FastICA to show the problem of the sign inversion in Figure 7. For the 6 runs, we
can see that none of the experiments were able to obtain the correct sign of the signal. This means
that apply FastICA to applications where the sign of the signal is important is quite problematic.
12
Under review as a conference paper at ICLR 2021
SUOQEE Jo 」φqulnN
2000 4000 6000 8000
Number of parameters
-oφslφuli5ntt
2000 4000 6000 8000
Number of paramters
Order of feature interactions
ruφslφul*lmH
Order of feature interactions
Figure 6: Experimental analysis of the scalability of number of parameters and higher-order features
in the model for both natural gradient approach and gradient descent
Figure 7: Six different runs of FastICA with the same experimental input experimental dataset as
exp1 with first order interactions. The different results can demonstrate that the FastICA model is
non-convex leading to potential problemic results such as the sign inversion.
13