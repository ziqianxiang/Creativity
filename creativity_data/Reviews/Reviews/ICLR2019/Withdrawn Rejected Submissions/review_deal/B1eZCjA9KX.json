{
    "Decision": "",
    "Reviews": [
        {
            "title": "would like to see the authors spend more time in (a) core contribution and (b) fairer evals.",
            "review": "This work proposes to use 'non-deterministic oracles' during training seq2seq models for converting natural language queries to SQL counterparts. The authors show better performance on wikisql dataset to 87.1%.\n\n- The authors main contribution is section 4 which i found to be very superficially discussed. \n  (a) I would've liked to see more details on how the set \"O\" is constructed/implemented,\n  (b) How can set O detect some non-trivial invalid continuation actions like \"x >= 10 and x <= 5\", is this outside the scope ?\n  (c) the beam search decoding of correct sqls seems like it can be applied to any seq2seq model, I am not able to see the novelty of this.\n  \n- Evaluation\n  (a) The authors could've presented comparison with other work they cite, including (Zhong et al., 2017) and (Xu et al., 2017). The authors claims for not comparing - such as lowering optimization stability/increases training time does not look valid since the authors do not claim to have better optimization stability/lower training time.\n  (b) The author's trick of adding ANYCOL (and converting to disjunctions) increases the expressive power of the SQL, was this applied to other work as well ?\n  \n  \nFor acceptance, \n- the author's core contribution in defining the non-deterministic oracles, what are the constraints, what is in-scope vs out-of-scope needs to be clearly detailed.\n- the evaluation needs to be (a) better in comparing against more recent work, (b) more fair in including ANYCOL to other work and (c) have a separate metric that discusses how the new contribution of oracles helps lower inconsistent SQL output.\n",
            "rating": "4: Ok but not good enough - rejection",
            "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"
        },
        {
            "title": "Impressive result by combining existing ideas, but novelty in the algorithm is limited",
            "review": "This paper presents a state-of-the-art model on natural language to SQL task evaluated on the WikiSQL dataset and a subset of ATIS. The model combines several ideas, such as non-deterministic oracle, execution-guided strategy, cross attention between column names and question, and the introduction of “ANYCOL” symbol to augment the meaning representation. The main proposal is to use non-deterministic oracle to help with the “order-matters” issue. The evaluation on WikiSQL is solid but doesn’t strongly support the claim about non-deterministic oracle. More specific comments below. \n\nThe paper is well written. The model architecture and the techniques applied are clear and easy to follow. \n\nDespite the impressive result, my main concern is with the novelty. As the use of non-deterministic oracle seems to be a straightforward application of the idea from (Goldberg & Nivre, 2013), and doesn’t seem to make a significant difference. It is the use of “ANYCOL” that makes a bigger improvement, which, however, seems to be an augmentation of the meaning representation instead of an innovation in the learning algorithm. The result on the subset of ATIS helps, but it is less solid than the evaluation on WikiSQL because the dataset is too small (only 126 examples in the test set) and there are no external baselines. \n\nOverall, the paper is clear and the state-of-the-art result on WikiSQL is impressive, but the innovation in terms of the learning algorithm is limited and doesn’t seem to contribute much to the result. So the merits of this paper might be more suited for NLP venues. \n\nOne clarification question: \none page 4, “where r^A_a is a vector representation of the action a … as the concatenation of the action embedding and the parameter representation”. What does the \"parameter representation\" refer to here? \n\nMissing references: \n\nThe introduction discussed weakly supervised approach in “Without paired natural language statement…\". Several weakly supervised approaches were applied before on semantic parsing over tables (Pasupat & Liang, 2015) and a recent work (Liang et al., 2018) actually applied the weakly supervised approach to the WikiSQL dataset, which are worth mentioning. \n\nPanupong Pasupat, Percy Liang, Compositional Semantic Parsing on Semi-Structured Tables, Association for Computational Linguistics (ACL), 2015\n\nChen Liang, Mohammad Norouzi, Jonathan Berant, Quoc Le, Ni Lao, Memory Augmented Policy Optimization for Program Synthesis and Semantic Parsing, NIPS 2018",
            "rating": "6: Marginally above acceptance threshold",
            "confidence": "3: The reviewer is fairly confident that the evaluation is correct"
        },
        {
            "title": "The main novelty claim is not valid: non-deterministic oracles have been previous used for incremental semantic parsing",
            "review": "This paper proposes the use of non-deterministic oracles, also known as dyamic oracles or expert policies for incremental text2sql parsing, a kind of semantic parsing task. However this has been done by a number of authors:\n\n- Vlachos and Clark (2014): http://www.aclweb.org/anthology/Q14-1042\n- Berant and Liang (2015): https://nlp.stanford.edu/pubs/berant-liang-tacl2015.pdf\n\nwhile the idea of using such oracles for structured prediction tasks in NLP was first proposed by Daume III et al. 2009:\nhttps://arxiv.org/abs/0907.0786\n\nFurthermore, it has been applied for RNN decoding in NLP, see: \nhttps://arxiv.org/abs/1511.06732\n\nApart from this, some further comments:\n- The subset of SQL tackled in this paper is less expressive than what has been done in previous work on ATIS and GeoQuery datasets. The claim about the high diversity of WikiSQL dataset used should be supported with evidence from the data.\n- The results on ATIS are not compared against any of the numerous works on it, so it is impossible to appreciate them. Luke Zettlemoyer has done a lot of work on this dataset, a comparison should be possible.\n- If the only reason the predicted query doesn't match the gold is the ordering of the columns, this should be straightforward to handle programmatically. Execution match can mask incorrect queries, eg. adding further conditions that were not expressed in language but didn't affect the results of the execution would be forgiven.\n- It is odd that the full oracle doesn't really work without the execution graph.",
            "rating": "3: Clear rejection",
            "confidence": "5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature"
        }
    ]
}