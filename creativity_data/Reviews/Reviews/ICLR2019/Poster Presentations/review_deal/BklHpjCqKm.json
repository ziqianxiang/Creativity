{
    "Decision": {
        "metareview": "The paper looks at a novel form of physics-constrained system identification for a multi-link robot,\nalthough it could also be applied more generally.  The contributions is in many simple; this is seen\nin a good light (R1, R3) or more modestly (R2). R3 notes surprise that this hasn't been done before.\nResults are demonstrated on a simualted 2-dof robot and real Barrett WAM arm, better than a pure\nneural network modeling approach, PID control, or an analytic model.  \n\nSome aspects of the writing needed to be addressed, i.e., PDE vs ODE notations. \nThe point of biggest concern is related to positioning the work relative to other system-identification\nliterature, where there has been an abundance of work in the robotics and control literature.\nThere is no final consensus on this point for R3;  R3 did not receive the email notification of the author's detailed reply,\nand notes that the author has clarified some respects, but still has concerns, and did not have time to further\nprovide feedback on short notice.  \n\nIn balance, the AC believes that this kind of constrained learning of models is underexplored, and\nnotes that the reviewers (who have considerable shared expertise in robotics-related work) believe\nthat this is a step in the right direction and that it is surprising this type of approach has not\nbeen investigated yet.  The authors have further reconciled their work with earlier sys-ID work, and\ncan further describe how their work is situated with respect to prior art in sys-ID (as they do in\ntheir discussion comments).  The AC recommends that: (a) the abstract explicitly mention \"system\nidentification\" as a relevant context for the work in this paper, given that the ML audience should\nbe (or can be) made aware of this terminology; and (b) push more of the math related to the\ndevelopment of the necessary derivatives to an appendix, given that the particular use of the\nderivations seems to be more in support of obtaining the performance necessary for online use,\nrather than something that cannot be accomplished with autodiff.\n",
        "confidence": "4: The area chair is confident but not absolutely certain",
        "recommendation": "Accept (Poster)",
        "title": "lean in favor;  one reviewer who lacked time to further evaluate author responses due to failed email notification"
    },
    "Reviews": [
        {
            "title": "Interesting paper on using Lagrangian formulation to speed up learning of robot model",
            "review": "This paper discusses learning of robot dynamics models. They propose to learn the mass-matrix\nand the potential forces, which together describe the Lagrangian mechanics of the robot. The unknown\nterms are parametrized as a deep neural network, with some properties (such as positive definiteness)\nhard-coded in the network structure. The experimental results show the learned inverse model being used\nas the feed-forward term for controlling a physical robot. The results show that this approach lead to faster\nlearning, as long as the model accurately describes the system. The paper is well written and seems free\nof technical errors. The contribution is modest, but relevant, and could be a basis for further research. Below\nare a few points that could be improved:\n\n1) The paper uses the term partial differential equation in a non-standard way. While Eqs. 4/5 contain partial derivatives,\nthe unknown function is q, which is a function of time only. Therefore, the Lagrangian mechanics of robot arms are seen\nas ordinary differential equations. The current use of the PDE terms should be clarified, or removed.\n2) It is not made clear why the potential forces are learned directly, rather than as a derivative of the potential energy. Could you discuss the advantages/disadvantages? \n3) Somewhat related to the previous point: the paper presents learning of dissipative terms as a challenge for future works. Given that the formulation directly allows to add \\dot{q} as a variable in g, it seems like a trivial extension. Can you make clearer why this was not done in this paper (yet).\n4) The results on the physical robot arm state that the model cannot capture the cable dynamics, due to being a rigid body model. However, the formulation would allow modelling the cables as (non-linear) massless springs, which would probably\nexplain a large portion of the inaccuracies. I strongly suggest running additional experiments in which the actuator and joints have a separate position, and are connected by springs. If separate measurements of joint-position and actuator position are not available on the arm, it would still be interesting to perform the experiments in simulation, and compare the\nperformance on hardware with the analytical model that includes such springs.\n5) The choice is made to completely hardcode various properties of the mass matrix into the network structure. It would be possible to make some of these properties softcoded. For instance, the convective term C(q,\\dot{q})\\dot{q} could be learned separately, with the property  C + C^T = \\dot{H} encoded as a soft constraint. This would reduce the demand on computing derivatives online.",
            "rating": "7: Good paper, accept",
            "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"
        },
        {
            "title": "Nice approach, but needs to be situated within the relevant work much better",
            "review": "This paper looks at system identification for a multi-link robot based upon combining a neural network with the manipulator equations.  Specifically, the authors propose to model the robot dynamics using the typical manipulator equations, but have a deep neural network parameterize the H(q) and g(q) matrices.  They illustrate that the method can control the systems of a simualted 2-dof robot and real Barrett WAM arm, better than a pure neural network modeling approach, PID control, or an analytic model.\n\nOverall, I think there is a genuinely nice application in this paper, but it's not sufficiently compared to existing approaches nor put in the proper context.  There is a lot of language in the paper about encoding the prior via a PDE, but really what the authors are doing is quite simple: they are doing system identification under the standard robot manipulator equations but using a deep network to model the inertia tensor H(q) and the gravity term g(q).  Learning the parameters that make up H(q) and g(q) is completely standard system identification in robotics, but it's interesting to encode these as a generic deep network (I'm somewhat surprised this hasn't been done before, though a quick search didn't turn up any obvious candidates).  However, given this setting, there are several major issues with the presentation and evaluation, which make the paper unsuitable in its current from.\n\n1) Given the fact that the authors are really just in the domain of system identification and control, there are _many_ approaches that they should compare to.  At the very least, however, the authors should compare to standard system identification techniques (see e.g., Wu et al., \"An overview of dynamic parameter identification of robots\", 2010, and references therein).  This is especially important on the real robot case, where the authors correctly mention that the WAM arm cannot be expressed exactly by the manipulator equations; this makes it all the more important to try identify system parameters via a data-driven approach, not with the hope of finding the exactly \"correct\" manipulator equations, but with finding some that are good enough to outperform the \"analytical\" model that the authors mention.  It's initially non-obvious to me that a generic neural network to model the H and g terms would do any better than some of these standard approaches.\n\n2) A lot of the derivations in the text are frankly unnecessary.  Any standard automatic differentiation toolkit will be able to compute all the necessary derivatives, and for a paper such as this the authors can simply specify the architecture of the system (that they use a Cholesky factorization representation of H, with diagonals required to be strictly positive) and let everything else be handled by TensorFlow, or PyTorch, etc.  The derivations in Sections 4.2 and 4.3 aren't needed.\n\n3) The authors keep referring to the Lagrangian equations as a PDE, and while this is true in general for the actual form here it's just a second order ODE; see e.g. https://en.wikipedia.org/wiki/Lagrangian_mechanics.  Moreover, these are really just the standard manipulator equations for multi-link systems, and can just be denoted as such.\n\nDespite these drawbacks, I really do like the overall idea of the approach presented here, it's just that the authors would need to _substantially_ revise the presentation and experiments in order to make this a compelling paper.  Specifically, if they simply present the method as a system identification approach for the manipulator equations, with the key terms parameterized by a deep network (and compare to relevant system identification approaches), I think the results here would be interesting, even if they would probably be more interesting to a robotics audience rather than a core ML audience.  But as it is, the paper really doesn't situation this work within the proper context, making it quite difficult to assess its importance or significance.",
            "rating": "4: Ok but not good enough - rejection",
            "confidence": "5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature"
        },
        {
            "title": "Promising, simple approach to model learning. Some questions regarding generalizability to systems with complex dynamics.",
            "review": "I like the simplicity of the approach in this paper (especially compared to very computationally hungry methods such as Deepmind's \"Graph Networks as Learnable Physics Engines for Inference and Control\"). The fact that the approach allows for online learning is also interesting. I very much appreciate that you tested your approach on a real robot arm!\n\nI have a number of questions, which I believe could help strengthen this paper:\n- The decomposition of H into L^TL ensures H is positive definite, however there are no constraints on g (gravity/external forces). How do you ensure the model doesn't degenerate into only using g and ignoring H? In the current formulation g only depends on q, however this seems insufficient to model velocity dependent external forces (e.g. contact dynamics). Please elaborate.\n- How would you handle partial observability of states? Have you tried this? \n- How would you extend this approach to soft robots or robots for which the dimensionality of the state space is unknown?\n- Have you tested your method on systems that are not kinematic chains? How would complex contact dynamics be handled (e.g. legged robots)?\n- It would be interesting to see more comparisons with recent work (e.g. Deepmind's).\n\nSome figures (e.g. Figure 6) are missing units on the axes. Please fix.",
            "rating": "7: Good paper, accept",
            "confidence": "3: The reviewer is fairly confident that the evaluation is correct"
        }
    ]
}