{
    "Decision": {
        "title": "Final Decision",
        "decision": "Accept (Poster)",
        "comment": "This work proposes a method, inspired by Cellular Automata, to generate 3D objects in voxel space. By *only* using local update rule for each location, the method can probabilistic generate high resolution models of everyday objects in the dataset. Due to the ability to incrementally generate details, the quality of the samples are seemingly higher than tradition approaches using Voxel-based GANs.\n\nMost reviewers and myself agree this is a strong and interesting paper that will spark good discussion in the ICLR community. It is also well written and ideas are clearly explained. During the review process, the authors improved the work by conducting additional experiments to analyze the sensitivity of hyper parameters and took in and incorporated various suggestions from the reviewers. After the revision, I believe the work to be in good shape to be accepted at ICLR2021, and I will recommend that this paper be accepted (Poster)."
    },
    "Reviews": [
        {
            "title": "A good submission with promising results, but needs some more clarifications",
            "review": "This paper proposes an interesting formulation of 3D object point cloud generation -- sampling from the transition kernel of a Markov chain. Given an input partial shape, the method iteratively updates the 3D shape by growing point clouds in a local region, and finally outputs the complete 3D object. The proposed method is interesting and technically sound. The quantitative result achieves the state-of-the-art for shape completion and shows comparable results for shape generation. Besides, the paper is well written and easy to follow.\nMy detailed comments are as follows.\n1. It would be better to evaluate the inference speed compared with the state-of-the-arts. I'm curious about the computation cost of the Markov chain based 3D generative model.\n2. Although I like the illustration shown in Figure 6, I am still worried about whether different hyper-parameter sets (r, T, and infusion speed) will affect performance. For the example in Figure 6, it would be better to use different hyper-parameters to show qualitative comparisons. I'm also a bit concerned about the generalization ability of this approach, since the proposed method uses different sets of hyper-parameters for chair, table and lamp as stated in Sec.4.1, the first paragraph. It would be better to show the quantitative results using the same set of hyper-parameters for all classes. \n3. For the experiment (shape completion and shape generation), is the model trained for all categories or for each category respectively? Will different training settings affect the overall performance? My intuition is that this method can complete 3D objects (for example, only given the bottom of the lamp), because it is trained from a large amount of data, so it is easy to \"remember\" the data distribution of each class. If the model is trained on a single category, it is not surprising that it performs well. I want to know whether the model itself can learn categorical features through joint training of all classes. It will also be interesting to see that the shape generation result is a fusion of several classes -- this can show encouraging results for applications such as 3D object design.\n4. It would be nice to discuss how to extend this method to use other representations (for example, voxels, meshes, or implicit functions) for 3D object generation.\n\nIn general, I like the proposed idea and the results are promising. However, considering my above concerns (mainly #2 and #3), I think this article is \"slightly above the threshold\". I will re-evaluate the score based on the authorâ€™s feedback, .",
            "rating": "6: Marginally above acceptance threshold",
            "confidence": "5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature"
        },
        {
            "title": "Strong paper but needs voxel comparison",
            "review": "I think this is a strong and interesting paper. It is well written and properly explains its ideas. I am especially impressed by the figures which are clean and helpful in understanding the ideas of the paper and performance of the method. I am also am happy with the variety of experiments, which answered the questions which arose to me when understanding the method. \n\nMy only real concern with respect to this paper is the lack of comparison to highly relevant papers . It does not compare to any other voxel-based 3D generation methods, only to point cloud ones. I think this is quite an important sticking point which I strongly encourage the authors to address, as without comparison within the same 3D representation it is very difficult to establish how much of the claimed improvement in performance is directly due to the benefits of the chosen representation. A clear example of this is in the visual comparison to cGAN (Figure 3) where your generations look far cleaner, however, this might just be a consequence of predicting in a grid as opposed to in a continuous space.  For 3D generation it would be a good idea to compare to : \"Learning a Probabilistic Latent Space of Object Shapes via 3D Generative-Adversarial Modeling\" ,  and \"Improved Adversarial Systems for 3D Object Generation and Reconstruction\". For shape completion you write: \"we report cGAN as the baseline to our method, since this is the only approach announced in probabilistic shape completion\". This is just not true. For example, a you could compare again to \"Improved Adversarial Systems for 3D Object Generation and Reconstruction\", and also to \"3D Object Reconstruction from a Single Depth View with Adversarial Learning\". I would like to see experiments comparing to other voxel based methods in the paper, and also shown here.  I would be very happy to raise my score if this is provided.  At the very least other voxel based methods should be referenced, and their absence from the experimental comparison justified.\n",
            "rating": "8: Top 50% of accepted papers, clear accept",
            "confidence": "5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature"
        },
        {
            "title": "A nice idea with minor flaws",
            "review": "The paper proposes a generative method for 3D objects (voxels representation). Given an initial voxels configuration (e.g. partial shape, or even a single voxel), the method learns a local transition kernel for a Markov chain to decide how to evolve the configuration; sampling iteratively from these probabilities leads to a final model. The paper shows results on shape completion and generation, obtaining fairly good results.\n\nPROS\n- Novelty: I find the approach interesting and the idea seems new in the 3D domain to me (while, as cited in the paper, there are some other similar works in the 2D). It may serve as inspiration for future works to build on it.\n\n- Theoretical foundation: I like the theory on which the paper is based on. I think several properties can be obtained thanks to the theory of finite-state automata (like the presented theorem about the final convergence of the method).\n\nCONS\n- Input/Output: the method is restricted to work in the voxel setting and it is not easily extendible on point clouds. This limits the quality of the generated objects. Also, looking at the attached .gif files, it seems that in the end the model has some noise and it is hard to decide when to stop it (while it seems structural stable). Finally, while in some case the process seems to respect the initial suggestion (e.g. for the lamp_completion example), sometimes seems it does not (e.g. the car_generation start from a place and move to another; is this linked by a strange position of the initial voxel? Also the disconnected_lamp example modifies its input state)\n\n- Results/Analysis: The experiments are a bit limited since they only involve a few rigid categories. I think the paper could be strengthened by testing the method on some non-rigid domains, e.g. humans. Also, the method requires the choice of several hyperparameters, and this is briefly discussed in Section 4.3. I would suggest performing ablation on them.\nFinally, an interesting analysis could investigate how the network behaves when an \"unlikely\" starting state has been feed (e.g. sparse noise, or never seen parts). Is it able to recover a reliable shape?\n\n- Presentation: some concepts (like the Cellular Automata or infusion chains) are only marginally discussed; I would like to see a better introduction to them since they are not so common concepts for Computer Graphics community. Also, the bibliography needs a serious revision, since many voices either break the margins with URLs or are incomplete (e.g. Huszar 2015).\n\nPRE-REBUTTAL RATING\n\nI think the paper could be strengthened by further analysis, experiments, and presentations fixing. However, I like the general idea and I am favorable to accept it as the first step of a different perspective for 3D generative methods. For the final version, I suggest including some further analysis on hyperparameters and initial-state.\n\n-------------\n\nFINAL RATING\n\nI have carefully read the other reviews and authors' replies.\nI agree with other reviewers that the rebuttal is satisfactory, and raised the score accordingly. \nThanks to the authors for their effort.",
            "rating": "7: Good paper, accept",
            "confidence": "3: The reviewer is fairly confident that the evaluation is correct"
        }
    ]
}