{
    "Decision": {
        "decision": "Accept (Poster)",
        "comment": "The paper presents a novel graph convolutional network by integrating the curvature information (based on the concept of Ricci curvature). The key idea is well motivated and the paper is clearly written. Experimental results show that the proposed curvature graph network methods outperform existing graph convolution algorithms. One potential limitation is the computational cost of computing the Ricci curvature, which is discussed in the appendix. Overall, the concept of using curvature in graph convolutional networks seems like a novel and promising idea, and I also recommend acceptance.",
        "title": "Paper Decision"
    },
    "Reviews": [
        {
            "experience_assessment": "I do not know much about this area.",
            "rating": "6: Weak Accept",
            "review_assessment:_thoroughness_in_paper_reading": "I made a quick assessment of this paper.",
            "review_assessment:_checking_correctness_of_experiments": "I did not assess the experiments.",
            "title": "Official Blind Review #2",
            "review_assessment:_checking_correctness_of_derivations_and_theory": "I did not assess the derivations or theory.",
            "review": "Curvature graph network\n\nThis paper proposes a novel network architecture “curvature graph network” that incorporates the Ricci curvature to fully utilize the graph structure. The Ricci curvature can measure the connectivity around an edge. The higher Ricci curvature, the denser connections there. This is very important information especially for extracting hidden clusters in the graph. The proposed curvature driven graph convolution network shows good experimental results on theoretical synthetic data sets and real world benchmark data sets. \n\nI recommend “weak accept” to this paper since this paper proposes an interesting concept and it looks promising.\n\nPros. \n\nThe authors introduce a very useful metric “Ricci curvature” \n\nCurvGN-1 and CurvGN-2 outperforms existing graph convolution algorithms.\n\nCons.\n\nTo run the proposed algorithm, we have to compute the Ricci curvature values for all edges. This can increase the inference time significantly. The authors should discuss the inference time and check it with a proper experiment."
        },
        {
            "experience_assessment": "I do not know much about this area.",
            "rating": "6: Weak Accept",
            "review_assessment:_thoroughness_in_paper_reading": "I read the paper at least twice and used my best judgement in assessing the paper.",
            "review_assessment:_checking_correctness_of_experiments": "I carefully checked the experiments.",
            "title": "Official Blind Review #3",
            "review_assessment:_checking_correctness_of_derivations_and_theory": "I assessed the sensibility of the derivations and theory.",
            "review": "The work presents a graph neural network that incorporates graph curvature.  The proposed model is able to explore the neighborhood structure of each node, by using the curvature of edges in the proposed framework. Extensive experimental results show the efficacy of the proposed framework. I am not familiar with graph curvature. All I can say is the approach is intuitively appealing, the text is well written and easy to follow, even for an outsider. However, I do not know any related works or what to expect from the results. I could not find anything wrong with this paper, but also do not have any intelligent questions to ask.\n"
        },
        {
            "experience_assessment": "I have published one or two papers in this area.",
            "rating": "6: Weak Accept",
            "review_assessment:_thoroughness_in_paper_reading": "I read the paper thoroughly.",
            "review_assessment:_checking_correctness_of_experiments": "I assessed the sensibility of the experiments.",
            "title": "Official Blind Review #1",
            "review_assessment:_checking_correctness_of_derivations_and_theory": "I carefully checked the derivations and theory.",
            "review": "In this paper, the authors proposed a novel graph neural network (GNN).\nThe proposed model combines discrete Ricci curvature of graph edge with GNN. \nThe combination method is simple but effective, which is easy to implement and is compatible with existing GNN models like GCN. \nExperimental results show the potentials of the proposed model to node classification. \n\nMy main concerns include:\n1. The complexity of the proposed model should be discussed. For a graph with V nodes and E edges, it seems that the authors need to solve E linear programming problems. The scale of each problem is decided by the number of neighbors per node. For large-scale graphs with dense connections, the scalability of the proposed method will be a problem. When the GCN models are with adaptive pooling layers, the curvature will change with respect to the layers of the model, and the scalability problem may become more serious. \n2. For the graphs with isolated nodes, do we need to calculate the curvature associated with such nodes? If yes, how to calculate?\n3. The authors introduce additional parameters to model the weight tau_{xy} from the curvature kappa_{xy}, i.e., Eq. (3.4). I wonder whether we can use kappa_{xy} directly as the weight tau_{xy} or not. It would be nice if the authors can add an experiment for this variant. \n\nOverall, I think the idea of the proposed method is interesting. Introducing Ricci curvature to GCN is a potential method to take advantage of structural information beyond the adjacency matrix. However, the complexity of the proposed method should be analyzed in-depth.\n"
        }
    ]
}